import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest9 {

    public static boolean debug = false;

    @Test
    public void test001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test001");
        try {
            java.util.Optional<java.lang.String> strOptional2 = strman.Strman.first("00077000680006500050000900008400065001190007800122000850011900077000680009000106000770006800065000500008900122000650011900077001220010700119000770006800077000510004800048000480005500056000480004800049000490005500048000480004900048000560004800048000490004800056000480004800048000530005500048000480004800053000530004800048000490004900048000480004800049000490004800048000480004900049000550004800048000490004800056", 6432);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 6432");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        }
    }

    @Test
    public void test002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test002");
        long long4 = strman.Strman.countSubstr("nullhi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-null97hi\\-00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e", "HiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiNull97hi00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e", true, true);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
    }

    @Test
    public void test003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test003");
        java.lang.String str3 = strman.Strman.removeLeft("", "", true);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "str3.equals("
    }

    @Test
    public void test004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test004");
        java.lang.String[] strArray5 = new java.lang.String[] { "", "", "null" };
        java.util.Optional<java.lang.String> strOptional6 = strman.Strman.trimEnd("null", strArray5);
        java.lang.String str7 = strman.Strman.format("TlVMTDk3", strArray5);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strOptional6);
        org.junit.Assert.assertTrue("'" + str7 + "' != '" + "TlVMTDk3" + "'", str7.equals("TlVMTDk3"));
    }

    @Test
    public void test005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test005");
        java.lang.String str1 = strman.Strman.humanizen u l l97 n n u l");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "00072001050010400105001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001100011700108001080005700055001040010500033n u l l97 n n u l" + "'", str1.equals("00072001050010400105001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001100011700108001080005700055001040010500033n u l l97 n n u l"));
    }

    @Test
    public void test006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test006");
        java.lang.String str3 = strman.Strman.ensureLeft("hi-hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101ihiH", "-1", true);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "-1hi-hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101ihiH" + "'", str3.equals("-1hi-hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101ihiH"));
    }

    @Test
    public void test007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test007");
        java.lang.String[] strArray2 = strman.Strman.chop
        org.junit.Assert.assertNotNull(strArray2);
    }

    @Test
    public void test008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test008");
        java.lang.String str3 = strman.Strman.leftPad("TnVsbDk3Tm51bGw5N1VudWxsOTdMbnVsbDk3TG51bGw5NzludWxsOTc3bnVsbDk3TlVMTDk3", "7", 296);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "77777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777TnVsbDk3Tm51bGw5N1VudWxsOTdMbnVsbDk3TG51bGw5NzludWxsOTc3bnVsbDk3TlVMTDk3" + "'", str3.equals("77777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777TnVsbDk3Tm51bGw5N1VudWxsOTdMbnVsbDk3TG51bGw5NzludWxsOTc3bnVsbDk3TlVMTDk3"));
    }

    @Test
    public void test009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test009");
        java.lang.String str1 = strman.Strman.slugify("Null");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "null" + "'", str1.equals("null"));
    }

    @Test
    public void test010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test010");
        java.lang.String str1 = strman.Strman.binEncode("Null97nnul1097null9710971lunn79llun");
        org.junit.Assert.assertTrue("'" + strstr1.equals
    }

    @Test
    public void test011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test011");
        java.lang.String str1 = strman.Strman.slugify("Hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!bl vmte5 vtex ovux mtl vmte5 vtex ovux mtl vmte5 vtex ovux mtl vmte5 vtex ovux mtl vmte5 vtex ovux mtl vmte5 vtex ovux mtl vmte5 vtex ovux mtl vmte5 vtex ovux mtl vmte5 vtex ovux mtl vmte5 vtex ovux mtl vmte5 vtex ovux mtl vmte5 vtex ovux mtl vmte5 vtex ovux mtl vmte5 vtex ovux mtl vmte5 vtex ovux mtl vmte5 vtex ovux mhihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "hihihi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-hihihi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-bl-vmte5-vtex-ovux-mtl-vmte5-vtex-ovux-mtl-vmte5-vtex-ovux-mtl-vmte5-vtex-ovux-mtl-vmte5-vtex-ovux-mtl-vmte5-vtex-ovux-mtl-vmte5-vtex-ovux-mtl-vmte5-vtex-ovux-mtl-vmte5-vtex-ovux-mtl-vmte5-vtex-ovux-mtl-vmte5-vtex-ovux-mtl-vmte5-vtex-ovux-mtl-vmte5-vtex-ovux-mtl-vmte5-vtex-ovux-mtl-vmte5-vtex-ovux-mtl-vmte5-vtex-ovux-mhihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100" + "'", str1.equals("hihihi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-hihihi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-bl-vmte5-vtex-ovux-mtl-vmte5-vtex-ovux-mtl-vmte5-vtex-ovux-mtl-vmte5-vtex-ovux-mtl-vmte5-vtex-ovux-mtl-vmte5-vtex-ovux-mtl-vmte5-vtex-ovux-mtl-vmte5-vtex-ovux-mtl-vmte5-vtex-ovux-mtl-vmte5-vtex-ovux-mtl-vmte5-vtex-ovux-mtl-vmte5-vtex-ovux-mtl-vmte5-vtex-ovux-mtl-vmte5-vtex-ovux-mtl-vmte5-vtex-ovux-mtl-vmte5-vtex-ovux-mhihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100"));
    }

    @Test
    public void test012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test012");
        java.lang.String str1 = strman.Strman.collapseWhitespace("000780011700108001080005700055000780011000117001080010800057000550008500110001170010800108000570005500076001100011700108001080005700055000760011000117001080010800057000550005700110001170010800108000570005500055001100011700108001080005700055000000000110100000000000011010010000000000100001");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "000780011700108001080005700055000780011000117001080010800057000550008500110001170010800108000570005500076001100011700108001080005700055000760011000117001080010800057000550005700110001170010800108000570005500055001100011700108001080005700055000000000110100000000000011010010000000000100001" + "'", str1.equals("000780011700108001080005700055000780011000117001080010800057000550008500110001170010800108000570005500076001100011700108001080005700055000760011000117001080010800057000550005700110001170010800108000570005500055001100011700108001080005700055000000000110100000000000011010010000000000100001"));
    }

    @Test
    public void test013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test013");
        java.lang.String str1 = strman.Strman.toSnakeCase("001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000ihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihiH00390037");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000ihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi_h00390037" + "'", str1.equals("001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000ihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi_h00390037"));
    }

    @Test
    public void test014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test014");
        boolean boolean3 = strman.Strman.isEnclosedBetween("nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull&UnderBar;null", "sEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhTlVMTDk3000780011700108001080005700055000780011000117001080010800057000550008500110001170010800108000570005500076001100011700108001080005700055000760011000117001080010800057000550005700110001170010800108000570005500055001100011700108001080005700055", "SGloaWloaV9oaGlfaGk0ODQ4NTE1NTQ4NDg1MTU3NDg0ODU0OTk0ODQ4NTQ5OTQ4NDg1NTUzNDg0ODU0MTAxNDg0ODUxNTU0ODQ4NTE1NTQ4NDg1MTU3NDg0ODU0OTk0ODQ4NTQ5OTQ4NDg1NTUzNDg0ODU0MTAxNDg0ODUxNTc0ODQ4NTE1NTQ4NDg1MTU3NDg0ODU0OTk0ODQ4NTQ5OTQ4NDg1NTUzNDg0ODU0MTAxNDg0ODUyOTk0ODQ4NTE1NTQ4NDg1MTU3NDg0ODU0OTk0ODQ4NTQ5OTQ4NDg1NTUzNDg0ODU0MTAxNDg0ODUyOTk0ODQ4NTE1NTQ4NDg1MTU3NDg0ODU0OTk0ODQ4NTQ5OTQ4NDg1NTUzNDg0ODU0MTAxNDg0ODUzNTM0ODQ4NTE1NTQ4NDg1MTU3NDg0ODU0OTk0ODQ4NTQ5OTQ4NDg1NTUzNDg0ODU0MTAxNDg0ODUyMTAxNDg0ODUxNTU0ODQ4NTE1NzQ4NDg1NDk5NDg0ODU0OTk0ODQ4NTU1MzQ4NDg1NDEwMQ==n-u-l-l97-n-n-u-l");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test015");
        boolean boolean2 = strman.Strman.isEnclosedBetween("TnVsbDk3bm51bG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsb
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test016");
        java.lang.String[] strArray3 = strman.Strman.lines("hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!");
        java.lang.String str4 = strman.Strman.prepend("null97", strArray3);
        java.lang.String str5 = strman.Strman.prependArray("1null97null97 nnul n u l l97 n n u l!ih!HI!HI!HI!6", strArray3);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97" + "'", str4.equals("hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97"));
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!1null97null97 nnul n u l l97 n n u l!ih!HI!HI!HI!6" + "'", str5.equals("hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!1null97null97 nnul n u l l97 n n u l!ih!HI!HI!HI!6"));
    }

    @Test
    public void test017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test017");
        java.lang.String str1 = strman.Strman.formatNumber((long) 294);
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "294" + "'", str1.equals("294"));
    }

    @Test
    public void test018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test018");
        boolean boolean3 = strman.Strman.endsWithnull97 nnull97 unull97 lnull97 lnull979null977null97 null97", true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test019");
        java.lang.String str3 = strman.Strman.removeRight("", "mDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3", false);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "" + "'", str3.equals(""));
    }

    @Test
    public void test020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test020");
        java.lang.String[] strArray2 = strman.Strman.words("Nullnull97nnul=g2xphwA000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97Nnull97Unull97Lnull97Lnull979null977null97Hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!00000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100hiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiMwnull97null97Nnull97Unull97Lnull97Lnull979null977null97Hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!Nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull");
        org.junit.Assert.assertNotNull(strArray2);
    }

    @Test
    public void test021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test021");
        long long4 = strman.Strman.countSubstr("Mda2ztawnzuwmdzjmda2yzawmzkwmdmtrue, false);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
    }

    @Test
    public void test022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test022");
        java.lang.String str3 = strman.Strman.removeLeft("", "HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!NULL971null97null97Nnull97Unull97Lnull97Lnull979null977null97", true);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "" + "'", str3.equals(""));
    }

    @Test
    public void test023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test023");
        java.lang.String[] strArray1 = strman.Strman.chars("null97hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!nnull97hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!unull97hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!lnull97hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!lnull979null977null97hihi");
        org.junit.Assert.assertNotNull(strArray1);
    }

    @Test
    public void test024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test024");
        long long4 = strman.Strman.countSubstr("4911011710810857551101171081085755951101101171081085755951171101171081085755951081101171081085755951081101171081085755571101171081085755551101171081085755", "HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!", true, false);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
    }

    @Test
    public void test025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test025");
        java.lang.String str2 = strman.Strman.ensureRight("00370039006c006c0075006e0068006900680069003700370039006c006c0075006e003900370039006c006c0075006e002d006c00370039006c006c0075006e002d006c00370039006c006c0075006e002d007500370039006c006c0075006e002d006e00370039006c006c0075006e002d0068006900680069", "");
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "00370039006c006c0075006e0068006900680069003700370039006c006c0075006e003900370039006c006c0075006e002d006c00370039006c006c0075006e002d006c00370039006c006c0075006e002d007500370039006c006c0075006e002d006e00370039006c006c0075006e002d0068006900680069" + "'", str2.equals("00370039006c006c0075006e0068006900680069003700370039006c006c0075006e003900370039006c006c0075006e002d006c00370039006c006c0075006e002d006c00370039006c006c0075006e002d007500370039006c006c0075006e002d006e00370039006c006c0075006e002d0068006900680069"));
    }

    @Test
    public void test026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test026");
        boolean boolean4 = strman.Strman.endsWith("10145848435558484994584849945848475158484551584841012584841014584843555848499458484994584847515848455158484353584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484751584841014584843555848499458484994584847515848455158484551584841014584843555848499458484994584847515848455158484ih-ihllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunlunn79llun790179llun7901lunn79llun", "00110001170010800108000570005500078001100011700108blVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxM000000005500000000570000000076000000007600000000850000000078000000005500000000550000000057000000007600000000760000000085000000007800000000570000000055000000005700000000760000000076000000008500000000780000000108000000005500000000570000000076000000007600000000850000000078000000010800000000550000000057000000007600000000760000000085000000007800000001170000000055000000005700000000760000000076000000008500000000780000000110000000005500000000570000000076000000007600000000850000000078hihiullnullnullnullnullnullnull", 196, false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test027");
        java.lang.String str1 = strman.Strman.swapCase("mda2006e0075006c006c00390037ztaw006e0075006c006c00390037nz006e0075006c006c00390037uw006e0075006c006c00390037mdzj006e0075006c006c00390037mda2006e0075006c006c00390037yz006e0075006c006c00390037aw006e0075006c006c00390037mzkw006e0075006c006c00390037mdmhihi");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "MDA2006E0075006C006C00390037ZTAW006E0075006C006C00390037NZ006E0075006C006C00390037UW006E0075006C006C00390037MDZJ006E0075006C006C00390037MDA2006E0075006C006C00390037YZ006E0075006C006C00390037AW006E0075006C006C00390037MZKW006E0075006C006C00390037MDM30004800048000490004900048000480004800049000490005500048000480004900048000560004800048000490004800056000480004800048000530005500048000480004800053000530004800048000480005500056000480004800049000490004800048000480004900049000550004800048000490004800056000000005500000000570000000076000000007600000000850000000078000000005500000000550000000057000000007600000000760000000085000000007800000000570000000055000000005700000000760000000076000000008500000000780000000108000000005500000000570000000076000000007600000000850000000078000000010800000000550000000057000000007600000000760000000085000000007800000001170000000055000000005700000000760000000076000000008500000000780000000110000000005500000000570000000076000000007600000000850000000078HIHI" + "'", str1.equals
    }

    @Test
    public void test028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test028");
        int int2 = strman.Strman.lastIndexOf("000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97 Nnull97 Unull97 Lnull97 Lnull979null977null
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
    }

    @Test
    public void test029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test029");
        java.util.Map<java.lang.Character, java.lang.Long> charMap1 = strman.Strman.charsCount
        org.junit.Assert.assertNotNull(charMap1);
    }

    @Test
    public void test030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test030");
        java.lang.String str1 = strman.Strman.removeSpaces("000000005500000000570000000076000000007600000000850000000078000000005500000000550000000057000000007600000000760000000085000000007800000000570000000055000000005700000000760000000076000000008500000000780000000108000000005500000000570000000076000000007600000000850000000078000000010800000000550000000057000000007600000000760000000085000000007800000001170000000055000000005700000000760000000076000000008500000000780000000110000000005500000000570000000076000000007600000000850000000078hihi");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "000000005500000000570000000076000000007600000000850000000078000000005500000000550000000057000000007600000000760000000085000000007800000000570000000055000000005700000000760000000076000000008500000000780000000108000000005500000000570000000076000000007600000000850000000078000000010800000000550000000057000000007600000000760000000085000000007800000001170000000055000000005700000000760000000076000000008500000000780000000110000000005500000000570000000076000000007600000000850000000078hihi" + "'", str1.equals("000000005500000000570000000076000000007600000000850000000078000000005500000000550000000057000000007600000000760000000085000000007800000000570000000055000000005700000000760000000076000000008500000000780000000108000000005500000000570000000076000000007600000000850000000078000000010800000000550000000057000000007600000000760000000085000000007800000001170000000055000000005700000000760000000076000000008500000000780000000110000000005500000000570000000076000000007600000000850000000078hihi"));
    }

    @Test
    public void test031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test031");
        java.lang.String str1 = strman.Strman.slugify("001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!iH00390037");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih00390037" + "'", str1.equals("001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih00390037"));
    }

    @Test
    public void test032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test032");
        java.lang.String str2 = strman.Strman.removeLeft("48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101nULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULL", "nnullhiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiNull97hi00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006eunullhiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiNull97hi00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006elnullhiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiNull97hi00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006el");
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101nULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULL" + "'", str2.equals("48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101nULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULL"));
    }

    @Test
    public void test033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test033");
        java.lang.String str1 = strman.Strman.lowerFirst("null97_nnull97_unull97_lnull97_lnull979null977null97_null97");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "null97_nnull97_unull97_lnull97_lnull979null977null97_null97" + "'", str1.equals("null97_nnull97_unull97_lnull97_lnull979null977null97_null97"));
    }

    @Test
    public void test034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test034");
        java.lang.String[] strArray3 = strman.Strman.words("", "hi!");
        java.lang.String str4 = strman.Strman.format("79llun779llun979llunL79llunL79llunU79llunN79llun", strArray3);
        java.lang.String[] strArray5 = strman.Strman.removeEmptyStrings(strArray3);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "79llun779llun979llunL79llunL79llunU79llunN79llun" + "'", str4.equals("79llun779llun979llunL79llunL79llunU79llunN79llun"));
        org.junit.Assert.assertNotNull(strArray5);
    }

    @Test
    public void test035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test035");
        java.lang.String str1 = strman.Strman.base64Encode("001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih00390037");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "MDAxMTAxMTAwMDAwMDAwMDEwMTAxMTEwMDAwMDAwMDAwMTExMDExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDAxMDAxMTEwMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAxMDEwMTExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDEwMDEwMTEwMDAwMDAwMDAwMDAxMDExMDAwMDAwMDAwMTAxMTAxMDAwMDAwMDAwMDEwMDEwMTEwMDAwMDAwMDAwMDAxMDExMDAwMDAwMDAwLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloMDAzOTAwMzc=" + "'", str1.equals("MDAxMTAxMTAwMDAwMDAwMDEwMTAxMTEwMDAwMDAwMDAwMTExMDExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDAxMDAxMTEwMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAxMDEwMTExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDEwMDEwMTEwMDAwMDAwMDAwMDAxMDExMDAwMDAwMDAwMTAxMTAxMDAwMDAwMDAwMDEwMDEwMTEwMDAwMDAwMDAwMDAxMDExMDAwMDAwMDAwLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloMDAzOTAwMzc="));
    }

    @Test
    public void test036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test036");
        java.lang.String[] strArray4 = strman.Strman.words("Nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull97Nnull97Unull97Lnull97Lnull979null977null97hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97", "hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!");
        java.util.Optional<java.lang.String> strOptional5 = strman.Strman.trimEnd("MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA0ZTAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwNTUwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDRjMDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA0YzAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwMzkwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111001000000000-ih79llun-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih", strArray4);
        java.lang.String[] strArray6 = strman.Strman.removeEmptyStrings(strArray4);
        java.lang.String str7 = strman.Strman.prependArray("nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnullnullnullnullnull", strArray4);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(strOptional5);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + str7 + "' != '" + "Nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull97Nnull97Unull97Lnull97Lnull979null977null97null97nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnullnullnullnullnull" + "'", str7.equals("Nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull97Nnull97Unull97Lnull97Lnull979null977null97null97nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnullnullnullnullnull"));
    }

    @Test
    public void test037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test037");
        java.lang.String str1 = strman.Strman.upperFirst("hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!8484855544848484848484848565348484848484848485556104105104105");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "Hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!8484855544848484848484848565348484848484848485556104105104105" + "'", str1.equals("Hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!8484855544848484848484848565348484848484848485556104105104105"));
    }

    @Test
    public void test038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test038");
        java.lang.String str1 = strman.Strman.collapseWhitespace("HiHi0000000001001000000000000110100197HiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiNull97hi00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "HiHi0000000001001000000000000110100197HiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiNull97hi00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e" + "'", str1.equals("HiHi0000000001001000000000000110100197HiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiNull97hi00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e"));
    }

    @Test
    public void test039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test039");
        java.lang.String str1 = strman.Strman.lowerFirst("a-whp-x2g
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "a-whp-x2gstr1.equals("a-whp-x2g
    }

    @Test
    public void test040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test040");
        java.lang.String str1 = strman.Strman.removeNonWords("nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull" + "'", str1.equals("nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull"));
    }

    @Test
    public void test041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test041");
        java.lang.String str1 = strman.Strman.toKebabCasenull97null97nnull97unull97lnull97lnull979null977null97hihihi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "000000000011000100000000001100000000000000110001000000000011000100000000001101110000000000110001000000000011000000000000001110000000000000110001000000000011000000000000001110000000000000110101000000000011011100000000001101010000000000110101000000000100111000000000011101010000000001101100000000000110110000000000001110010000000000110111000000000100111000000000011011100000000001110101000000000110110000000000011011000000000000111001000000000011011100000000010101010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001001100000000000110111000000000011101010000000001101100000000000110110000000000001110010000000000110111000000000100110000000000011011100000000001110101000000000110110000000000011011000000000000111001000000000011011100000000001110010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000000110111000000000110111000000000011101010000000001101100000000000110110000000000001110010000000000110111000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97nnull97unull97lnull97lnull979null977null97hihihi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull" + "'", str1.equalsnull97null97nnull97unull97lnull97lnull979null977null97hihihi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull"));
    }

    @Test
    public void test042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test042");
        java.lang.String str2 = strman.Strman.repeat("hi_hi", 5416);
    }

    @Test
    public void test043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test043");
        java.lang.String str1 = strman.Strman.dasherize("Hi!hi!NULL97");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "hi!hi!-n-u-l-l97" + "'", str1.equals("hi!hi!-n-u-l-l97"));
    }

    @Test
    public void test044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test044");
        java.lang.String str2 = strman.Strman.ensureRight("00530065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b006800200074006c00200076006d00740064006b00331lunn79llun", "Hibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mnull978484855544848484848484848565348484848484848485556104105104105hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi
    }

    @Test
    public void test045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test045");
        java.lang.String str1 = strman.Strman.removeSpaces("mDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "mDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3" + "'", str1.equals("mDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3"));
    }

    @Test
    public void test046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test046");
        java.lang.String str2 = strman.Strman.last("256", (int) (short) 10);
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "256" + "'", str2.equals("256"));
    }

    @Test
    public void test047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test047");
        boolean boolean3 = strman.Strman.isEnclosedBetween("000780008500076000760005700055001100007800085000760007600057000550011700078000850007600076000570005500108000780008500076000760005700055001080007800085000760007600057000550005700078000850007600076000570005500055000780008500076000760005700055", "n_u_l_l97_n_ullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnullnullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test048");
        java.util.Optional<java.lang.String> strOptional1 = strman.Strman.trimStart("00000000001100110000000000110101");
        org.junit.Assert.assertNotNull(strOptional1);
    }

    @Test
    public void test049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test049");
        java.lang.String str1 = strman.Strman.reverse("Hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!blVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97Nnul");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "lunN79llun001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000ihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihiHMxUVOxETV5ETMVlTMxUVOxETV5ETMVlTMxUVOxETV5ETMVlTMxUVOxETV5ETMVlTMxUVOxETV5ETMVlTMxUVOxETV5ETMVlTMxUVOxETV5ETMVlTMxUVOxETV5ETMVlTMxUVOxETV5ETMVlTMxUVOxETV5ETMVlTMxUVOxETV5ETMVlTMxUVOxETV5ETMVlTMxUVOxETV5ETMVlTMxUVOxETV5ETMVlTMxUVOxETV5ETMVlTMxUVOxETV5ETMVlb!ih79llun!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ihihiH" + "'", str1.equals("lunN79llun001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000ihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihiHMxUVOxETV5ETMVlTMxUVOxETV5ETMVlTMxUVOxETV5ETMVlTMxUVOxETV5ETMVlTMxUVOxETV5ETMVlTMxUVOxETV5ETMVlTMxUVOxETV5ETMVlTMxUVOxETV5ETMVlTMxUVOxETV5ETMVlTMxUVOxETV5ETMVlTMxUVOxETV5ETMVlTMxUVOxETV5ETMVlTMxUVOxETV5ETMVlTMxUVOxETV5ETMVlTMxUVOxETV5ETMVlTMxUVOxETV5ETMVlb!ih79llun!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ihihiH"));
    }

    @Test
    public void test050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test050");
        java.lang.String str1 = strman.Strman.humanize("Hi-hinull97nnul");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "Hi hinull97nnul" + "'", str1.equals("Hi hinull97nnul"));
    }

    @Test
    public void test051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test051");
        java.lang.String str1 = strman.Strman.swapCase
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "0009800108000570004900088000500012000102000980006800107000510008800050000530010200100000870012000115000980011000086001150009800071000530004900098000710012000117001000008700120001150009800110000860011500098000710005300049000980007100120001170010000087001200011500098001100008600115000980007100053000490009800071001200011700100000870012000115000980011000086001150009800071000530004900098000710012000117001000008700120001150009800110000860011500098000710005300049000980007100120001170010000087001200011500098001100008600115000980007100053000490009800071001200011700100000870012000115000980011000086001150009800071000530004900098000710012000117001000008700120001150009800110000860011500098000710005300049000980007100120001170010000087001200011500098001100008600115000980007100053000490009800071001200011700100000870012000115000980011000086001150009800071000530004900098000710012000117001000008700120001150009800110000860011500098000710005300049000980007100120001170010000087001200011500098001100008600115000980007100053000490009800071001200011700100000870012000115000980011000086001150009800071000530004900098000710012000117001000008700120001150009800110000860011500098000710005300049000980007100120001170010000087001200011500098001100008600115000980007100053000490009800071001200011700100000870012000115000980011000086001150009800071000530004900098000710012000117000760008800085001160009800067000490011500079000840009900116000980010500049001170007600088000850011600098000650006100061" + "'", str1.equals("0009800108000570004900088000500012000102000980006800107000510008800050000530010200100000870012000115000980011000086001150009800071000530004900098000710012000117001000008700120001150009800110000860011500098000710005300049000980007100120001170010000087001200011500098001100008600115000980007100053000490009800071001200011700100000870012000115000980011000086001150009800071000530004900098000710012000117001000008700120001150009800110000860011500098000710005300049000980007100120001170010000087001200011500098001100008600115000980007100053000490009800071001200011700100000870012000115000980011000086001150009800071000530004900098000710012000117001000008700120001150009800110000860011500098000710005300049000980007100120001170010000087001200011500098001100008600115000980007100053000490009800071001200011700100000870012000115000980011000086001150009800071000530004900098000710012000117001000008700120001150009800110000860011500098000710005300049000980007100120001170010000087001200011500098001100008600115000980007100053000490009800071001200011700100000870012000115000980011000086001150009800071000530004900098000710012000117001000008700120001150009800110000860011500098000710005300049000980007100120001170010000087001200011500098001100008600115000980007100053000490009800071001200011700100000870012000115000980011000086001150009800071000530004900098000710012000117000760008800085001160009800067000490011500079000840009900116000980010500049001170007600088000850011600098000650006100061"));
    }

    @Test
    public void test052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test052");
        java.lang.String[] strArray5 = strman.Strman.between("NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97", "null97null97Nnull97Unull97Lnull97Lnull979null977null97", "Null97Nnull97Unull97Lnull97Lnull979null977null97");
        boolean boolean6 = strman.Strman.containsAny("null97null97Nnull97Unull97Lnull97Lnull979null977null97", strArray5);
        boolean boolean7 = strman.Strman.containsAny("Null97nhinullhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101nul1097null971097nULL97NNULNullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullhiHi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101000720010500033001040010500033nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull", strArray5);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test053");
        java.lang.String str2 = strman.Strman.repeat("1null97null97NnulNULL97NNUL!ih", (int) (short) 0);
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "" + "'", str2.equals(""));
    }

    @Test
    public void test054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test054");
        java.lang.String str1 = strman.Strman.transliterate("n00001p00001r00003i00003i00003r00003k00001p00001p00001r00003i00003i00003r00003k00001r00001p00001r00003i00003i00003r00003k00003i00001p00001r00003i00003i00003r00003k00003i00001p00001r00003i00003i00003r00003k00003r00001p00001r00003i00003i00003r00003k00003k00001p00001r00003i00003i00003r00003k00001p00001r00003i00003i00003r00003k00001p00001p00001r00003i00003i00003r00003k00001r00001p00001r00003i00003i00003r00003k00003i00001p00001r00003i00003i00003r00003k00003i00001p00001r00003i00003i00003r00003k00003r00001p00001r00003i00003i00003r00003k00003k00001p00001r00003i00003i00003r00003ku00001p00001r00003i00003i00003r00003k00001p00001p00001r00003i00003i00003r00003k00001r00001p00001r00003i00003i00003r00003k00003i00001p00001r00003i00003i00003r00003k00003i00001p00001r00003i00003i00003r00003k00003r00001p00001r00003i00003i00003r00003k00003k00001p00001r00003i00003i00003r00003k00001p00001r00003i00003i00003r00003k00001p00001p00001r00003i00003i00003r00003k00001r00001p00001r00003i00003i00003r00003k00003i00001p00001r00003i00003i00003r00003k00003i00001p00001r00003i00003i00003r00003k00003r00001p00001r00003i00003i00003r00003k00003k00001p00001r00003i00003i00003r00003kl00001p00001r00003i00003i00003r00003k00001p00001p00001r00003i00003i00003r00003k00001r00001p00001r00003i00003i00003r00003k00003i00001p00001r00003i00003i00003r00003k00003i00001p00001r00003i00003i00003r00003k00003r00001p00001r00003i00003i00003r00003k00003k00001p00001r00003i00003i00003r00003k00001p00001r00003i00003i00003r00003k00001p00001p00001r00003i00003i00003r00003k00001r00001p00001r00003i00003i00003r00003k00003i00001p00001r00003i00003i00003r00003k00003i00001p00001r00003i00003i00003r00003k00003r00001p00001r00003i00003i00003r00003k00003k00001p00001r00003i00003i00003r00003kl");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "n00001p00001r00003i00003i00003r00003k00001p00001p00001r00003i00003i00003r00003k00001r00001p00001r00003i00003i00003r00003k00003i00001p00001r00003i00003i00003r00003k00003i00001p00001r00003i00003i00003r00003k00003r00001p00001r00003i00003i00003r00003k00003k00001p00001r00003i00003i00003r00003k00001p00001r00003i00003i00003r00003k00001p00001p00001r00003i00003i00003r00003k00001r00001p00001r00003i00003i00003r00003k00003i00001p00001r00003i00003i00003r00003k00003i00001p00001r00003i00003i00003r00003k00003r00001p00001r00003i00003i00003r00003k00003k00001p00001r00003i00003i00003r00003ku00001p00001r00003i00003i00003r00003k00001p00001p00001r00003i00003i00003r00003k00001r00001p00001r00003i00003i00003r00003k00003i00001p00001r00003i00003i00003r00003k00003i00001p00001r00003i00003i00003r00003k00003r00001p00001r00003i00003i00003r00003k00003k00001p00001r00003i00003i00003r00003k00001p00001r00003i00003i00003r00003k00001p00001p00001r00003i00003i00003r00003k00001r00001p00001r00003i00003i00003r00003k00003i00001p00001r00003i00003i00003r00003k00003i00001p00001r00003i00003i00003r00003k00003r00001p00001r00003i00003i00003r00003k00003k00001p00001r00003i00003i00003r00003kl00001p00001r00003i00003i00003r00003k00001p00001p00001r00003i00003i00003r00003k00001r00001p00001r00003i00003i00003r00003k00003i00001p00001r00003i00003i00003r00003k00003i00001p00001r00003i00003i00003r00003k00003r00001p00001r00003i00003i00003r00003k00003k00001p00001r00003i00003i00003r00003k00001p00001r00003i00003i00003r00003k00001p00001p00001r00003i00003i00003r00003k00001r00001p00001r00003i00003i00003r00003k00003i00001p00001r00003i00003i00003r00003k00003i00001p00001r00003i00003i00003r00003k00003r00001p00001r00003i00003i00003r00003k00003k00001p00001r00003i00003i00003r00003kl" + "'", str1.equals("n00001p00001r00003i00003i00003r00003k00001p00001p00001r00003i00003i00003r00003k00001r00001p00001r00003i00003i00003r00003k00003i00001p00001r00003i00003i00003r00003k00003i00001p00001r00003i00003i00003r00003k00003r00001p00001r00003i00003i00003r00003k00003k00001p00001r00003i00003i00003r00003k00001p00001r00003i00003i00003r00003k00001p00001p00001r00003i00003i00003r00003k00001r00001p00001r00003i00003i00003r00003k00003i00001p00001r00003i00003i00003r00003k00003i00001p00001r00003i00003i00003r00003k00003r00001p00001r00003i00003i00003r00003k00003k00001p00001r00003i00003i00003r00003ku00001p00001r00003i00003i00003r00003k00001p00001p00001r00003i00003i00003r00003k00001r00001p00001r00003i00003i00003r00003k00003i00001p00001r00003i00003i00003r00003k00003i00001p00001r00003i00003i00003r00003k00003r00001p00001r00003i00003i00003r00003k00003k00001p00001r00003i00003i00003r00003k00001p00001r00003i00003i00003r00003k00001p00001p00001r00003i00003i00003r00003k00001r00001p00001r00003i00003i00003r00003k00003i00001p00001r00003i00003i00003r00003k00003i00001p00001r00003i00003i00003r00003k00003r00001p00001r00003i00003i00003r00003k00003k00001p00001r00003i00003i00003r00003kl00001p00001r00003i00003i00003r00003k00001p00001p00001r00003i00003i00003r00003k00001r00001p00001r00003i00003i00003r00003k00003i00001p00001r00003i00003i00003r00003k00003i00001p00001r00003i00003i00003r00003k00003r00001p00001r00003i00003i00003r00003k00003k00001p00001r00003i00003i00003r00003k00001p00001r00003i00003i00003r00003k00001p00001p00001r00003i00003i00003r00003k00001r00001p00001r00003i00003i00003r00003k00003i00001p00001r00003i00003i00003r00003k00003i00001p00001r00003i00003i00003r00003k00003r00001p00001r00003i00003i00003r00003k00003k00001p00001r00003i00003i00003r00003kl"));
    }

    @Test
    public void test055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test055");
        boolean boolean4 = strman.Strman.endsWith("hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_null97hi00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e", "0001101001000000000110100000000000011010010000000001011111000000000110100000000000011010000000000001101001000000000010110100000000011010000000000001101001000000000011010000000000001110000000000000", (int) (short) 0, false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test056");
        java.lang.String str1 = strman.Strman.escapeRegExp
        org.junit.Assert.assertTrue("'" + strstr1.equals
    }

    @Test
    public void test057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test057");
        java.lang.String str2 = strman.Strman.repeat("nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull", 7656);
    }

    @Test
    public void test058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test058");
        java.util.Optional<java.lang.String> strOptional2 = strman.Strman.first("", (int) (byte) 1);
        org.junit.Assert.assertNotNull(strOptional2);
    }

    @Test
    public void test059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test059");
        java.lang.String[] strArray2 = strman.Strman.split("79ll
        org.junit.Assert.assertNotNull(strArray2);
    }

    @Test
    public void test060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test060");
        java.lang.String[] strArray3 = strman.Strman.split("Null97Nnull97Unull97Lnull97Lnull979null977null97NULL97", "1101171081085755000000000179LLUN779LLUN979LLUNl79LLUNl79LLUNu79LLUNn79LLUN10100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100");
        boolean boolean5 = strman.Strman.containsAny("7210533hi!hi!hi!hi!hi!hi!hi!hi!hi!hn-ullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnulli!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!Hihi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_null97hi00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006ehi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!", strArray3, false);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test061");
        java.lang.String str1 = strman.Strman.decEncode("lunN79llunnull97null97Nnull97Unull97Lnull97Lnull979null977null97hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "001080011700110000780005500057001080010800117001100011000117001080010800057000550011000117001080010800057000550007800110001170010800108000570005500085001100011700108001080005700055000760011000117001080010800057000550007600110001170010800108000570005500057001100011700108001080005700055000550011000117001080010800057000550010400105000450010400105000450010400105000450010400105000450010400105000450010400105000450010400105000450010400105000450010400105000450010400105000450010400105000450010400105000450010400105000450010400105000450010400105000450010400105000450010400105000450010400105000450010400105000450010400105000450010400105000450010400105000450010400105000450010400105000450010400105000450010400105000450010400105000450010400105000450010400105000450010400105000450010400105000450010400105000450010400105000450010400105000450010400105000450010400105000450010400105000450010400105000450010400105000450010400105000450010400105000450010400105000450010400105000450010400105000450010400105000450010400105000450010400105000450010400105000450010400105000450010400105000450010400105000450010400105000450010400105000450010400105000450010400105000450010400105000450010400105000450010400105000450010400105000450010400105000450010400105000450010400105000450010400105000450010400105000450010400105000450010400105000450010400105000450010400105000450010400105000450010400105000450010400105000450010400105000450010400105000450010400105000450010400105000450010400105000450010400105000450010400105000450010400105000450010400105000450010400105000450010400105000450010400105000450010400105000450010400105000450010400105000450010400105000450010400105000450010400105000450010400105000450010400105000450010400105000450010400105000450010400105000450010400105000450010400105000450010400105000450010400105000450010400105000450010400105" + "'", str1.equals
    }

    @Test
    public void test062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test062");
        java.lang.String[] strArray3 = strman.Strman.split("null97_nnull97_unull97_lnull97_lnull979null977null97_null97", "!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih");
        java.util.Optional<java.lang.String> strOptional4 = strman.Strman.trimEnd("000000000011011100000000001110010000000001101100000000000110110000000000011101010000000001101110000000000011011100000000001101110000000000111001000000000110110000000000011011000000000001110101000000000110111000000000001110010000000000110111000000000011100100000000011011000000000001101100000000000111010100000000011011100000000001001100000000000011011100000000001110010000000001101100000000000110110000000000011101010000000001101110000000000100110000000000001101110000000000111001000000000110110000000000011011000000000001110101000000000110111000000000010101010000000000110111000000000011100100000000011011000000000001101100000000000111010100000000011011100000000001001110000000000011011100000000001110010000000001101100000000000110110000000000011101010000000001001110", strArray3);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(strOptional4);
    }

    @Test
    public void test063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test063");
        java.lang.String str3 = strman.Strman.surround("nullnull", "aWhpX2g
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "aWhpX2g=nullnullstr3.equals("aWhpX2g=nullnull
    }

    @Test
    public void test064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test064");
        try {
            java.lang.String str3 = strman.Strman.decode("MDAwOTgwMDEwODAwMDU3MDAwNDkwMDA4ODAwMDUwMDAxMjAwMDEwMjAwMDk4MDAwNjgwMDEwNzAwMDUxMDAwODgwMDA1MDAwMDUzMDAxMDIwMDEwMDAwMDg3MDAxMjAwMDExNTAwMDk4MDAxMTAwMDA4NjAwMTE1MDAwOTgwMDA3MTAwMDUzMDAwNDkwMDA5ODAwMDcxMDAxMjAwMDExNzAwMTAwMDAwODcwMDEyMDAwMTE1MDAwOTgwMDExMDAwMDg2MDAxMTUwMDA5ODAwMDcxMDAwNTMwMDA0OTAwMDk4MDAwNzEwMDEyMDAwMTE3MDAxMDAwMDA4NzAwMTIwMDAxMTUwMDA5ODAwMTEwMDAwODYwMDExNTAwMDk4MDAwNzEwMDA1MzAwMDQ5MDAwOTgwMDA3MTAwMTIwMDAxMTcwMDEwMDAwMDg3MDAxMjAwMDExNTAwMDk4MDAxMTAwMDA4NjAwMTE1MDAwOTgwMDA3MTAwMDUzMDAwNDkwMDA5ODAwMDcxMDAxMjAwMDExNzAwMTAwMDAwODcwMDEyMDAwMTE1MDAwOTgwMDExMDAwMDg2MDAxMTUwMDA5ODAwMDcxMDAwNTMwMDA0OTAwMDk4MDAwNzEwMDEyMDAwMTE3MDAxMDAwMDA4NzAwMTIwMDAxMTUwMDA5ODAwMTEwMDAwODYwMDExNTAwMDk4MDAwNzEwMDA1MzAwMDQ5MDAwOTgwMDA3MTAwMTIwMDAxMTcwMDEwMDAwMDg3MDAxMjAwMDExNTAwMDk4MDAxMTAwMDA4NjAwMTE1MDAwOTgwMDA3MTAwMDUzMDAwNDkwMDA5ODAwMDcxMDAxMjAwMDExNzAwMTAwMDAwODcwMDEyMDAwMTE1MDAwOTgwMDExMDAwMDg2MDAxMTUwMDA5ODAwMDcxMDAwNTMwMDA0OTAwMDk4MDAwNzEwMDEyMDAwMTE3MDAxMDAwMDA4NzAwMTIwMDAxMTUwMDA5ODAwMTEwMDAwODYwMDExNTAwMDk4MDAwNzEwMDA1MzAwMDQ5MDAwOTgwMDA3MTAwMTIwMDAxMTcwMDEwMDAwMDg3MDAxMjAwMDExNTAwMDk4MDAxMTAwMDA4NjAwMTE1MDAwOTgwMDA3MTAwMDUzMDAwNDkwMDA5ODAwMDcxMDAxMjAwMDExNzAwMTAwMDAwODcwMDEyMDAwMTE1MDAwOTgwMDExMDAwMDg2MDAxMTUwMDA5ODAwMDcxMDAwNTMwMDA0OTAwMDk4MDAwNzEwMDEyMDAwMTE3MDAxMDAwMDA4NzAwMTIwMDAxMTUwMDA5ODAwMTEwMDAwODYwMDExNTAwMDk4MDAwNzEwMDA1MzAwMDQ5MDAwOTgwMDA3MTAwMTIwMDAxMTcwMDEwMDAwMDg3MDAxMjAwMDExNTAwMDk4MDAxMTAwMDA4NjAwMTE1MDAwOTgwMDA3MTAwMDUzMDAwNDkwMDA5ODAwMDcxMDAxMjAwMDExNzAwMTAwMDAwODcwMDEyMDAwMTE1MDAwOTgwMDExMDAwMDg2MDAxMTUwMDA5ODAwMDcxMDAwNTMwMDA0OTAwMDk4MDAwNzEwMDEyMDAwMTE3MDAxMDAwMDA4NzAwMTIwMDAxMTUwMDA5ODAwMTEwMDAwODYwMDExNTAwMDk4MDAwNzEwMDA1MzAwMDQ5MDAwOTgwMDA3MTAwMTIwMDAxMTcwMDEwMDAwMDg3MDAxMjAwMDExNTAwMDk4MDAxMTAwMDA4NjAwMTE1MDAwOTgwMDA3MTAwMDUzMDAwNDkwMDA5ODAwMDcxMDAxMjAwMDExNzAwMDc2MDAwODgwMDA4NTAwMTE2MDAwOTgwMDA2NzAwMDQ5MDAxMTUwMDA3OTAwMDg0MDAwOTkwMDExNjAwMDk4MDAxMDUwMDA0OTAwMTE3MDAwNzYwMDA4ODAwMDg1MDAxMTYwMDA5ODAwMDY1MDAwNjEwMDA2MQ==ll97", 3, 5);
            org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException; message: For input string: \"MDA\"");
        } catch (java.lang.NumberFormatException e) {
        }
    }

    @Test
    public void test065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test065");
        boolean boolean3 = strman.Strman.contains("N Ullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull", "000720010500092000320010400105000720010500092000320010400105000720010500092000320010400105000720010500092000320010400105000720010500092000320010400105", true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test066");
        java.lang.String str1 = strman.Strman.toCamelCase("000000000011000000000000001100000000000000110011000000000011100100000000001100000000000000110000000000000011001100000000001101110000000000110000000000000011000000000000001100010000000000110000000000000011010000000000001100000000000000110000000000000011000100000000001100000000000000110101");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "000000000011000000000000001100000000000000110011000000000011100100000000001100000000000000110000000000000011001100000000001101110000000000110000000000000011000000000000001100010000000000110000000000000011010000000000001100000000000000110000000000000011000100000000001100000000000000110101" + "'", str1.equals("000000000011000000000000001100000000000000110011000000000011100100000000001100000000000000110000000000000011001100000000001101110000000000110000000000000011000000000000001100010000000000110000000000000011010000000000001100000000000000110000000000000011000100000000001100000000000000110101"));
    }

    @Test
    public void test067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test067");
        java.lang.String str1 = strman.Strman.htmlDecode("1");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "null" + "'", str1.equals("null"));
    }

    @Test
    public void test068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test068");
        boolean boolean1 = strman.Strman.isLowerCase("0003300072000730003300072000730003300072000730003300054");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
    }

    @Test
    public void test069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test069");
        java.lang.String[] strArray3 = strman.Strman.words("Null97nnul", "hihi");
        boolean boolean5 = strman.Strman.containsAny("MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA0ZTAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwNTUwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDRjMDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA0YzAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwMzkwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3Nnullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037hihiullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull", strArray3, true);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test070");
        java.util.Optional<java.lang.String> strOptional1 = strman.Strman.trimEnd("null97nnul1097null971097001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000ihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihiH00390037");
        org.junit.Assert.assertNotNull(strOptional1);
    }

    @Test
    public void test071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test071");
        boolean boolean3 = strman.Strman.isEnclosedBetween("9ihiH7", "00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e006c00370039006c006c0075006e006c00370039006c006c0075006e007500370039006c006c0075006e006e00370039006c006c0075006e00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e006c00370039006c006c0075006e006c00370039006c006c0075006e007500370039006c006c0075006e006e00370039006c006c0075006e", "0011000085000760007600057000550007800078000850007697");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test072");
        java.util.Map<java.lang.Character, java.lang.Long> charMap1 = strman.Strman.charsCount("hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!");
        boolean boolean2 = strman.Strman.isString((java.lang.Object) charMap1);
        org.junit.Assert.assertNotNull(charMap1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test073");
        java.lang.String str3 = strman.Strman.ensureRight("Null97nnulnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull", "bXctaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktbnVsbDk3aGktbnVsbDk3bm51bA==", false);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "Null97nnulnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullbXctaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktbnVsbDk3aGktbnVsbDk3bm51bA==" + "'", str3.equals("Null97nnulnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullbXctaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktbnVsbDk3aGktbnVsbDk3bm51bA=="));
    }

    @Test
    public void test074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test074");
        int int3 = strman.Strman.lastIndexOf("9ihinullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullh7", "", true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 230 + "'", int3 == 230);
    }

    @Test
    public void test075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test075");
        java.lang.String str1 = strman.Strman.startCase("hihiihi_hhi_hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101n_u_l_l97_n_n_u_lhi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_null97hi_null97nnulhi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_null97hi_null97nnul");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "Hihiihi Hhi Hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101n U L L97 N N U Lhi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Null97hi Null97nnulhi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Null97hi Null97nnul" + "'", str1.equals("Hihiihi Hhi Hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101n U L L97 N N U Lhi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Null97hi Null97nnulhi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Null97hi Null97nnul"));
    }

    @Test
    public void test076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test076");
        java.lang.String[] strArray1 = strman.Strman.lines("Hi\\ hihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100");
        org.junit.Assert.assertNotNull(strArray1);
    }

    @Test
    public void test077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test077");
        java.lang.String str1 = strman.Strman.leftTrimn u l l97 n n u l");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "00072001050010400105001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001100011700108001080005700055001040010500033n u l l97 n n u l" + "'", str1.equalsn u l l97 n n u l"));
    }

    @Test
    public void test078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test078");
        java.lang.String str2 = strman.Strman.ensureRight("nullhihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi", "MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA0ZTAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwNTUwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDRjMDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA0YzAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwMzkwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111001000000000-ih79llun-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ihMw==Hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!null97Nnulnull000780008500076000760005700055001100007800085000760007600057000550011700078000850007600076000570005500108000780008500076000760005700055001080007800085000760007600057000550005700078000850007600076000570005500055000780008500076000760005700055");
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "nullhihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihiMDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA0ZTAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwNTUwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDRjMDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA0YzAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwMzkwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111001000000000-ih79llun-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ihMw==Hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!null97Nnulnull000780008500076000760005700055001100007800085000760007600057000550011700078000850007600076000570005500108000780008500076000760005700055001080007800085000760007600057000550005700078000850007600076000570005500055000780008500076000760005700055" + "'", str2.equals("nullhihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihiMDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA0ZTAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwNTUwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDRjMDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA0YzAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwMzkwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111001000000000-ih79llun-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ihMw==Hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!null97Nnulnull000780008500076000760005700055001100007800085000760007600057000550011700078000850007600076000570005500108000780008500076000760005700055001080007800085000760007600057000550005700078000850007600076000570005500055000780008500076000760005700055"));
    }

    @Test
    public void test079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test079");
        java.util.Optional<java.lang.String> strOptional1 = strman.Strman.trimStart("Nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull");
        boolean boolean2 = strman.Strman.isString((java.lang.Object) strOptional1);
        org.junit.Assert.assertNotNull(strOptional1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test080");
        java.lang.String str1 = strman.Strman.rightTrim("004e0055004c004c00390037006e004e0055004c004c003900370075004e0055004c004c00390037006c004e0055004c004c00390037006c004e0055004c004c003900370039004e0055004c004c003900370037004e0055004c004c00390037006800690068006900480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d004e0055004c004c0039003700480049002d
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "004e0055004c004c00390037006e004e0055004c004c003900370075004e0055004c004c00390037006c004e0055004c004c00390037006c004e0055004c004c003900370039004e0055004c004c003900370037004e0055004c004c00390037006800690068006900480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d004e0055004c004c0039003700480049002d003000300033003700300030003300390030003000360043003000300036004300300030003700350030003000360045003000300033003700300030003300370030003000330039003000300036004300300030003600430030003000370035003000300036004500300030003300390030003000330037003000300033003900300030003600430030003000360043003000300037003500300030003600450030003000340043003000300033003700300030003300390030003000360043003000300036004300300030003700350030003000360045003000300034004300300030003300370030003000330039003000300036004300300030003600430030003000370035003000300036004500300030003500350030003000330037003000300033003900300030003600430030003000360043003000300037003500300030003600450030003000340045003000300033003700300030003300390030003000360043003000300036004300300030003700350030003000360045" + "'", str1.equals("004e0055004c004c00390037006e004e0055004c004c003900370075004e0055004c004c00390037006c004e0055004c004c00390037006c004e0055004c004c003900370039004e0055004c004c003900370037004e0055004c004c00390037006800690068006900480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d004e0055004c004c0039003700480049002d
    }

    @Test
    public void test081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test081");
        java.lang.String[] strArray5 = strman.Strman.chars("null");
        java.lang.String str6 = strman.Strman.format("null97nnul", strArray5);
        boolean boolean8 = strman.Strman.containsAll("hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!000000000100111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100", strArray5, true);
        boolean boolean9 = strman.Strman.containsAny("1lunn79llun", strArray5);
        boolean boolean10 = strman.Strman.containsAny("11", strArray5);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "null97nnul" + "'", str6.equals("null97nnul"));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test082");
        boolean boolean2 = strman.Strman.isEnclosedBetween("MDAwMDAwMDA1NTAwMDAwMDAwNTcwMDAwMDAwMDc2MDAwMDAwMDA3NjAwMDAwMDAwODUwMDAwMDAwMDc4MDAwMDAwMDA1NTAwMDAwMDAwNTUwMDAwMDAwMDU3MDAwMDAwMDA3NjAwMDAwMDAwNzYwMDAwMDAwMDg1MDAwMDAwMDA3ODAwMDAwMDAwNTcwMDAwMDAwMDU1MDAwMDAwMDA1NzAwMDAwMDAwNzYwMDAwMDAwMDc2MDAwMDAwMDA4NTAwMDAwMDAwNzgwMDAwMDAwMTA4MDAwMDAwMDA1NTAwMDAwMDAwNTcwMDAwMDAwMDc2MDAwMDAwMDA3NjAwMDAwMDAwODUwMDAwMDAwMDc4MDAwMDAwMDEwODAwMDAwMDAwNTUwMDAwMDAwMDU3MDAwMDAwMDA3NjAwMDAwMDAwNzYwMDAwMDAwMDg1MDAwMDAwMDA3ODAwMDAwMDAxMTcwMDAwMDAwMDU1MDAwMDAwMDA1NzAwMDAwMDAwNzYwMDAwMDAwMDc2MDAwMDAwMDA4NTAwMDAwMDAwNzgwMDAwMDAwMTEwMDAwMDAwMDA1NTAwMDAwMDAwNTcwMDAwMDAwMDc2MDAwMDAwMDA3NjAwMDAwMDAwODUwMDAwMDAwMDc4", "lunN79llunnull97null97Nnull97Unull97Lnull97Lnull979null977null97nULL97NNULNullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull1097nullnull97nnulhi006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull97nnulnull97null97nnulnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullhi-hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test083");
        boolean boolean2 = strman.Strman.isEnclosedBetween("nullnull97nnul
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test084");
        java.lang.String str3 = strman.Strman.surround("000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97-nnull97-unull97-lnull97-lnull979null977null97", "hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!8484855544848484848484848565348484848484848485556104105104105", "00000000010011010000000001000100000000000100000100000000001100100000000001011010000000000101010000000000010000010000000001110111000000000100111000000000011110100000000001010101000000000111011100000000010011010000000001000100000000000101101000000000011010100000000001001101000000000100010000000000010000010000000000110010000000000101100100000000011110100000000001000001000000000111011100000000010011010000000001111010000000000110101100000000011101110000000001001101000000000100010000000000010011010000000000110011");
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!8484855544848484848484848565348484848484848485556104105104105000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97-nnull97-unull97-lnull97-lnull979null977null9700000000010011010000000001000100000000000100000100000000001100100000000001011010000000000101010000000000010000010000000001110111000000000100111000000000011110100000000001010101000000000111011100000000010011010000000001000100000000000101101000000000011010100000000001001101000000000100010000000000010000010000000000110010000000000101100100000000011110100000000001000001000000000111011100000000010011010000000001111010000000000110101100000000011101110000000001001101000000000100010000000000010011010000000000110011" + "'", str3.equals("hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!8484855544848484848484848565348484848484848485556104105104105000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97-nnull97-unull97-lnull97-lnull979null977null
    }

    @Test
    public void test085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test085");
        boolean boolean2 = strman.Strman.unequal("1lunn79llun", "hi_hi");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
    }

    @Test
    public void test086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test086");
        java.lang.String str1 = strman.Strman.formatNumber((long) 280);
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "280" + "'", str1.equals("280"));
    }

    @Test
    public void test087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test087");
        java.lang.String[] strArray3 = strman.Strman.words("Null97Nnull97Unull97Lnull97Lnull979null977null979710", "0005100107001000011600109000860003200108000840003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083");
        java.util.Optional<java.lang.String> strOptional4 = strman.Strman.trimEnd("ullnullnullnullnullnullnull", strArray3);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(strOptional4);
    }

    @Test
    public void test088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test088");
        java.lang.String str1 = strman.Strman.htmlDecode("000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97 nnull97 unull97 lnull97 lnull979null977null97");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "null" + "'", str1.equals("null"));
    }

    @Test
    public void test089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test089");
        java.lang.String str1 = strman.Strman.rightTrimaWhpX2g=");
        org.junit.Assert.assertTrue("'" + straWhpX2g=" + "'", str1.equalsaWhpX2g="));
    }

    @Test
    public void test090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test090");
        java.lang.String str3 = strman.Strman.rightPad("IHI97HHI97HI48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101n-u-l-l97-n-n-u-lhi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-null97nnul-hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!null97-nnul", "1101171081085755", 5416);
    }

    @Test
    public void test091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test091");
        java.lang.String str3 = strman.Strman.encode("null33727333727333727333iullnullnullnullnullnullnull03000300034003800300030003000340039003000300030003400390030003000300034003800300030003000340039003000300030003400380030003000300034003900300030003100310030003000300031003100370030003000310030003800300030003100300038003000300030003500370030003000300035003500300030003100310030003000300031003100300030003000310031003700300030003100300038hullnullnullnullnullnullnull03000300034003800300030003000340039003000300030003400390030003000300034003800300030003000340039003000300030003400380030003000300034003900300030003100310030003000300031003100370030003000310030003800300030003100300038003000300030003500370030003000300035003500300030003100310030003000300031003100300030003000310031003700300030003100300038iullnullnullnullnullnullnull03000300034003800300030003000340039003000300030003400390030003000300034003800300030003000340039003000300030003400380030003000300034003900300030003100310030003000300031003100370030003000310030003800300030003100300038003000300030003500370030003000300035003500300030003100310030003000300031003100300030003000310031003700300030003100300038h0030003000300034003800300030003000340038003000300030003400380030003000300034003800300030003000340038003000300030003400380030003000300034003800300030003000340038003000300030003400380030003000300034003800300030003000340039003000300030003400390030003000300034003800300030003000340038003000300030003400390030003000300034003900300030003000340038003000300030003400380030003000300034003800300030003000340038003000300030003400380030003000300034003800300030003000340038003000300030003400380030003000300034003800300ullnullnullnullnullnullnull03000300034003800300030003000340039003000300030003400390030003000300034003800300030003000340039003000300030003400380030003000300034003900300030003100310030003000300031003100370030003000310030003800300030003100300038003000300030003500370030003000300035003500300030003100310030003000300031003100300030003000310031003700300030003100300038hullnullnullnullnullnullnull03000300034003800300030003000340039003000300030003400390030003000300034003800300030003000340039003000300030003400380030003000300034003900300030003100310030003000300031003100370030003000310030003800300030003100300038003000300030003500370030003000300035003500300030003100310030003000300031003100300030003000310031003700300030003100300038iullnullnullnullnullnullnull03000300034003800300030003000340039003000300030003400390030003000300034003800300030003000340039003000300030003400380030003000300034003900300030003100310030003000300031003100370030003000310030003800300030003100300038003000300030003500370030003000300035003500300030003100310030003000300031003100300030003000310031003700300030003100300038hullnullnullnullnullnullnull03000300034003800300030003000340039003000300030003400390030003000300034003800300030003000340039003000300030003400380030003000300034003900300030003100310030003000300031003100370030003000310030003800300030003100300038003000300030003500370030003000300035003500300030003100310030003000300031003100300030003000310031003700300030003100300038i484851554848515748485499484854994848555348485410148485155484851554848515748485499484854994848555348485410148485157484851554848515748485499484854994848555348485410148485299484851554848515748485499484854994848555348485410148485299484851554848515748485499484854994848555348485410148485353484851554848515748485499484854994848555348485410148485210148485155484851574848549948485499484855534848541019ihiullnullnullnullnullnullnull03000300034003800300030003000340039003000300030003400390030003000300034003800300030003000340039003000300030003400380030003000300034003900300030003100310030003000300031003100370030003000310030003800300030003100300038003000300030003500370030003000300035003500300030003100310030003000300031003100300030003000310031003700300030003100300038h7null", 4342, (int) (byte) 1);
    }

    @Test
    public void test092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test092");
        java.lang.String[] strArray4 = strman.Strman.chars("null");
        boolean boolean5 = strman.Strman.containsAny("null97Nnull97Unull97Lnull97Lnull979null977null97", strArray4);
        java.lang.String str6 = strman.Strman.format("null97null97Nnull97Unull97Lnull97Lnull979null977null97", strArray4);
        boolean boolean7 = strman.Strman.containsAny("", strArray4);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "null97null97Nnull97Unull97Lnull97Lnull979null977null97" + "'", str6.equals("null97null97Nnull97Unull97Lnull97Lnull979null977null97"));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test093");
        java.lang.String str1 = strman.Strman.rightTrim("Hibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mnull978484855544848484848484848565348484848484848485556104105104105");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "Hibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mnull978484855544848484848484848565348484848484848485556104105104105" + "'", str1.equals("Hibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mnull978484855544848484848484848565348484848484848485556104105104105"));
    }

    @Test
    public void test094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test094");
        java.lang.String str1 = strman.Strman.toSnakeCase("79lluN73009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60079lluN73009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60079lluN73009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60079lluN73009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60079lluN73009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60079lluN73009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60079lluN73009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60079lluN73009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60079lluN73009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60079lluN73009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e600HihiIHI_HHI_HI48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "79llu_n73009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60079llu_n73009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60079llu_n73009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60079llu_n73009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60079llu_n73009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60079llu_n73009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60079llu_n73009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60079llu_n73009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60079llu_n73009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60079llu_n73009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e600_hihi_i_h_i_h_h_i_h_i48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101" + "'", str1.equals("79llu_n73009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60079llu_n73009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60079llu_n73009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60079llu_n73009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60079llu_n73009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60079llu_n73009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60079llu_n73009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60079llu_n73009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60079llu_n73009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60079llu_n73009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e600_hihi_i_h_i_h_h_i_h_i48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101"));
    }

    @Test
    public void test095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test095");
        boolean boolean4 = strman.Strman.endsWithnullnull&excl;nullnull&excl;", 1040, false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test096");
        java.lang.String str1 = strman.Strman.binEncode("null97Nnull97Unull97Lnull97Lnull979null977null97");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "000000000110111000000000011101010000000001101100000000000110110000000000001110010000000000110111000000000100111000000000011011100000000001110101000000000110110000000000011011000000000000111001000000000011011100000000010101010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001001100000000000110111000000000011101010000000001101100000000000110110000000000001110010000000000110111000000000100110000000000011011100000000001110101000000000110110000000000011011000000000000111001000000000011011100000000001110010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000000110111000000000110111000000000011101010000000001101100000000000110110000000000001110010000000000110111" + "'", str1.equals
    }

    @Test
    public void test097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test097");
        java.lang.String[] strArray2 = strman.Strman.chop("N Ullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull", 612);
        org.junit.Assert.assertNotNull(strArray2);
    }

    @Test
    public void test098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test098");
        java.lang.String str2 = strman.Strman.removeRight("", "Hihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihinull97hi0000000001001110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011007210533hihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihiNULL97NUllnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullHihihihiNULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL979710g2xphwA000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97Nnull97Unull97Lnull97Lnull979null977null97Hihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihinull97hi
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "" + "'", str2.equals(""));
    }

    @Test
    public void test099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test099");
        java.lang.String[] strArray3 = strman.Strman.between("0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001050000000000hI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!", "00390037null97nnul1097null971097", "hinullhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hiih79llun!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ihhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101");
        org.junit.Assert.assertNotNull(strArray3);
    }

    @Test
    public void test100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test100");
        java.lang.String str1 = strman.Strman.removeSpaces("00000000001100110000000000110101000000000011001100000000001101010000000000110011000000000011010100000000001100110000000000110101000000000011001100000000001101010000000000110011000000000011010100000000001100110000000000110101");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "00000000001100110000000000110101000000000011001100000000001101010000000000110011000000000011010100000000001100110000000000110101000000000011001100000000001101010000000000110011000000000011010100000000001100110000000000110101" + "'", str1.equals("00000000001100110000000000110101000000000011001100000000001101010000000000110011000000000011010100000000001100110000000000110101000000000011001100000000001101010000000000110011000000000011010100000000001100110000000000110101"));
    }

    @Test
    public void test101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test101");
        boolean boolean2 = strman.Strman.endsWith("00530065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b006800200074006c00200076006d00740064006b0033", "Ihi_hhi-hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test102");
        java.util.Optional<java.lang.String> strOptional2 = strman.Strman.at("null000780008500076000760005700055001100007800085000760007600057000550011700078000850007600076000570005500108000780008500076000760005700055001080007800085000760007600057000550005700078000850007600076000570005500055000780008500076000760005700055", 5);
        org.junit.Assert.assertNotNull(strOptional2);
    }

    @Test
    public void test103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test103");
        java.lang.String str3 = strman.Strman.ensureRight("nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnullnullnullnullnull", "006e0075006c006c00390037hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!", false);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnullnullnullnullnull006e0075006c006c00390037hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!" + "'", str3.equals("nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnullnullnullnullnull006e0075006c006c00390037hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!"));
    }

    @Test
    public void test104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test104");
        java.lang.String[] strArray1 = strman.Strman.lines
        java.lang.String[] strArray2 = strman.Strman.removeEmptyStrings(strArray1);
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNotNull(strArray2);
    }

    @Test
    public void test105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test105");
        java.lang.String str4 = strman.Strman.replace("nfalse);
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "nULL97NNULNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULL" + "'", str4.equals("nULL97NNULNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULL"));
    }

    @Test
    public void test106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test106");
        java.lang.String str1 = strman.Strman.htmlDecode("45132133451321334513213345");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "null" + "'", str1.equals("null"));
    }

    @Test
    public void test107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test107");
        java.lang.String str2 = strman.Strman.ensureLeft("00000000011010010000000001101000", "null97nnul1097null971097null97nnulnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullhi00370039006c006c0075006e0068006900680069003700370039006c006c0075006e003900370039006c006c0075006e002d006c00370039006c006c0075006e002d006c00370039006c006c0075006e002d007500370039006c006c0075006e002d006e00370039006c006c0075006e002d0068006900680069hi4848515548485157484854994848549948485553484854101484851554848515548485157484854994848549948485553484854101484851574848515548485157484854994848549948485553484854101484852994848515548485157484854994848549948485553484854101484852994848515548485157484854994848549948485553484854101484853534848515548485157484854994848549948485553484854101484852101484851554848515748485499484854994848555348485410100370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e");
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "null97nnul1097null971097null97nnulnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullhi00370039006c006c0075006e0068006900680069003700370039006c006c0075006e003900370039006c006c0075006e002d006c00370039006c006c0075006e002d006c00370039006c006c0075006e002d007500370039006c006c0075006e002d006e00370039006c006c0075006e002d0068006900680069hi4848515548485157484854994848549948485553484854101484851554848515548485157484854994848549948485553484854101484851574848515548485157484854994848549948485553484854101484852994848515548485157484854994848549948485553484854101484852994848515548485157484854994848549948485553484854101484853534848515548485157484854994848549948485553484854101484852101484851554848515748485499484854994848555348485410100370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e00000000011010010000000001101000" + "'", str2.equals("null97nnul1097null971097null97nnulnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullhi00370039006c006c0075006e0068006900680069003700370039006c006c0075006e003900370039006c006c0075006e002d006c00370039006c006c0075006e002d006c00370039006c006c0075006e002d007500370039006c006c0075006e002d006e00370039006c006c0075006e002d0068006900680069hi4848515548485157484854994848549948485553484854101484851554848515548485157484854994848549948485553484854101484851574848515548485157484854994848549948485553484854101484852994848515548485157484854994848549948485553484854101484852994848515548485157484854994848549948485553484854101484853534848515548485157484854994848549948485553484854101484852101484851554848515748485499484854994848555348485410100370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e00000000011010010000000001101000"));
    }

    @Test
    public void test108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test108");
        java.util.Optional<java.lang.String> strOptional2 = strman.Strman.at("79LLUN779LLUN979LLUNl79LLUNl79LLUNu79LLUNn79LLUN79LLUN779LLUN979LLUNl79LLUNl79LLUNu79LLUNn79LLUN", 4342);
        org.junit.Assert.assertNotNull(strOptional2);
    }

    @Test
    public void test109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test109");
        boolean boolean3 = strman.Strman.contains("00078001170010800108000570005500110001100011700108", "nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnullnullnullnullnull", true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test110");
        java.lang.String str3 = strman.Strman.rightPad("MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3LW51bGw5NzAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNy1udWxsOTcwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzctbnVsbDk3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3LW51bGw5NzAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNy1udWxsOTcwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzctbnVsbDk3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3LW51bGw5NzAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNy1udWxsOTcwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzctbnVsbDk3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3LW51bGw5Nw==", "NULLNULL000000005500000000570000000076000000007600000000850000000078000000005500000000550000000057000000007600000000760000000085000000007800000000570000000055000000005700000000760000000076000000008500000000780000000108000000005500000000570000000076000000007600000000850000000078000000010800000000550000000057000000007600000000760000000085000000007800000001170000000055000000005700000000760000000076000000008500000000780000000110000000005500000000570000000076000000007600000000850000000078hihiymx_w_t_v_r_f_n_v_z_u_r_xh_p_vl_v4_t_v_rs_vk1_u_r_t_v_w_v_e_v4_t1_z_ve_e1_ub_f_z_n_v_e_u1_vl_r_fe_e9_w_v_xh_n_v_gx_w_t_v_r_f_n_v_z_u_r_xh_p_vl_v4_t_v_rs_vk1_u_r_t_v_w_v_e_v4_t1_z_ve_e1_ub_f_z_n_v_e_u1_vl_r_fe_e9_w_v_xh_n_v_gx_w_t_v_r_f_n_v_z_u_r_xh_p_vl_v4_t_v_rs_vk1_u_r_t_v_w_v_e_v4_t1_z_ve_e1_ub_f_z_n_v_e_u1_vl_r_fe_e9_w_v_xh_n_v_gx_w_t_v_r_f_n_v_z_u_r_xh_p_vl_v4_t_v_rs_vk1_u_r_t_v_w_v_e_v4_t1_z_ve_e1_ub_f_z_n_v_e_u1_vl_r_fe_e9_w_v_xh_n_v_gx_w_t_v_r_f_n_v_z_u_r_xh_p_vl_v4_t_v_rs_vk1_u_r_t_v_w_v_e_v4_t1_z_ve_e1_ub_f_z_n_v_e_u1_vl_r_fe_e9_w_v_xh_n_v_gx_w_t_v_r_f_n_v_z_u_r_xh_p_vl_v4_t_t_aw_m_d_aw_m_d_aw_n_t_uw_m_d_aw_m_d_aw_m_d_u3_m_d_aw_m_d_aw_m_d_a3_nj_aw_m_d_aw_m_d_aw_nz_yw_m_d_aw_m_d_aw_m_dg1_m_d_aw_m_d_aw_m_d_a3_o_d_aw_m_d_aw_m_d_aw_n_t_uw_m_d_aw_m_d_aw_m_d_u1_m_d_aw_m_d_aw_m_d_a1_nz_aw_m_d_aw_m_d_aw_nz_yw_m_d_aw_m_d_aw_m_dc2_m_d_aw_m_d_aw_m_d_a4_n_t_aw_m_d_aw_m_d_aw_nzgw_m_d_aw_m_d_aw_m_d_u3_m_d_aw_m_d_aw_m_d_a1_n_t_aw_m_d_aw_m_d_aw_n_tcw_m_d_aw_m_d_aw_m_dc2_m_d_aw_m_d_aw_m_d_a3_nj_aw_m_d_aw_m_d_aw_o_d_uw_m_d_aw_m_d_aw_m_dc4_m_d_aw_m_d_aw_m_d_ew_o_d_aw_m_d_aw_m_d_aw_n_t_uw_m_d_aw_m_d_aw_m_d_u3_m_d_aw_m_d_aw_m_d_a3_nj_aw_m_d_aw_m_d_aw_nz_yw_m_d_aw_m_d_aw_m_dg1_m_d_aw_m_d_aw_m_d_a3_o_d_aw_m_d_aw_m_d_ax_m_dgw_m_d_aw_m_d_aw_m_d_u1_m_d_aw_m_d_aw_m_d_a1_nz_aw_m_d_aw_m_d_aw_nz_yw_m_d_aw_m_d_aw_m_dc2_m_d_aw_m_d_aw_m_d_a4_n_t_aw_m_d_aw_m_d_aw_nzgw_m_d_aw_m_d_aw_m_t_e3_m_d_aw_m_d_aw_m_d_a1_n_t_aw_m_d_aw_m_d_aw_n_tcw_m_d_aw_m_d_aw_m_dc2_m_d_aw_m_d_aw_m_d_a3_nj_aw_m_d_aw_m_d_aw_o_d_uw_m_d_aw_m_d_aw_m_dc4_m_d_aw_m_d_aw_m_d_ex_m_d_aw_m_d_aw_m_d_aw_n_t_uw_m_d_aw_m_d_aw_m_d_u3_m_d_aw_m_d_aw_m_d_a3_nj_aw_m_d_aw_m_d_aw_nz_yw_m_d_aw_m_d_aw_m_dg1_m_d_aw_m_d_aw_m_d_a3_o_ghpa_gk=", 203);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3LW51bGw5NzAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNy1udWxsOTcwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzctbnVsbDk3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3LW51bGw5NzAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNy1udWxsOTcwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzctbnVsbDk3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3LW51bGw5NzAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNy1udWxsOTcwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzctbnVsbDk3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3LW51bGw5Nw==" + "'", str3.equals("MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3LW51bGw5NzAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNy1udWxsOTcwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzctbnVsbDk3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3LW51bGw5NzAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNy1udWxsOTcwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzctbnVsbDk3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3LW51bGw5NzAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNy1udWxsOTcwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzctbnVsbDk3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3LW51bGw5Nw=="));
    }

    @Test
    public void test111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test111");
        boolean boolean2 = strman.Strman.isEnclosedBetween("null97nnul1097null971097null97nnulnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullhi00370039006c006c0075006e0068006900680069003700370039006c006c0075006e003900370039006c006c0075006e002d006c00370039006c006c0075006e002d006c00370039006c006c0075006e002d007500370039006c006c0075006e002d006e00370039006c006c0075006e002d0068006900680069hi4848515548485157484854994848549948485553484854101484851554848515548485157484854994848549948485553484854101484851574848515548485157484854994848549948485553484854101484852994848515548485157484854994848549948485553484854101484852994848515548485157484854994848549948485553484854101484853534848515548485157484854994848549948485553484854101484852101484851554848515748485499484854994848555348485410100370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e00000000011010010000000001101000", "203");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test112");
        java.lang.String[] strArray2 = strman.Strman.words("3kdtmV lT hkeS hkeS hkeS hkeS 30", "Null97nnul1097null971097nULL97NNULNullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullhi-hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101");
        org.junit.Assert.assertNotNull(strArray2);
    }

    @Test
    public void test113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test113");
        boolean boolean1 = strman.Strman.isString((java.lang.Object) "0052005700490049004800490049005500490048005600490048005600530055005300530049004900480049004900550049004800560049004800560053005500530053005700530049004900480049004900480049004900550049004800560049004800560053005500530053005700530049004900550049004900480049004900550049004800560049004800560053005500530053005700530049004800560049004900480049004900550049004800560049004800560053005500530053005700530049004800560049004900480049004900550049004800560049004800560053005500530053005300550049004900480049004900550049004800560049004800560053005500530053005300530049004900480049004900550049004800560049004800560053005500530053010401050095010401050048004800480048004800480048004800480049004800480049004800480048004800480048004800480048004800480048004900490048004900480048004900570055009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501100117010801080057005501040105004800480051005500480048005100570048004800540099004800480054009900480048005500530048004800540101004800480051005500480048005100550048004800510057004800480054009900480048005400990048004800550053004800480054010100480048005100570048004800510055004800480051005700480048005400990048004800540099004800480055005300480048005401010048004800520099004800480051005500480048005100570048004800540099004800480054009900480048005500530048004800540101004800480052009900480048005100550048004800510057004800480054009900480048005400990048004800550053004800480054010100480048005300530048004800510055004800480051005700480048005400990048004800540099004800480055005300480048005401010048004800520101004800480051005500480048005100570048004800540099004800480054009900480048005500530048004800540101");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
    }

    @Test
    public void test114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test114");
        boolean boolean3 = strman.Strman.isEnclosedBetween("nULL97", "hihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi_h003000300030003400380030003000300034003800300030003000340038003000300030003400380030003000300034003800300030003000340038003000300030003400380030003000300034003800300030003000340038003000300030003400380030003000300034003900300030003000340039003000300030003400380030003000300034003800300030003000340039003000300030003400390030003000300034003800300030003000340038003000300030003400380030003000300034003800300030003000340038003000300030003400380030003000300034003800300030003000340038003000300030003400380030003000300034003800300030003000340039003000300030003400390030003000300034003800300030003000340039003000300030003400380030003000300034003900300030003100310030003000300031003100370030003000310030003800300030003100300038003000300030003500370030003000300035003500300030003100310030003000300031003100300030003000310031003700300030003100300038hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_null97hi00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006ehi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!==AbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbhi-hinull97nnul", "006e0075006c006c00390037");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test115");
        java.lang.String str3 = strman.Strman.surround("nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnullnullnullnullnull", "", "NzlsbHVuNzc5bGx1bjk3OWxsdW5MNzlsbHVuTDc5bGx1blU3OWxsdW5ONzlsbHVu");
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnullnullnullnullnullNzlsbHVuNzc5bGx1bjk3OWxsdW5MNzlsbHVuTDc5bGx1blU3OWxsdW5ONzlsbHVu" + "'", str3.equals("nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnullnullnullnullnullNzlsbHVuNzc5bGx1bjk3OWxsdW5MNzlsbHVuTDc5bGx1blU3OWxsdW5ONzlsbHVu"));
    }

    @Test
    public void test116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test116");
        boolean boolean3 = strman.Strman.isEnclosedBetween("n
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test117");
        java.lang.String str2 = strman.Strman.removeRight("00049000480004900052000530005600052000560005200051000530005300053000560005200056000520005700057000520005300056000520005600052000570005700052000530005600052000560005200055000530004900053000560005200056000520005300053000490005300056000520005600052000490004800049000500005300056000520005600052000490004800049000520005300056000520005600052000510005300053000530005600052000560005200057000570005200053000560005200056000520005700057000520005300056000520005600052000550005300049000530005600052000560005200053000530004900053000560005200056000520005100053000510005300056000520005600052000490004800049000520005300056000520005600052000510005300053000530005600052000560005200057000570005200053000560005200056000520005700057000520005300056000520005600052000550005300049000530005600052000560005200053000530004900053000560005200056000520005700057000500005300056000520005600052000490004800049000520005300056000520005600052000510005300053000530005600052000560005200057000570005200053000560005200056000520005700057000520005300056000520005600052000550005300049000530005600052000560005200053000530004900053000560005200056000520005700057000500005300056000520005600052000490004800049000520005300056000520005600052000510005300053000530005600052000560005200057000570005200053000560005200056000520005700057000520005300056000520005600052000550005300049000530005600052000560005200053000530004900053000560005200056000520005500053000490005300056000520005600052000490004800049000520005300056000520005600052000510005300053000530005600052000560005200057000570005200053000560005200056000520005700057000520005300056000520005600052000550005300049000530005600052000560005200053000530004900053000560005200056000520005300053000490005300056000520005600052000490004800049000520005300056000520005600052000510005300053000530005600052000560005200057000570005200053000560005200056000520005700057000520005300056000520005600052000550005300049000530005600052000560005200053000530004900053000560005200056000520010500104000450010500104001040004500105001040004500105", "Nnullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037hihiullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull");
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "00049000480004900052000530005600052000560005200051000530005300053000560005200056000520005700057000520005300056000520005600052000570005700052000530005600052000560005200055000530004900053000560005200056000520005300053000490005300056000520005600052000490004800049000500005300056000520005600052000490004800049000520005300056000520005600052000510005300053000530005600052000560005200057000570005200053000560005200056000520005700057000520005300056000520005600052000550005300049000530005600052000560005200053000530004900053000560005200056000520005100053000510005300056000520005600052000490004800049000520005300056000520005600052000510005300053000530005600052000560005200057000570005200053000560005200056000520005700057000520005300056000520005600052000550005300049000530005600052000560005200053000530004900053000560005200056000520005700057000500005300056000520005600052000490004800049000520005300056000520005600052000510005300053000530005600052000560005200057000570005200053000560005200056000520005700057000520005300056000520005600052000550005300049000530005600052000560005200053000530004900053000560005200056000520005700057000500005300056000520005600052000490004800049000520005300056000520005600052000510005300053000530005600052000560005200057000570005200053000560005200056000520005700057000520005300056000520005600052000550005300049000530005600052000560005200053000530004900053000560005200056000520005500053000490005300056000520005600052000490004800049000520005300056000520005600052000510005300053000530005600052000560005200057000570005200053000560005200056000520005700057000520005300056000520005600052000550005300049000530005600052000560005200053000530004900053000560005200056000520005300053000490005300056000520005600052000490004800049000520005300056000520005600052000510005300053000530005600052000560005200057000570005200053000560005200056000520005700057000520005300056000520005600052000550005300049000530005600052000560005200053000530004900053000560005200056000520010500104000450010500104001040004500105001040004500105" + "'", str2.equals("00049000480004900052000530005600052000560005200051000530005300053000560005200056000520005700057000520005300056000520005600052000570005700052000530005600052000560005200055000530004900053000560005200056000520005300053000490005300056000520005600052000490004800049000500005300056000520005600052000490004800049000520005300056000520005600052000510005300053000530005600052000560005200057000570005200053000560005200056000520005700057000520005300056000520005600052000550005300049000530005600052000560005200053000530004900053000560005200056000520005100053000510005300056000520005600052000490004800049000520005300056000520005600052000510005300053000530005600052000560005200057000570005200053000560005200056000520005700057000520005300056000520005600052000550005300049000530005600052000560005200053000530004900053000560005200056000520005700057000500005300056000520005600052000490004800049000520005300056000520005600052000510005300053000530005600052000560005200057000570005200053000560005200056000520005700057000520005300056000520005600052000550005300049000530005600052000560005200053000530004900053000560005200056000520005700057000500005300056000520005600052000490004800049000520005300056000520005600052000510005300053000530005600052000560005200057000570005200053000560005200056000520005700057000520005300056000520005600052000550005300049000530005600052000560005200053000530004900053000560005200056000520005500053000490005300056000520005600052000490004800049000520005300056000520005600052000510005300053000530005600052000560005200057000570005200053000560005200056000520005700057000520005300056000520005600052000550005300049000530005600052000560005200053000530004900053000560005200056000520005300053000490005300056000520005600052000490004800049000520005300056000520005600052000510005300053000530005600052000560005200057000570005200053000560005200056000520005700057000520005300056000520005600052000550005300049000530005600052000560005200053000530004900053000560005200056000520010500104000450010500104001040004500105001040004500105"));
    }

    @Test
    public void test118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test118");
        java.lang.String str1 = strman.Strman.removeSpaces("9ihinullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullh7");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "9ihinullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullh7" + "'", str1.equals("9ihinullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullh7"));
    }

    @Test
    public void test119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test119");
        java.lang.String[] strArray3 = strman.Strman.chars("79llun779llun979llunl_79llunl_79llunu_79llunn_79llun79llun001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000hi!l_u_n_n_79l_l_u_n_lunn_79llun79llun1");
        boolean boolean5 = strman.Strman.containsAll("11", strArray3, true);
        java.util.Optional<java.lang.String> strOptional6 = strman.Strman.trimEnd("", strArray3);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strOptional6);
    }

    @Test
    public void test120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test120");
        java.lang.String[] strArray3 = strman.Strman.split("Null97nnul", "9710");
        java.lang.String str4 = strman.Strman.formatstrArray3);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + strstr4.equals
    }

    @Test
    public void test121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test121");
        java.lang.String str3 = strman.Strman.insert("000000000011011100000000001110010000000001101100000000000110110000000000011101010000000001101110000000000011011100000000001101110000000000111001000000000110110000000000011011000000000001110101000000000110111000000000001110010000000000110111000000000011100100000000011011000000000001101100000000000111010100000000011011100000000001001100000000000011011100000000001110010000000001101100000000000110110000000000011101010000000001101110000000000100110000000000001101110000000000111001000000000110110000000000011011000000000001110101000000000110111000000000010101010000000000110111000000000011100100000000011011000000000001101100000000000111010100000000011011100000000001001110000000000011011100000000001110010000000001101100000000000110110000000000011101010000000001001110", "nULL97NNULhiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiNull97hiNull97nnulhiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiNull97hiNull97nnul", (int) (short) 1);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "0nULL97NNULhiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiNull97hiNull97nnulhiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiNull97hiNull97nnulstr3.equals("0nULL97NNULhiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiNull97hiNull97nnulhiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiNull97hiNull97nnul
    }

    @Test
    public void test122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test122");
        java.lang.String str3 = strman.Strman.truncate("hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hie0055004c004c00390037004e004e0055004c002100690068");
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!0005100107001000011600109000860003200108000840003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083" + "'", str3.equals("hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!0005100107001000011600109000860003200108000840003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083"));
    }

    @Test
    public void test123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test123");
        java.lang.String[] strArray3 = strman.Strman.split("null97_nnull97_unull97_lnull97_lnull979null977null97_null97", "!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih");
        java.lang.String str4 = strman.Strman.prependArray("!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IHH-IHIO1sAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAWadmWadmWadmXedmXadmWadmWadmWadmWetmWedmWedmWadmWadmWadmXatmXatmWadmWadmWadmXedmXadmWadmWadmWadmWetmWedmWedmWadmWadmWatmXatmXedmWadmWadmWadmXetmWedmXadmWadmWadmWetmWetmWadmWadmWadmWatmXatmXadmWadmWadmWadmWetmXadmXadmWadmWadmWatmXatmXedmWadmWadmWatmXatmXedmWadmWadmWadmXedmXetmWadmWadmWadmWetmXatmWedmWadmWadmWatmXatmXadmLLUN;RAbREDNustrArray3);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "null97_nnull97_unull97_lnull97_lnull979null977null97_nullsAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAWadmWadmWadmXedmXadmWadmWadmWadmWetmWedmWedmWadmWadmWadmXatmXatmWadmWadmWadmXedmXadmWadmWadmWadmWetmWedmWedmWadmWadmWatmXatmXedmWadmWadmWadmXetmWedmXadmWadmWadmWetmWetmWadmWadmWadmWatmXatmXadmWadmWadmWadmWetmXadmXadmWadmWadmWatmXatmXedmWadmWadmWatmXatmXedmWadmWadmWadmXedmXetmWadmWadmWadmWetmXatmWedmWadmWadmWatmXatmXadmLLUN;RAbREDNu&LLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUNLLUN" + "'", str4.equals("null97_nnull97_unull97_lnull97_lnull979null977null97_nullsAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAWadmWadmWadmXedmXadmWadmWadmWadmWetmWedmWedmWadmWadmWadmXatmXatmWadmWadmWadmXedmXadmWadmWadmWadmWetmWedmWedmWadmWadmWatmXatmXedmWadmWadmWadmXetmWedmXadmWadmWadmWetmWetmWadmWadmWadmWatmXatmXadmWadmWadmWadmWetmXadmXadmWadmWadmWatmXatmXedmWadmWadmWatmXatmXedmWadmWadmWadmXedmXetmWadmWadmWadmWetmXatmWedmWadmWadmWatmXatmXadmLLUN;RAbREDNu
    }

    @Test
    public void test124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test124");
        java.lang.String str2 = strman.Strman.removeLeft("Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Null97hi 00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e", "Mda2 ztaw nz uw mdzj mda2 yz aw mzkw mdm3nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullMDAxMTAxMTAwMDAwMDAwMDEwMTAxMTEwMDAwMDAwMDAwMTExMDExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDAxMDAxMTEwMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAxMDEwMTExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDEwMDEwMTEwMDAwMDAwMDAwMDAxMDExMDAwMDAwMDAwMTAxMTAxMDAwMDAwMDAwMDEwMDEwMTEwMDAwMDAwMDAwMDAxMDExMDAwMDAwMDAwaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaS1oHi!hi!null97=g2xphwa000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97nnull97unull97lnull97lnull979null977null97hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!00000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100");
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Null97hi 00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e" + "'", str2.equals("Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Null97hi 00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e"));
    }

    @Test
    public void test125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test125");
        java.lang.String str3 = strman.Strman.removeLeft("006e0075006c006c00390037hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!", "77777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777TnVsbDk3Tm51bGw5N1VudWxsOTdMbnVsbDk3TG51bGw5NzludWxsOTc3bnVsbDk3TlVMTDk3", false);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "006e0075006c006c00390037hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!" + "'", str3.equals("006e0075006c006c00390037hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!"));
    }

    @Test
    public void test126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test126");
        java.lang.String str1 = strman.Strman.binEncode("hi!hinullhi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-null97hi\\-00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e");
    }

    @Test
    public void test127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test127");
        boolean boolean3 = strman.Strman.contains("Hi hinull97nnul", "nullnullnullnullnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexcl", false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test128");
        java.lang.String str1 = strman.Strman.dasherize("nULL97NNUL");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "n-u-l-l97-n-n-u-l" + "'", str1.equals("n-u-l-l97-n-n-u-l"));
    }

    @Test
    public void test129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test129");
        java.util.Optional<java.lang.String> strOptional1 = strman.Strman.trimStart("lunN79llunnull97null97Nnull97Unull97Lnull97Lnull979null977null97");
        org.junit.Assert.assertNotNull(strOptional1);
    }

    @Test
    public void test130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test130");
        boolean boolean2 = strman.Strman.contains("Null97nnulih79llun!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test131");
        boolean boolean3 = strman.Strman.endsWith("Hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!null97Nnul", "NULL97", false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test132");
        java.lang.String str1 = strman.Strman.base64Encode
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "" + "'", str1.equals(""));
    }

    @Test
    public void test133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test133");
        java.lang.String str1 = strman.Strman.reverse("1null97null97-nnul-n-u-l-l97-n-n-u-lih");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "hil-u-n-n-79l-l-u-n-lunn-79llun79llun1" + "'", str1.equals("hil-u-n-n-79l-l-u-n-lunn-79llun79llun1"));
    }

    @Test
    public void test134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test134");
        java.lang.String str3 = strman.Strman.ensureRight("003000300030003400380030003000300034003800300030003000340038003000300030003400380030003000300034003800300030003000340038003000300030003400380030003000300034003800300030003000340038003000300030003400380030003000300034003900300030003000340039003000300030003400380030003000300034003800300030003000340039003000300030003400390030003000300034003800300030003000340038003000300030003400380030003000300034003800300030003000340038003000300030003400380030003000300034003800300030003000340038003000300030003400380030003000300034003800300030003000340039003000300030003400390030003000300034003800300030003000340039003000300030003400380030003000300034003900300030003100310030003000300031003100370030003000310030003800300030003100300038003000300030003500370030003000300035003500300030003100310030003000300031003100300030003000310031003700300030003100300038", "hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!1null97null97 nnul n u l l97 n n u l!ih!HI!HI!HI!6", false);
        org.junit.Assert.assertTrue("'" + strhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!1null97null97 nnul n u l l97 n n u l!ih!HI!HI!HI!6" + "'", str3.equalshi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!1null97null97 nnul n u l l97 n n u l!ih!HI!HI!HI!6"));
    }

    @Test
    public void test135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test135");
        java.lang.String str3 = strman.Strman.insert("TnVsbDk3aGloaWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIW51bGw5N2hpIW5udWxsOTdoaWhpaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhbnVsbDk3aGkhdW51bGw5N2hpaGloaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFudWxsOTdoaSFsbnVsbDk3aGloaWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIW51bGw5N2hpIWxudWxsOTc5bnVsbDk3N251bGw5Nw==MDAxMTAxMTAwMDAwMDAwMDEwMTAxMTEwMDAwMDAwMDAwMTExMDExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDAxMDAxMTEwMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAxMDEwMTExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDEwMDEwMTEwMDAwMDAwMDAwMDAxMDExMDAwMDAwMDAwMTAxMTAxMDAwMDAwMDAwMDEwMDEwMTEwMDAwMDAwMDAwMDAxMDExMDAwMDAwMDAwaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaS1o", "sEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhTlVMTDk3000780011700108001080005700055000780011000117001080010800057000550008500110001170010800108000570005500076001100011700108001080005700055000760011000117001080010800057000550005700110001170010800108000570005500055001100011700108001080005700055", (int) '#');
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "TnVsbDk3aGloaWhpIWhpIWhpIWhpIWhpIWhsEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhTlVMTDk3000780011700108001080005700055000780011000117001080010800057000550008500110001170010800108000570005500076001100011700108001080005700055000760011000117001080010800057000550005700110001170010800108000570005500055001100011700108001080005700055pIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIW51bGw5N2hpIW5udWxsOTdoaWhpaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhbnVsbDk3aGkhdW51bGw5N2hpaGloaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFudWxsOTdoaSFsbnVsbDk3aGloaWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIW51bGw5N2hpIWxudWxsOTc5bnVsbDk3N251bGw5Nw==MDAxMTAxMTAwMDAwMDAwMDEwMTAxMTEwMDAwMDAwMDAwMTExMDExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDAxMDAxMTEwMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAxMDEwMTExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDEwMDEwMTEwMDAwMDAwMDAwMDAxMDExMDAwMDAwMDAwMTAxMTAxMDAwMDAwMDAwMDEwMDEwMTEwMDAwMDAwMDAwMDAxMDExMDAwMDAwMDAwaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaS1o" + "'", str3.equals("TnVsbDk3aGloaWhpIWhpIWhpIWhpIWhpIWhsEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhTlVMTDk3000780011700108001080005700055000780011000117001080010800057000550008500110001170010800108000570005500076001100011700108001080005700055000760011000117001080010800057000550005700110001170010800108000570005500055001100011700108001080005700055pIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIW51bGw5N2hpIW5udWxsOTdoaWhpaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhbnVsbDk3aGkhdW51bGw5N2hpaGloaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFudWxsOTdoaSFsbnVsbDk3aGloaWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIW51bGw5N2hpIWxudWxsOTc5bnVsbDk3N251bGw5Nw==MDAxMTAxMTAwMDAwMDAwMDEwMTAxMTEwMDAwMDAwMDAwMTExMDExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDAxMDAxMTEwMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAxMDEwMTExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDEwMDEwMTEwMDAwMDAwMDAwMDAxMDExMDAwMDAwMDAwMTAxMTAxMDAwMDAwMDAwMDEwMDEwMTEwMDAwMDAwMDAwMDAxMDExMDAwMDAwMDAwaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaS1o"));
    }

    @Test
    public void test136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test136");
        java.lang.String str1 = strman.Strman.hexEncode("lunN79llun");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "006c0075006e004e00370039006c006c0075006e" + "'", str1.equals("006c0075006e004e00370039006c006c0075006e"));
    }

    @Test
    public void test137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test137");
        try {
            java.lang.String str3 = strman.Strman.decode("Sgloa Wloa V9oa Glfa Gk0odq4nte1ntq4ndg1mtu3ndg0odu0otk0odq4ntq5otq4ndg1ntuz Ndg0odu0mtax Ndg0odux Ntu0odq4nte1ntq4ndg1mtu3ndg0odu0otk0odq4ntq5otq4ndg1ntuz Ndg0odu0mtax Ndg0odux Ntc0odq4nte1ntq4ndg1mtu3ndg0odu0otk0odq4ntq5otq4ndg1ntuz Ndg0odu0mtax Ndg0oduy Otk0odq4nte1ntq4ndg1mtu3ndg0odu0otk0odq4ntq5otq4ndg1ntuz Ndg0odu0mtax Ndg0oduy Otk0odq4nte1ntq4ndg1mtu3ndg0odu0otk0odq4ntq5otq4ndg1ntuz Ndg0odu0mtax Ndg0oduz Ntm0odq4nte1ntq4ndg1mtu3ndg0odu0otk0odq4ntq5otq4ndg1ntuz Ndg0odu0mtax Ndg0oduy Mtax Ndg0odux Ntu0odq4nte1nz Q4ndg1ndk5ndg0odu0otk0odq4ntu1mz Q4ndg1ndew Mq==hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!000000000100111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000005500000000570000000076000000007600000000850000000078000000005500000000550000000057000000007600000000760000000085000000007800000000570000000055000000005700000000760000000076000000008500000000780000000108000000005500000000570000000076000000007600000000850000000078000000010800000000550000000057000000007600000000760000000085000000007800000001170000000055000000005700000000760000000076000000008500000000780000000110000000005500000000570000000076000000007600000000850000000078hihi", 656, 440);
            org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException; message: radix 440 greater than Character.MAX_RADIX");
        } catch (java.lang.NumberFormatException e) {
        }
    }

    @Test
    public void test138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test138");
        java.lang.String str1 = strman.Strman.dasherize("Hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!null97Nnulnull000780008500076000760005700055001100007800085000760007600057000550011700078000850007600076000570005500108000780008500076000760005700055001080007800085000760007600057000550005700078000850007600076000570005500055000780008500076000760005700055");
    }

    @Test
    public void test139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test139");
        boolean boolean2 = strman.Strman.unequal("0021004800490021004800490021004800490021", "Sgloa Wloa V9oa Glfa Gk0odq4nte1ntq4ndg1mtu3ndg0odu0otk0odq4ntq5otq4ndg1ntuz Ndg0odu0mtax Ndg0odux Ntu0odq4nte1ntq4ndg1mtu3ndg0odu0otk0odq4ntq5otq4ndg1ntuz Ndg0odu0mtax Ndg0odux Ntc0odq4nte1ntq4ndg1mtu3ndg0odu0otk0odq4ntq5otq4ndg1ntuz Ndg0odu0mtax Ndg0oduy Otk0odq4nte1ntq4ndg1mtu3ndg0odu0otk0odq4ntq5otq4ndg1ntuz Ndg0odu0mtax Ndg0oduy Otk0odq4nte1ntq4ndg1mtu3ndg0odu0otk0odq4ntq5otq4ndg1ntuz Ndg0odu0mtax Ndg0oduz Ntm0odq4nte1ntq4ndg1mtu3ndg0odu0otk0odq4ntq5otq4ndg1ntuz Ndg0odu0mtax Ndg0oduy Mtax Ndg0odux Ntu0odq4nte1nz Q4ndg1ndk5ndg0odu0otk0odq4ntu1mz Q4ndg1ndew Mq==");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
    }

    @Test
    public void test140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test140");
        int int1 = strman.Strman.length("001040010500110001170010800108000570005500078001100011700108Hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 560 + "'", int1 == 560);
    }

    @Test
    public void test141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test141");
        java.lang.String str3 = strman.Strman.removeLeft("550007500067000670005800087000550005500075000670006700058000870007500055000750006700067000580008700080100550007500067000670005800087000801005500075000670006700058000870007110055000750006700067000580008700001100550007500067000670005800087000llun", "003000300030003000300030003000300030003100370039004c004c0055004e003700370039004c004c0055004e003900370039004c004c0055004e006c00370039004c004c0055004e006c00370039004c004c0055004e007500370039004c004c0055004e006e00370039004c004c0055004efalse);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "550007500067000670005800087000550005500075000670006700058000870007500055000750006700067000580008700080100550007500067000670005800087000801005500075000670006700058000870007110055000750006700067000580008700001100550007500067000670005800087000llun" + "'", str3.equals("550007500067000670005800087000550005500075000670006700058000870007500055000750006700067000580008700080100550007500067000670005800087000801005500075000670006700058000870007110055000750006700067000580008700001100550007500067000670005800087000llun"));
    }

    @Test
    public void test142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test142");
        boolean boolean1 = strman.Strman.isBlank
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
    }

    @Test
    public void test143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test143");
        boolean boolean2 = strman.Strman.endsWith("sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_tl_vmtdk3", "MDA2ODAwNjkwMDJkMDA2ODAwNjkwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzEwMDM1MDAzNTAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzMTAwMzUwMDM3MDAzNDAwMzgwMDM0MDAzODAwMzUwMDM0MDAzOTAwMzkwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzQwMDM5MDAzOTAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzNTAwMzUwMDMzMDAzNDAwMzgwMDM0MDAzODAwMzUwMDM0MDAzMTAwMzAwMDMxMDAzNDAwMzgwMDM0MDAzODAwMzUwMDMxMDAzNTAwMzUwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzEwMDM1MDAzNTAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzMTAwMzUwMDM3MDAzNDAwMzgwMDM0MDAzODAwMzUwMDM0MDAzOTAwMzkwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzQwMDM5MDAzOTAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzNTAwMzUwMDMzMDAzNDAwMzgwMDM0MDAzODAwMzUwMDM0MDAzMTAwMzAwMDMxMDAzNDAwMzgwMDM0MDAzODAwMzUwMDMxMDAzNTAwMzcwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzEwMDM1MDAzNTAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzMTAwMzUwMDM3MDAzNDAwMzgwMDM0MDAzODAwMzUwMDM0MDAzOTAwMzkwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzQwMDM5MDAzOTAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzNTAwMzUwMDMzMDAzNDAwMzgwMDM0MDAzODAwMzUwMDM0MDAzMTAwMzAwMDMxMDAzNDAwMzgwMDM0MDAzODAwMzUwMDMyMDAzOTAwMzkwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzEwMDM1MDAzNTAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzMTAwMzUwMDM3MDAzNDAwMzgwMDM0MDAzODAwMzUwMDM0MDAzOTAwMzkwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzQwMDM5MDAzOTAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzNTAwMzUwMDMzMDAzNDAwMzgwMDM0MDAzODAwMzUwMDM0MDAzMTAwMzAwMDMxMDAzNDAwMzgwMDM0MDAzODAwMzUwMDMyMDAzOTAwMzkwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzEwMDM1MDAzNTAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzMTAwMzUwMDM3MDAzNDAwMzgwMDM0MDAzODAwMzUwMDM0MDAzOTAwMzkwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzQwMDM5MDAzOTAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzNTAwMzUwMDMzMDAzNDAwMzgwMDM0MDAzODAwMzUwMDM0MDAzMTAwMzAwMDMxMDAzNDAwMzgwMDM0MDAzODAwMzUwMDMzMDAzNTAwMzMwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzEwMDM1MDAzNTAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzMTAwMzUwMDM3MDAzNDAwMzgwMDM0MDAzODAwMzUwMDM0MDAzOTAwMzkwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzQwMDM5MDAzOTAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzNTAwMzUwMDMzMDAzNDAwMzgwMDM0MDAzODAwMzUwMDM0MDAzMTAwMzAwMDMxMDAzNDAwMzgwMDM0MDAzODAwMzUwMDMyMDAzMTAwMzAwMDMxMDAzNDAwMzgwMDM0MDAzODAwMzUwMDMxMDAzNTAwMzUwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzEwMDM1MDAzNzAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzNDAwMzkwMDM5MDAzNDAwMzgwMDM0MDAzODAwMzUwMDM0MDAzOTAwMzkwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzUwMDM1MDAzMzAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzNDAwMzEwMDMwMDAzMTAwMzAwMDMwMDAzMDAwMzAwMDMwMDAzMDAwMzAwMDMwMDAzMDAwMzEwMDMwMDAzMDAwMzEwMDMwMDAzMDAwMzAwMDMwMDAzMDAwMzAwMDMwMDAzMDAwMzAwMDMwMDAzMDAwMzAwMDMxMDAzMTAwMzAwMDMxMDAzMDAwMzAwMDMx");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test144");
        java.lang.String[] strArray1 = strman.Strman.lines("000000hi!hi!97005500hi!hi!97000000hi!hi!97570000hi!hi!97000076hi!hi!97000000hi!hi!97007600hi!hi!97000000hi!hi!97850000hi!hi!97000078hi!hi!97000000hi!hi!97005500hi!hi!97000000hi!hi!97550000hi!hi!97000057hi!hi!97000000hi!hi!97007600hi!hi!97000000hi!hi!97760000hi!hi!97000085hi!hi!97000000hi!hi!97007800hi!hi!97000000hi!hi!97570000hi!hi!97000055hi!hi!97000000hi!hi!97005700hi!hi!97000000hi!hi!97760000hi!hi!97000076hi!hi!97000000hi!hi!97008500hi!hi!97000000hi!hi!97780000hi!hi!97000108hi!hi!97000000hi!hi!97005500hi!hi!97000000hi!hi!97570000hi!hi!97000076hi!hi!97000000hi!hi!97007600hi!hi!97000000hi!hi!97850000hi!hi!97000078hi!hi!97000000hi!hi!97010800hi!hi!97000000hi!hi!97550000hi!hi!97000057hi!hi!97000000hi!hi!97007600hi!hi!97000000hi!hi!97760000hi!hi!97000085hi!hi!97000000hi!hi!97007800hi!hi!97000001hi!hi!97170000hi!hi!97000055hi!hi!97000000hi!hi!97005700hi!hi!97000000hi!hi!97760000hi!hi!97000076hi!hi!97000000hi!hi!97008500hi!hi!97000000hi!hi!97780000hi!hi!97000110hi!hi!97000000hi!hi!97005500hi!hi!97000000hi!hi!97570000hi!hi!97000076hi!hi!97000000hi!hi!97007600hi!hi!97000000hi!hi!97850000hi!hi!97000078");
        org.junit.Assert.assertNotNull(strArray1);
    }

    @Test
    public void test145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test145");
        java.lang.String[] strArray3 = strman.Strman.between("", "110117108108575500000000017900000000011010010000000001101000000000000110100100000000001011010000000001101000NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97l00000000011010010000000001101000000000000110100100000000001011010000000001101000NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97l00000000011010010000000001101000000000000110100100000000001011010000000001101000NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97u00000000011010010000000001101000000000000110100100000000001011010000000001101000NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97n77900000000011010010000000001101000000000000110100100000000001011010000000001101000NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97l00000000011010010000000001101000000000000110100100000000001011010000000001101000NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97l00000000011010010000000001101000000000000110100100000000001011010000000001101000NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97u00000000011010010000000001101000000000000110100100000000001011010000000001101000NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97n97900000000011010010000000001101000000000000110100100000000001011010000000001101000NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97l00000000011010010000000001101000000000000110100100000000001011010000000001101000NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97l00000000011010010000000001101000000000000110100100000000001011010000000001101000NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97u00000000011010010000000001101000000000000110100100000000001011010000000001101000NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97nl7900000000011010010000000001101000000000000110100100000000001011010000000001101000NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97l00000000011010010000000001101000000000000110100100000000001011010000000001101000NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97l00000000011010010000000001101000000000000110100100000000001011010000000001101000NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97u00000000011010010000000001101000000000000110100100000000001011010000000001101000NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97nl7900000000011010010000000001101000000000000110100100000000001011010000000001101000NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97l00000000011010010000000001101000000000000110100100000000001011010000000001101000NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97l00000000011010010000000001101000000000000110100100000000001011010000000001101000NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97u00000000011010010000000001101000000000000110100100000000001011010000000001101000NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97nu7900000000011010010000000001101000000000000110100100000000001011010000000001101000NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97l00000000011010010000000001101000000000000110100100000000001011010000000001101000NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97l00000000011010010000000001101000000000000110100100000000001011010000000001101000NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97u00000000011010010000000001101000000000000110100100000000001011010000000001101000NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97nn7900000000011010010000000001101000000000000110100100000000001011010000000001101000NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97l00000000011010010000000001101000000000000110100100000000001011010000000001101000NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97l00000000011010010000000001101000000000000110100100000000001011010000000001101000NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97u00000000011010010000000001101000000000000110100100000000001011010000000001101000NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97n10100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100", "1null97null97_nnul_n_u_l_l97_n_n_u_l!ih");
        org.junit.Assert.assertNotNull(strArray3);
    }

    @Test
    public void test146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test146");
        java.lang.String str1 = strman.Strman.humanize("00000000001100110000000000110101null97nnul");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "00000000001100110000000000110101null97nnul" + "'", str1.equals("00000000001100110000000000110101null97nnul"));
    }

    @Test
    public void test147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test147");
        java.lang.String str1 = strman.Strman.humanize("nULL97NNULhiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiNull97hiNull97nnulhiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiNull97hiNull97nnul");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "N ull97 nnulhi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi null97hi null97nnulhi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi null97hi null97nnul" + "'", str1.equals("N ull97 nnulhi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi null97hi null97nnulhi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi null97hi null97nnul"));
    }

    @Test
    public void test148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test148");
        int int4 = strman.Strman.indexOf("hihi-n-u-l-l97n-n-u-l-l97u-n-u-l-l97l-n-u-l-l97l-n-u-l-l979-n-u-l-l977-n-u-l-l979710", "79ll040100", 100, false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
    }

    @Test
    public void test149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test149");
        boolean boolean3 = strman.Strman.isEnclosedBetween("61", "hi_hinull97nnul", "10");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test150");
        boolean boolean1 = strman.Strman.isUpperCase("00000000010011010000000001000100000000000100000100000000001100100000000001011010000000000101010000000000010000010000000001110111000000000100111000000000011110100000000001010101000000000111011100000000010011010000000001000100000000000101101000000000011010100000000001001101000000000100010000000000010000010000000000110010000000000101100100000000011110100000000001000001000000000111011100000000010011010000000001111010000000000110101100000000011101110000000001001101000000000100010000000000010011010000000000110011000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97Nnull97Unull97Lnull97Lnull979null977null97Hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!Nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
    }

    @Test
    public void test151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test151");
        java.util.Optional<java.lang.String> strOptional2 = strman.Strman.first("hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!", 7);
        org.junit.Assert.assertNotNull(strOptional2);
    }

    @Test
    public void test152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test152");
        java.util.Optional<java.lang.String> strOptional1 = strman.Strman.tail("48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101nULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULL");
        org.junit.Assert.assertNotNull(strOptional1);
    }

    @Test
    public void test153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test153");
        java.lang.String str1 = strman.Strman.upperFirst("hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!00300030003100310030003000300031003100370030003000310030003800300030003100300038003000300030003500370030003000300035003500300030003000370038003000300031003100300030003000310031003700300030003100300038");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "Hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!00300030003100310030003000300031003100370030003000310030003800300030003100300038003000300030003500370030003000300035003500300030003000370038003000300031003100300030003000310031003700300030003100300038" + "'", str1.equals("Hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!00300030003100310030003000300031003100370030003000310030003800300030003100300038003000300030003500370030003000300035003500300030003000370038003000300031003100300030003000310031003700300030003100300038"));
    }

    @Test
    public void test154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test154");
        java.lang.String[] strArray3 = strman.Strman.words("Null97nnul", "hihi");
        boolean boolean5 = strman.Strman.containsAll("null97Nnul", strArray3, true);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test155");
        java.lang.String[] strArray2 = strman.Strman.chop("Hibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mnull97", 4944);
        org.junit.Assert.assertNotNull(strArray2);
    }

    @Test
    public void test156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test156");
        java.lang.String str1 = strman.Strman.toStudlyCase("10145848435558484994584849945848475158484551584841012584841014584843555848499458484994584847515848455158484353584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484751584841014584843555848499458484994584847515848455158484551584841014584843555848499458484994584847515848455158484ih-ihllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunlunn79llun790179llun7901lunn79llun001");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "10145848435558484994584849945848475158484551584841012584841014584843555848499458484994584847515848455158484353584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484751584841014584843555848499458484994584847515848455158484551584841014584843555848499458484994584847515848455158484ihIhllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunlunn79llun790179llun7901lunn79llun001" + "'", str1.equals("10145848435558484994584849945848475158484551584841012584841014584843555848499458484994584847515848455158484353584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484751584841014584843555848499458484994584847515848455158484551584841014584843555848499458484994584847515848455158484ihIhllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunlunn79llun790179llun7901lunn79llun001"));
    }

    @Test
    public void test157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test157");
        java.lang.String[] strArray4 = strman.Strman.split("0004800048000490004900048000480004800049000490005500048000480004900048000560004800048000490004800056000480004800048000530005500048000480004800053000530004800048000480005500056000480004800049000490004800048000480004900049000550004800048000490004800056", "aWhpX2g
        java.lang.String str5 = strman.Strman.prependllun779llun979llunl79llunl79llunu79llunn79llun79llun779llun979llunl79llunl79llunu79llunn79llun", strArray4);
        java.util.Optional<java.lang.String> strOptional6 = strman.Strman.trimEndstrArray4);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "000480004800049000490004800048000480004900049000550004800048000490004800056000480004800049000480005600048000480004800053000550004800048000480005300053000480004800048000550005600048000480004900049000480004800048000490004900055000480004800049000480005600104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300110001170010800108000570005579llun779llun979llunl79llunl79llunu79llunn79llun79llun779llun979llunl79llunl79llunu79llunn79llun" + "'", str5.equalsllun779llun979llunl79llunl79llunu79llunn79llun79llun779llun979llunl79llunl79llunu79llunn79llun"));
        org.junit.Assert.assertNotNull(strOptional6);
    }

    @Test
    public void test158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test158");
        java.lang.String[] strArray4 = new java.lang.String[] {};
        java.util.List<java.lang.String> strList5 = strman.Strman.zip(strArray4);
        java.lang.String str6 = strman.Strman.format("null97Nnul", strArray4);
        java.lang.String str7 = strman.Strman.format("79llun779llun979llunL79llunL79llunU79llunN79llun", strArray4);
        java.lang.String str8 = strman.Strman.prependArray("nullhi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e", strArray4);
        java.lang.String str9 = strman.Strman.prepend("00390037", strArray4);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "null97Nnul" + "'", str6.equals("null97Nnul"));
        org.junit.Assert.assertTrue("'" + str7 + "' != '" + "79llun779llun979llunL79llunL79llunU79llunN79llun" + "'", str7.equals("79llun779llun979llunL79llunL79llunU79llunN79llun"));
        org.junit.Assert.assertTrue("'" + str8 + "' != '" + "nullhi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e" + "'", str8.equals("nullhi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e"));
        org.junit.Assert.assertTrue("'" + str9 + "' != '" + "00390037" + "'", str9.equals("00390037"));
    }

    @Test
    public void test159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test159");
        java.lang.String[] strArray2 = strman.Strman.split("", "1101171081085755");
        org.junit.Assert.assertNotNull(strArray2);
    }

    @Test
    public void test160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test160");
        java.lang.String str3 = strman.Strman.encode("35", 196, 55);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000510000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000053" + "'", str3.equals("00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000510000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000053"));
    }

    @Test
    public void test161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test161");
        int int2 = strman.Strman.lastIndexOf("1null97null97_nnul_n_u_l_l97_n_n_u_l!ihhI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!", "109700078001170010800108000570005500110001100011700108");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
    }

    @Test
    public void test162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test162");
        java.lang.String str1 = strman.Strman.removeSpaces("Null97Nnull97Unull97Lnull97Lnull979null977null979710");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "Null97Nnull97Unull97Lnull97Lnull979null977null979710" + "'", str1.equals("Null97Nnull97Unull97Lnull97Lnull979null977null979710"));
    }

    @Test
    public void test163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test163");
        java.lang.String[] strArray5 = strman.Strman.split("hi!hi!", "hi!");
        java.lang.String str6 = strman.Strman.format("1", strArray5);
        boolean boolean8 = strman.Strman.containsAny("null97", strArray5, true);
        java.lang.String str9 = strman.Strman.prepend("ihi_hhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97null97nULL97", strArray5);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "1" + "'", str6.equals("1"));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + str9 + "' != '" + "ihi_hhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97null97nULL97" + "'", str9.equals("ihi_hhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97null97nULL97"));
    }

    @Test
    public void test164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test164");
        try {
            java.lang.String str3 = strman.Strman.decode("hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97", (int) (byte) 0, 560);
            org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException; message: radix 560 greater than Character.MAX_RADIX");
        } catch (java.lang.NumberFormatException e) {
        }
    }

    @Test
    public void test165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test165");
        boolean boolean2 = strman.Strman.contains("006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037Null97", "Sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh tl vmtdk3");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test166");
        java.util.Optional<java.lang.String> strOptional1 = strman.Strman.head
        org.junit.Assert.assertNotNull(strOptional1);
    }

    @Test
    public void test167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test167");
        java.lang.String str3 = strman.Strman.rightPad("HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!NULL971null97null97Nnull97Unull97Lnull97Lnull979null977null97", "000720010500033001040010500033nullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLhi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_null97hi00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e", 0);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!NULL971null97null97Nnull97Unull97Lnull97Lnull979null977null97" + "'", str3.equals("HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!NULL971null97null97Nnull97Unull97Lnull97Lnull979null977null97"));
    }

    @Test
    public void test168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test168");
        java.lang.String str1 = strman.Strman.humanize("000720010500092000320010400105000720010500092000320010400105000720010500092000320010400105000720010500092000320010400105000720010500092000320010400105");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "000720010500092000320010400105000720010500092000320010400105000720010500092000320010400105000720010500092000320010400105000720010500092000320010400105" + "'", str1.equals("000720010500092000320010400105000720010500092000320010400105000720010500092000320010400105000720010500092000320010400105000720010500092000320010400105"));
    }

    @Test
    public void test169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test169");
        java.lang.String str1 = strman.Strman.startCase
        org.junit.Assert.assertTrue("'" + strstr1.equals
    }

    @Test
    public void test170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test170");
        try {
            java.lang.String str3 = strman.Strman.decode("006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037Null", 505, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException; message: radix 100 greater than Character.MAX_RADIX");
        } catch (java.lang.NumberFormatException e) {
        }
    }

    @Test
    public void test171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test171");
        java.lang.String[] strArray3 = strman.Strman.chop("hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!", 100);
        try {
            java.util.Optional<java.lang.String> strOptional4 = strman.Strman.trimEnd("4800048000480005500056000480004800049000490004800048000480004900049000550004800048000490004800056", strArray3);
            org.junit.Assert.fail("Expected exception of type java.util.regex.PatternSyntaxException; message: Illegal/unsupported escape sequence near index 102\r\n[hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!h\\i!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi\\!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!\\hi!hi!]+$\r\n                                                                                                      ^");
        } catch (java.util.regex.PatternSyntaxException e) {
        }
        org.junit.Assert.assertNotNull(strArray3);
    }

    @Test
    public void test172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test172");
        java.lang.String str3 = strman.Strman.encode("00000000011010010000000001101000000000000110100100000000001011010000000001101000NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97", 7656, 740);
    }

    @Test
    public void test173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test173");
        int int1 = strman.Strman.length("Hihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihinull97hihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihiNULL97NUllnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullHihihihiNULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL979710g2xphwA000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97Nnull97Unull97Lnull97Lnull979null977null97Hihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihinull97hi
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 7842 + "'", int1 == 7842);
    }

    @Test
    public void test174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test174");
        int int2 = strman.Strman.lastIndexOf("0", "");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
    }

    @Test
    public void test175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test175");
        java.lang.String str1 = strman.Strman.toCamelCase("10145848435558484994584849945848475158484551584841012584841014584843555848499458484994584847515848455158484353584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484751584841014584843555848499458484994584847515848455158484551584841014584843555848499458484994584847515848455158484ihIhhIhI");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "10145848435558484994584849945848475158484551584841012584841014584843555848499458484994584847515848455158484353584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484751584841014584843555848499458484994584847515848455158484551584841014584843555848499458484994584847515848455158484ihIhhIhI" + "'", str1.equals("10145848435558484994584849945848475158484551584841012584841014584843555848499458484994584847515848455158484353584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484751584841014584843555848499458484994584847515848455158484551584841014584843555848499458484994584847515848455158484ihIhhIhI"));
    }

    @Test
    public void test176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test176");
        java.lang.String str3 = strman.Strman.removeRight("MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3TnVsbi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!", false);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3TnVsbA==" + "'", str3.equals("MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3TnVsbA=="));
    }

    @Test
    public void test177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test177");
        boolean boolean1 = strman.Strman.isBlank("Hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!00300030003100310030003000300031003100370030003000310030003800300030003100300038003000300030003500370030003000300035003500300030003000370038003000300031003100300030003000310031003700300030003100300038");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
    }

    @Test
    public void test178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test178");
        java.lang.String str4 = strman.Strman.replace("nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull", "hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_null97hi00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e", "TlVMTDk3", false);
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull" + "'", str4.equals("nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull"));
    }

    @Test
    public void test179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test179");
        boolean boolean2 = strman.Strman.inequal("!IHNULLNULL97nNULL97uNULL97lNULL97lNULL979NULL977NULN_U_L_L97_N_ULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLL97nullhinullhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hiih79llun!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ihhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
    }

    @Test
    public void test180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test180");
        java.lang.String[] strArray4 = strman.Strman.split("Null97hihi", "");
        java.lang.String str5 = strman.Strman.format("hihiihi_hhi_hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101", strArray4);
        boolean boolean6 = strman.Strman.containsAll("0000000000110000000000000011000000000000001100110000000000110000000000000011000000000000001100000000000000110011000000000011000000000000001100000000000000110000000000000011001100000000001100110000000000110000000000000011000000000000001100110000000000110011", strArray4);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "hihiihi_hhi_hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101" + "'", str5.equals("hihiihi_hhi_hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101"));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test181");
        int int4 = strman.Strman.lastIndexOf("aWhpX2hoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFudWxsOTdudWxsOTduVUxMOTc=", "", 7, false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 7 + "'", int4 == 7);
    }

    @Test
    public void test182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test182");
        java.lang.String str4 = strman.Strman.replace("006900680069005f006800680069002dymxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TTAwMDAwMDAwNTUwMDAwMDAwMDU3MDAwMDAwMDA3NjAwMDAwMDAwNzYwMDAwMDAwMDg1MDAwMDAwMDA3ODAwMDAwMDAwNTUwMDAwMDAwMDU1MDAwMDAwMDA1NzAwMDAwMDAwNzYwMDAwMDAwMDc2MDAwMDAwMDA4NTAwMDAwMDAwNzgwMDAwMDAwMDU3MDAwMDAwMDA1NTAwMDAwMDAwNTcwMDAwMDAwMDc2MDAwMDAwMDA3NjAwMDAwMDAwODUwMDAwMDAwMDc4MDAwMDAwMDEwODAwMDAwMDAwNTUwMDAwMDAwMDU3MDAwMDAwMDA3NjAwMDAwMDAwNzYwMDAwMDAwMDg1MDAwMDAwMDA3ODAwMDAwMDAxMDgwMDAwMDAwMDU1MDAwMDAwMDA1NzAwMDAwMDAwNzYwMDAwMDAwMDc2MDAwMDAwMDA4NTAwMDAwMDAwNzgwMDAwMDAwMTE3MDAwMDAwMDA1NTAwMDAwMDAwNTcwMDAwMDAwMDc2MDAwMDAwMDA3NjAwMDAwMDAwODUwMDAwMDAwMDc4MDAwMDAwMDExMDAwMDAwMDAwNTUwMDAwMDAwMDU3MDAwMDAwMDA3NjAwMDAwMDAwNzYwMDAwMDAwMDg1MDAwMDAwMDA3OGhpaGk=", true);
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "006900680069005f006800680069002dstr4.equals("006900680069005f006800680069002d
    }

    @Test
    public void test183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test183");
        boolean boolean4 = strman.Strman.endsWith("nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull&UnderBar;nullMDAxMTAxMTAwMDAwMDAwMDEwMTAxMTEwMDAwMDAwMDAwMTExMDExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDAxMDAxMTEwMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAxMDEwMTExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDEwMDEwMTEwMDAwMDAwMDAwMDAxMDExMDAwMDAwMDAwMTAxMTAxMDAwMDAwMDAwMDEwMDEwMTEwMDAwMDAwMDAwMDAxMDExMDAwMDAwMDAwaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaS1oihi-hhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!00000000001100110000000000110101Ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1nq==", "7210533hi!hi!hi!hi!hi!hi!hi!hi!hi!hn-ullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnulli!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!", (int) (byte) 10, false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test184");
        java.lang.String[] strArray2 = strman.Strman.split("MDAxMTAxMTAwMDAwMDAwMDEwMTAxMTEwMDAwMDAwMDAwMTExMDExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDAxMDAxMTEwMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAxMDEwMTExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDEwMDEwMTEwMDAwMDAwMDAwMDAxMDExMDAwMDAwMDAwMTAxMTAxMDAwMDAwMDAwMDEwMDEwMTEwMDAwMDAwMDAwMDAxMDExMDAwMDAwMDAwaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaS1o", "53");
        org.junit.Assert.assertNotNull(strArray2);
    }

    @Test
    public void test185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test185");
        java.lang.String str2 = strman.Strman.removeLeft("006e0075006c006c00390037", "3kdtm_v_l_t_hke_s_hke_s_hke_s_hke_s_30");
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "006e0075006c006c00390037" + "'", str2.equals("006e0075006c006c00390037"));
    }

    @Test
    public void test186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test186");
        java.lang.String str3 = strman.Strman.encode("79llunhihi779llun979llun L79llun L79llun U79llun N79llun Hihi", (int) '4', 0);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "0000000000000000000000000000000000000000000000000055000000000000000000000000000000000000000000000000005700000000000000000000000000000000000000000000000001080000000000000000000000000000000000000000000000000108000000000000000000000000000000000000000000000000011700000000000000000000000000000000000000000000000001100000000000000000000000000000000000000000000000000104000000000000000000000000000000000000000000000000010500000000000000000000000000000000000000000000000001040000000000000000000000000000000000000000000000000105000000000000000000000000000000000000000000000000005500000000000000000000000000000000000000000000000000550000000000000000000000000000000000000000000000000057000000000000000000000000000000000000000000000000010800000000000000000000000000000000000000000000000001080000000000000000000000000000000000000000000000000117000000000000000000000000000000000000000000000000011000000000000000000000000000000000000000000000000000570000000000000000000000000000000000000000000000000055000000000000000000000000000000000000000000000000005700000000000000000000000000000000000000000000000001080000000000000000000000000000000000000000000000000108000000000000000000000000000000000000000000000000011700000000000000000000000000000000000000000000000001100000000000000000000000000000000000000000000000000032000000000000000000000000000000000000000000000000007600000000000000000000000000000000000000000000000000550000000000000000000000000000000000000000000000000057000000000000000000000000000000000000000000000000010800000000000000000000000000000000000000000000000001080000000000000000000000000000000000000000000000000117000000000000000000000000000000000000000000000000011000000000000000000000000000000000000000000000000000320000000000000000000000000000000000000000000000000076000000000000000000000000000000000000000000000000005500000000000000000000000000000000000000000000000000570000000000000000000000000000000000000000000000000108000000000000000000000000000000000000000000000000010800000000000000000000000000000000000000000000000001170000000000000000000000000000000000000000000000000110000000000000000000000000000000000000000000000000003200000000000000000000000000000000000000000000000000850000000000000000000000000000000000000000000000000055000000000000000000000000000000000000000000000000005700000000000000000000000000000000000000000000000001080000000000000000000000000000000000000000000000000108000000000000000000000000000000000000000000000000011700000000000000000000000000000000000000000000000001100000000000000000000000000000000000000000000000000032000000000000000000000000000000000000000000000000007800000000000000000000000000000000000000000000000000550000000000000000000000000000000000000000000000000057000000000000000000000000000000000000000000000000010800000000000000000000000000000000000000000000000001080000000000000000000000000000000000000000000000000117000000000000000000000000000000000000000000000000011000000000000000000000000000000000000000000000000000320000000000000000000000000000000000000000000000000072000000000000000000000000000000000000000000000000010500000000000000000000000000000000000000000000000001040000000000000000000000000000000000000000000000000105" + "'", str3.equals
    }

    @Test
    public void test187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test187");
        java.lang.String str3 = strman.Strman.truncateull97");
        org.junit.Assert.assertTrue("'" + strull97" + "'", str3.equalsull97"));
    }

    @Test
    public void test188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test188");
        java.lang.String str3 = strman.Strman.ensureLeft("==abs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnb!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!", "35blVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxM000000005500000000570000000076000000007600000000850000000078000000005500000000550000000057000000007600000000760000000085000000007800000000570000000055000000005700000000760000000076000000008500000000780000000108000000005500000000570000000076000000007600000000850000000078000000010800000000550000000057000000007600000000760000000085000000007800000001170000000055000000005700000000760000000076000000008500000000780000000110000000005500000000570000000076000000007600000000850000000078hihi", false);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "35blVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxM000000005500000000570000000076000000007600000000850000000078000000005500000000550000000057000000007600000000760000000085000000007800000000570000000055000000005700000000760000000076000000008500000000780000000108000000005500000000570000000076000000007600000000850000000078000000010800000000550000000057000000007600000000760000000085000000007800000001170000000055000000005700000000760000000076000000008500000000780000000110000000005500000000570000000076000000007600000000850000000078hihi==abs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnb!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!" + "'", str3.equals("35blVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxM000000005500000000570000000076000000007600000000850000000078000000005500000000550000000057000000007600000000760000000085000000007800000000570000000055000000005700000000760000000076000000008500000000780000000108000000005500000000570000000076000000007600000000850000000078000000010800000000550000000057000000007600000000760000000085000000007800000001170000000055000000005700000000760000000076000000008500000000780000000110000000005500000000570000000076000000007600000000850000000078hihi==abs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnb!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!"));
    }

    @Test
    public void test189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test189");
        java.lang.String str3 = strman.Strman.insertih-ihllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunlunn79llun790179llun7901lunn79llun100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001", "", 203);
    }

    @Test
    public void test190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test190");
        java.lang.String str1 = strman.Strman.rightTrim
        org.junit.Assert.assertTrue("'" + strstr1.equals
    }

    @Test
    public void test191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test191");
        java.lang.String str1 = strman.Strman.humanize("");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "" + "'", str1.equals(""));
    }

    @Test
    public void test192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test192");
        java.lang.String str1 = strman.Strman.upperFirst("null
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "Nullstr1.equals("Null
    }

    @Test
    public void test193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test193");
        java.lang.String str1 = strman.Strman.dasherize("001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000ihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi-h");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000ihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi-h" + "'", str1.equals("001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000ihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi-h"));
    }

    @Test
    public void test194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test194");
        java.lang.String[] strArray3 = strman.Strman.chop("ihiH", 1);
        java.lang.String str4 = strman.Strman.appendArray("Null97nhinullhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101nul1097null971097nULL97NNULNullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullhi\\-hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101", strArray3);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Null97nhinullhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101nul1097null971097nULL97NNULNullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullhi\\-hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101ihiH" + "'", str4.equals("Null97nhinullhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101nul1097null971097nULL97NNULNullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullhi\\-hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101ihiH"));
    }

    @Test
    public void test195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test195");
        java.util.Optional<java.lang.String> strOptional1 = strman.Strman.trimStart("5500075000Hihillun10145848435558484994584849945848475158484551584841012584841014584843555848499458484994584847515848455158484353584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484751584841014584843555848499458484994584847515848455158484551584841014584843555848499458484994584847515848455158484ih-ihllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunlunn79llun790179llun7901lunn79llun");
        org.junit.Assert.assertNotNull(strOptional1);
    }

    @Test
    public void test196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test196");
        java.lang.String[] strArray1 = strman.Strman.lines
        java.lang.String str3 = strman.Strman.join(strArray1, "196");
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "110110117108108104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045110117108108057055104105045048048051055048048051057048048054099048048054099048048055053048048054101048048051055048048051055048048051057048048054099048048054099048048055053048048054101048048051057048048051055048048051057048048054099048048054099048048055053048048054101048048052099048048051055048048051057048048054099048048054099048048055053048048054101048048052099048048051055048048051057048048054099048048054099048048055053048048054101048048053053048048051055048048051057048048054099048048054099048048055053048048054101048048052101048048051055048048051057048048054099048048054099048048055053048048054101117110117108108104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045110117108108057055104105045048048051055048048051057048048054099048048054099048048055053048048054101048048051055048048051055048048051057048048054099048048054099048048055053048048054101048048051057048048051055048048051057048048054099048048054099048048055053048048054101048048052099048048051055048048051057048048054099048048054099048048055053048048054101048048052099048048051055048048051057048048054099048048054099048048055053048048054101048048053053048048051055048048051057048048054099048048054099048048055053048048054101048048052101048048051055048048051057048048054099048048054099048048055053048048054101108110117108108104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045110117108108057055104105045048048051055048048051057048048054099048048054099048048055053048048054101048048051055048048051055048048051057048048054099048048054099048048055053048048054101048048051057048048051055048048051057048048054099048048054099048048055053048048054101048048052099048048051055048048051057048048054099048048054099048048055053048048054101048048052099048048051055048048051057048048054099048048054099048048055053048048054101048048053053048048051055048048051057048048054099048048054099048048055053048048054101048048052101048048051055048048051057048048054099048048054099048048055053048048054101108" + "'", str3.equals
    }

    @Test
    public void test197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test197");
        boolean boolean4 = strman.Strman.endsWith("", "hihi-n-u-l-l97n-n-u-l-l97u-n-u-l-l97l-n-u-l-l97l-n-u-l-l979-n-u-l-l977-n-u-l-l979710", 5416, true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test198");
        java.lang.String str1 = strman.Strman.transliterate("hi!hi!null");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "hi!hi!null" + "'", str1.equals("hi!hi!null"));
    }

    @Test
    public void test199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test199");
        java.lang.String str3 = strman.Strman.removeRight("", "hIHIHIHInull97Nnull97Unull97Lnull97Lnull979null977null979710", false);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "" + "'", str3.equals(""));
    }

    @Test
    public void test200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test200");
        java.lang.String str1 = strman.Strman.swapCase("null000780008500076000760005700055001100007800085000760007600057000550011700078000850007600076000570005500108000780008500076000760005700055001080007800085000760007600057000550005700078000850007600076000570005500055000780008500076000760005700055hinullhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hiih79llun!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ihhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "NULL000780008500076000760005700055001100007800085000760007600057000550011700078000850007600076000570005500108000780008500076000760005700055001080007800085000760007600057000550005700078000850007600076000570005500055000780008500076000760005700055HINULLHI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111001000000000!IH79LLUN!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IHHI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101" + "'", str1.equals("NULL000780008500076000760005700055001100007800085000760007600057000550011700078000850007600076000570005500108000780008500076000760005700055001080007800085000760007600057000550005700078000850007600076000570005500055000780008500076000760005700055HINULLHI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111001000000000!IH79LLUN!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IHHI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101"));
    }

    @Test
    public void test201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test201");
        java.lang.String str3 = strman.Strman.ensureRightfalse);
        org.junit.Assert.assertTrue("'" + strstr3.equals
    }

    @Test
    public void test202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test202");
        java.lang.String str1 = strman.Strman.htmlDecodehihi");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "null" + "'", str1.equals("null"));
    }

    @Test
    public void test203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test203");
        java.lang.String[] strArray6 = strman.Strman.words("", "hi!");
        java.lang.String str7 = strman.Strman.format("null", strArray6);
        java.lang.String str8 = strman.Strman.format("", strArray6);
        boolean boolean10 = strman.Strman.containsAny("hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_null97hi00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006ehi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!==AbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnb", strArray6, false);
        java.lang.String str11 = strman.Strman.appendArray("1-", strArray6);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + str7 + "' != '" + "null" + "'", str7.equals("null"));
        org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + str11 + "' != '" + "1-" + "'", str11.equals("1-"));
    }

    @Test
    public void test204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test204");
        java.util.Optional<java.lang.String> strOptional1 = strman.Strman.head("nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull");
        org.junit.Assert.assertNotNull(strOptional1);
    }

    @Test
    public void test205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test205");
        java.lang.String str3 = strman.Strman.surround("hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_null97hi00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006ehi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!==AbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbhi-hinull97nnul", "n_ullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull", "");
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "n_ullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullhi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_null97hi00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006ehi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!==AbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbhi-hinull97nnul" + "'", str3.equals("n_ullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullhi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_null97hi00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006ehi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!==AbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbhi-hinull97nnul"));
    }

    @Test
    public void test206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test206");
        java.lang.String[] strArray3 = strman.Strman.lines("hihi");
        java.lang.String str4 = strman.Strman.prepend("NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL979710", strArray3);
        java.lang.String[] strArray5 = strman.Strman.removeEmptyStrings(strArray3);
        boolean boolean6 = strman.Strman.containsAll("!ihnull", strArray3);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "hihiNULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL979710" + "'", str4.equals("hihiNULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL979710"));
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test207");
        java.lang.String str3 = strman.Strman.ensureRightbnVsbG5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTA==", true);
        org.junit.Assert.assertTrue("'" + strbnVsbG5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTA==" + "'", str3.equalsbnVsbG5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTA=="));
    }

    @Test
    public void test208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test208");
        java.util.Optional<java.lang.String> strOptional2 = strman.Strman.at("10", 7842);
        org.junit.Assert.assertNotNull(strOptional2);
    }

    @Test
    public void test209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test209");
        java.lang.String[] strArray4 = strman.Strman.split("hi!hi!", "hi!");
        java.lang.String str5 = strman.Strman.format("1", strArray4);
        boolean boolean6 = strman.Strman.containsAny("000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000", strArray4);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "1" + "'", str5.equals("1"));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test210");
        java.lang.String str1 = strman.Strman.humanize("n_ullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullhi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_null97hi00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006ehi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!==AbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbhi-hinull97nnul");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "N ullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullhi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi null97hi00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006ehi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!==abs vnbsx wdux gb15 gbs vnbsx wdux gb15 gbs vnbsx wdux gb15 gbs vnbsx wdux gb15 gbs vnbsx wdux gb15 gbs vnbsx wdux gb15 gbs vnbsx wdux gb15 gbs vnbsx wdux gb15 gbs vnbsx wdux gb15 gbs vnbsx wdux gb15 gbs vnbsx wdux gb15 gbs vnbsx wdux gb15 gbs vnbsx wdux gb15 gbs vnbsx wdux gb15 gbs vnbsx wdux gb15 gbs vnbsx wdux gb15 gbs vnbsx wdux gb15 gbs vnbhi hinull97nnul" + "'", str1.equals("N ullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullhi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi null97hi00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006ehi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!==abs vnbsx wdux gb15 gbs vnbsx wdux gb15 gbs vnbsx wdux gb15 gbs vnbsx wdux gb15 gbs vnbsx wdux gb15 gbs vnbsx wdux gb15 gbs vnbsx wdux gb15 gbs vnbsx wdux gb15 gbs vnbsx wdux gb15 gbs vnbsx wdux gb15 gbs vnbsx wdux gb15 gbs vnbsx wdux gb15 gbs vnbsx wdux gb15 gbs vnbsx wdux gb15 gbs vnbsx wdux gb15 gbs vnbsx wdux gb15 gbs vnbsx wdux gb15 gbs vnbhi hinull97nnul"));
    }

    @Test
    public void test211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test211");
        boolean boolean2 = strman.Strman.contains("n-u-l-l97-n-n-u-lhi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-null97nnulhi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-null97nnulHihiihi_hhi_hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101", "00000000001110010000000000110111");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test212");
        int int1 = strman.Strman.length("NULL97N Ullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 199 + "'", int1 == 199);
    }

    @Test
    public void test213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test213");
        java.lang.String str1 = strman.Strman.leftTrim("79llun779llun979llunL79llunL79llunU79llunN79llun79llun001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000ih");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "79llun779llun979llunL79llunL79llunU79llunN79llun79llun001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000ih" + "'", str1.equals("79llun779llun979llunL79llunL79llunU79llunN79llun79llun001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000ih"));
    }

    @Test
    public void test214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test214");
        java.lang.String[] strArray1 = strman.Strman.words("NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL979710");
        org.junit.Assert.assertNotNull(strArray1);
    }

    @Test
    public void test215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test215");
        java.lang.String str1 = strman.Strman.removeNonWords("n_u_l_l97_n_ullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "n_u_l_l97_n_ullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull" + "'", str1.equals("n_u_l_l97_n_ullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull"));
    }

    @Test
    public void test216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test216");
        java.lang.String[] strArray1 = strman.Strman.chars("79LLUN779LLUN979LLUNl79LLUNl79LLUNu79LLUNn79LLUN");
        org.junit.Assert.assertNotNull(strArray1);
    }

    @Test
    public void test217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test217");
        java.lang.String[] strArray2 = strman.Strman.split("hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!", "Hibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mnull9700370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006eIHI97HHI97HI48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101");
        org.junit.Assert.assertNotNull(strArray2);
    }

    @Test
    public void test218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test218");
        java.lang.String str4 = strman.Strman.replacehihi", "006e0075006c006c0039003700390037", "nullnullnullnullnullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnullnullnullnullnull", false);
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "000480004800048000480004900112000480004800048000480004900114000480004800048000480005100105000480004800048000480005100105000480004800048000480005100114000480004800048000480005100107000480004800048000480004900112000480004800048000480004900112000480004800048000480004900114000480004800048000480005100105000480004800048000480005100105000480004800048000480005100114000480004800048000480005100107000480004800048000480004900114000480004800048000480004900112000480004800048000480004900114000480004800048000480005100105000480004800048000480005100105000480004800048000480005100114000480004800048000480005100107000480004800048000480005100105000480004800048000480004900112000480004800048000480004900114000480004800048000480005100105000480004800048000480005100105000480004800048000480005100114000480004800048000480005100107000480004800048000480005100105000480004800048000480004900112000480004800048000480004900114000480004800048000480005100105000480004800048000480005100105000480004800048000480005100114000480004800048000480005100107000480004800048000480005100114000480004800048000480004900112000480004800048000480004900114000480004800048000480005100105000480004800048000480005100105000480004800048000480005100114000480004800048000480005100107000480004800048000480005100107000480004800048000480004900112000480004800048000480004900114000480004800048000480005100105000480004800048000480005100105000480004800048000480005100114000480004800048000480005100107000480004800048000480004900112000480004800048000480004900114000480004800048000480005100105000480004800048000480005100105000480004800048000480005100114000480004800048000480005100107000480004800048000480004900112000480004800048000480004900112000480004800048000480004900114000480004800048000480005100105000480004800048000480005100105000480004800048000480005100114000480004800048000480005100107000480004800048000480004900114000480004800048000480004900112000480004800048000480004900114000480004800048000480005100105000480004800048000480005100105000480004800048000480005100114000480004800048000480005100107000480004800048000480005100105000480004800048000480004900112000480004800048000480004900114000480004800048000480005100105000480004800048000480005100105000480004800048000480005100114000480004800048000480005100107000480004800048000480005100105000480004800048000480004900112000480004800048000480004900114000480004800048000480005100105000480004800048000480005100105000480004800048000480005100114000480004800048000480005100107000480004800048000480005100114000480004800048000480004900112000480004800048000480004900114000480004800048000480005100105000480004800048000480005100105000480004800048000480005100114000480004800048000480005100107000480004800048000480005100107000480004800048000480004900112000480004800048000480004900114000480004800048000480005100105000480004800048000480005100105000480004800048000480005100114000480004800048000480005100107hihi" + "'", str4.equalshihi"));
    }

    @Test
    public void test219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test219");
        java.lang.String[] strArray4 = strman.Strman.between("NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL979710", "MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3", "nullhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!");
        java.lang.String str5 = strman.Strman.appendArray("IHI97HHI97HI48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101n-u-l-l97-n-n-u-lhi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hinULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULL-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-null97nnul-hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!null97-nnul", strArray4);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "IHI97HHI97HI48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101n-u-l-l97-n-n-u-lhi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hinULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULL-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-null97nnul-hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!null97-nnul" + "'", str5.equals("IHI97HHI97HI48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101n-u-l-l97-n-n-u-lhi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hinULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULL-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-null97nnul-hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!null97-nnul"));
    }

    @Test
    public void test220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test220");
        java.lang.String str1 = strman.Strman.escapeRegExp("9ihinullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullh7");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "9ihinullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullh7" + "'", str1.equals("9ihinullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullh7"));
    }

    @Test
    public void test221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test221");
        try {
            java.lang.String str3 = strman.Strman.slice
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -6192");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        }
    }

    @Test
    public void test222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test222");
        java.lang.String str2 = strman.Strman.last("Nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull", (int) '#');
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "ullnullnullnullnullnullnullnullnull" + "'", str2.equals("ullnullnullnullnullnullnullnullnull"));
    }

    @Test
    public void test223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test223");
        boolean boolean2 = strman.Strman.inequal("n00001p00001r00003i00003i00003r00003k00001p00001p00001r00003i00003i00003r00003k00001r00001p00001r00003i00003i00003r00003k00003i00001p00001r00003i00003i00003r00003k00003i00001p00001r00003i00003i00003r00003k00003r00001p00001r00003i00003i00003r00003k00003k00001p00001r00003i00003i00003r00003k00001p00001r00003i00003i00003r00003k00001p00001p00001r00003i00003i00003r00003k00001r00001p00001r00003i00003i00003r00003k00003i00001p00001r00003i00003i00003r00003k00003i00001p00001r00003i00003i00003r00003k00003r00001p00001r00003i00003i00003r00003k00003k00001p00001r00003i00003i00003r00003ku00001p00001r00003i00003i00003r00003k00001p00001p00001r00003i00003i00003r00003k00001r00001p00001r00003i00003i00003r00003k00003i00001p00001r00003i00003i00003r00003k00003i00001p00001r00003i00003i00003r00003k00003r00001p00001r00003i00003i00003r00003k00003k00001p00001r00003i00003i00003r00003k00001p00001r00003i00003i00003r00003k00001p00001p00001r00003i00003i00003r00003k00001r00001p00001r00003i00003i00003r00003k00003i00001p00001r00003i00003i00003r00003k00003i00001p00001r00003i00003i00003r00003k00003r00001p00001r00003i00003i00003r00003k00003k00001p00001r00003i00003i00003r00003kl00001p00001r00003i00003i00003r00003k00001p00001p00001r00003i00003i00003r00003k00001r00001p00001r00003i00003i00003r00003k00003i00001p00001r00003i00003i00003r00003k00003i00001p00001r00003i00003i00003r00003k00003r00001p00001r00003i00003i00003r00003k00003k00001p00001r00003i00003i00003r00003k00001p00001r00003i00003i00003r00003k00001p00001p00001r00003i00003i00003r00003k00001r00001p00001r00003i00003i00003r00003k00003i00001p00001r00003i00003i00003r00003k00003i00001p00001r00003i00003i00003r00003k00003r00001p00001r00003i00003i00003r00003k00003k00001p00001r00003i00003i00003r00003kl", "sEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhTlVMTDk3");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
    }

    @Test
    public void test224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test224");
        boolean boolean3 = strman.Strman.contains("lunN79llunnull97null97Nnull97Unull97Lnull97Lnull979null977null97nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull", "hihi550007500067000670005800087000550005500075000670006700058000870007500055000750006700067000580008700080100550007500067000670005800087000801005500075000670006700058000870007110055000750006700067000580008700001100550007500067000670005800087000llun10145848435558484994584849945848475158484551584841012584841014584843555848499458484994584847515848455158484353584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484751584841014584843555848499458484994584847515848455158484551584841014584843555848499458484994584847515848455158484ih-ihllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunlunn79llun790179llun7901lunn79llun", false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test225");
        java.lang.String str1 = strman.Strman.htmlEncode("nIHI97HHI97HI48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101uIHI97HHI97HI48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101lIHI97HHI97HI48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101l10145848435558484994584849945848475158484551584841012584841014584843555848499458484994584847515848455158484353584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484751584841014584843555848499458484994584847515848455158484551584841014584843555848499458484994584847515848455158484ih-ihh-ih-i");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull" + "'", str1.equals("nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull"));
    }

    @Test
    public void test226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test226");
        java.lang.String str1 = strman.Strman.decEncode("ihi97hhi97hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "0010500104001050005700055001040010400105000570005500104001050005200056000520005600053000490005300053000520005600052000560005300049000530005500052000560005200056000530005200057000570005200056000520005600053000520005700057000520005600052000560005300053000530005100052000560005200056000530005200049000480004900052000560005200056000530004900053000530005200056000520005600053000490005300053000520005600052000560005300049000530005500052000560005200056000530005200057000570005200056000520005600053000520005700057000520005600052000560005300053000530005100052000560005200056000530005200049000480004900052000560005200056000530004900053000550005200056000520005600053000490005300053000520005600052000560005300049000530005500052000560005200056000530005200057000570005200056000520005600053000520005700057000520005600052000560005300053000530005100052000560005200056000530005200049000480004900052000560005200056000530005000057000570005200056000520005600053000490005300053000520005600052000560005300049000530005500052000560005200056000530005200057000570005200056000520005600053000520005700057000520005600052000560005300053000530005100052000560005200056000530005200049000480004900052000560005200056000530005000057000570005200056000520005600053000490005300053000520005600052000560005300049000530005500052000560005200056000530005200057000570005200056000520005600053000520005700057000520005600052000560005300053000530005100052000560005200056000530005200049000480004900052000560005200056000530005100053000510005200056000520005600053000490005300053000520005600052000560005300049000530005500052000560005200056000530005200057000570005200056000520005600053000520005700057000520005600052000560005300053000530005100052000560005200056000530005200049000480004900052000560005200056000530005000049000480004900052000560005200056000530004900053000530005200056000520005600053000490005300055000520005600052000560005300052000570005700052000560005200056000530005200057000570005200056000520005600053000530005300051000520005600052000560005300052000490004800049" + "'", str1.equals("0010500104001050005700055001040010400105000570005500104001050005200056000520005600053000490005300053000520005600052000560005300049000530005500052000560005200056000530005200057000570005200056000520005600053000520005700057000520005600052000560005300053000530005100052000560005200056000530005200049000480004900052000560005200056000530004900053000530005200056000520005600053000490005300053000520005600052000560005300049000530005500052000560005200056000530005200057000570005200056000520005600053000520005700057000520005600052000560005300053000530005100052000560005200056000530005200049000480004900052000560005200056000530004900053000550005200056000520005600053000490005300053000520005600052000560005300049000530005500052000560005200056000530005200057000570005200056000520005600053000520005700057000520005600052000560005300053000530005100052000560005200056000530005200049000480004900052000560005200056000530005000057000570005200056000520005600053000490005300053000520005600052000560005300049000530005500052000560005200056000530005200057000570005200056000520005600053000520005700057000520005600052000560005300053000530005100052000560005200056000530005200049000480004900052000560005200056000530005000057000570005200056000520005600053000490005300053000520005600052000560005300049000530005500052000560005200056000530005200057000570005200056000520005600053000520005700057000520005600052000560005300053000530005100052000560005200056000530005200049000480004900052000560005200056000530005100053000510005200056000520005600053000490005300053000520005600052000560005300049000530005500052000560005200056000530005200057000570005200056000520005600053000520005700057000520005600052000560005300053000530005100052000560005200056000530005200049000480004900052000560005200056000530005000049000480004900052000560005200056000530004900053000530005200056000520005600053000490005300055000520005600052000560005300052000570005700052000560005200056000530005200057000570005200056000520005600053000530005300051000520005600052000560005300052000490004800049"));
    }

    @Test
    public void test227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test227");
        java.lang.String str3 = strman.Strman.leftPad("nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull&UnderBar;nullnullnull", "Nullnull97nnul=g2xphw A000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97nnull97unull97lnull97lnull979null977null97hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hihi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Mw==", 68);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull&UnderBar;nullnullnull" + "'", str3.equals("nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull&UnderBar;nullnullnull"));
    }

    @Test
    public void test228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test228");
        java.lang.String[] strArray3 = strman.Strman.chars("hihiNULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL979710");
        java.lang.String str4 = strman.Strman.prependArray("n-u-l-l97-n-n-u-l", strArray3);
        java.lang.String str5 = strman.Strman.format("Hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!blVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97Nnul", strArray3);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "hihiNULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL979710n-u-l-l97-n-n-u-l" + "'", str4.equals("hihiNULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL979710n-u-l-l97-n-n-u-l"));
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "Hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!blVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97Nnul" + "'", str5.equals("Hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!blVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97Nnul"));
    }

    @Test
    public void test229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test229");
        java.lang.String str1 = strman.Strman.startCase("006c0075006e004e00370039006c006c0075006e");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "006c0075006e004e00370039006c006c0075006e" + "'", str1.equals("006c0075006e004e00370039006c006c0075006e"));
    }

    @Test
    public void test230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test230");
        java.lang.String str1 = strman.Strman.collapseWhitespace("hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_null97hi00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006ehi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!==AbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnb");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_null97hi00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006ehi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!==AbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnb" + "'", str1.equals("hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_null97hi00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006ehi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!==AbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnb"));
    }

    @Test
    public void test231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test231");
        boolean boolean2 = strman.Strman.contains("Null97Nnull97Unull97Lnull97Lnull979null977null97", "00300030003000370032003000300031003000350030003000310030003400300030003100300035003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003100300030003000310031003700300030003100300038003000300031003000380030003000300035003700300030003000350035003000300031003000340030003000310030003500300030003000330033");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test232");
        java.lang.String str1 = strman.Strman.underscored("000000hi!hi!97005500hi!hi!97000000hi!hi!97570000hi!hi!97000076hi!hi!97000000hi!hi!97007600hi!hi!97000000hi!hi!97850000hi!hi!97000078hi!hi!97000000hi!hi!97005500hi!hi!97000000hi!hi!97550000hi!hi!97000057hi!hi!97000000hi!hi!97007600hi!hi!97000000hi!hi!97760000hi!hi!97000085hi!hi!97000000hi!hi!97007800hi!hi!97000000hi!hi!97570000hi!hi!97000055hi!hi!97000000hi!hi!97005700hi!hi!97000000hi!hi!97760000hi!hi!97000076hi!hi!97000000hi!hi!97008500hi!hi!97000000hi!hi!97780000hi!hi!97000108hi!hi!97000000hi!hi!97005500hi!hi!97000000hi!hi!97570000hi!hi!97000076hi!hi!97000000hi!hi!97007600hi!hi!97000000hi!hi!97850000hi!hi!97000078hi!hi!97000000hi!hi!97010800hi!hi!97000000hi!hi!97550000hi!hi!97000057hi!hi!97000000hi!hi!97007600hi!hi!97000000hi!hi!97760000hi!hi!97000085hi!hi!97000000hi!hi!97007800hi!hi!97000001hi!hi!97170000hi!hi!97000055hi!hi!97000000hi!hi!97005700hi!hi!97000000hi!hi!97760000hi!hi!97000076hi!hi!97000000hi!hi!97008500hi!hi!97000000hi!hi!97780000hi!hi!97000110hi!hi!97000000hi!hi!97005500hi!hi!97000000hi!hi!97570000hi!hi!97000076hi!hi!97000000hi!hi!97007600hi!hi!97000000hi!hi!97850000hi!hi!97000078");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "000000hi!hi!97005500hi!hi!97000000hi!hi!97570000hi!hi!97000076hi!hi!97000000hi!hi!97007600hi!hi!97000000hi!hi!97850000hi!hi!97000078hi!hi!97000000hi!hi!97005500hi!hi!97000000hi!hi!97550000hi!hi!97000057hi!hi!97000000hi!hi!97007600hi!hi!97000000hi!hi!97760000hi!hi!97000085hi!hi!97000000hi!hi!97007800hi!hi!97000000hi!hi!97570000hi!hi!97000055hi!hi!97000000hi!hi!97005700hi!hi!97000000hi!hi!97760000hi!hi!97000076hi!hi!97000000hi!hi!97008500hi!hi!97000000hi!hi!97780000hi!hi!97000108hi!hi!97000000hi!hi!97005500hi!hi!97000000hi!hi!97570000hi!hi!97000076hi!hi!97000000hi!hi!97007600hi!hi!97000000hi!hi!97850000hi!hi!97000078hi!hi!97000000hi!hi!97010800hi!hi!97000000hi!hi!97550000hi!hi!97000057hi!hi!97000000hi!hi!97007600hi!hi!97000000hi!hi!97760000hi!hi!97000085hi!hi!97000000hi!hi!97007800hi!hi!97000001hi!hi!97170000hi!hi!97000055hi!hi!97000000hi!hi!97005700hi!hi!97000000hi!hi!97760000hi!hi!97000076hi!hi!97000000hi!hi!97008500hi!hi!97000000hi!hi!97780000hi!hi!97000110hi!hi!97000000hi!hi!97005500hi!hi!97000000hi!hi!97570000hi!hi!97000076hi!hi!97000000hi!hi!97007600hi!hi!97000000hi!hi!97850000hi!hi!97000078" + "'", str1.equals("000000hi!hi!97005500hi!hi!97000000hi!hi!97570000hi!hi!97000076hi!hi!97000000hi!hi!97007600hi!hi!97000000hi!hi!97850000hi!hi!97000078hi!hi!97000000hi!hi!97005500hi!hi!97000000hi!hi!97550000hi!hi!97000057hi!hi!97000000hi!hi!97007600hi!hi!97000000hi!hi!97760000hi!hi!97000085hi!hi!97000000hi!hi!97007800hi!hi!97000000hi!hi!97570000hi!hi!97000055hi!hi!97000000hi!hi!97005700hi!hi!97000000hi!hi!97760000hi!hi!97000076hi!hi!97000000hi!hi!97008500hi!hi!97000000hi!hi!97780000hi!hi!97000108hi!hi!97000000hi!hi!97005500hi!hi!97000000hi!hi!97570000hi!hi!97000076hi!hi!97000000hi!hi!97007600hi!hi!97000000hi!hi!97850000hi!hi!97000078hi!hi!97000000hi!hi!97010800hi!hi!97000000hi!hi!97550000hi!hi!97000057hi!hi!97000000hi!hi!97007600hi!hi!97000000hi!hi!97760000hi!hi!97000085hi!hi!97000000hi!hi!97007800hi!hi!97000001hi!hi!97170000hi!hi!97000055hi!hi!97000000hi!hi!97005700hi!hi!97000000hi!hi!97760000hi!hi!97000076hi!hi!97000000hi!hi!97008500hi!hi!97000000hi!hi!97780000hi!hi!97000110hi!hi!97000000hi!hi!97005500hi!hi!97000000hi!hi!97570000hi!hi!97000076hi!hi!97000000hi!hi!97007600hi!hi!97000000hi!hi!97850000hi!hi!97000078"));
    }

    @Test
    public void test233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test233");
        boolean boolean3 = strman.Strman.isEnclosedBetween("mw_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_null97hi_null97nnul", "nULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULL", "64");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test234");
        java.lang.String[] strArray3 = strman.Strman.words("006e0075006c006c00390037hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!", "000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97Nnull97Unull97Lnull97Lnull979null977null97");
        java.util.List<java.lang.String> strList4 = strman.Strman.zip(strArray3);
        java.lang.String[] strArray5 = strman.Strman.removeEmptyStrings(strArray3);
        java.util.Optional<java.lang.String> strOptional6 = strman.Strman.trimStart("hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-null97nnul", strArray3);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(strList4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strOptional6);
    }

    @Test
    public void test235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test235");
        java.lang.String str1 = strman.Strman.decEncode("ihi H");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "0010500104001050003200072" + "'", str1.equals("0010500104001050003200072"));
    }

    @Test
    public void test236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test236");
        java.lang.String str1 = strman.Strman.binEncode("0005100051000550005000055000510005100051000550005000055000510005100051000550005000055000510005100051");
        org.junit.Assert.assertTrue("'" + strstr1.equals
    }

    @Test
    public void test237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test237");
        java.lang.String str1 = strman.Strman.upperFirst("79LLUN779LLUN979LLUNl79LLUNl79LLUNu79LLUNn79LLUN79LLUN779LLUN979LLUNl79LLUNl79LLUNu79LLUNn79LLUN1101171081085755Null97Nnull97Unull97Lnull97Lnull979null977null97");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "79LLUN779LLUN979LLUNl79LLUNl79LLUNu79LLUNn79LLUN79LLUN779LLUN979LLUNl79LLUNl79LLUNu79LLUNn79LLUN1101171081085755Null97Nnull97Unull97Lnull97Lnull979null977null97" + "'", str1.equals("79LLUN779LLUN979LLUNl79LLUNl79LLUNu79LLUNn79LLUN79LLUN779LLUN979LLUNl79LLUNl79LLUNu79LLUNn79LLUN1101171081085755Null97Nnull97Unull97Lnull97Lnull979null977null97"));
    }

    @Test
    public void test238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test238");
        java.lang.String str1 = strman.Strman.collapseWhitespace("!ih");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "!ih" + "'", str1.equals("!ih"));
    }

    @Test
    public void test239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test239");
        java.lang.String str2 = strman.Strman.ensureRight("591089912010138108108117110108108117110591089912010138108108117110108108117110", "nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull");
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "591089912010138108108117110108108117110591089912010138108108117110108108117110nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull" + "'", str2.equals("591089912010138108108117110108108117110591089912010138108108117110108108117110nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull"));
    }

    @Test
    public void test240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test240");
        java.lang.String str1 = strman.Strman.dasherize("MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA0ZTAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwNTUwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDRjMDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA0YzAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwMzkwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111001000000000-ih79llun-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "m-d-a2-z-t-aw-nz-uw-m-d-zj-m-d-a2-yz-aw-mzkw-m-d-m3-m-d-a0-z-t-aw-nm-uw-m-dc1-m-d-a2-yz-aw-nm-mw-m-d-m5-m-d-az-nz-aw-n-t-uw-m-d-zl-m-d-a3-n-t-aw-nm-mw-m-d-zj-m-d-az-o-t-aw-mzcw-m-d-rj-m-d-a2-z-t-aw-nz-uw-m-d-zj-m-d-a2-yz-aw-mzkw-m-d-m3-m-d-a0-yz-aw-nm-uw-m-dc1-m-d-a2-yz-aw-nm-mw-m-d-m5-m-d-az-nz-aw-mzkw-m-d-zl-m-d-a3-n-t-aw-nm-mw-m-d-zj-m-d-az-o-t-aw-mzcw-m-d-m3-m-d-a2-z-t-aw-nz-uw-m-d-zj-m-d-a2-yz-aw-mzkw-m-d-mih79llun-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih" + "'", str1.equals("m-d-a2-z-t-aw-nz-uw-m-d-zj-m-d-a2-yz-aw-mzkw-m-d-m3-m-d-a0-z-t-aw-nm-uw-m-dc1-m-d-a2-yz-aw-nm-mw-m-d-m5-m-d-az-nz-aw-n-t-uw-m-d-zl-m-d-a3-n-t-aw-nm-mw-m-d-zj-m-d-az-o-t-aw-mzcw-m-d-rj-m-d-a2-z-t-aw-nz-uw-m-d-zj-m-d-a2-yz-aw-mzkw-m-d-m3-m-d-a0-yz-aw-nm-uw-m-dc1-m-d-a2-yz-aw-nm-mw-m-d-m5-m-d-az-nz-aw-mzkw-m-d-zl-m-d-a3-n-t-aw-nm-mw-m-d-zj-m-d-az-o-t-aw-mzcw-m-d-m3-m-d-a2-z-t-aw-nz-uw-m-d-zj-m-d-a2-yz-aw-mzkw-m-d-mih79llun-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih"));
    }

    @Test
    public void test241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test241");
        int int4 = strman.Strman.lastIndexOf("Nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull", "77686550908465119781228511977689010677686550891226511977122107119776877514848485556484849495548484948564848494856484848535548484853534848494948484849494848484949554848494856484848484848484848494948494848484848484848484848484949484948484948484848484848484848494849494849484848484848484848494948494848484848484848484848484949484948484948484848484848484849494849494948484848484848484848494949484948494848484848484848484949484949484848484848484848484849494849494848484848484848484848484949494848494848484848484848484849494849494948484848484848484849494849494948484848484848484848494948494949484848484848484848484949494849484948484848484848484849494849494848110117108108575511011710810857557811011710810857558511011710810857557611011710810857557611011710810857555711011710810857555511011710810857557210510410510410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533110117108108575510410533", 298, true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
    }

    @Test
    public void test242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test242");
        java.util.Optional<java.lang.String> strOptional1 = strman.Strman.tail("00110000850007600076000570005500078000780008500076006e0075006c006c00390037004e006e0075006c006c003900370055006e0075006c006c00390037004c006e0075006c006c00390037004c006e0075006c006c003900370039006e0075006c006c003900370037006e0075006c006c00390037");
        org.junit.Assert.assertNotNull(strOptional1);
    }

    @Test
    public void test243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test243");
        java.lang.String str1 = strman.Strman.underscored("MDAxMTAxMTAwMDAwMDAwMDEwMTAxMTEwMDAwMDAwMDAwMTExMDExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDAxMDAxMTEwMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAxMDEwMTExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDEwMDEwMTEwMDAwMDAwMDAwMDAxMDExMDAwMDAwMDAwMTAxMTAxMDAwMDAwMDAwMDEwMDEwMTEwMDAwMDAwMDAwMDAxMDExMDAwMDAwMDAwaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaS1ohihi");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "mdax_mtax_mtaw_mdaw_mdaw_mdew_mtax_mtew_mdaw_mdaw_mdaw_mtex_mdex_mdaw_mdaw_mdaw_mdex_mtax_mtaw_mdaw_mdaw_mdex_mtax_mtaw_mdaw_mdaw_mdax_mdax_mtew_mdaw_mdaw_mdaw_mdax_mtax_mtaw_mdaw_mdaw_mdaw_mtew_mtew_mdaw_mdaw_mdax_mdew_mtex_mdaw_mdaw_mdaw_mdex_mtax_mtaw_mdaw_mdaw_mdew_mdew_mtew_mdaw_mdaw_mdaw_mdax_mdex_mdaw_mdaw_mdaw_mtax_mtax_mdaw_mdaw_mdaw_mdew_mdew_mtew_mdaw_mdaw_mdaw_mdax_mdex_mdaw_mdaw_mdawa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_s1ohihi" + "'", str1.equals("mdax_mtax_mtaw_mdaw_mdaw_mdew_mtax_mtew_mdaw_mdaw_mdaw_mtex_mdex_mdaw_mdaw_mdaw_mdex_mtax_mtaw_mdaw_mdaw_mdex_mtax_mtaw_mdaw_mdaw_mdax_mdax_mtew_mdaw_mdaw_mdaw_mdax_mtax_mtaw_mdaw_mdaw_mdaw_mtew_mtew_mdaw_mdaw_mdax_mdew_mtex_mdaw_mdaw_mdaw_mdex_mtax_mtaw_mdaw_mdaw_mdew_mdew_mtew_mdaw_mdaw_mdaw_mdax_mdex_mdaw_mdaw_mdaw_mtax_mtax_mdaw_mdaw_mdaw_mdew_mdew_mtew_mdaw_mdaw_mdaw_mdax_mdex_mdaw_mdaw_mdawa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_s1ohihi"));
    }

    @Test
    public void test244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test244");
        java.lang.String[] strArray3 = strman.Strman.chop("hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!", 100);
        boolean boolean5 = strman.Strman.containsAllih79llun!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ihstrArray3, true);
        java.lang.String[] strArray6 = strman.Strman.removeEmptyStrings(strArray3);
        java.lang.String[] strArray7 = strman.Strman.removeEmptyStrings(strArray3);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strArray7);
    }

    @Test
    public void test245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test245");
        java.lang.String str3 = strman.Strman.removeRight("hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hihi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi", "HihiNULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL979710Nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull97Nnull97Unull97Lnull97Lnull979null977null97null97", false);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hihi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi" + "'", str3.equals("hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hihi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi"));
    }

    @Test
    public void test246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test246");
        java.lang.String str3 = strman.Strman.ensureLeft("0005100107001000011600109000860003200108000840003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083", "0010400105", true);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "00104001050005100107001000011600109000860003200108000840003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083" + "'", str3.equals("00104001050005100107001000011600109000860003200108000840003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083"));
    }

    @Test
    public void test247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test247");
        java.lang.String str1 = strman.Strman.formatNumber((long) 240);
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "240" + "'", str1.equals("240"));
    }

    @Test
    public void test248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test248");
        java.lang.String str1 = strman.Strman.toCamelCase("n-u-l-l97hihi");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "nULL97hihi" + "'", str1.equals("nULL97hihi"));
    }

    @Test
    public void test249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test249");
        java.lang.String[] strArray5 = strman.Strman.words("000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97_nnull97_unull97_lnull97_lnull979null977null97", "48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101");
        java.lang.String str6 = strman.Strman.append("1null97null97_nnul_n_u_l_l97_n_n_u_l!ih", strArray5);
        java.util.List<java.lang.String> strList7 = strman.Strman.zip(strArray5);
        java.lang.String str8 = strman.Strman.format("nullhi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-null97hi\\-00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e", strArray5);
        java.lang.String str9 = strman.Strman.append("hihi000720010500033001040010500033nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull1097nullstrArray5);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "1null97null97_nnul_n_u_l_l97_n_n_u_l!ih000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97_nnull97_unull97_lnull97_lnull979null977null97" + "'", str6.equals("1null97null97_nnul_n_u_l_l97_n_n_u_l!ih000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97_nnull97_unull97_lnull97_lnull979null977null97"));
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertTrue("'" + str8 + "' != '" + "nullhi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-null97hi\\-00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e" + "'", str8.equals("nullhi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-null97hi\\-00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e"));
        org.junit.Assert.assertTrue("'" + str9 + "' != '" + "" + "'", str9.equals(""));
    }

    @Test
    public void test250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test250");
        java.lang.String str1 = strman.Strman.collapseWhitespace("001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001100011700108001080005700055HiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiNull97hiNull97nnul");
        org.junit.Assert.assertTrue("'" + striHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiNull97hiNull97nnul" + "'", str1.equalsiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiNull97hiNull97nnul"));
    }

    @Test
    public void test251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test251");
        boolean boolean2 = strman.Strman.unequalmda2_ztaw_nz_uw_mdzj_mda2_yz_aw_mzkw_mdm3_mda0_ztaw_nm_uw_mdc1_mda2_yz_aw_nm_mw_mdm5_mdaz_nz_aw_ntuw_mdzl_mda3_ntaw_nm_mw_mdzj_mdaz_otaw_mzcw_mdrj_mda2_ztaw_nz_uw_mdzj_mda2_yz_aw_mzkw_mdm3_mda0_yz_aw_nm_uw_mdc1_mda2_yz_aw_nm_mw_mdm5_mdaz_nz_aw_mzkw_mdzl_mda3_ntaw_nm_mw_mdzj_mdaz_otaw_mzcw_mdm3_mda2_ztaw_nz_uw_mdzj_mda2_yz_aw_mzkw_mdmih79llun_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_mw==hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!null97_nnulnull000780008500076000760005700055001100007800085000760007600057000550011700078000850007600076000570005500108000780008500076000760005700055001080007800085000760007600057000550005700078000850007600076000570005500055000780008500076000760005700055_null97n_null97u_null97l_null97l_null979_null977_null979710");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
    }

    @Test
    public void test252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test252");
        java.lang.String[] strArray3 = strman.Strman.chop("ihiH", 1);
        java.lang.Class<?> wildcardClass4 = strArray3.getClass();
        java.util.List<java.lang.String> strList5 = strman.Strman.zip(strArray3);
        java.lang.String[] strArray6 = strman.Strman.removeEmptyStrings(strArray3);
        java.lang.String str7 = strman.Strman.format("72734572735256525653495353525652565349535552565256535257575256525653525757525652565353535152565256535249484952565256534953535256525653495353525652565349535552565256535257575256525653525757525652565353535152565256535249484952565256534953555256525653495353525652565349535552565256535257575256525653525757525652565353535152565256535249484952565256535057575256525653495353525652565349535552565256535257575256525653525757525652565353535152565256535249484952565256535057575256525653495353525652565349535552565256535257575256525653525757525652565353535152565256535249484952565256535153515256525653495353525652565349535552565256535257575256525653525757525652565353535152565256535249484952565256535049484952565256534953535256525653495355525652565352575752565256535257575256525653535351525652565352494849", strArray6);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + strstr7.equals("72734572735256525653495353525652565349535552565256535257575256525653525757525652565353535152565256535249484952565256534953535256525653495353525652565349535552565256535257575256525653525757525652565353535152565256535249484952565256534953555256525653495353525652565349535552565256535257575256525653525757525652565353535152565256535249484952565256535057575256525653495353525652565349535552565256535257575256525653525757525652565353535152565256535249484952565256535057575256525653495353525652565349535552565256535257575256525653525757525652565353535152565256535249484952565256535153515256525653495353525652565349535552565256535257575256525653525757525652565353535152565256535249484952565256535049484952565256534953535256525653495355525652565352575752565256535257575256525653535351525652565352494849"));
    }

    @Test
    public void test253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test253");
        java.lang.String str1 = strman.Strman.humanize
        org.junit.Assert.assertTrue("'" + strstr1.equals
    }

    @Test
    public void test254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test254");
        java.util.Optional<java.lang.String> strOptional1 = strman.Strman.tail("HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!0033");
        org.junit.Assert.assertNotNull(strOptional1);
    }

    @Test
    public void test255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test255");
        java.lang.String str3 = strman.Strman.encode("00104001050005100107001000011600109000860003200108000840003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083", (-1), (int) (short) 1);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "4848494852484849485348484853494848494855484849484848484949544848494857484848565448484851504848494856484848565248484851504848494852484849485548484948494848485651484848515048484948524848494855484849484948484856514848485150484849485248484948554848494849484848565148484851504848494852484849485548484948494848485651484848515048484948524848494855484849484948484856514848485150484849485248484948554848494849484848565148484851504848494852484849485548484948494848485651484848515048484948524848494855484849484948484856514848485150484849485248484948554848494849484848565148484851504848494852484849485548484948494848485651484848515048484948524848494855484849484948484856514848485150484849485248484948554848494849484848565148484851504848494852484849485548484948494848485651484848515048484948524848494855484849484948484856514848485150484849485248484948554848494849484848565148484851504848494852484849485548484948494848485651484848515048484948524848494855484849484948484856514848485150484849485248484948554848494849484848565148484851504848494852484849485548484948494848485651484848515048484948524848494855484849484948484856514848485150484849485248484948554848494849484848565148484851504848494852484849485548484948494848485651484848515048484948524848494855484849484948484856514848485150484849485248484948554848494849484848565148484851504848494852484849485548484948494848485651484848515048484948524848494855484849484948484856514848485150484849485248484948554848494849484848565148484851504848494852484849485548484948494848485651484848515048484948524848494855484849484948484856514848485150484849485248484948554848494849484848565148484851504848494852484849485548484948494848485651484848515048484948524848494855484849484948484856514848485150484849485248484948554848494849484848565148484851504848494852484849485548484948494848485651484848515048484948524848494855484849484948484856514848485150484849485248484948554848494849484848565148484851504848494852484849485548484948494848485651484848515048484948524848494855484849484948484856514848485150484849485248484948554848494849484848565148484851504848494852484849485548484948494848485651484848515048484948524848494855484849484948484856514848485150484849485248484948554848494849484848565148484851504848494852484849485548484948494848485651484848515048484948524848494855484849484948484856514848485150484849485248484948554848494849484848565148484851504848494852484849485548484948494848485651484848515048484948524848494855484849484948484856514848485150484849485248484948554848494849484848565148484851504848494852484849485548484948494848485651484848515048484948524848494855484849484948484856514848485150484849485248484948554848494849484848565148484851504848494852484849485548484948494848485651484848515048484948524848494855484849484948484856514848485150484849485248484948554848494849484848565148484851504848494852484849485548484948494848485651484848515048484948524848494855484849484948484856514848485150484849485248484948554848494849484848565148484851504848494852484849485548484948494848485651484848515048484948524848494855484849484948484856514848485150484849485248484948554848494849484848565148484851504848494852484849485548484948494848485651484848515048484948524848494855484849484948484856514848485150484849485248484948554848494849484848565148484851504848494852484849485548484948494848485651484848515048484948524848494855484849484948484856514848485150484849485248484948554848494849484848565148484851504848494852484849485548484948494848485651484848515048484948524848494855484849484948484856514848485150484849485248484948554848494849484848565148484851504848494852484849485548484948494848485651484848515048484948524848494855484849484948484856514848485150484849485248484948554848494849484848565148484851504848494852484849485548484948494848485651484848515048484948524848494855484849484948484856514848485150484849485248484948554848494849484848565148484851504848494852484849485548484948494848485651484848515048484948524848494855484849484948484856514848485150484849485248484948554848494849484848565148484851504848494852484849485548484948494848485651484848515048484948524848494855484849484948484856514848485150484849485248484948554848494849484848565148484851504848494852484849485548484948494848485651484848515048484948524848494855484849484948484856514848485150484849485248484948554848494849484848565148484851504848494852484849485548484948494848485651484848515048484948524848494855484849484948484856514848485150484849485248484948554848494849484848565148484851504848494852484849485548484948494848485651484848515048484948524848494855484849484948484856514848485150484849485248484948554848494849484848565148484851504848494852484849485548484948494848485651484848515048484948524848494855484849484948484856514848485150484849485248484948554848494849484848565148484851504848494852484849485548484948494848485651484848515048484948524848494855484849484948484856514848485150484849485248484948554848494849484848565148484851504848494852484849485548484948494848485651484848515048484948524848494855484849484948484856514848485150484849485248484948554848494849484848565148484851504848494852484849485548484948494848485651" + "'", str3.equals("4848494852484849485348484853494848494855484849484848484949544848494857484848565448484851504848494856484848565248484851504848494852484849485548484948494848485651484848515048484948524848494855484849484948484856514848485150484849485248484948554848494849484848565148484851504848494852484849485548484948494848485651484848515048484948524848494855484849484948484856514848485150484849485248484948554848494849484848565148484851504848494852484849485548484948494848485651484848515048484948524848494855484849484948484856514848485150484849485248484948554848494849484848565148484851504848494852484849485548484948494848485651484848515048484948524848494855484849484948484856514848485150484849485248484948554848494849484848565148484851504848494852484849485548484948494848485651484848515048484948524848494855484849484948484856514848485150484849485248484948554848494849484848565148484851504848494852484849485548484948494848485651484848515048484948524848494855484849484948484856514848485150484849485248484948554848494849484848565148484851504848494852484849485548484948494848485651484848515048484948524848494855484849484948484856514848485150484849485248484948554848494849484848565148484851504848494852484849485548484948494848485651484848515048484948524848494855484849484948484856514848485150484849485248484948554848494849484848565148484851504848494852484849485548484948494848485651484848515048484948524848494855484849484948484856514848485150484849485248484948554848494849484848565148484851504848494852484849485548484948494848485651484848515048484948524848494855484849484948484856514848485150484849485248484948554848494849484848565148484851504848494852484849485548484948494848485651484848515048484948524848494855484849484948484856514848485150484849485248484948554848494849484848565148484851504848494852484849485548484948494848485651484848515048484948524848494855484849484948484856514848485150484849485248484948554848494849484848565148484851504848494852484849485548484948494848485651484848515048484948524848494855484849484948484856514848485150484849485248484948554848494849484848565148484851504848494852484849485548484948494848485651484848515048484948524848494855484849484948484856514848485150484849485248484948554848494849484848565148484851504848494852484849485548484948494848485651484848515048484948524848494855484849484948484856514848485150484849485248484948554848494849484848565148484851504848494852484849485548484948494848485651484848515048484948524848494855484849484948484856514848485150484849485248484948554848494849484848565148484851504848494852484849485548484948494848485651484848515048484948524848494855484849484948484856514848485150484849485248484948554848494849484848565148484851504848494852484849485548484948494848485651484848515048484948524848494855484849484948484856514848485150484849485248484948554848494849484848565148484851504848494852484849485548484948494848485651484848515048484948524848494855484849484948484856514848485150484849485248484948554848494849484848565148484851504848494852484849485548484948494848485651484848515048484948524848494855484849484948484856514848485150484849485248484948554848494849484848565148484851504848494852484849485548484948494848485651484848515048484948524848494855484849484948484856514848485150484849485248484948554848494849484848565148484851504848494852484849485548484948494848485651484848515048484948524848494855484849484948484856514848485150484849485248484948554848494849484848565148484851504848494852484849485548484948494848485651484848515048484948524848494855484849484948484856514848485150484849485248484948554848494849484848565148484851504848494852484849485548484948494848485651484848515048484948524848494855484849484948484856514848485150484849485248484948554848494849484848565148484851504848494852484849485548484948494848485651484848515048484948524848494855484849484948484856514848485150484849485248484948554848494849484848565148484851504848494852484849485548484948494848485651484848515048484948524848494855484849484948484856514848485150484849485248484948554848494849484848565148484851504848494852484849485548484948494848485651484848515048484948524848494855484849484948484856514848485150484849485248484948554848494849484848565148484851504848494852484849485548484948494848485651484848515048484948524848494855484849484948484856514848485150484849485248484948554848494849484848565148484851504848494852484849485548484948494848485651484848515048484948524848494855484849484948484856514848485150484849485248484948554848494849484848565148484851504848494852484849485548484948494848485651484848515048484948524848494855484849484948484856514848485150484849485248484948554848494849484848565148484851504848494852484849485548484948494848485651484848515048484948524848494855484849484948484856514848485150484849485248484948554848494849484848565148484851504848494852484849485548484948494848485651484848515048484948524848494855484849484948484856514848485150484849485248484948554848494849484848565148484851504848494852484849485548484948494848485651484848515048484948524848494855484849484948484856514848485150484849485248484948554848494849484848565148484851504848494852484849485548484948494848485651"));
    }

    @Test
    public void test256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test256");
        java.lang.String[] strArray5 = strman.Strman.words("", "null");
        boolean boolean7 = strman.Strman.containsAny("1", strArray5, true);
        boolean boolean9 = strman.Strman.containsAny("97", strArray5, true);
        boolean boolean11 = strman.Strman.containsAny("hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!35blvmte5vtexovuxmtlvmte5vtexovuxmtlvmte5vtexovuxmtlvmte5vtexovuxmtlvmte5vtexovuxmtlvmte5vtexovuxmtlvmte5vtexovuxmtlvmte5vtexovuxmtlvmte5vtexovuxmtlvmte5vtexovuxmtlvmte5vtexovuxmtlvmte5vtexovuxmtlvmte5vtexovuxmtlvmte5vtexovuxmtlvmte5vtexovuxmtlvmte5vtexovuxm000000005500000000570000000076000000007600000000850000000078000000005500000000550000000057000000007600000000760000000085000000007800000000570000000055000000005700000000760000000076000000008500000000780000000108000000005500000000570000000076000000007600000000850000000078000000010800000000550000000057000000007600000000760000000085000000007800000001170000000055000000005700000000760000000076000000008500000000780000000110000000005500000000570000000076000000007600000000850000000078hihi", strArray5, false);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test257");
        java.lang.String str1 = strman.Strman.base64Encode
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDMwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAzMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMzAxMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDMwMTAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAzMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMzAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDMwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAzMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMzIwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDMxMTAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAzMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMzAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDMwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAzMTMwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMzEyMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDMwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAzMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMzAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDMxMzAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAzMTIwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMzAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDMwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAzMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMzExMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDMxMzAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAzMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMzAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDMwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAzMTEwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMzExMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDMwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAzMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMzAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDMxMzAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAzMjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMzAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDMwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAzMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMzEzMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDMyMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAzMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMzAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDMwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAzMjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMzExMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDMwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAzMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMzAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDMxMzAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAzMTI=" + "'", str1.equals("MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDMwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAzMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMzAxMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDMwMTAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAzMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMzAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDMwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAzMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMzIwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDMxMTAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAzMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMzAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDMwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAzMTMwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMzEyMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDMwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAzMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMzAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDMxMzAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAzMTIwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMzAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDMwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAzMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMzExMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDMxMzAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAzMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMzAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDMwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAzMTEwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMzExMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDMwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAzMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMzAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDMxMzAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAzMjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMzAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDMwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAzMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMzEzMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDMyMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAzMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMzAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDMwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAzMjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMzExMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDMwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAzMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMzAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDMxMzAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAzMTI="));
    }

    @Test
    public void test258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test258");
        java.lang.String[] strArray2 = strman.Strman.lines("6");
        java.util.Optional<java.lang.String> strOptional3 = strman.Strman.trimStartstrArray2);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(strOptional3);
    }

    @Test
    public void test259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test259");
        java.lang.String str3 = strman.Strman.surround("", "1", "1-7210533hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!");
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "11-7210533hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!" + "'", str3.equals("11-7210533hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!"));
    }

    @Test
    public void test260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test260");
        java.lang.String str1 = strman.Strman.toSnakeCase
        org.junit.Assert.assertTrue("'" + strstr1.equals(""));
    }

    @Test
    public void test261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test261");
        java.util.Optional<java.lang.String> strOptional1 = strman.Strman.head("hi000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97Nnull97Unull97Lnull97Lnull979null977null97");
        org.junit.Assert.assertNotNull(strOptional1);
    }

    @Test
    public void test262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test262");
        java.lang.String str1 = strman.Strman.decEncode("Nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull");
        org.junit.Assert.assertTrue("'" + strstr1.equals
    }

    @Test
    public void test263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test263");
        java.lang.String str1 = strman.Strman.removeNonWords("NULL971null97null97Nnull97Unull97Lnull97Lnull979null977null97Mw==nULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL979710");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "NULL971null97null97Nnull97Unull97Lnull97Lnull979null977null97MwnULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL979710" + "'", str1.equals("NULL971null97null97Nnull97Unull97Lnull97Lnull979null977null97MwnULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL979710"));
    }

    @Test
    public void test264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test264");
        java.lang.String[] strArray3 = strman.Strman.chars("null");
        java.lang.String str4 = strman.Strman.format("null97nnul", strArray3);
        java.lang.String[] strArray5 = strman.Strman.removeEmptyStrings(strArray3);
        boolean boolean6 = strman.Strman.containsAllstrArray3);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "null97nnul" + "'", str4.equals("null97nnul"));
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test265");
        try {
            java.lang.String str3 = strman.Strman.decode("hi-hi0000000001001000000000000110100197-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e", (int) (short) 100, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException; message: radix 0 less than Character.MIN_RADIX");
        } catch (java.lang.NumberFormatException e) {
        }
    }

    @Test
    public void test266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test266");
        java.lang.String[] strArray3 = strman.Strman.split("00110000850007600076000570005500078000780008500076006e0075006c006c00390037004e006e0075006c006c003900370055006e0075006c006c00390037004c006e0075006c006c00390037004c006e0075006c006c003900370039006e0075006c006c003900370037006e0075006c006c00390037", "hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e");
        java.lang.String str4 = strman.Strman.prependArray("hi-hi0000000001001000000000000110100197-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e", strArray3);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "00110000850007600076000570005500078000780008500076006e0075006c006c00390037004e006e0075006c006c003900370055006e0075006c006c00390037004c006e0075006c006c00390037004c006e0075006c006c003900370039006e0075006c006c003900370037006e0075006c006c00390037hi-hi0000000001001000000000000110100197-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e" + "'", str4.equals("00110000850007600076000570005500078000780008500076006e0075006c006c00390037004e006e0075006c006c003900370055006e0075006c006c00390037004c006e0075006c006c00390037004c006e0075006c006c003900370039006e0075006c006c003900370037006e0075006c006c00390037hi-hi0000000001001000000000000110100197-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e"));
    }

    @Test
    public void test267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test267");
        java.lang.String str3 = strman.Strman.safeTruncateint) '#', "4911011710810857551101171081085755781101171087885767657557878857633105104");
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "4911011710810857551101171081085755781101171087885767657557878857633105104" + "'", str3.equals("4911011710810857551101171081085755781101171087885767657557878857633105104"));
    }

    @Test
    public void test268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test268");
        java.lang.String[] strArray4 = strman.Strman.split("Null97hihi", "");
        java.lang.String str5 = strman.Strman.format("hihiihi_hhi_hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101", strArray4);
        java.lang.String str6 = strman.Strman.append("", strArray4);
        java.lang.String str8 = strman.Strman.join(strArray4, "n_ullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullhi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_null97hi00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006ehi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!==AbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbhi-hinull97nnul");
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "hihiihi_hhi_hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101" + "'", str5.equals("hihiihi_hhi_hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101"));
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Null97hihi" + "'", str6.equals("Null97hihi"));
    }

    @Test
    public void test269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test269");
        java.lang.String str4 = strman.Strman.replace("79llu_n73009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60079llu_n73009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60079llu_n73009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60079llu_n73009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60079llu_n73009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60079llu_n73009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60079llu_n73009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60079llu_n73009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60079llu_n73009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60079llu_n73009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e600_hihi_i_h_i_h_h_i_h_i48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101", "00072001050010400105", "48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101Ihi_hhi-hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull", true);
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "79llu_n73009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60079llu_n73009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60079llu_n73009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60079llu_n73009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60079llu_n73009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60079llu_n73009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60079llu_n73009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60079llu_n73009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60079llu_n73009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60079llu_n73009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e600_hihi_i_h_i_h_h_i_h_i48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101" + "'", str4.equals("79llu_n73009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60079llu_n73009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60079llu_n73009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60079llu_n73009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60079llu_n73009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60079llu_n73009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60079llu_n73009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60079llu_n73009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60079llu_n73009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60079llu_n73009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e600_hihi_i_h_i_h_h_i_h_i48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101"));
    }

    @Test
    public void test270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test270");
        java.lang.String str2 = strman.Strman.last("109700078001170010800108000570005500110001100011700108", (int) ' ');
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "08000570005500110001100011700108" + "'", str2.equals("08000570005500110001100011700108"));
    }

    @Test
    public void test271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test271");
        java.util.Optional<java.lang.String> strOptional2 = strman.Strman.at("bXctaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktbnVsbDk3aGktbnVsbDk3bm51bA==", 656);
        org.junit.Assert.assertNotNull(strOptional2);
    }

    @Test
    public void test272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test272");
        java.lang.String str1 = strman.Strman.humanize("00000000001100110000000000110101");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "00000000001100110000000000110101" + "'", str1.equals("00000000001100110000000000110101"));
    }

    @Test
    public void test273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test273");
        java.lang.String str1 = strman.Strman.dasherize("1null97null97_nnull97_unull97_lnull97_lnull979null977null97");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "1null97null97-nnull97-unull97-lnull97-lnull979null977null97" + "'", str1.equals("1null97null97-nnull97-unull97-lnull97-lnull979null977null97"));
    }

    @Test
    public void test274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test274");
        java.lang.String str1 = strman.Strman.removeSpaces("HI_HI");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "HI_HI" + "'", str1.equals("HI_HI"));
    }

    @Test
    public void test275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test275");
        java.lang.String str1 = strman.Strman.upperFirst("006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037Null97006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037Null97006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037Null97006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037Null97006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037Null97006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037Null97006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037Null97006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037Null97006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037Null97006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037Null97");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037Null97006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037Null97006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037Null97006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037Null97006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037Null97006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037Null97006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037Null97006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037Null97006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037Null97006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037Null97" + "'", str1.equals("006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037Null97006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037Null97006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037Null97006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037Null97006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037Null97006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037Null97006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037Null97006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037Null97006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037Null97006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037Null97"));
    }

    @Test
    public void test276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test276");
        java.lang.String str3 = strman.Strman.truncate("1lunn79llun", 7656, "");
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "1lunn79llun" + "'", str3.equals("1lunn79llun"));
    }

    @Test
    public void test277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test277");
        java.lang.String[] strArray3 = strman.Strman.between("HiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiNull97hiNull97nnul", "!HI!HI!HI!6null", "000000000011000000000000001100000000000000110011000000000011100100000000001100000000000000110000000000000011001100000000001101110000000000110000000000000011000000000000001100010000000000110000000000000011010000000000001100000000000000110000000000000011000100000000001100000000000000110101");
        org.junit.Assert.assertNotNull(strArray3);
    }

    @Test
    public void test278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test278");
        java.lang.String[] strArray3 = strman.Strman.between("nullnull&excl;nullnull&excl;", "-1", "Hi!hi!hi!hi!NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL979710");
        java.lang.String[] strArray4 = strman.Strman.removeEmptyStrings(strArray3);
        boolean boolean5 = strman.Strman.isString((java.lang.Object) strArray3);
        java.lang.String str7 = strman.Strman.join(strArray3, "0009800108000570004900088000500012000102000980006800107000510008800050000530010200100000870012000115000980011000086001150009800071000530004900098000710012000117001000008700120001150009800110000860011500098000710005300049000980007100120001170010000087001200011500098001100008600115000980007100053000490009800071001200011700100000870012000115000980011000086001150009800071000530004900098000710012000117001000008700120001150009800110000860011500098000710005300049000980007100120001170010000087001200011500098001100008600115000980007100053000490009800071001200011700100000870012000115000980011000086001150009800071000530004900098000710012000117001000008700120001150009800110000860011500098000710005300049000980007100120001170010000087001200011500098001100008600115000980007100053000490009800071001200011700100000870012000115000980011000086001150009800071000530004900098000710012000117001000008700120001150009800110000860011500098000710005300049000980007100120001170010000087001200011500098001100008600115000980007100053000490009800071001200011700100000870012000115000980011000086001150009800071000530004900098000710012000117001000008700120001150009800110000860011500098000710005300049000980007100120001170010000087001200011500098001100008600115000980007100053000490009800071001200011700100000870012000115000980011000086001150009800071000530004900098000710012000117000760008800085001160009800067000490011500079000840009900116000980010500049001170007600088000850011600098000650006100061");
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + str7 + "' != '" + "" + "'", str7.equals(""));
    }

    @Test
    public void test279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test279");
        java.lang.String str2 = strman.Strman.removeRightf006800690030003000300030003000300030003000300031003000300031003000300030003000300030003000300030003000300030003100310030003100300030003100390037005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f006e0075006c006cnULL97HIHIHI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!NULL97HI!NNULL97HIHIHI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!NULL97HI!UNULL97HIHIHI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!NULL97HI!LNULL97HIHIHI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!NULL97HI!LNULL979NULL977NULL97");
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "003400390031003100300031003100370031003000380031003000380035003700350035003100310030003100310037003100300038003100300038003500370035003500390035003100310030003100310030003100310037003100300038003100300038003500370035003500390035003100310037003100310030003100310037003100300038003100300038003500370035003500390035003100300038003100310030003100310037003100300038003100300038003500370035003500390035003100300038003100310030003100310037003100300038003100300038003500370035003500350037003100310030003100310037003100300038003100300038003500370035003500350035003100310030003100310037003100300038003100300038003500370035003500680069005f006800690030003000300030003000300030003000300031003000300031003000300030003000300030003000300030003000300030003100310030003100300030003100390037005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f006e0075006c006c0039003700680069003000300033003700300030003300390030003000360063003000300036006300300030003700350030003000360065003000300033003700300030003300370030003000330039003000300036006300300030003600630030003000370035003000300036006500300030003300390030003000330037003000300033003900300030003600630030003000360063003000300037003500300030003600650030003000340063003000300033003700300030003300390030003000360063003000300036006300300030003700350030003000360065003000300034006300300030003300370030003000330039003000300036006300300030003600630030003000370035003000300036006500300030003500350030003000330037003000300033003900300030003600630030003000360063003000300037003500300030003600650030003000340065003000300033003700300030003300390030003000360063003000300036006300300030003700350030003000360065" + "'", str2.equals("003400390031003100300031003100370031003000380031003000380035003700350035003100310030003100310037003100300038003100300038003500370035003500390035003100310030003100310030003100310037003100300038003100300038003500370035003500390035003100310037003100310030003100310037003100300038003100300038003500370035003500390035003100300038003100310030003100310037003100300038003100300038003500370035003500390035003100300038003100310030003100310037003100300038003100300038003500370035003500350037003100310030003100310037003100300038003100300038003500370035003500350035003100310030003100310037003100300038003100300038003500370035003500680069005f006800690030003000300030003000300030003000300031003000300031003000300030003000300030003000300030003000300030003100310030003100300030003100390037005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f006e0075006c006c0039003700680069003000300033003700300030003300390030003000360063003000300036006300300030003700350030003000360065003000300033003700300030003300370030003000330039003000300036006300300030003600630030003000370035003000300036006500300030003300390030003000330037003000300033003900300030003600630030003000360063003000300037003500300030003600650030003000340063003000300033003700300030003300390030003000360063003000300036006300300030003700350030003000360065003000300034006300300030003300370030003000330039003000300036006300300030003600630030003000370035003000300036006500300030003500350030003000330037003000300033003900300030003600630030003000360063003000300037003500300030003600650030003000340065003000300033003700300030003300390030003000360063003000300036006300300030003700350030003000360065"));
    }

    @Test
    public void test280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test280");
        java.lang.String str4 = strman.Strman.replace("000000005500000000570000000076000000007600000000850000000078000000005500000000550000000057000000007600000000760000000085000000007800000000570000000055000000005700000000760000000076000000008500000000780000000108000000005500000000570000000076000000007600000000850000000078000000010800000000550000000057000000007600000000760000000085000000007800000001170000000055000000005700000000760000000076000000008500000000780000000110000000005500000000570000000076000000007600000000850000000078hihiymx_w_t_v_r_f_n_v_z_u_r_xh_p_vl_v4_t_v_rs_vk1_u_r_t_v_w_v_e_v4_t1_z_ve_e1_ub_f_z_n_v_e_u1_vl_r_fe_e9_w_v_xh_n_v_gx_w_t_v_r_f_n_v_z_u_r_xh_p_vl_v4_t_v_rs_vk1_u_r_t_v_w_v_e_v4_t1_z_ve_e1_ub_f_z_n_v_e_u1_vl_r_fe_e9_w_v_xh_n_v_gx_w_t_v_r_f_n_v_z_u_r_xh_p_vl_v4_t_v_rs_vk1_u_r_t_v_w_v_e_v4_t1_z_ve_e1_ub_f_z_n_v_e_u1_vl_r_fe_e9_w_v_xh_n_v_gx_w_t_v_r_f_n_v_z_u_r_xh_p_vl_v4_t_v_rs_vk1_u_r_t_v_w_v_e_v4_t1_z_ve_e1_ub_f_z_n_v_e_u1_vl_r_fe_e9_w_v_xh_n_v_gx_w_t_v_r_f_n_v_z_u_r_xh_p_vl_v4_t_v_rs_vk1_u_r_t_v_w_v_e_v4_t1_z_ve_e1_ub_f_z_n_v_e_u1_vl_r_fe_e9_w_v_xh_n_v_gx_w_t_v_r_f_n_v_z_u_r_xh_p_vl_v4_t_t_aw_m_d_aw_m_d_aw_n_t_uw_m_d_aw_m_d_aw_m_d_u3_m_d_aw_m_d_aw_m_d_a3_nj_aw_m_d_aw_m_d_aw_nz_yw_m_d_aw_m_d_aw_m_dg1_m_d_aw_m_d_aw_m_d_a3_o_d_aw_m_d_aw_m_d_aw_n_t_uw_m_d_aw_m_d_aw_m_d_u1_m_d_aw_m_d_aw_m_d_a1_nz_aw_m_d_aw_m_d_aw_nz_yw_m_d_aw_m_d_aw_m_dc2_m_d_aw_m_d_aw_m_d_a4_n_t_aw_m_d_aw_m_d_aw_nzgw_m_d_aw_m_d_aw_m_d_u3_m_d_aw_m_d_aw_m_d_a1_n_t_aw_m_d_aw_m_d_aw_n_tcw_m_d_aw_m_d_aw_m_dc2_m_d_aw_m_d_aw_m_d_a3_nj_aw_m_d_aw_m_d_aw_o_d_uw_m_d_aw_m_d_aw_m_dc4_m_d_aw_m_d_aw_m_d_ew_o_d_aw_m_d_aw_m_d_aw_n_t_uw_m_d_aw_m_d_aw_m_d_u3_m_d_aw_m_d_aw_m_d_a3_nj_aw_m_d_aw_m_d_aw_nz_yw_m_d_aw_m_d_aw_m_dg1_m_d_aw_m_d_aw_m_d_a3_o_d_aw_m_d_aw_m_d_ax_m_dgw_m_d_aw_m_d_aw_m_d_u1_m_d_aw_m_d_aw_m_d_a1_nz_aw_m_d_aw_m_d_aw_nz_yw_m_d_aw_m_d_aw_m_dc2_m_d_aw_m_d_aw_m_d_a4_n_t_aw_m_d_aw_m_d_aw_nzgw_m_d_aw_m_d_aw_m_t_e3_m_d_aw_m_d_aw_m_d_a1_n_t_aw_m_d_aw_m_d_aw_n_tcw_m_d_aw_m_d_aw_m_dc2_m_d_aw_m_d_aw_m_d_a3_nj_aw_m_d_aw_m_d_aw_o_d_uw_m_d_aw_m_d_aw_m_dc4_m_d_aw_m_d_aw_m_d_ex_m_d_aw_m_d_aw_m_d_aw_n_t_uw_m_d_aw_m_d_aw_m_d_u3_m_d_aw_m_d_aw_m_d_a3_nj_aw_m_d_aw_m_d_aw_nz_yw_m_d_aw_m_d_aw_m_dg1_m_d_aw_m_d_aw_m_d_a3_o_ghpa_gk=", "Hihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihinull97hihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihiNULL97NUllnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullHihihihiNULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL979710g2xphwA000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97Nnull97Unull97Lnull97Lnull979null977null97Hihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihinull97hi00000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100", "mda2006e0075006c006c00390037ztaw006e0075006c006c00390037nz006e0075006c006c00390037uw006e0075006c006c00390037mdzj006e0075006c006c00390037mda2006e0075006c006c00390037yz006e0075006c006c00390037aw006e0075006c006c00390037mzkw006e0075006c006c00390037mdm3", false);
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "000000005500000000570000000076000000007600000000850000000078000000005500000000550000000057000000007600000000760000000085000000007800000000570000000055000000005700000000760000000076000000008500000000780000000108000000005500000000570000000076000000007600000000850000000078000000010800000000550000000057000000007600000000760000000085000000007800000001170000000055000000005700000000760000000076000000008500000000780000000110000000005500000000570000000076000000007600000000850000000078hihiymx_w_t_v_r_f_n_v_z_u_r_xh_p_vl_v4_t_v_rs_vk1_u_r_t_v_w_v_e_v4_t1_z_ve_e1_ub_f_z_n_v_e_u1_vl_r_fe_e9_w_v_xh_n_v_gx_w_t_v_r_f_n_v_z_u_r_xh_p_vl_v4_t_v_rs_vk1_u_r_t_v_w_v_e_v4_t1_z_ve_e1_ub_f_z_n_v_e_u1_vl_r_fe_e9_w_v_xh_n_v_gx_w_t_v_r_f_n_v_z_u_r_xh_p_vl_v4_t_v_rs_vk1_u_r_t_v_w_v_e_v4_t1_z_ve_e1_ub_f_z_n_v_e_u1_vl_r_fe_e9_w_v_xh_n_v_gx_w_t_v_r_f_n_v_z_u_r_xh_p_vl_v4_t_v_rs_vk1_u_r_t_v_w_v_e_v4_t1_z_ve_e1_ub_f_z_n_v_e_u1_vl_r_fe_e9_w_v_xh_n_v_gx_w_t_v_r_f_n_v_z_u_r_xh_p_vl_v4_t_v_rs_vk1_u_r_t_v_w_v_e_v4_t1_z_ve_e1_ub_f_z_n_v_e_u1_vl_r_fe_e9_w_v_xh_n_v_gx_w_t_v_r_f_n_v_z_u_r_xh_p_vl_v4_t_t_aw_m_d_aw_m_d_aw_n_t_uw_m_d_aw_m_d_aw_m_d_u3_m_d_aw_m_d_aw_m_d_a3_nj_aw_m_d_aw_m_d_aw_nz_yw_m_d_aw_m_d_aw_m_dg1_m_d_aw_m_d_aw_m_d_a3_o_d_aw_m_d_aw_m_d_aw_n_t_uw_m_d_aw_m_d_aw_m_d_u1_m_d_aw_m_d_aw_m_d_a1_nz_aw_m_d_aw_m_d_aw_nz_yw_m_d_aw_m_d_aw_m_dc2_m_d_aw_m_d_aw_m_d_a4_n_t_aw_m_d_aw_m_d_aw_nzgw_m_d_aw_m_d_aw_m_d_u3_m_d_aw_m_d_aw_m_d_a1_n_t_aw_m_d_aw_m_d_aw_n_tcw_m_d_aw_m_d_aw_m_dc2_m_d_aw_m_d_aw_m_d_a3_nj_aw_m_d_aw_m_d_aw_o_d_uw_m_d_aw_m_d_aw_m_dc4_m_d_aw_m_d_aw_m_d_ew_o_d_aw_m_d_aw_m_d_aw_n_t_uw_m_d_aw_m_d_aw_m_d_u3_m_d_aw_m_d_aw_m_d_a3_nj_aw_m_d_aw_m_d_aw_nz_yw_m_d_aw_m_d_aw_m_dg1_m_d_aw_m_d_aw_m_d_a3_o_d_aw_m_d_aw_m_d_ax_m_dgw_m_d_aw_m_d_aw_m_d_u1_m_d_aw_m_d_aw_m_d_a1_nz_aw_m_d_aw_m_d_aw_nz_yw_m_d_aw_m_d_aw_m_dc2_m_d_aw_m_d_aw_m_d_a4_n_t_aw_m_d_aw_m_d_aw_nzgw_m_d_aw_m_d_aw_m_t_e3_m_d_aw_m_d_aw_m_d_a1_n_t_aw_m_d_aw_m_d_aw_n_tcw_m_d_aw_m_d_aw_m_dc2_m_d_aw_m_d_aw_m_d_a3_nj_aw_m_d_aw_m_d_aw_o_d_uw_m_d_aw_m_d_aw_m_dc4_m_d_aw_m_d_aw_m_d_ex_m_d_aw_m_d_aw_m_d_aw_n_t_uw_m_d_aw_m_d_aw_m_d_u3_m_d_aw_m_d_aw_m_d_a3_nj_aw_m_d_aw_m_d_aw_nz_yw_m_d_aw_m_d_aw_m_dg1_m_d_aw_m_d_aw_m_d_a3_o_ghpa_gk=" + "'", str4.equals("000000005500000000570000000076000000007600000000850000000078000000005500000000550000000057000000007600000000760000000085000000007800000000570000000055000000005700000000760000000076000000008500000000780000000108000000005500000000570000000076000000007600000000850000000078000000010800000000550000000057000000007600000000760000000085000000007800000001170000000055000000005700000000760000000076000000008500000000780000000110000000005500000000570000000076000000007600000000850000000078hihiymx_w_t_v_r_f_n_v_z_u_r_xh_p_vl_v4_t_v_rs_vk1_u_r_t_v_w_v_e_v4_t1_z_ve_e1_ub_f_z_n_v_e_u1_vl_r_fe_e9_w_v_xh_n_v_gx_w_t_v_r_f_n_v_z_u_r_xh_p_vl_v4_t_v_rs_vk1_u_r_t_v_w_v_e_v4_t1_z_ve_e1_ub_f_z_n_v_e_u1_vl_r_fe_e9_w_v_xh_n_v_gx_w_t_v_r_f_n_v_z_u_r_xh_p_vl_v4_t_v_rs_vk1_u_r_t_v_w_v_e_v4_t1_z_ve_e1_ub_f_z_n_v_e_u1_vl_r_fe_e9_w_v_xh_n_v_gx_w_t_v_r_f_n_v_z_u_r_xh_p_vl_v4_t_v_rs_vk1_u_r_t_v_w_v_e_v4_t1_z_ve_e1_ub_f_z_n_v_e_u1_vl_r_fe_e9_w_v_xh_n_v_gx_w_t_v_r_f_n_v_z_u_r_xh_p_vl_v4_t_v_rs_vk1_u_r_t_v_w_v_e_v4_t1_z_ve_e1_ub_f_z_n_v_e_u1_vl_r_fe_e9_w_v_xh_n_v_gx_w_t_v_r_f_n_v_z_u_r_xh_p_vl_v4_t_t_aw_m_d_aw_m_d_aw_n_t_uw_m_d_aw_m_d_aw_m_d_u3_m_d_aw_m_d_aw_m_d_a3_nj_aw_m_d_aw_m_d_aw_nz_yw_m_d_aw_m_d_aw_m_dg1_m_d_aw_m_d_aw_m_d_a3_o_d_aw_m_d_aw_m_d_aw_n_t_uw_m_d_aw_m_d_aw_m_d_u1_m_d_aw_m_d_aw_m_d_a1_nz_aw_m_d_aw_m_d_aw_nz_yw_m_d_aw_m_d_aw_m_dc2_m_d_aw_m_d_aw_m_d_a4_n_t_aw_m_d_aw_m_d_aw_nzgw_m_d_aw_m_d_aw_m_d_u3_m_d_aw_m_d_aw_m_d_a1_n_t_aw_m_d_aw_m_d_aw_n_tcw_m_d_aw_m_d_aw_m_dc2_m_d_aw_m_d_aw_m_d_a3_nj_aw_m_d_aw_m_d_aw_o_d_uw_m_d_aw_m_d_aw_m_dc4_m_d_aw_m_d_aw_m_d_ew_o_d_aw_m_d_aw_m_d_aw_n_t_uw_m_d_aw_m_d_aw_m_d_u3_m_d_aw_m_d_aw_m_d_a3_nj_aw_m_d_aw_m_d_aw_nz_yw_m_d_aw_m_d_aw_m_dg1_m_d_aw_m_d_aw_m_d_a3_o_d_aw_m_d_aw_m_d_ax_m_dgw_m_d_aw_m_d_aw_m_d_u1_m_d_aw_m_d_aw_m_d_a1_nz_aw_m_d_aw_m_d_aw_nz_yw_m_d_aw_m_d_aw_m_dc2_m_d_aw_m_d_aw_m_d_a4_n_t_aw_m_d_aw_m_d_aw_nzgw_m_d_aw_m_d_aw_m_t_e3_m_d_aw_m_d_aw_m_d_a1_n_t_aw_m_d_aw_m_d_aw_n_tcw_m_d_aw_m_d_aw_m_dc2_m_d_aw_m_d_aw_m_d_a3_nj_aw_m_d_aw_m_d_aw_o_d_uw_m_d_aw_m_d_aw_m_dc4_m_d_aw_m_d_aw_m_d_ex_m_d_aw_m_d_aw_m_d_aw_n_t_uw_m_d_aw_m_d_aw_m_d_u3_m_d_aw_m_d_aw_m_d_a3_nj_aw_m_d_aw_m_d_aw_nz_yw_m_d_aw_m_d_aw_m_dg1_m_d_aw_m_d_aw_m_d_a3_o_ghpa_gk="));
    }

    @Test
    public void test281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test281");
        java.lang.String str1 = strman.Strman.lowerFirst("nullhihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihiMDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA0ZTAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwNTUwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDRjMDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA0YzAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwMzkwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111001000000000-ih79llun-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ihMw==Hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!null97Nnulnull000780008500076000760005700055001100007800085000760007600057000550011700078000850007600076000570005500108000780008500076000760005700055001080007800085000760007600057000550005700078000850007600076000570005500055000780008500076000760005700055");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "nullhihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihiMDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA0ZTAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwNTUwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDRjMDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA0YzAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwMzkwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111001000000000-ih79llun-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ihMw==Hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!null97Nnulnull000780008500076000760005700055001100007800085000760007600057000550011700078000850007600076000570005500108000780008500076000760005700055001080007800085000760007600057000550005700078000850007600076000570005500055000780008500076000760005700055" + "'", str1.equals("nullhihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihiMDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA0ZTAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwNTUwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDRjMDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA0YzAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwMzkwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111001000000000-ih79llun-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ihMw==Hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!null97Nnulnull000780008500076000760005700055001100007800085000760007600057000550011700078000850007600076000570005500108000780008500076000760005700055001080007800085000760007600057000550005700078000850007600076000570005500055000780008500076000760005700055"));
    }

    @Test
    public void test282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test282");
        java.lang.String str1 = strman.Strman.upperFirst("Hihiihi_hhi_hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "Hihiihi_hhi_hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101" + "'", str1.equals("Hihiihi_hhi_hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101"));
    }

    @Test
    public void test283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test283");
        java.lang.String str1 = strman.Strman.binEncode("IHI97HHI97HI48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101n-u-l-l97-n-n-u-lhi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-null97nnul-hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!null97-nnul");
    }

    @Test
    public void test284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test284");
        boolean boolean2 = strman.Strman.inequal("0021004800490021004800490021004800490021null97null97nnull97unull97lnull97lnull979null977null97", "lun-n79llunnull97null97-nnull97-unull97-lnull97-lnull979null977null97");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
    }

    @Test
    public void test285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test285");
        java.lang.String str1 = strman.Strman.htmlEncode("006c0075006e004e00370039006c006c0075006e");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull" + "'", str1.equals("nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull"));
    }

    @Test
    public void test286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test286");
        long long4 = strman.Strman.countSubstr("7210533hi!hi!hi!hi!hi!hi!hi!hi!hi!hn-ullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnulli!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!Hihi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_null97hi00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006ehi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hiullnullnullnullnullnullnull03000300034003800300030003000340039003000300030003400390030003000300034003800300030003000340039003000300030003400380030003000300034003900300030003100310030003000300031003100370030003000310030003800300030003100300038003000300030003500370030003000300035003500300030003100310030003000300031003100300030003000310031003700300030003100300038", true, true);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
    }

    @Test
    public void test287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test287");
        java.lang.String str3 = strman.Strman.ensureRight("00110001170010800108000570005500078001100011700108001080005700055000850011000117001080010800057000550007600110001170010800108000570005500076001100011700108001080005700055000570011000117001080010800057000550005500110001170010800108000570005500057000550004900048", "Null97nnul1097null971097", false);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "00110001170010800108000570005500078001100011700108001080005700055000850011000117001080010800057000550007600110001170010800108000570005500076001100011700108001080005700055000570011000117001080010800057000550005500110001170010800108000570005500057000550004900048Null97nnul1097null971097" + "'", str3.equals("00110001170010800108000570005500078001100011700108001080005700055000850011000117001080010800057000550007600110001170010800108000570005500076001100011700108001080005700055000570011000117001080010800057000550005500110001170010800108000570005500057000550004900048Null97nnul1097null971097"));
    }

    @Test
    public void test288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test288");
        java.lang.String str2 = strman.Strman.ensureLeft("n_u_l_l97n_n_u_l_l97u_n_u_l_l97l_n_u_l_l97l_n_u_l_l979_n_u_l_l977_n_u_l_l97", "00110001170010800108000570005500078001100011700108");
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "00110001170010800108000570005500078001100011700108n_u_l_l97n_n_u_l_l97u_n_u_l_l97l_n_u_l_l97l_n_u_l_l979_n_u_l_l977_n_u_l_l97" + "'", str2.equals("00110001170010800108000570005500078001100011700108n_u_l_l97n_n_u_l_l97u_n_u_l_l97l_n_u_l_l97l_n_u_l_l979_n_u_l_l977_n_u_l_l97"));
    }

    @Test
    public void test289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test289");
        java.util.Optional<java.lang.String> strOptional1 = strman.Strman.head("lunN79llunnull97null97Nnull97Unull97Lnull97Lnull979null977null97nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull");
        org.junit.Assert.assertNotNull(strOptional1);
    }

    @Test
    public void test290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test290");
        java.util.Optional<java.lang.String> strOptional1 = strman.Strman.tail("null97nnul");
        org.junit.Assert.assertNotNull(strOptional1);
    }

    @Test
    public void test291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test291");
        try {
            java.lang.String str3 = strman.Strman.slice("", 540, 540);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 540");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        }
    }

    @Test
    public void test292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test292");
        java.lang.String str3 = strman.Strman.removeRight("ymxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TTAwMDAwMDAwNTUwMDAwMDAwMDU3MDAwMDAwMDA3NjAwMDAwMDAwNzYwMDAwMDAwMDg1MDAwMDAwMDA3ODAwMDAwMDAwNTUwMDAwMDAwMDU1MDAwMDAwMDA1NzAwMDAwMDAwNzYwMDAwMDAwMDc2MDAwMDAwMDA4NTAwMDAwMDAwNzgwMDAwMDAwMDU3MDAwMDAwMDA1NTAwMDAwMDAwNTcwMDAwMDAwMDc2MDAwMDAwMDA3NjAwMDAwMDAwODUwMDAwMDAwMDc4MDAwMDAwMDEwODAwMDAwMDAwNTUwMDAwMDAwMDU3MDAwMDAwMDA3NjAwMDAwMDAwNzYwMDAwMDAwMDg1MDAwMDAwMDA3ODAwMDAwMDAxMDgwMDAwMDAwMDU1MDAwMDAwMDA1NzAwMDAwMDAwNzYwMDAwMDAwMDc2MDAwMDAwMDA4NTAwMDAwMDAwNzgwMDAwMDAwMTE3MDAwMDAwMDA1NTAwMDAwMDAwNTcwMDAwMDAwMDc2MDAwMDAwMDA3NjAwMDAwMDAwODUwMDAwMDAwMDc4MDAwMDAwMDExMDAwMDAwMDAwNTUwMDAwMDAwMDU3MDAwMDAwMDA3NjAwMDAwMDAwNzYwMDAwMDAwMDg1MDAwMDAwMDA3OGhpaGk=", "000720010500033001040010500033nullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLhi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_null97hi00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e", true);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "ymxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TTAwMDAwMDAwNTUwMDAwMDAwMDU3MDAwMDAwMDA3NjAwMDAwMDAwNzYwMDAwMDAwMDg1MDAwMDAwMDA3ODAwMDAwMDAwNTUwMDAwMDAwMDU1MDAwMDAwMDA1NzAwMDAwMDAwNzYwMDAwMDAwMDc2MDAwMDAwMDA4NTAwMDAwMDAwNzgwMDAwMDAwMDU3MDAwMDAwMDA1NTAwMDAwMDAwNTcwMDAwMDAwMDc2MDAwMDAwMDA3NjAwMDAwMDAwODUwMDAwMDAwMDc4MDAwMDAwMDEwODAwMDAwMDAwNTUwMDAwMDAwMDU3MDAwMDAwMDA3NjAwMDAwMDAwNzYwMDAwMDAwMDg1MDAwMDAwMDA3ODAwMDAwMDAxMDgwMDAwMDAwMDU1MDAwMDAwMDA1NzAwMDAwMDAwNzYwMDAwMDAwMDc2MDAwMDAwMDA4NTAwMDAwMDAwNzgwMDAwMDAwMTE3MDAwMDAwMDA1NTAwMDAwMDAwNTcwMDAwMDAwMDc2MDAwMDAwMDA3NjAwMDAwMDAwODUwMDAwMDAwMDc4MDAwMDAwMDExMDAwMDAwMDAwNTUwMDAwMDAwMDU3MDAwMDAwMDA3NjAwMDAwMDAwNzYwMDAwMDAwMDg1MDAwMDAwMDA3OGhpaGk=" + "'", str3.equals("ymxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TTAwMDAwMDAwNTUwMDAwMDAwMDU3MDAwMDAwMDA3NjAwMDAwMDAwNzYwMDAwMDAwMDg1MDAwMDAwMDA3ODAwMDAwMDAwNTUwMDAwMDAwMDU1MDAwMDAwMDA1NzAwMDAwMDAwNzYwMDAwMDAwMDc2MDAwMDAwMDA4NTAwMDAwMDAwNzgwMDAwMDAwMDU3MDAwMDAwMDA1NTAwMDAwMDAwNTcwMDAwMDAwMDc2MDAwMDAwMDA3NjAwMDAwMDAwODUwMDAwMDAwMDc4MDAwMDAwMDEwODAwMDAwMDAwNTUwMDAwMDAwMDU3MDAwMDAwMDA3NjAwMDAwMDAwNzYwMDAwMDAwMDg1MDAwMDAwMDA3ODAwMDAwMDAxMDgwMDAwMDAwMDU1MDAwMDAwMDA1NzAwMDAwMDAwNzYwMDAwMDAwMDc2MDAwMDAwMDA4NTAwMDAwMDAwNzgwMDAwMDAwMTE3MDAwMDAwMDA1NTAwMDAwMDAwNTcwMDAwMDAwMDc2MDAwMDAwMDA3NjAwMDAwMDAwODUwMDAwMDAwMDc4MDAwMDAwMDExMDAwMDAwMDAwNTUwMDAwMDAwMDU3MDAwMDAwMDA3NjAwMDAwMDAwNzYwMDAwMDAwMDg1MDAwMDAwMDA3OGhpaGk="));
    }

    @Test
    public void test293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test293");
        java.lang.String str3 = strman.Strman.insert("HihiNULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL979710", "mdax_mtax_mtaw_mdaw_mdaw_mdew_mtax_mtew_mdaw_mdaw_mdaw_mtex_mdex_mdaw_mdaw_mdaw_mdex_mtax_mtaw_mdaw_mdaw_mdex_mtax_mtaw_mdaw_mdaw_mdax_mdax_mtew_mdaw_mdaw_mdaw_mdax_mtax_mtaw_mdaw_mdaw_mdaw_mtew_mtew_mdaw_mdaw_mdax_mdew_mtex_mdaw_mdaw_mdaw_mdex_mtax_mtaw_mdaw_mdaw_mdew_mdew_mtew_mdaw_mdaw_mdaw_mdax_mdex_mdaw_mdaw_mdaw_mtax_mtax_mdaw_mdaw_mdaw_mdew_mdew_mtew_mdaw_mdaw_mdaw_mdax_mdex_mdaw_mdaw_mdawa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_s1ohihi", 402);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "HihiNULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL979710" + "'", str3.equals("HihiNULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL979710"));
    }

    @Test
    public void test294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test294");
        boolean boolean4 = strman.Strman.endsWith("N-ullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull", "blVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxM000000005500000000570000000076000000007600000000850000000078000000005500000000550000000057000000007600000000760000000085000000007800000000570000000055000000005700000000760000000076000000008500000000780000000108000000005500000000570000000076000000007600000000850000000078000000010800000000550000000057000000007600000000760000000085000000007800000001170000000055000000005700000000760000000076000000008500000000780000000110000000005500000000570000000076000000007600000000850000000078hihi", 10, true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test295");
        java.lang.String[] strArray1 = strman.Strman.words("hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!006e0075006c006c00390037null97");
        org.junit.Assert.assertNotNull(strArray1);
    }

    @Test
    public void test296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test296");
        java.lang.String str3 = strman.Strman.truncate("iHIHHIHI484851554848515748485499484854994848555348485410148485155484851554848515748485499484854994848555348485410148485157484851554848515748485499484854994848555348485410148485299484851554848515748485499484854994848555348485410148485299484851554848515748485499484854994848555348485410148485353484851554848515748485499484854994848555348485410148485210148485155484851574848549948485499484855534848541019ihi h7null", 1040, "10145848435558484994584849945848475158484551584841012584841014584843555848499458484994584847515848455158484353584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484751584841014584843555848499458484994584847515848455158484551584841014584843555848499458484994584847515848455158484ihIhllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunlunn79llun790179llun7901lunn79llun001");
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "iHIHHIHI484851554848515748485499484854994848555348485410148485155484851554848515748485499484854994848555348485410148485157484851554848515748485499484854994848555348485410148485299484851554848515748485499484854994848555348485410148485299484851554848515748485499484854994848555348485410148485353484851554848515748485499484854994848555348485410148485210148485155484851574848549948485499484855534848541019ihi h7null" + "'", str3.equals("iHIHHIHI484851554848515748485499484854994848555348485410148485155484851554848515748485499484854994848555348485410148485157484851554848515748485499484854994848555348485410148485299484851554848515748485499484854994848555348485410148485299484851554848515748485499484854994848555348485410148485353484851554848515748485499484854994848555348485410148485210148485155484851574848549948485499484855534848541019ihi h7null"));
    }

    @Test
    public void test297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test297");
        boolean boolean1 = strman.Strman.isUpperCase("nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull97null97Nnull97Unull97Lnull97Lnull979null977null97Hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!Nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull97hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!nnull97hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!unull97hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!lnull97hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!lnull979null977null971097null97");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
    }

    @Test
    public void test298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test298");
        java.util.Optional<java.lang.String> strOptional1 = strman.Strman.head("Null97n uLLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULL");
        org.junit.Assert.assertNotNull(strOptional1);
    }

    @Test
    public void test299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test299");
        boolean boolean1 = strman.Strman.isBlank("006e0075006c006c00390037hihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
    }

    @Test
    public void test300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test300");
        java.lang.String str1 = strman.Strman.escapeRegExp("==abs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnb");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "==abs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnb" + "'", str1.equals("==abs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnb"));
    }

    @Test
    public void test301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test301");
        java.lang.String str1 = strman.Strman.binEncode("nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullullnullnullnullnullnullnull");
    }

    @Test
    public void test302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test302");
        java.lang.String str2 = strman.Strman.ensureLeft("HI-HI48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101IHIh", "");
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "HI-HI48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101IHIh" + "'", str2.equals("HI-HI48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101IHIh"));
    }

    @Test
    public void test303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test303");
        java.lang.String[] strArray2 = strman.Strman.words("48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101");
        java.util.List<java.lang.String> strList3 = strman.Strman.zip(strArray2);
        java.util.Optional<java.lang.String> strOptional4 = strman.Strman.trimEnd("", strArray2);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(strList3);
        org.junit.Assert.assertNotNull(strOptional4);
    }

    @Test
    public void test304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test304");
        java.lang.String[] strArray1 = strman.Strman.words("4911011710810857551101171081085755951101101171081085755951171101171081085755951081101171081085755951081101171081085755571101171081085755551101171081085755hi_hi0000000001001000000000000110100197_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_null97hi00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e");
        org.junit.Assert.assertNotNull(strArray1);
    }

    @Test
    public void test305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test305");
        java.lang.String[] strArray2 = strman.Strman.chars("00110001170010800108000570005500078001100011700108blVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxM000000005500000000570000000076000000007600000000850000000078000000005500000000550000000057000000007600000000760000000085000000007800000000570000000055000000005700000000760000000076000000008500000000780000000108000000005500000000570000000076000000007600000000850000000078000000010800000000550000000057000000007600000000760000000085000000007800000001170000000055000000005700000000760000000076000000008500000000780000000110000000005500000000570000000076000000007600000000850000000078hihi");
        try {
            java.util.Optional<java.lang.String> strOptional3 = strman.Strman.trimEnd("null97n-ullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullstrArray2);
            org.junit.Assert.fail("Expected exception of type java.util.regex.PatternSyntaxException; message: Illegal octal escape sequence near index 4\r\n[0\\0\\1\\1\\0\\0\\0\\1\\1\\7\\0\\0\\1\\0\\8\\0\\0\\1\\0\\8\\0\\0\\0\\5\\7\\0\\0\\0\\5\\5\\0\\0\\0\\7\\8\\0\\0\\1\\1\\0\\0\\0\\1\\1\\7\\0\\0\\1\\0\\8\\b\\l\\V\\M\\T\\E\\5\\V\\T\\E\\x\\O\\V\\U\\x\\M\\T\\l\\V\\M\\T\\E\\5\\V\\T\\E\\x\\O\\V\\U\\x\\M\\T\\l\\V\\M\\T\\E\\5\\V\\T\\E\\x\\O\\V\\U\\x\\M\\T\\l\\V\\M\\T\\E\\5\\V\\T\\E\\x\\O\\V\\U\\x\\M\\T\\l\\V\\M\\T\\E\\5\\V\\T\\E\\x\\O\\V\\U\\x\\M\\T\\l\\V\\M\\T\\E\\5\\V\\T\\E\\x\\O\\V\\U\\x\\M\\T\\l\\V\\M\\T\\E\\5\\V\\T\\E\\x\\O\\V\\U\\x\\M\\T\\l\\V\\M\\T\\E\\5\\V\\T\\E\\x\\O\\V\\U\\x\\M\\T\\l\\V\\M\\T\\E\\5\\V\\T\\E\\x\\O\\V\\U\\x\\M\\T\\l\\V\\M\\T\\E\\5\\V\\T\\E\\x\\O\\V\\U\\x\\M\\T\\l\\V\\M\\T\\E\\5\\V\\T\\E\\x\\O\\V\\U\\x\\M\\T\\l\\V\\M\\T\\E\\5\\V\\T\\E\\x\\O\\V\\U\\x\\M\\T\\l\\V\\M\\T\\E\\5\\V\\T\\E\\x\\O\\V\\U\\x\\M\\T\\l\\V\\M\\T\\E\\5\\V\\T\\E\\x\\O\\V\\U\\x\\M\\T\\l\\V\\M\\T\\E\\5\\V\\T\\E\\x\\O\\V\\U\\x\\M\\T\\l\\V\\M\\T\\E\\5\\V\\T\\E\\x\\O\\V\\U\\xh\\i\\h\\i]+$\r\n    ^");
        } catch (java.util.regex.PatternSyntaxException e) {
        }
        org.junit.Assert.assertNotNull(strArray2);
    }

    @Test
    public void test306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test306");
        java.lang.String str1 = strman.Strman.swapCase("1");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "1" + "'", str1.equals("1"));
    }

    @Test
    public void test307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test307");
        try {
            java.lang.String[] strArray2 = strman.Strman.chop("3kdtm_v_l_t_hke_s_hke_s_hke_s_hke_s_30", (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: -38");
        } catch (java.lang.IllegalArgumentException e) {
        }
    }

    @Test
    public void test308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test308");
        java.lang.String str1 = strman.Strman.transliterate("Hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "Hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!" + "'", str1.equals("Hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!"));
    }

    @Test
    public void test309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test309");
        java.lang.String[] strArray2 = strman.Strman.split("MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA0ZTAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwNTUwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDRjMDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA0YzAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwMzkwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111001000000000-ih79llun-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih", "006900680069005f006800680069002dhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!");
        org.junit.Assert.assertNotNull(strArray2);
    }

    @Test
    public void test310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test310");
        java.lang.String str1 = strman.Strman.toSnakeCase("hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!1097null97");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!1097null97" + "'", str1.equals("hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!1097null97"));
    }

    @Test
    public void test311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test311");
        java.lang.String str3 = strman.Strman.surround("550007500067000670005800087000550005500075000670006700058000870007500055000750006700067000580008700080100550007500067000670005800087000801005500075000670006700058000870007110055000750006700067000580008700001100550007500067000670005800087000llun10145848435558484994584849945848475158484551584841012584841014584843555848499458484994584847515848455158484353584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484751584841014584843555848499458484994584847515848455158484551584841014584843555848499458484994584847515848455158484ih-ihllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunlunn79llun790179llun7901lunn79llun", "bnpsc2JfaHZ1X256YzViX2d4MWJqazNfb3d4c2RfdzVfbW56bHNiX2h2dV90ZGM1Yl9neDFibF91M19vd3hzZF93NV9vbnpsc2JfaHZ1", "ihi_hhi-hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101");
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "bnpsc2JfaHZ1X256YzViX2d4MWJqazNfb3d4c2RfdzVfbW56bHNiX2h2dV90ZGM1Yl9neDFibF91M19vd3hzZF93NV9vbnpsc2JfaHZ1550007500067000670005800087000550005500075000670006700058000870007500055000750006700067000580008700080100550007500067000670005800087000801005500075000670006700058000870007110055000750006700067000580008700001100550007500067000670005800087000llun10145848435558484994584849945848475158484551584841012584841014584843555848499458484994584847515848455158484353584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484751584841014584843555848499458484994584847515848455158484551584841014584843555848499458484994584847515848455158484ih-ihllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunlunn79llun790179llun7901lunn79llunihi_hhi-hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101" + "'", str3.equals("bnpsc2JfaHZ1X256YzViX2d4MWJqazNfb3d4c2RfdzVfbW56bHNiX2h2dV90ZGM1Yl9neDFibF91M19vd3hzZF93NV9vbnpsc2JfaHZ1550007500067000670005800087000550005500075000670006700058000870007500055000750006700067000580008700080100550007500067000670005800087000801005500075000670006700058000870007110055000750006700067000580008700001100550007500067000670005800087000llun10145848435558484994584849945848475158484551584841012584841014584843555848499458484994584847515848455158484353584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484751584841014584843555848499458484994584847515848455158484551584841014584843555848499458484994584847515848455158484ih-ihllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunlunn79llun790179llun7901lunn79llunihi_hhi-hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101"));
    }

    @Test
    public void test312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test312");
        boolean boolean2 = strman.Strman.contains("001040ll97", "48485457484854564848545748485310248485456484854564848545748485010048485456484854574848515248485156484851524848515648485153484851494848515348485153484851524848515648485152484851564848515348485149484851534848515548485152484851564848515248485156484851534848515248485157484851574848515248485156484851524848515648485153484851524848515748485157484851524848515648485152484851564848515348485153484851534848515148485152484851564848515248485156484851534848515248485149484851484848514948485152484851564848515248485156484851534848514948485153484851534848515248485156484851524848515648485153484851494848515348485153484851524848515648485152484851564848515348485149484851534848515548485152484851564848515248485156484851534848515248485157484851574848515248485156484851524848515648485153484851524848515748485157484851524848515648485152484851564848515348485153484851534848515148485152484851564848515248485156484851534848515248485149484851484848514948485152484851564848515248485156484851534848514948485153484851554848515248485156484851524848515648485153484851494848515348485153484851524848515648485152484851564848515348485149484851534848515548485152484851564848515248485156484851534848515248485157484851574848515248485156484851524848515648485153484851524848515748485157484851524848515648485152484851564848515348485153484851534848515148485152484851564848515248485156484851534848515248485149484851484848514948485152484851564848515248485156484851534848515048485157484851574848515248485156484851524848515648485153484851494848515348485153484851524848515648485152484851564848515348485149484851534848515548485152484851564848515248485156484851534848515248485157484851574848515248485156484851524848515648485153484851524848515748485157484851524848515648485152484851564848515348485153484851534848515148485152484851564848515248485156484851534848515248485149484851484848514948485152484851564848515248485156484851534848515048485157484851574848515248485156484851524848515648485153484851494848515348485153484851524848515648485152484851564848515348485149484851534848515548485152484851564848515248485156484851534848515248485157484851574848515248485156484851524848515648485153484851524848515748485157484851524848515648485152484851564848515348485153484851534848515148485152484851564848515248485156484851534848515248485149484851484848514948485152484851564848515248485156484851534848515148485153484851514848515248485156484851524848515648485153484851494848515348485153484851524848515648485152484851564848515348485149484851534848515548485152484851564848515248485156484851534848515248485157484851574848515248485156484851524848515648485153484851524848515748485157484851524848515648485152484851564848515348485153484851534848515148485152484851564848515248485156484851534848515248485149484851484848514948485152484851564848515248485156484851534848515048485149484851484848514948485152484851564848515248485156484851534848514948485153484851534848515248485156484851524848515648485153484851494848515348485155484851524848515648485152484851564848515348485152484851574848515748485152484851564848515248485156484851534848515248485157484851574848515248485156484851524848515648485153484851534848515348485151484851524848515648485152484851564848515348485152484851494848514848485149104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test313");
        java.lang.String str3 = strman.Strman.ensureRightfalse);
        org.junit.Assert.assertTrue("'" + strstr3.equals
    }

    @Test
    public void test314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test314");
        java.lang.String[] strArray1 = strman.Strman.charsllun779llun979llunl79llunl79llunu79llunn79llun79llun779llun979llunl79llunl79llunu79llunn79llunnull");
        org.junit.Assert.assertNotNull(strArray1);
    }

    @Test
    public void test315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test315");
        java.lang.String[] strArray3 = strman.Strman.split("6", "hi-hi");
        java.util.Optional<java.lang.String> strOptional4 = strman.Strman.trimStart("null97hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!nnull97hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!unull97hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!lnull97hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!lnull979null977null971097null97", strArray3);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(strOptional4);
    }

    @Test
    public void test316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test316");
        boolean boolean3 = strman.Strman.isEnclosedBetween("1null97null97 nnul n u l l97 n n u l!ih!HI!HI!HI!6", "nullhihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihiMDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA0ZTAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwNTUwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDRjMDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA0YzAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwMzkwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111001000000000-ih79llun-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ihMw==Hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!null97Nnulnull000780008500076000760005700055001100007800085000760007600057000550011700078000850007600076000570005500108000780008500076000760005700055001080007800085000760007600057000550005700078000850007600076000570005500055000780008500076000760005700055", "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000510000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000053");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test317");
        java.lang.String str1 = strman.Strman.removeNonWords("ihiH");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "ihiH" + "'", str1.equals("ihiH"));
    }

    @Test
    public void test318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test318");
        boolean boolean4 = strman.Strman.endsWith("10010110000000000001001000000000", "ihi_h", (int) ' ', false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test319");
        int int1 = strman.Strman.length
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 7270 + "'", int1 == 7270);
    }

    @Test
    public void test320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test320");
        java.lang.String str1 = strman.Strman.hexEncode("00000000010010000000000001101001");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "00300030003000300030003000300030003000310030003000310030003000300030003000300030003000300030003000300031003100300031003000300031" + "'", str1.equals("00300030003000300030003000300030003000310030003000310030003000300030003000300030003000300030003000300031003100300031003000300031"));
    }

    @Test
    public void test321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test321");
        java.lang.String str3 = strman.Strman.leftPad("TnVsbDk3aGloaWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIW51bGw5N2hpIW5udWxsOTdoaWhpaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhbnVsbDk3aGkhdW51bGw5N2hpaGloaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFudWxsOTdoaSFsbnVsbDk3aGloaWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIW51bGw5N2hpIWxudWxsOTc5bnVsbDk3N251bGw5Nwint) (byte) 1);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "TnVsbDk3aGloaWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIW51bGw5N2hpIW5udWxsOTdoaWhpaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhbnVsbDk3aGkhdW51bGw5N2hpaGloaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFudWxsOTdoaSFsbnVsbDk3aGloaWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIW51bGw5N2hpIWxudWxsOTc5bnVsbDk3N251bGw5Nw==" + "'", str3.equals("TnVsbDk3aGloaWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIW51bGw5N2hpIW5udWxsOTdoaWhpaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhbnVsbDk3aGkhdW51bGw5N2hpaGloaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFudWxsOTdoaSFsbnVsbDk3aGloaWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIW51bGw5N2hpIWxudWxsOTc5bnVsbDk3N251bGw5Nw=="));
    }

    @Test
    public void test322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test322");
        java.lang.String[] strArray3 = strman.Strman.between("110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108", "!-h-i!-h-i!-h-i!00001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000ihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi-hull97");
        org.junit.Assert.assertNotNull(strArray3);
    }

    @Test
    public void test323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test323");
        int int2 = strman.Strman.lastIndexOf("OTAwMDc4MDAxMTcwMDEwODAwMTA4MDAxMTAwMDExNzAwMTA4MDAxMDgwMDExMDAwMTE3MDAxMDgwMDEwODAwMTEwMDAxMTcwMDEwODAwMTA4MDAxMTAwMDExNzAwMTA4MDAxMDgwMDExMDAwMTE3MDAxMDgwMDEwODAwMTEwMDAxMTcwMDEwODAwMTA4MDAxMTAwMDExNzAwMTA4MDAxMDgwMDExMDAwMTE3MDAxMDgwMDEwODAwMTEwMDAxMTcwMDEwODAwMTA4MDAxMTAwMDExNzAwMTA4MDAxMDgwMDExMDAwMTE3MDAxMDgwMDEwODAwMTEwMDAxMTcwMDEwODAwMTA4MDAxMTAwMDExNzAwMTA4MDAxMDgwMDExMDAwMTE3MDAxMDgwMDEwODAwMTEwMDAxMTcwMDEwODAwMTA4MDAxMTAwMDExNzAwMTA4MDAxMDgwMDExMDAwMTE3MDAxMDgwMDEwODAwMTEwMDAxMTcwMDEwODAwMTA4MDAxMTAwMDExNzAwMTA4MDAxMDgwMDExMDAwMTE3MDAxMDgwMDEwODAwMTEwMDAxMTcwMDEwODAwMTA4MDAxMTAwMDExNzAwMTA4MDAxMDgwMDExMDAwMTE3MDAxMDgwMDEwODAwMTEwMDAxMTcwMDEwODAwMTA4MDAxMTAwMDExNzAwMTA4MDAxMDgwMDExMDAwMTE3MDAxMDgwMDEwODAwMTEwMDAxMTcwMDEwODAwMTA4MDAxMTAwMDExNzAwMTA4MDAxMDgwMDExMDAwMTE3MDAxMDgwMDEwODAwMTEwMDAxMTcwMDEwODAwMTA4MDAxMTAwMDExNzAwMTA4MDAxMDgwMDExMDAwMTE3MDAxMDgwMDEwODAwMTEwMDAxMTcwMDEwODAwMTA4MDAxMTAwMDExNzAwMTA4MDAxMDgwMDExMDAwMTE3MDAxMDgwMDEwODAwMTEwMDAxMTcwMDEwODAwMTA4MDAxMTAwMDExNzAwMTA4MDAxMDgwMDExMDAwMTE3MDAxMDgwMDEwODAwMTEwMDAxMTcwMDEwODAwMTA4MDAxMTAwMDExNzAwMTA4MDAxMDgwMDExMDAwMTE3MDAxMDgwMDEwODAwMTEwMDAxMTcwMDEwODAwMTA4MDAxMTAwMDExNzAwMTA4MDAxMDgwMDExMDAwMTE3MDAxMDgwMDEwODAwMTEwMDAxMTcwMDEwODAwMTA4MDAxMTAwMDExNzAwMTA4MDAxMDgwMDExMDAwMTE3MDAxMDgwMDEwODAwMTEwMDAxMTcwMDEwODAwMTA4MDAwNTcwMDA1NTAwMDc4MDAxMTAwMDExNzAwMTA4MDAxMDgwMDA1NzAwMDU1MDAwODUwMDExMDAwMTE3MDAxMDgwMDEwODAwMDU3MDAwNTUwMDA3NjAwMTEwMDAxMTcwMDEwODAwMTA4MDAwNTcwMDA1NTAwMDc2MDAxMTAwMDExNzAwMTA4MDAxMDgwMDA1NzAwMDU1MDAwNTcwMDExMDAwMTE3MDAxMDgwMDEwODAwMDU3MDAwNTUwMDA1NTAwMTEwMDAxMTcwMDEwODAwMTA4MDAwNTcwMDA1NTAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTEwMDAxMTcwMDEwODAwMTA4MDAwNTcwMDA1NTAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMTA0MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDEwNTAwMDAwMDAwMDBoSSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSE3", "!-h-i!-h-i!-h-i!00001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000ihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi-h
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
    }

    @Test
    public void test324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test324");
        java.lang.String str3 = strman.Strman.insert("", "hi-hi", 4);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "" + "'", str3.equals(""));
    }

    @Test
    public void test325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test325");
        java.lang.String str2 = strman.Strman.removeRight("10010110000000000001001000000000", "1null97null97nnulnull97nnulih");
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "10010110000000000001001000000000" + "'", str2.equals("10010110000000000001001000000000"));
    }

    @Test
    public void test326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test326");
        java.lang.String str1 = strman.Strman.slugify("001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih00390037");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih00390037" + "'", str1.equals("001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih00390037"));
    }

    @Test
    public void test327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test327");
        java.lang.String str3 = strman.Strman.safeTruncate("0031006e0075006c006c00390037006e0075006c006c003900370020006e006e0075006c0020006e002000750020006c0020006c003900370020006e0020006e002000750020006c002100690068", 202, "33727333727333727333null000780008500076000760005700055001100007800085000760007600057000550011700078000850007600076000570005500108000780008500076000760005700055001080007800085000760007600057000550005700078000850007600076000570005500055000780008500076000760005700055");
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "0031006e0075006c006c00390037006e0075006c006c003900370020006e006e0075006c0020006e002000750020006c0020006c003900370020006e0020006e002000750020006c002100690068" + "'", str3.equals("0031006e0075006c006c00390037006e0075006c006c003900370020006e006e0075006c0020006e002000750020006c0020006c003900370020006e0020006e002000750020006c002100690068"));
    }

    @Test
    public void test328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test328");
        java.lang.String[] strArray2 = strman.Strman.lines("NULL97");
        java.lang.String str3 = strman.Strman.prepend("N Ullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull", strArray2);
        java.util.List<java.lang.String> strList4 = strman.Strman.zip(strArray2);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "NULL97N Ullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull" + "'", str3.equals("NULL97N Ullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull"));
        org.junit.Assert.assertNotNull(strList4);
    }

    @Test
    public void test329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test329");
        java.lang.String[] strArray3 = strman.Strman.words("ihi-h");
        java.lang.String str4 = strman.Strman.appendArray("MDAxMTAxMTAwMDAwMDAwMDEwMTAxMTEwMDAwMDAwMDAwMTExMDExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDAxMDAxMTEwMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAxMDEwMTExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDEwMDEwMTEwMDAwMDAwMDAwMDAxMDExMDAwMDAwMDAwMTAxMTAxMDAwMDAwMDAwMDEwMDEwMTEwMDAwMDAwMDAwMDAxMDExMDAwMDAwMDAwaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaS1o", strArray3);
        try {
            java.util.Optional<java.lang.String> strOptional5 = strman.Strman.trimEnd("771228561nullnull97nnul001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97", strArray3);
            org.junit.Assert.fail("Expected exception of type java.util.regex.PatternSyntaxException; message: Illegal character range near index 5\r\n[ihi-h]+$\r\n     ^");
        } catch (java.util.regex.PatternSyntaxException e) {
        }
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "MDAxMTAxMTAwMDAwMDAwMDEwMTAxMTEwMDAwMDAwMDAwMTExMDExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDAxMDAxMTEwMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAxMDEwMTExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDEwMDEwMTEwMDAwMDAwMDAwMDAxMDExMDAwMDAwMDAwMTAxMTAxMDAwMDAwMDAwMDEwMDEwMTEwMDAwMDAwMDAwMDAxMDExMDAwMDAwMDAwaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaS1oihi-h" + "'", str4.equals("MDAxMTAxMTAwMDAwMDAwMDEwMTAxMTEwMDAwMDAwMDAwMTExMDExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDAxMDAxMTEwMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAxMDEwMTExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDEwMDEwMTEwMDAwMDAwMDAwMDAxMDExMDAwMDAwMDAwMTAxMTAxMDAwMDAwMDAwMDEwMDEwMTEwMDAwMDAwMDAwMDAxMDExMDAwMDAwMDAwaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaS1oihi-h"));
    }

    @Test
    public void test330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test330");
        java.lang.String[] strArray1 = strman.Strman.words("null97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnul");
        org.junit.Assert.assertNotNull(strArray1);
    }

    @Test
    public void test331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test331");
        java.lang.String str3 = strman.Strman.leftPad("0010500104001050005700055001040010400105000570005500104001050005200056000520005600053000490005300053000520005600052000560005300049000530005500052000560005200056000530005200057000570005200056000520005600053000520005700057000520005600052000560005300053000530005100052000560005200056000530005200049000480004900052000560005200056000530004900053000530005200056000520005600053000490005300053000520005600052000560005300049000530005500052000560005200056000530005200057000570005200056000520005600053000520005700057000520005600052000560005300053000530005100052000560005200056000530005200049000480004900052000560005200056000530004900053000550005200056000520005600053000490005300053000520005600052000560005300049000530005500052000560005200056000530005200057000570005200056000520005600053000520005700057000520005600052000560005300053000530005100052000560005200056000530005200049000480004900052000560005200056000530005000057000570005200056000520005600053000490005300053000520005600052000560005300049000530005500052000560005200056000530005200057000570005200056000520005600053000520005700057000520005600052000560005300053000530005100052000560005200056000530005200049000480004900052000560005200056000530005000057000570005200056000520005600053000490005300053000520005600052000560005300049000530005500052000560005200056000530005200057000570005200056000520005600053000520005700057000520005600052000560005300053000530005100052000560005200056000530005200049000480004900052000560005200056000530005100053000510005200056000520005600053000490005300053000520005600052000560005300049000530005500052000560005200056000530005200057000570005200056000520005600053000520005700057000520005600052000560005300053000530005100052000560005200056000530005200049000480004900052000560005200056000530005000049000480004900052000560005200056000530004900053000530005200056000520005600053000490005300055000520005600052000560005300052000570005700052000560005200056000530005200057000570005200056000520005600053000530005300051000520005600052000560005300052000490004800049", "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000078000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000780000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000008500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000076", 480);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "0010500104001050005700055001040010400105000570005500104001050005200056000520005600053000490005300053000520005600052000560005300049000530005500052000560005200056000530005200057000570005200056000520005600053000520005700057000520005600052000560005300053000530005100052000560005200056000530005200049000480004900052000560005200056000530004900053000530005200056000520005600053000490005300053000520005600052000560005300049000530005500052000560005200056000530005200057000570005200056000520005600053000520005700057000520005600052000560005300053000530005100052000560005200056000530005200049000480004900052000560005200056000530004900053000550005200056000520005600053000490005300053000520005600052000560005300049000530005500052000560005200056000530005200057000570005200056000520005600053000520005700057000520005600052000560005300053000530005100052000560005200056000530005200049000480004900052000560005200056000530005000057000570005200056000520005600053000490005300053000520005600052000560005300049000530005500052000560005200056000530005200057000570005200056000520005600053000520005700057000520005600052000560005300053000530005100052000560005200056000530005200049000480004900052000560005200056000530005000057000570005200056000520005600053000490005300053000520005600052000560005300049000530005500052000560005200056000530005200057000570005200056000520005600053000520005700057000520005600052000560005300053000530005100052000560005200056000530005200049000480004900052000560005200056000530005100053000510005200056000520005600053000490005300053000520005600052000560005300049000530005500052000560005200056000530005200057000570005200056000520005600053000520005700057000520005600052000560005300053000530005100052000560005200056000530005200049000480004900052000560005200056000530005000049000480004900052000560005200056000530004900053000530005200056000520005600053000490005300055000520005600052000560005300052000570005700052000560005200056000530005200057000570005200056000520005600053000530005300051000520005600052000560005300052000490004800049" + "'", str3.equals("0010500104001050005700055001040010400105000570005500104001050005200056000520005600053000490005300053000520005600052000560005300049000530005500052000560005200056000530005200057000570005200056000520005600053000520005700057000520005600052000560005300053000530005100052000560005200056000530005200049000480004900052000560005200056000530004900053000530005200056000520005600053000490005300053000520005600052000560005300049000530005500052000560005200056000530005200057000570005200056000520005600053000520005700057000520005600052000560005300053000530005100052000560005200056000530005200049000480004900052000560005200056000530004900053000550005200056000520005600053000490005300053000520005600052000560005300049000530005500052000560005200056000530005200057000570005200056000520005600053000520005700057000520005600052000560005300053000530005100052000560005200056000530005200049000480004900052000560005200056000530005000057000570005200056000520005600053000490005300053000520005600052000560005300049000530005500052000560005200056000530005200057000570005200056000520005600053000520005700057000520005600052000560005300053000530005100052000560005200056000530005200049000480004900052000560005200056000530005000057000570005200056000520005600053000490005300053000520005600052000560005300049000530005500052000560005200056000530005200057000570005200056000520005600053000520005700057000520005600052000560005300053000530005100052000560005200056000530005200049000480004900052000560005200056000530005100053000510005200056000520005600053000490005300053000520005600052000560005300049000530005500052000560005200056000530005200057000570005200056000520005600053000520005700057000520005600052000560005300053000530005100052000560005200056000530005200049000480004900052000560005200056000530005000049000480004900052000560005200056000530004900053000530005200056000520005600053000490005300055000520005600052000560005300052000570005700052000560005200056000530005200057000570005200056000520005600053000530005300051000520005600052000560005300052000490004800049"));
    }

    @Test
    public void test332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test332");
        java.lang.String str1 = strman.Strman.toStudlyCase("000000000011000000000000001100000000000000110011000000000011100100000000001100000000000000110000000000000011001100000000001101110000000000110000000000000011000000000000001100010000000000110000000000000011010000000000001100000000000000110000000000000011000100000000001100000000000000110101");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "000000000011000000000000001100000000000000110011000000000011100100000000001100000000000000110000000000000011001100000000001101110000000000110000000000000011000000000000001100010000000000110000000000000011010000000000001100000000000000110000000000000011000100000000001100000000000000110101" + "'", str1.equals("000000000011000000000000001100000000000000110011000000000011100100000000001100000000000000110000000000000011001100000000001101110000000000110000000000000011000000000000001100010000000000110000000000000011010000000000001100000000000000110000000000000011000100000000001100000000000000110101"));
    }

    @Test
    public void test333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test333");
        java.util.Optional<java.lang.String> strOptional1 = strman.Strman.trimEnd("Mda2 ztaw nz uw mdzj mda2 yz aw mzkw mdm3nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull000000005500000000570000000076000000007600000000850000000078000000005500000000550000000057000000007600000000760000000085000000007800000000570000000055000000005700000000760000000076000000008500000000780000000108000000005500000000570000000076000000007600000000850000000078000000010800000000550000000057000000007600000000760000000085000000007800000001170000000055000000005700000000760000000076000000008500000000780000000110000000005500000000570000000076000000007600000000850000000078hihi");
        org.junit.Assert.assertNotNull(strOptional1);
    }

    @Test
    public void test334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test334");
        java.util.Optional<java.lang.String> strOptional1 = strman.Strman.trimEnd("NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL979710hihiHI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-NULL97HI-00370039006C006C0075006E003700370039006C006C0075006E003900370039006C006C0075006E004C00370039006C006C0075006E004C00370039006C006C0075006E005500370039006C006C0075006E004E00370039006C006C0075006EHiHi0000000001001000000000000110100197HiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiNull97hi00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e");
        org.junit.Assert.assertNotNull(strOptional1);
    }

    @Test
    public void test335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test335");
        java.lang.String str1 = strman.Strman.htmlDecode("hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!1097null97");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "null" + "'", str1.equals("null"));
    }

    @Test
    public void test336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test336");
        int int3 = strman.Strman.lastIndexOf("540", "N000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97nnull97unull97lnull97lnull979null977null97u000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97nnull97unull97lnull97lnull979null977null97l000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97nnull97unull97lnull97lnull979null977null97lfalse);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
    }

    @Test
    public void test337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test337");
        java.lang.String[] strArray3 = strman.Strman.split("00072001050010400105", "0011000085000760007600057000550007800078000850007697");
        java.lang.String str4 = strman.Strman.prependArray("0004800048000490004900048000480004800049000490005500048000480004900048000560004800048000490004800056000480004800048000530005500048000480004800053000530004800048000480005500056000480004800049000490004800048000480004900049000550004800048000490004800056006e0075006c006c00390037006e002d0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c", strArray3);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "000720010500104001050004800048000490004900048000480004800049000490005500048000480004900048000560004800048000490004800056000480004800048000530005500048000480004800053000530004800048000480005500056000480004800049000490004800048000480004900049000550004800048000490004800056006e0075006c006c00390037006e002d0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c" + "'", str4.equals("000720010500104001050004800048000490004900048000480004800049000490005500048000480004900048000560004800048000490004800056000480004800048000530005500048000480004800053000530004800048000480005500056000480004800049000490004800048000480004900049000550004800048000490004800056006e0075006c006c00390037006e002d0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c"));
    }

    @Test
    public void test338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test338");
        java.lang.String[] strArray3 = new java.lang.String[] { "hihi" };
        java.util.List<java.lang.String> strList4 = strman.Strman.zip(strArray3);
        java.util.Optional<java.lang.String> strOptional5 = strman.Strman.trimEnd("hi!", strArray3);
        java.lang.String[] strArray6 = strman.Strman.removeEmptyStrings(strArray3);
        java.lang.String[] strArray7 = strman.Strman.removeEmptyStrings(strArray3);
        boolean boolean8 = strman.Strman.containsAll("Null97hihi", strArray7);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(strList4);
        org.junit.Assert.assertNotNull(strOptional5);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test339");
        java.lang.String str3 = strman.Strman.removeRight("nULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULL", "nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull&UnderBar;nullMDAxMTAxMTAwMDAwMDAwMDEwMTAxMTEwMDAwMDAwMDAwMTExMDExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDAxMDAxMTEwMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAxMDEwMTExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDEwMDEwMTEwMDAwMDAwMDAwMDAxMDExMDAwMDAwMDAwMTAxMTAxMDAwMDAwMDAwMDEwMDEwMTEwMDAwMDAwMDAwMDAxMDExMDAwMDAwMDAwaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaS1oihi-hhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!00000000001100110000000000110101Ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 nq==", false);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "nULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULL" + "'", str3.equals("nULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULL"));
    }

    @Test
    public void test340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test340");
        java.lang.String[] strArray1 = null;
        java.lang.String str2 = strman.Strman.prepend("000720010500104001050004800048000490004900048000480004800049000490005500048000480004900048000560004800048000490004800056000480004800048000530005500048000480004800053000530004800048000480005500056000480004800049000490004800048000480004900049000550004800048000490004800056006e0075006c006c00390037006e002d0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c", strArray1);
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "000720010500104001050004800048000490004900048000480004800049000490005500048000480004900048000560004800048000490004800056000480004800048000530005500048000480004800053000530004800048000480005500056000480004800049000490004800048000480004900049000550004800048000490004800056006e0075006c006c00390037006e002d0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c" + "'", str2.equals("000720010500104001050004800048000490004900048000480004800049000490005500048000480004900048000560004800048000490004800056000480004800048000530005500048000480004800053000530004800048000480005500056000480004800049000490004800048000480004900049000550004800048000490004800056006e0075006c006c00390037006e002d0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c"));
    }

    @Test
    public void test341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test341");
        java.util.Optional<java.lang.String> strOptional1 = strman.Strman.trimEnd
        boolean boolean2 = strman.Strman.isString((java.lang.Object) strOptional1);
        org.junit.Assert.assertNotNull(strOptional1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test342");
        java.util.Optional<java.lang.String> strOptional2 = strman.Strman.first("nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull", (int) '#');
        org.junit.Assert.assertNotNull(strOptional2);
    }

    @Test
    public void test343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test343");
        java.lang.String str3 = strman.Strman.encode("i3kdtmV lT hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeShi-h", 8704, 2176);
    }

    @Test
    public void test344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test344");
        java.lang.String[] strArray3 = strman.Strman.split("35blVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxM000000005500000000570000000076000000007600000000850000000078000000005500000000550000000057000000007600000000760000000085000000007800000000570000000055000000005700000000760000000076000000008500000000780000000108000000005500000000570000000076000000007600000000850000000078000000010800000000550000000057000000007600000000760000000085000000007800000001170000000055000000005700000000760000000076000000008500000000780000000110000000005500000000570000000076000000007600000000850000000078hihi==abs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnb!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!", "mw==Hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!null97Nnul");
        java.lang.String str4 = strman.Strman.appendArray("hinullhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hiih79llun!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ihhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101", strArray3);
        org.junit.Assert.assertNotNull(strArray3);
    }

    @Test
    public void test345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test345");
        java.lang.String[] strArray4 = new java.lang.String[] { "hihi" };
        java.util.List<java.lang.String> strList5 = strman.Strman.zip(strArray4);
        java.lang.String str7 = strman.Strman.join(strArray4, "null");
        java.lang.String str9 = strman.Strman.join(strArray4, "ihi_h");
        boolean boolean11 = strman.Strman.containsAll("1101171081085755", strArray4, true);
        java.lang.String[] strArray12 = strman.Strman.removeEmptyStrings(strArray4);
        boolean boolean13 = strman.Strman.containsAny("HiHi0000000001001000000000000110100197HiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiNull97hi00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e", strArray12);
        boolean boolean14 = strman.Strman.containsAny("hihiHI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-NULL97HI-00370039006C006C0075006E003700370039006C006C0075006E003900370039006C006C0075006E004C00370039006C006C0075006E004C00370039006C006C0075006E005500370039006C006C0075006E004E00370039006C006C0075006EHiHi0000000001001000000000000110100197HiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiNull97hi00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e", strArray12);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertTrue("'" + str7 + "' != '" + "hihi" + "'", str7.equals("hihi"));
        org.junit.Assert.assertTrue("'" + str9 + "' != '" + "hihi" + "'", str9.equals("hihi"));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test346");
        java.lang.String str2 = strman.Strman.repeat("ullnullnullnullnullnullnullnullnull", 8327);
    }

    @Test
    public void test347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test347");
        java.lang.String[] strArray1 = null;
        java.lang.String str2 = strman.Strman.appendArraystrArray1);
        org.junit.Assert.assertTrue("'" + strstr2.equals
    }

    @Test
    public void test348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test348");
        java.lang.String[] strArray3 = strman.Strman.chop("006e0075006c006c0039003700390037", (int) (short) 1);
        java.lang.String str4 = strman.Strman.prependArray("N u l l97 n n u lhi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi null97hi null97nnul hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!null97 nnul", strArray3);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "006e0075006c006c0039003700390037N u l l97 n n u lhi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi null97hi null97nnul hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!null97 nnul" + "'", str4.equals("006e0075006c006c0039003700390037N u l l97 n n u lhi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi null97hi null97nnul hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!null97 nnul"));
    }

    @Test
    public void test349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test349");
        int int1 = strman.Strman.length("null97Nnul");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 10 + "'", int1 == 10);
    }

    @Test
    public void test350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test350");
        java.lang.String str3 = strman.Strman.rightPad("", "iullnullnullnullnullnullnull03000300034003800300030003000340039003000300030003400390030003000300034003800300030003000340039003000300030003400380030003000300034003900300030003100310030003000300031003100370030003000310030003800300030003100300038003000300030003500370030003000300035003500300030003100310030003000300031003100300030003000310031003700300030003100300038hullnullnullnullnullnullnull03000300034003800300030003000340039003000300030003400390030003000300034003800300030003000340039003000300030003400380030003000300034003900300030003100310030003000300031003100370030003000310030003800300030003100300038003000300030003500370030003000300035003500300030003100310030003000300031003100300030003000310031003700300030003100300038iullnullnullnullnullnullnull03000300034003800300030003000340039003000300030003400390030003000300034003800300030003000340039003000300030003400380030003000300034003900300030003100310030003000300031003100370030003000310030003800300030003100300038003000300030003500370030003000300035003500300030003100310030003000300031003100300030003000310031003700300030003100300038hullnullnullnullnullnullnull03000300034003800300030003000340039003000300030003400390030003000300034003800300030003000340039003000300030003400380030003000300034003900300030003100310030003000300031003100370030003000310030003800300030003100300038003000300030003500370030003000300035003500300030003100310030003000300031003100300030003000310031003700300030003100300038hullnullnullnullnullnullnull03000300034003800300030003000340039003000300030003400390030003000300034003800300030003000340039003000300030003400380030003000300034003900300030003100310030003000300031003100370030003000310030003800300030003100300038003000300030003500370030003000300035003500300030003100310030003000300031003100300030003000310031003700300030003100300038i0030003000300034003800300030003000340038003000300030003400380030003000300034003800300030003000340038003000300030003400380030003000300034003800300030003000340038003000300030003400380030003000300034003800300030003000340039003000300030003400390030003000300034003800300030003000340038003000300030003400390030003000300034003900300030003000340038003000300030003400380030003000300034003800300030003000340038003000300030003400380030003000300034003800300030003000340038003000300030003400380030003000300034003800300ullnullnullnullnullnullnull03000300034003800300030003000340039003000300030003400390030003000300034003800300030003000340039003000300030003400380030003000300034003900300030003100310030003000300031003100370030003000310030003800300030003100300038003000300030003500370030003000300035003500300030003100310030003000300031003100300030003000310031003700300030003100300038hullnullnullnullnullnullnull03000300034003800300030003000340039003000300030003400390030003000300034003800300030003000340039003000300030003400380030003000300034003900300030003100310030003000300031003100370030003000310030003800300030003100300038003000300030003500370030003000300035003500300030003100310030003000300031003100300030003000310031003700300030003100300038i484851554848515748485499484854994848555348485410148485155484851554848515748485499484854994848555348485410148485157484851554848515748485499484854994848555348485410148485299484851554848515748485499484854994848555348485410148485299484851554848515748485499484854994848555348485410148485353484851554848515748485499484854994848555348485410148485210148485155484851574848549948485499484855534848541019ihiullnullnullnullnullnullnull03000300034003800300030003000340039003000300030003400390030003000300034003800300030003000340039003000300030003400380030003000300034003900300030003100310030003000300031003100370030003000310030003800300030003100300038003000300030003500370030003000300035003500300030003100310030003000300031003100300030003000310031003700300030003100300038h7null", 7842);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "" + "'", str3.equals(""));
    }

    @Test
    public void test351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test351");
        boolean boolean1 = strman.Strman.isLowerCase("35blVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxM000000005500000000570000000076000000007600000000850000000078000000005500000000550000000057000000007600000000760000000085000000007800000000570000000055000000005700000000760000000076000000008500000000780000000108000000005500000000570000000076000000007600000000850000000078000000010800000000550000000057000000007600000000760000000085000000007800000001170000000055000000005700000000760000000076000000008500000000780000000110000000005500000000570000000076000000007600000000850000000078hihi");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
    }

    @Test
    public void test352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test352");
        java.lang.String str1 = strman.Strman.base64Encode
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "TlVMTDk3SElISUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIU5VTEw5N0hJIU5OVUxMOTdISUhJSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhTlVMTDk3SEkhVU5VTEw5N0hJSElISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFOVUxMOTdISSFMTlVMTDk3SElISUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIU5VTEw5N0hJIUxOVUxMOTc5TlVMTDk3N05VTEw5N0hJSElOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTA==" + "'", str1.equals("TlVMTDk3SElISUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIU5VTEw5N0hJIU5OVUxMOTdISUhJSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhTlVMTDk3SEkhVU5VTEw5N0hJSElISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFOVUxMOTdISSFMTlVMTDk3SElISUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIU5VTEw5N0hJIUxOVUxMOTc5TlVMTDk3N05VTEw5N0hJSElOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTA=="));
    }

    @Test
    public void test353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test353");
        java.lang.String str4 = strman.Strman.replace("000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97nnull97unull97lnull97lnull979null977null97", "NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL979710", "NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL979710", false);
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97nnull97unull97lnull97lnull979null977null97" + "'", str4.equals("000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97nnull97unull97lnull97lnull979null977null97"));
    }

    @Test
    public void test354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test354");
        java.lang.String str3 = strman.Strman.insert("Hi!hi!", "nullhi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-null97hi\\-00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e", 296);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "Hi!hi!" + "'", str3.equals("Hi!hi!"));
    }

    @Test
    public void test355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test355");
        java.lang.String str2 = strman.Strman.removeLeft("!IHNULLNULL97nNULL97uNULL97lNULL97lNULL979NULL977NULN_U_L_L97_N_ULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLL97nullnullnull97nnul001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97!IHNULLNULL97nNULL97uNULL97lNULL97lNULL979NULL977NULN_U_L_L97_N_ULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLL97null
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "!IHNULLNULL97nNULL97uNULL97lNULL97lNULL979NULL977NULN_U_L_L97_N_ULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLL97nullstr2.equals("!IHNULLNULL97nNULL97uNULL97lNULL97lNULL979NULL977NULN_U_L_L97_N_ULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLL97null
    }

    @Test
    public void test356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test356");
        java.lang.String str1 = strman.Strman.decEncode("HihiNULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL979710Nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull97Nnull97Unull97Lnull97Lnull979null977null97null97");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "0007200105001040010500078000850007600076000570005500110000780008500076000760005700055001170007800085000760007600057000550010800078000850007600076000570005500108000780008500076000760005700055000570007800085000760007600057000550005500078000850007600076000570005500057000550004900048000780011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080005700055000780011000117001080010800057000550008500110001170010800108000570005500076001100011700108001080005700055000760011000117001080010800057000550005700110001170010800108000570005500055001100011700108001080005700055001100011700108001080005700055" + "'", str1.equals("0007200105001040010500078000850007600076000570005500110000780008500076000760005700055001170007800085000760007600057000550010800078000850007600076000570005500108000780008500076000760005700055000570007800085000760007600057000550005500078000850007600076000570005500057000550004900048000780011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080005700055000780011000117001080010800057000550008500110001170010800108000570005500076001100011700108001080005700055000760011000117001080010800057000550005700110001170010800108000570005500055001100011700108001080005700055001100011700108001080005700055"));
    }

    @Test
    public void test357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test357");
        int int4 = strman.Strman.lastIndexOf("hihiHI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-NULL97HI-00370039006C006C0075006E003700370039006C006C0075006E003900370039006C006C0075006E004C00370039006C006C0075006E004C00370039006C006C0075006E005500370039006C006C0075006E004E00370039006C006C0075006EHiHi0000000001001000000000000110100197HiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiNull97hi00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e1097", "000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97-nnull97-unull97-lnull97-lnull979null977null97", (int) (byte) -1, false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
    }

    @Test
    public void test358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test358");
        java.lang.String str1 = strman.Strman.binEncode("nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull");
        org.junit.Assert.assertTrue("'" + strstr1.equals
    }

    @Test
    public void test359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test359");
        java.util.Optional<java.lang.String> strOptional2 = strman.Strman.at("001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000ihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi_h1null97null97_nnul_n_u_l_l97_n_n_u_lih", (int) (byte) 1);
        org.junit.Assert.assertNotNull(strOptional2);
    }

    @Test
    public void test360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test360");
        java.lang.String str3 = strman.Strman.removeRightnull97nnul1097null971097", false);
        org.junit.Assert.assertTrue("'" + strstr3.equals
    }

    @Test
    public void test361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test361");
        java.lang.String[] strArray3 = strman.Strman.wordse0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c00390037004e006e0075006c006c003900370055006e0075006c006c00390037004c006e0075006c006c00390037004c006e0075006c006c003900370039006e0075006c006c003900370037006e0075006c006c00390037006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006e0075006c006c00390037", "10145848435558484994584849945848475158484551584841012584841014584843555848499458484994584847515848455158484353584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484751584841014584843555848499458484994584847515848455158484551584841014584843555848499458484994584847515848455158484ih-ihh_ihI");
        java.util.Optional<java.lang.String> strOptional4 = strman.Strman.trimEnd("hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_null97hi00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006ehi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!nullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037Hihinullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037Hihinullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037Hihinullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037Hihinullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037Hihinullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037Hihinullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037Hihinullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037Hihinullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037Hihinullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037Hihinull97", strArray3);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(strOptional4);
    }

    @Test
    public void test362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test362");
        java.lang.String str1 = strman.Strman.binEncode("860096001200c4005500e400e40073009300c400c4005500e400hi!LUNN79LLUNlunN79llun79llun1");
        org.junit.Assert.assertTrue("'" + strstr1.equals
    }

    @Test
    public void test363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test363");
        java.util.Optional<java.lang.String> strOptional1 = strman.Strman.tail("n-u-l-l97-n-n-u-lN u l l97 n n u lhi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi null97hi null97nnul hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!null97 nnul hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi null97 hi 00370039006 c006 c0075006 e003700370039006 c006 c0075006 e003900370039006 c006 c0075006 e004 c00370039006 c006 c0075006 e004 c00370039006 c006 c0075006 e005500370039006 c006 c0075006 e004 e00370039006 c006 c0075006 e7210533hi!hi!hi!hi!hi!hi!hi!hi!hi!hn ullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnulli!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hihi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi null97hi00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006ehi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!");
        org.junit.Assert.assertNotNull(strOptional1);
    }

    @Test
    public void test364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test364");
        java.lang.String str3 = strman.Strman.leftPad("ullnullnullnullnullnullnullNull97nnul1097null971097", "256", 61);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "256256256256256256256256256256ullnullnullnullnullnullnullNull97nnul1097null971097" + "'", str3.equals("256256256256256256256256256256ullnullnullnullnullnullnullNull97nnul1097null971097"));
    }

    @Test
    public void test365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test365");
        java.lang.String[] strArray4 = strman.Strman.lines("NULL97");
        java.lang.String str5 = strman.Strman.prepend("N Ullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull", strArray4);
        java.lang.String str6 = strman.Strman.prepend("hihi", strArray4);
        boolean boolean7 = strman.Strman.containsAny("nullnull97nnulNullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull", strArray4);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "NULL97N Ullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull" + "'", str5.equals("NULL97N Ullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull"));
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "NULL97hihi" + "'", str6.equals("NULL97hihi"));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test366");
        java.lang.String str1 = strman.Strman.base64Encode("");
    }

    @Test
    public void test367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test367");
        java.lang.String[] strArray2 = strman.Strman.chars("");
        boolean boolean3 = strman.Strman.containsAny("00072001050010400105", strArray2);
        boolean boolean4 = strman.Strman.isString((java.lang.Object) boolean3);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test368");
        java.lang.String str1 = strman.Strman.slugify("N Ullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "n-ullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull" + "'", str1.equals("n-ullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull"));
    }

    @Test
    public void test369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test369");
        boolean boolean2 = strman.Strman.isEnclosedBetween("null97hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!nnull97hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!unull97hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!lnull97hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!lnull979null977null971097null97", "blVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxM000000005500000000570000000076000000007600000000850000000078000000005500000000550000000057000000007600000000760000000085000000007800000000570000000055000000005700000000760000000076000000008500000000780000000108000000005500000000570000000076000000007600000000850000000078000000010800000000550000000057000000007600000000760000000085000000007800000001170000000055000000005700000000760000000076000000008500000000780000000110000000005500000000570000000076000000007600000000850000000078hihi");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test370");
        java.util.Optional<java.lang.String> strOptional1 = strman.Strman.tail("001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000ihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi_h1null97null97_nnul_n_u_l_l97_n_n_u_lih");
        org.junit.Assert.assertNotNull(strOptional1);
    }

    @Test
    public void test371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test371");
        java.lang.String[] strArray4 = strman.Strman.lines("hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!");
        java.lang.String str5 = strman.Strman.prepend("null97", strArray4);
        java.lang.String str7 = strman.Strman.join(strArray4, "100");
        java.lang.String str8 = strman.Strman.prepend("0NULL971null97null97Nnull97Unull97Lnull97Lnull979null977nullstrArray4);
        java.lang.String str9 = strman.Strman.prepend("001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000 ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih", strArray4);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97" + "'", str5.equals("hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97"));
        org.junit.Assert.assertTrue("'" + str7 + "' != '" + "hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!" + "'", str7.equals("hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!"));
        org.junit.Assert.assertTrue("'" + str8 + "' != '" + "hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!0NULL971null97null97Nnull97Unull97Lnull97Lnull979null977nullstr8.equals("hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!0NULL971null97null97Nnull97Unull97Lnull97Lnull979null977null970000000011010000000000001101001000000000010110100000000011010000000000001101001000000000011010000000000001110000000000000110100000000000011100000000000001101010000000000110001000000000011010100000000001101010000000000110100000000000011100000000000001101000000000000111000000000000011010100000000001100010000000000110101000000000011011100000000001101000000000000111000000000000011010000000000001110000000000000110101000000000011010000000000001110010000000000111001000000000011010000000000001110000000000000110100000000000011100000000000001101010000000000110100000000000011100100000000001110010000000000110100000000000011100000000000001101000000000000111000000000000011010100000000001101010000000000110101000000000011001100000000001101000000000000111000000000000011010000000000001110000000000000110101000000000011010000000000001100010000000000110000000000000011000100000000001101000000000000111000000000000011010000000000001110000000000000110101000000000011000100000000001101010000000000110101000000000011010000000000001110000000000000110100000000000011100000000000001101010000000000110001000000000011010100000000001101010000000000110100000000000011100000000000001101000000000000111000000000000011010100000000001100010000000000110101000000000011011100000000001101000000000000111000000000000011010000000000001110000000000000110101000000000011010000000000001110010000000000111001000000000011010000000000001110000000000000110100000000000011100000000000001101010000000000110100000000000011100100000000001110010000000000110100000000000011100000000000001101000000000000111000000000000011010100000000001101010000000000110101000000000011001100000000001101000000000000111000000000000011010000000000001110000000000000110101000000000011010000000000001100010000000000110000000000000011000100000000001101000000000000111000000000000011010000000000001110000000000000110101000000000011000100000000001101010000000000110111000000000011010000000000001110000000000000110100000000000011100000000000001101010000000000110001000000000011010100000000001101010000000000110100000000000011100000000000001101000000000000111000000000000011010100000000001100010000000000110101000000000011011100000000001101000000000000111000000000000011010000000000001110000000000000110101000000000011010000000000001110010000000000111001000000000011010000000000001110000000000000110100000000000011100000000000001101010000000000110100000000000011100100000000001110010000000000110100000000000011100000000000001101000000000000111000000000000011010100000000001101010000000000110101000000000011001100000000001101000000000000111000000000000011010000000000001110000000000000110101000000000011010000000000001100010000000000110000000000000011000100000000001101000000000000111000000000000011010000000000001110000000000000110101000000000011001000000000001110010000000000111001000000000011010000000000001110000000000000110100000000000011100000000000001101010000000000110001000000000011010100000000001101010000000000110100000000000011100000000000001101000000000000111000000000000011010100000000001100010000000000110101000000000011011100000000001101000000000000111000000000000011010000000000001110000000000000110101000000000011010000000000001110010000000000111001000000000011010000000000001110000000000000110100000000000011100000000000001101010000000000110100000000000011100100000000001110010000000000110100000000000011100000000000001101000000000000111000000000000011010100000000001101010000000000110101000000000011001100000000001101000000000000111000000000000011010000000000001110000000000000110101000000000011010000000000001100010000000000110000000000000011000100000000001101000000000000111000000000000011010000000000001110000000000000110101000000000011001000000000001110010000000000111001000000000011010000000000001110000000000000110100000000000011100000000000001101010000000000110001000000000011010100000000001101010000000000110100000000000011100000000000001101000000000000111000000000000011010100000000001100010000000000110101000000000011011100000000001101000000000000111000000000000011010000000000001110000000000000110101000000000011010000000000001110010000000000111001000000000011010000000000001110000000000000110100000000000011100000000000001101010000000000110100000000000011100100000000001110010000000000110100000000000011100000000000001101000000000000111000000000000011010100000000001101010000000000110101000000000011001100000000001101000000000000111000000000000011010000000000001110000000000000110101000000000011010000000000001100010000000000110000000000000011000100000000001101000000000000111000000000000011010000000000001110000000000000110101000000000011001100000000001101010000000000110011000000000011010000000000001110000000000000110100000000000011100000000000001101010000000000110001000000000011010100000000001101010000000000110100000000000011100000000000001101000000000000111000000000000011010100000000001100010000000000110101000000000011011100000000001101000000000000111000000000000011010000000000001110000000000000110101000000000011010000000000001110010000000000111001000000000011010000000000001110000000000000110100000000000011100000000000001101010000000000110100000000000011100100000000001110010000000000110100000000000011100000000000001101000000000000111000000000000011010100000000001101010000000000110101000000000011001100000000001101000000000000111000000000000011010000000000001110000000000000110101000000000011010000000000001100010000000000110000000000000011000100000000001101000000000000111000000000000011010000000000001110000000000000110101000000000011001000000000001100010000000000110000000000000011000100000000001101000000000000111000000000000011010000000000001110000000000000110101000000000011000100000000001101010000000000110101000000000011010000000000001110000000000000110100000000000011100000000000001101010000000000110001000000000011010100000000001101110000000000110100000000000011100000000000001101000000000000111000000000000011010100000000001101000000000000111001000000000011100100000000001101000000000000111000000000000011010000000000001110000000000000110101000000000011010000000000001110010000000000111001000000000011010000000000001110000000000000110100000000000011100000000000001101010000000000110101000000000011010100000000001100110000000000110100000000000011100000000000001101000000000000111000000000000011010100000000001101000000000000110001000000000011000000000000001100010000000001101001000000000110100000000000011010010000000001001000"));
        org.junit.Assert.assertTrue("'" + str9 + "' != '" + "hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000 ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih" + "'", str9.equals("hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000 ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih"));
    }

    @Test
    public void test372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test372");
        java.lang.String[] strArray3 = strman.Strman.between("Nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull", "", "hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_null97hi00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006ehi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!nullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037Hihinullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037Hihinullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037Hihinullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037Hihinullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037Hihinullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037Hihinullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037Hihinullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037Hihinullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037Hihinullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037Hihinull97");
        org.junit.Assert.assertNotNull(strArray3);
    }

    @Test
    public void test373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test373");
        java.lang.String str3 = strman.Strman.rightPad("Nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull", "79LLUN779LLUN979LLUNl79LLUNl79LLUNu79LLUNn79LLUN79LLUN779LLUN979LLUNl79LLUNl79LLUNu79LLUNn79LLUN", 256);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "Nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull" + "'", str3.equals("Nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull"));
    }

    @Test
    public void test374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test374");
        java.lang.String[] strArray1 = null;
        java.lang.String str2 = strman.Strman.append("hihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi_hhihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi_hhihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi_hhihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi_hhihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi_hhihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi_hhihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi_h", strArray1);
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi_hhihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi_hhihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi_hhihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi_hhihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi_hhihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi_hhihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi_h" + "'", str2.equals("hihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi_hhihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi_hhihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi_hhihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi_hhihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi_hhihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi_hhihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi_h"));
    }

    @Test
    public void test375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test375");
        int int2 = strman.Strman.lastIndexOf("hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!5", "hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_null97hi00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006ehi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!==AbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnb");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
    }

    @Test
    public void test376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test376");
        java.lang.String[] strArray2 = strman.Strman.words("48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101");
        java.lang.String str4 = strman.Strman.join(strArray2, "hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!");
        boolean boolean6 = strman.Strman.containsAll("NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97", strArray2, false);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101" + "'", str4.equals("48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101"));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test377");
        java.lang.String[] strArray3 = strman.Strman.between("null97nnul1097null971097", "", "nullnull97nnulNullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull");
        org.junit.Assert.assertNotNull(strArray3);
    }

    @Test
    public void test378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test378");
        java.lang.String str2 = strman.Strman.repeat("nIHI97HHI97HI48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101uIHI97HHI97HI48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101lIHI97HHI97HI48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101l10145848435558484994584849945848475158484551584841012584841014584843555848499458484994584847515848455158484353584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484751584841014584843555848499458484994584847515848455158484551584841014584843555848499458484994584847515848455158484ih-ihh-ih-i", 96);
    }

    @Test
    public void test379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test379");
        java.lang.String[] strArray3 = strman.Strman.chars("Hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97");
        boolean boolean5 = strman.Strman.containsAll("ihi_hhi_hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101", strArray3, true);
        java.lang.String str6 = strman.Strman.appendArray("00110001170010800108000570005500078001100011700108hi-hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101", strArray3);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "00110001170010800108000570005500078001100011700108hi-hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101Hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97" + "'", str6.equals("00110001170010800108000570005500078001100011700108hi-hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101Hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97"));
    }

    @Test
    public void test380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test380");
        java.lang.String str3 = strman.Strman.removeRight("000000000011000000000000001100000000000000110011000000000011100100000000001100000000000000110000000000000011001100000000001101110000000000110000000000000011000000000000001100010000000000110000000000000011010000000000001100000000000000110000000000000011000100000000001100000000000000110101", "MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA0ZTAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwNTUwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDRjMDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA0YzAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwMzkwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3Nnullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037hihiullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullNullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull97Nnull97Unull97Lnull97Lnull979null977null97null97", true);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "000000000011000000000000001100000000000000110011000000000011100100000000001100000000000000110000000000000011001100000000001101110000000000110000000000000011000000000000001100010000000000110000000000000011010000000000001100000000000000110000000000000011000100000000001100000000000000110101" + "'", str3.equals("000000000011000000000000001100000000000000110011000000000011100100000000001100000000000000110000000000000011001100000000001101110000000000110000000000000011000000000000001100010000000000110000000000000011010000000000001100000000000000110000000000000011000100000000001100000000000000110101"));
    }

    @Test
    public void test381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test381");
        java.lang.String str1 = strman.Strman.humanize
        org.junit.Assert.assertTrue("'" + strstr1.equals
    }

    @Test
    public void test382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test382");
        int int2 = strman.Strman.lastIndexOf
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
    }

    @Test
    public void test383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test383");
        java.lang.String[] strArray4 = strman.Strman.split("00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e", "NULL97N Ullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull");
        java.lang.String str5 = strman.Strman.appendArray("Hibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mnull97", strArray4);
        java.util.Optional<java.lang.String> strOptional6 = strman.Strman.trimEnd("NULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULL", strArray4);
        java.lang.Class<?> wildcardClass7 = strOptional6.getClass();
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "Hibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mnull9700370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e" + "'", str5.equals("Hibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mnull9700370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e"));
        org.junit.Assert.assertNotNull(strOptional6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test384");
        java.util.Optional<java.lang.String> strOptional1 = strman.Strman.tail("ullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnull");
        org.junit.Assert.assertNotNull(strOptional1);
    }

    @Test
    public void test385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test385");
        java.lang.String str1 = strman.Strman.dasherize("001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000ihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi_h");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000ihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi-h" + "'", str1.equals("001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000ihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi-h"));
    }

    @Test
    public void test386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test386");
        java.lang.String str2 = strman.Strman.ensureRightull
        org.junit.Assert.assertTrue("'" + strullstr2.equals
    }

    @Test
    public void test387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test387");
        java.lang.String[] strArray4 = strman.Strman.split("Hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e
        boolean boolean6 = strman.Strman.containsAnystrArray4, false);
        boolean boolean7 = strman.Strman.containsAll("79llun779llun979llunl_79llunl_79llunu_79llunn_79llun79llun001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000hi!l_u_n_n_79l_l_u_n_lunn_79llun79llun1", strArray4);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test388");
        java.lang.String[] strArray2 = strman.Strman.wordsull97Nnull97Unull97Lnull97Lnull979null977null97");
        org.junit.Assert.assertNotNull(strArray2);
    }

    @Test
    public void test389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test389");
        try {
            java.lang.String str3 = strman.Strman.slice("nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull", 330, 4);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -326");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        }
    }

    @Test
    public void test390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test390");
        try {
            java.lang.String str3 = strman.Strman.slice("00072001050010400105", (int) '#', (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -34");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        }
    }

    @Test
    public void test391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test391");
        boolean boolean1 = strman.Strman.isString((java.lang.Object) "006900680069005f006800680069002d0068006900340038003400380035003100350035003400380034003800350031003500370034003800340038003500340039003900340038003400380035003400390039003400380034003800350035003500330034003800340038003500340031003000310034003800340038003500310035003500340038003400380035003100350035003400380034003800350031003500370034003800340038003500340039003900340038003400380035003400390039003400380034003800350035003500330034003800340038003500340031003000310034003800340038003500310035003700340038003400380035003100350035003400380034003800350031003500370034003800340038003500340039003900340038003400380035003400390039003400380034003800350035003500330034003800340038003500340031003000310034003800340038003500320039003900340038003400380035003100350035003400380034003800350031003500370034003800340038003500340039003900340038003400380035003400390039003400380034003800350035003500330034003800340038003500340031003000310034003800340038003500320039003900340038003400380035003100350035003400380034003800350031003500370034003800340038003500340039003900340038003400380035003400390039003400380034003800350035003500330034003800340038003500340031003000310034003800340038003500330035003300340038003400380035003100350035003400380034003800350031003500370034003800340038003500340039003900340038003400380035003400390039003400380034003800350035003500330034003800340038003500340031003000310034003800340038003500320031003000310034003800340038003500310035003500340038003400380035003100350037003400380034003800350034003900390034003800340038003500340039003900340038003400380035003500350033003400380034003800350034003100300031");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
    }

    @Test
    public void test392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test392");
        java.lang.String str1 = strman.Strman.htmlDecode("nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullullnullnullnullnullnullnull");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "null" + "'", str1.equals("null"));
    }

    @Test
    public void test393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test393");
        java.lang.String[] strArray1 = strman.Strman.lineshI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!7");
        org.junit.Assert.assertNotNull(strArray1);
    }

    @Test
    public void test394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test394");
        long long2 = strman.Strman.countSubstr("nullnull97nnulnull97", "79llun779llun979llunL79llunL79llunU79llunN79lluN");
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
    }

    @Test
    public void test395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test395");
        java.lang.String str1 = strman.Strman.toStudlyCase
        org.junit.Assert.assertTrue("'" + strstr1.equals
    }

    @Test
    public void test396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test396");
        java.util.Optional<java.lang.String> strOptional1 = strman.Strman.head("00078001170010800108000570005500110001100011700108");
        org.junit.Assert.assertNotNull(strOptional1);
    }

    @Test
    public void test397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test397");
        java.util.Map<java.lang.Character, java.lang.Long> charMap1 = strman.Strman.charsCount("hi!hi!97");
        org.junit.Assert.assertNotNull(charMap1);
    }

    @Test
    public void test398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test398");
        java.lang.String str3 = strman.Strman.slice
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "MDA200" + "'", str3.equals("MDA200"));
    }

    @Test
    public void test399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test399");
        try {
            java.lang.String str3 = strman.Strman.decode("hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hiMw==", 294, 280);
            org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException; message: radix 280 greater than Character.MAX_RADIX");
        } catch (java.lang.NumberFormatException e) {
        }
    }

    @Test
    public void test400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test400");
        java.lang.String str1 = strman.Strman.htmlDecode("1null97null97NnulNULL97NNUL!ih");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "null" + "'", str1.equals("null"));
    }

    @Test
    public void test401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test401");
        java.lang.String[] strArray5 = strman.Strman.chars("null");
        java.lang.String str6 = strman.Strman.format("null97nnul", strArray5);
        java.lang.String str7 = strman.Strman.prepend("hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e", strArray5);
        java.lang.String str9 = strman.Strman.join(strArray5, "TnVsbDk3bm51bA==");
        boolean boolean11 = strman.Strman.containsAll("nullnullnullnullnullnullnullnullnullnull", strArray5, false);
        java.lang.String str12 = strman.Strman.prepend("00300030003000300030003000300030003000310030003000310030003000300030003000300030003000300030003000300031003100300031003000300031", strArray5);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "null97nnul" + "'", str6.equals("null97nnul"));
        org.junit.Assert.assertTrue("'" + str7 + "' != '" + "nullhi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e" + "'", str7.equals("nullhi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e"));
        org.junit.Assert.assertTrue("'" + str9 + "' != '" + "nTnVsbDk3bm51bA==uTnVsbDk3bm51bA==lTnVsbDk3bm51bA==l" + "'", str9.equals("nTnVsbDk3bm51bA==uTnVsbDk3bm51bA==lTnVsbDk3bm51bA==l"));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "null00300030003000300030003000300030003000310030003000310030003000300030003000300030003000300030003000300031003100300031003000300031" + "'", str12.equals("null00300030003000300030003000300030003000310030003000310030003000300030003000300030003000300030003000300031003100300031003000300031"));
    }

    @Test
    public void test402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test402");
        java.lang.String[] strArray3 = strman.Strman.chars("null");
        java.lang.String str4 = strman.Strman.prependArray("000780008500076000760005700055001100007800085000760007600057000550011700078000850007600076000570005500108000780008500076000760005700055001080007800085000760007600057000550005700078000850007600076000570005500055000780008500076000760005700055", strArray3);
        java.lang.String str5 = strman.Strman.append("10145848435558484994584849945848475158484551584841012584841014584843555848499458484994584847515848455158484353584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484751584841014584843555848499458484994584847515848455158484551584841014584843555848499458484994584847515848455158484ih-ihllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunlunn79llun790179llun7901lunn79llun", strArray3);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "null000780008500076000760005700055001100007800085000760007600057000550011700078000850007600076000570005500108000780008500076000760005700055001080007800085000760007600057000550005700078000850007600076000570005500055000780008500076000760005700055" + "'", str4.equals("null000780008500076000760005700055001100007800085000760007600057000550011700078000850007600076000570005500108000780008500076000760005700055001080007800085000760007600057000550005700078000850007600076000570005500055000780008500076000760005700055"));
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "10145848435558484994584849945848475158484551584841012584841014584843555848499458484994584847515848455158484353584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484751584841014584843555848499458484994584847515848455158484551584841014584843555848499458484994584847515848455158484ih-ihllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunlunn79llun790179llun7901lunn79llunnull" + "'", str5.equals("10145848435558484994584849945848475158484551584841012584841014584843555848499458484994584847515848455158484353584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484751584841014584843555848499458484994584847515848455158484551584841014584843555848499458484994584847515848455158484ih-ihllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunlunn79llun790179llun7901lunn79llunnull"));
    }

    @Test
    public void test403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test403");
        java.lang.String str3 = strman.Strman.truncate("N ullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullhi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi null97hi00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006ehi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!==abs vnbsx wdux gb15 gbs vnbsx wdux gb15 gbs vnbsx wdux gb15 gbs vnbsx wdux gb15 gbs vnbsx wdux gb15 gbs vnbsx wdux gb15 gbs vnbsx wdux gb15 gbs vnbsx wdux gb15 gbs vnbsx wdux gb15 gbs vnbsx wdux gb15 gbs vnbsx wdux gb15 gbs vnbsx wdux gb15 gbs vnbsx wdux gb15 gbs vnbsx wdux gb15 gbs vnbsx wdux gb15 gbs vnbsx wdux gb15 gbs vnbsx wdux gb15 gbs vnbhi hinull97nnul", (int) (byte) 0, "mda2_ztaw_nz_uw_mdzj_mda2_yz_aw_mzkw_mdm3_mda0_ztaw_nm_uw_mdc1_mda2_yz_aw_nm_mw_mdm5_mdaz_nz_aw_ntuw_mdzl_mda3_ntaw_nm_mw_mdzj_mdaz_otaw_mzcw_mdrj_mda2_ztaw_nz_uw_mdzj_mda2_yz_aw_mzkw_mdm3_mda0_yz_aw_nm_uw_mdc1_mda2_yz_aw_nm_mw_mdm5_mdaz_nz_aw_mzkw_mdzl_mda3_ntaw_nm_mw_mdzj_mdaz_otaw_mzcw_mdm3_mda2_ztaw_nz_uw_mdzj_mda2_yz_aw_mzkw_mdmih79llun_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_mw==hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!null97_nnulnull000780008500076000760005700055001100007800085000760007600057000550011700078000850007600076000570005500108000780008500076000760005700055001080007800085000760007600057000550005700078000850007600076000570005500055000780008500076000760005700055_null97n_null97u_null97l_null97l_null979_null977_null979710");
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "" + "'", str3.equals(""));
    }

    @Test
    public void test404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test404");
        java.lang.String str3 = strman.Strman.ensureRighttrue);
        org.junit.Assert.assertTrue("'" + strstr3.equals(""));
    }

    @Test
    public void test405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test405");
        java.lang.String[] strArray2 = strman.Strman.lines("mda2006e0075006c006c00390037ztaw006e0075006c006c00390037nz006e0075006c006c00390037uw006e0075006c006c00390037mdzj006e0075006c006c00390037mda2006e0075006c006c00390037yz006e0075006c006c00390037aw006e0075006c006c00390037mzkw006e0075006c006c00390037mdm3");
        java.util.Optional<java.lang.String> strOptional3 = strman.Strman.trimStart("", strArray2);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(strOptional3);
    }

    @Test
    public void test406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test406");
        java.lang.String str1 = strman.Strman.htmlDecode("hihi
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "null" + "'", str1.equals("null"));
    }

    @Test
    public void test407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test407");
        java.lang.String[] strArray2 = strman.Strman.lines("IHI97HHI97HI48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101n-u-l-l97-n-n-u-lhi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hinULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULL-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-null97nnul-hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!null97-nnul");
        boolean boolean3 = strman.Strman.containsAny("null97nnul1097null971097null97nnulnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullhi00370039006c006c0075006e0068006900680069003700370039006c006c0075006e003900370039006c006c0075006e002d006c00370039006c006c0075006e002d006c00370039006c006c0075006e002d007500370039006c006c0075006e002d006e00370039006c006c0075006e002d0068006900680069hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101", strArray2);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test408");
        java.lang.String str1 = strman.Strman.collapseWhitespace("48485457484854564848545748485310248485456484854564848545748485010048485456484854574848515248485156484851524848515648485153484851494848515348485153484851524848515648485152484851564848515348485149484851534848515548485152484851564848515248485156484851534848515248485157484851574848515248485156484851524848515648485153484851524848515748485157484851524848515648485152484851564848515348485153484851534848515148485152484851564848515248485156484851534848515248485149484851484848514948485152484851564848515248485156484851534848514948485153484851534848515248485156484851524848515648485153484851494848515348485153484851524848515648485152484851564848515348485149484851534848515548485152484851564848515248485156484851534848515248485157484851574848515248485156484851524848515648485153484851524848515748485157484851524848515648485152484851564848515348485153484851534848515148485152484851564848515248485156484851534848515248485149484851484848514948485152484851564848515248485156484851534848514948485153484851554848515248485156484851524848515648485153484851494848515348485153484851524848515648485152484851564848515348485149484851534848515548485152484851564848515248485156484851534848515248485157484851574848515248485156484851524848515648485153484851524848515748485157484851524848515648485152484851564848515348485153484851534848515148485152484851564848515248485156484851534848515248485149484851484848514948485152484851564848515248485156484851534848515048485157484851574848515248485156484851524848515648485153484851494848515348485153484851524848515648485152484851564848515348485149484851534848515548485152484851564848515248485156484851534848515248485157484851574848515248485156484851524848515648485153484851524848515748485157484851524848515648485152484851564848515348485153484851534848515148485152484851564848515248485156484851534848515248485149484851484848514948485152484851564848515248485156484851534848515048485157484851574848515248485156484851524848515648485153484851494848515348485153484851524848515648485152484851564848515348485149484851534848515548485152484851564848515248485156484851534848515248485157484851574848515248485156484851524848515648485153484851524848515748485157484851524848515648485152484851564848515348485153484851534848515148485152484851564848515248485156484851534848515248485149484851484848514948485152484851564848515248485156484851534848515148485153484851514848515248485156484851524848515648485153484851494848515348485153484851524848515648485152484851564848515348485149484851534848515548485152484851564848515248485156484851534848515248485157484851574848515248485156484851524848515648485153484851524848515748485157484851524848515648485152484851564848515348485153484851534848515148485152484851564848515248485156484851534848515248485149484851484848514948485152484851564848515248485156484851534848515048485149484851484848514948485152484851564848515248485156484851534848514948485153484851534848515248485156484851524848515648485153484851494848515348485155484851524848515648485152484851564848515348485152484851574848515748485152484851564848515248485156484851534848515248485157484851574848515248485156484851524848515648485153484851534848515348485151484851524848515648485152484851564848515348485152484851494848514848485149104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "48485457484854564848545748485310248485456484854564848545748485010048485456484854574848515248485156484851524848515648485153484851494848515348485153484851524848515648485152484851564848515348485149484851534848515548485152484851564848515248485156484851534848515248485157484851574848515248485156484851524848515648485153484851524848515748485157484851524848515648485152484851564848515348485153484851534848515148485152484851564848515248485156484851534848515248485149484851484848514948485152484851564848515248485156484851534848514948485153484851534848515248485156484851524848515648485153484851494848515348485153484851524848515648485152484851564848515348485149484851534848515548485152484851564848515248485156484851534848515248485157484851574848515248485156484851524848515648485153484851524848515748485157484851524848515648485152484851564848515348485153484851534848515148485152484851564848515248485156484851534848515248485149484851484848514948485152484851564848515248485156484851534848514948485153484851554848515248485156484851524848515648485153484851494848515348485153484851524848515648485152484851564848515348485149484851534848515548485152484851564848515248485156484851534848515248485157484851574848515248485156484851524848515648485153484851524848515748485157484851524848515648485152484851564848515348485153484851534848515148485152484851564848515248485156484851534848515248485149484851484848514948485152484851564848515248485156484851534848515048485157484851574848515248485156484851524848515648485153484851494848515348485153484851524848515648485152484851564848515348485149484851534848515548485152484851564848515248485156484851534848515248485157484851574848515248485156484851524848515648485153484851524848515748485157484851524848515648485152484851564848515348485153484851534848515148485152484851564848515248485156484851534848515248485149484851484848514948485152484851564848515248485156484851534848515048485157484851574848515248485156484851524848515648485153484851494848515348485153484851524848515648485152484851564848515348485149484851534848515548485152484851564848515248485156484851534848515248485157484851574848515248485156484851524848515648485153484851524848515748485157484851524848515648485152484851564848515348485153484851534848515148485152484851564848515248485156484851534848515248485149484851484848514948485152484851564848515248485156484851534848515148485153484851514848515248485156484851524848515648485153484851494848515348485153484851524848515648485152484851564848515348485149484851534848515548485152484851564848515248485156484851534848515248485157484851574848515248485156484851524848515648485153484851524848515748485157484851524848515648485152484851564848515348485153484851534848515148485152484851564848515248485156484851534848515248485149484851484848514948485152484851564848515248485156484851534848515048485149484851484848514948485152484851564848515248485156484851534848514948485153484851534848515248485156484851524848515648485153484851494848515348485155484851524848515648485152484851564848515348485152484851574848515748485152484851564848515248485156484851534848515248485157484851574848515248485156484851524848515648485153484851534848515348485151484851524848515648485152484851564848515348485152484851494848514848485149104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533" + "'", str1.equals("48485457484854564848545748485310248485456484854564848545748485010048485456484854574848515248485156484851524848515648485153484851494848515348485153484851524848515648485152484851564848515348485149484851534848515548485152484851564848515248485156484851534848515248485157484851574848515248485156484851524848515648485153484851524848515748485157484851524848515648485152484851564848515348485153484851534848515148485152484851564848515248485156484851534848515248485149484851484848514948485152484851564848515248485156484851534848514948485153484851534848515248485156484851524848515648485153484851494848515348485153484851524848515648485152484851564848515348485149484851534848515548485152484851564848515248485156484851534848515248485157484851574848515248485156484851524848515648485153484851524848515748485157484851524848515648485152484851564848515348485153484851534848515148485152484851564848515248485156484851534848515248485149484851484848514948485152484851564848515248485156484851534848514948485153484851554848515248485156484851524848515648485153484851494848515348485153484851524848515648485152484851564848515348485149484851534848515548485152484851564848515248485156484851534848515248485157484851574848515248485156484851524848515648485153484851524848515748485157484851524848515648485152484851564848515348485153484851534848515148485152484851564848515248485156484851534848515248485149484851484848514948485152484851564848515248485156484851534848515048485157484851574848515248485156484851524848515648485153484851494848515348485153484851524848515648485152484851564848515348485149484851534848515548485152484851564848515248485156484851534848515248485157484851574848515248485156484851524848515648485153484851524848515748485157484851524848515648485152484851564848515348485153484851534848515148485152484851564848515248485156484851534848515248485149484851484848514948485152484851564848515248485156484851534848515048485157484851574848515248485156484851524848515648485153484851494848515348485153484851524848515648485152484851564848515348485149484851534848515548485152484851564848515248485156484851534848515248485157484851574848515248485156484851524848515648485153484851524848515748485157484851524848515648485152484851564848515348485153484851534848515148485152484851564848515248485156484851534848515248485149484851484848514948485152484851564848515248485156484851534848515148485153484851514848515248485156484851524848515648485153484851494848515348485153484851524848515648485152484851564848515348485149484851534848515548485152484851564848515248485156484851534848515248485157484851574848515248485156484851524848515648485153484851524848515748485157484851524848515648485152484851564848515348485153484851534848515148485152484851564848515248485156484851534848515248485149484851484848514948485152484851564848515248485156484851534848515048485149484851484848514948485152484851564848515248485156484851534848514948485153484851534848515248485156484851524848515648485153484851494848515348485155484851524848515648485152484851564848515348485152484851574848515748485152484851564848515248485156484851534848515248485157484851574848515248485156484851524848515648485153484851534848515348485151484851524848515648485152484851564848515348485152484851494848514848485149104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533"));
    }

    @Test
    public void test409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test409");
        long long4 = strman.Strman.countSubstrnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull", false, true);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
    }

    @Test
    public void test410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test410");
        java.util.Optional<java.lang.String> strOptional1 = strman.Strman.trimEnd("!HI!HI!HI!6");
        org.junit.Assert.assertNotNull(strOptional1);
    }

    @Test
    public void test411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test411");
        java.lang.String[] strArray2 = strman.Strman.chop("196", 8704);
        org.junit.Assert.assertNotNull(strArray2);
    }

    @Test
    public void test412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test412");
        java.lang.String str3 = strman.Strman.surround("", "591089912010138108108117110108108117110591089912010138108108117110108108117110nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull", "n_u_l_l97hihi");
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "591089912010138108108117110108108117110591089912010138108108117110108108117110nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnulln_u_l_l97hihi" + "'", str3.equals("591089912010138108108117110108108117110591089912010138108108117110108108117110nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnulln_u_l_l97hihi"));
    }

    @Test
    public void test413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test413");
        java.lang.String str1 = strman.Strman.removeSpaces("Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Tl Vmtdk
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "SekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhTlVmtdk3000780011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080005700055000780011000117001080010800057000550008500110001170010800108000570005500076001100011700108001080005700055000760011000117001080010800057000550005700110001170010800108000570005500055001100011700108001080005700055001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001100011700108001080005700055100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100" + "'", str1.equals("SekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhTlVmtdk
    }

    @Test
    public void test414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test414");
        boolean boolean1 = strman.Strman.isBlank("0004800048000480004800048000480004800048000480004800049000490004800048000490004900048000480004800048000480004800048000480004800048000490004900048000490004800049");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
    }

    @Test
    public void test415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test415");
        java.lang.String str3 = strman.Strman.encode("TlVMTDk3aGloaQ==", (int) (byte) 10, 199);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "0000000084000000010800000000860000000077000000008400000000680000000107000000005100000000970000000071000000010800000001110000000097000000008100000000610000000061" + "'", str3.equals("0000000084000000010800000000860000000077000000008400000000680000000107000000005100000000970000000071000000010800000001110000000097000000008100000000610000000061"));
    }

    @Test
    public void test416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test416");
        java.lang.String str1 = strman.Strman.dasherize("lunN79llunnull97null97Nnull97Unull97Lnull97Lnull979null977null97nULL97NNULNullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "lun-n79llunnull97null97-nnull97-unull97-lnull97-lnull979null977null97n-u-l-l97-n-n-u-l-nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull" + "'", str1.equals("lun-n79llunnull97null97-nnull97-unull97-lnull97-lnull979null977null97n-u-l-l97-n-n-u-l-nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull"));
    }

    @Test
    public void test417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test417");
        java.lang.String[] strArray5 = strman.Strman.words("", "hi!");
        java.lang.String str6 = strman.Strman.format("null", strArray5);
        java.util.List<java.lang.String> strList7 = strman.Strman.zip(strArray5);
        java.lang.String str8 = strman.Strman.appendArray("TnVsbDk3bm51bA==", strArray5);
        java.lang.String str9 = strman.Strman.prepend("1null97null97_nnul_n_u_l_l97_n_n_u_l!ih000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97_nnull97_unull97_lnull97_lnull979null977null97", strArray5);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "null" + "'", str6.equals("null"));
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertTrue("'" + str8 + "' != '" + "TnVsbDk3bm51bA==" + "'", str8.equals("TnVsbDk3bm51bA=="));
        org.junit.Assert.assertTrue("'" + str9 + "' != '" + "1null97null97_nnul_n_u_l_l97_n_n_u_l!ih000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97_nnull97_unull97_lnull97_lnull979null977null97" + "'", str9.equals("1null97null97_nnul_n_u_l_l97_n_n_u_l!ih000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97_nnull97_unull97_lnull97_lnull979null977null97"));
    }

    @Test
    public void test418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test418");
        java.lang.String str1 = strman.Strman.startCase("Hihi
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "Hihistr1.equals("Hihi
    }

    @Test
    public void test419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test419");
        java.lang.String str1 = strman.Strman.reverse
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "5010000000000000000000000000000000000000000000000000401000000000000000000000000000000000000000000000000050100000000000000000000000000000000000000000000000002700000000000000000000000000000000000000000000000000230000000000000000000000000000000000000000000000000001100000000000000000000000000000000000000000000000007110000000000000000000000000000000000000000000000000801000000000000000000000000000000000000000000000000080100000000000000000000000000000000000000000000000007500000000000000000000000000000000000000000000000000550000000000000000000000000000000000000000000000000087000000000000000000000000000000000000000000000000002300000000000000000000000000000000000000000000000000011000000000000000000000000000000000000000000000000071100000000000000000000000000000000000000000000000008010000000000000000000000000000000000000000000000000801000000000000000000000000000000000000000000000000075000000000000000000000000000000000000000000000000005500000000000000000000000000000000000000000000000000580000000000000000000000000000000000000000000000000023000000000000000000000000000000000000000000000000000110000000000000000000000000000000000000000000000000711000000000000000000000000000000000000000000000000080100000000000000000000000000000000000000000000000008010000000000000000000000000000000000000000000000000750000000000000000000000000000000000000000000000000055000000000000000000000000000000000000000000000000006700000000000000000000000000000000000000000000000000230000000000000000000000000000000000000000000000000001100000000000000000000000000000000000000000000000007110000000000000000000000000000000000000000000000000801000000000000000000000000000000000000000000000000080100000000000000000000000000000000000000000000000007500000000000000000000000000000000000000000000000000550000000000000000000000000000000000000000000000000067000000000000000000000000000000000000000000000000002300000000000000000000000000000000000000000000000000011000000000000000000000000000000000000000000000000071100000000000000000000000000000000000000000000000008010000000000000000000000000000000000000000000000000801000000000000000000000000000000000000000000000000075000000000000000000000000000000000000000000000000005500000000000000000000000000000000000000000000000000750000000000000000000000000000000000000000000000000001100000000000000000000000000000000000000000000000007110000000000000000000000000000000000000000000000000801000000000000000000000000000000000000000000000000080100000000000000000000000000000000000000000000000007500000000000000000000000000000000000000000000000000550000000000000000000000000000000000000000000000000055000000000000000000000000000000000000000000000000005010000000000000000000000000000000000000000000000000401000000000000000000000000000000000000000000000000050100000000000000000000000000000000000000000000000004010000000000000000000000000000000000000000000000000011000000000000000000000000000000000000000000000000071100000000000000000000000000000000000000000000000008010000000000000000000000000000000000000000000000000801000000000000000000000000000000000000000000000000075000000000000000000000000000000000000000000000000005500000000000000000000000000000000000000000000000000" + "'", str1.equals
    }

    @Test
    public void test420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test420");
        java.lang.String str3 = strman.Strman.removeRight("lunN79llunnull97null97Nnull97Unull97Lnull97Lnull979null977null97nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullih79llun!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ihtrue);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "lunN79llunnull97null97Nnull97Unull97Lnull97Lnull979null977null97nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull" + "'", str3.equals("lunN79llunnull97null97Nnull97Unull97Lnull97Lnull979null977null97nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull"));
    }

    @Test
    public void test421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test421");
        java.lang.String str1 = strman.Strman.humanize("00000000011010010000000001101000000000000110100100000000001011010000000001101000NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "00000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97" + "'", str1.equals("00000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97"));
    }

    @Test
    public void test422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test422");
        java.util.Optional<java.lang.String> strOptional2 = strman.Strman.first("null97nhinullhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101nul1097null971097nULL97NNULNullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullhi\\-hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101", (int) '4');
        org.junit.Assert.assertNotNull(strOptional2);
    }

    @Test
    public void test423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test423");
        java.lang.String str2 = strman.Strman.toDecamelize("!-h-i!-h-i!-h-i!", "hi-hi");
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "!hi-hihhi-hii!hi-hihhi-hii!hi-hihhi-hii!" + "'", str2.equals("!hi-hihhi-hii!hi-hihhi-hii!hi-hihhi-hii!"));
    }

    @Test
    public void test424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test424");
        java.lang.String[] strArray2 = strman.Strman.split("N000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97Nnull97Unull97Lnull97Lnull979null977null97u000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97Nnull97Unull97Lnull97Lnull979null977null97l000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97Nnull97Unull97Lnull97Lnull979null977null97lnull97null97NnulNULL97NNUL!ih");
        org.junit.Assert.assertNotNull(strArray2);
    }

    @Test
    public void test425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test425");
        java.lang.String str1 = strman.Strman.swapCase("110117108108575500000000017900000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97l00000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97l00000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97u00000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97n77900000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97l00000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97l00000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97u00000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97n97900000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97l00000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97l00000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97u00000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97nl7900000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97l00000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97l00000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97u00000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97nl7900000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97l00000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97l00000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97u00000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97nu7900000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97l00000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97l00000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97u00000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97nn7900000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97l00000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97l00000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97u00000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97n10100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100");
        org.junit.Assert.assertTrue("'" + strstr1.equals
    }

    @Test
    public void test426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test426");
        java.lang.String[] strArray2 = strman.Strman.chop("tl_v_m_t_dk31null97null97_nnul_n_u_l_l97_n_n_u_l!ih000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97_nnull97_unull97_lnull97_lnull979null977null97", 402);
        org.junit.Assert.assertNotNull(strArray2);
    }

    @Test
    public void test427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test427");
        java.lang.String[] strArray1 = strman.Strman.words("mda2_ztaw_nz_uw_mdzj_mda2_yz_aw_mzkw_mdm3_mda0_ztaw_nm_uw_mdc1_mda2_yz_aw_nm_mw_mdm5_mdaz_nz_aw_ntuw_mdzl_mda3_ntaw_nm_mw_mdzj_mdaz_otaw_mzcw_mdrj_mda2_ztaw_nz_uw_mdzj_mda2_yz_aw_mzkw_mdm3_mda0_yz_aw_nm_uw_mdc1_mda2_yz_aw_nm_mw_mdm5_mdaz_nz_aw_mzkw_mdzl_mda3_ntaw_nm_mw_mdzj_mdaz_otaw_mzcw_mdm3_mda2_ztaw_nz_uw_mdzj_mda2_yz_aw_mzkw_mdmih79llun_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_mw==hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!null97_nnulnull000780008500076000760005700055001100007800085000760007600057000550011700078000850007600076000570005500108000780008500076000760005700055001080007800085000760007600057000550005700078000850007600076000570005500055000780008500076000760005700055_null97n_null97u_null97l_null97l_null979_null977_null979710");
        java.lang.Class<?> wildcardClass2 = strArray1.getClass();
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test428");
        boolean boolean3 = strman.Strman.contains("n-u-l-l97-n-n-u-l", "=g2xphwA000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97Nnull97Unull97Lnull97Lnull979null977null97Hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hifalse);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test429");
        java.lang.String str2 = strman.Strman.last("10145848435558484994584849945848475158484551584841012584841014584843555848499458484994584847515848455158484353584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484751584841014584843555848499458484994584847515848455158484551584841014584843555848499458484994584847515848455158484ih-ihllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunlunn79llun790179llun7901lunn79llun", 656);
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "10145848435558484994584849945848475158484551584841012584841014584843555848499458484994584847515848455158484353584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484751584841014584843555848499458484994584847515848455158484551584841014584843555848499458484994584847515848455158484ih-ihllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunlunn79llun790179llun7901lunn79llun" + "'", str2.equals("10145848435558484994584849945848475158484551584841012584841014584843555848499458484994584847515848455158484353584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484751584841014584843555848499458484994584847515848455158484551584841014584843555848499458484994584847515848455158484ih-ihllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunlunn79llun790179llun7901lunn79llun"));
    }

    @Test
    public void test430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test430");
        java.lang.String str1 = strman.Strman.binEncode
    }

    @Test
    public void test431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test431");
        java.lang.String str1 = strman.Strman.transliterate("000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97_nnull97_unull97_lnull97_lnull979null977null97_hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97_nnull97_unull97_lnull97_lnull979null977null97_hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!" + "'", str1.equals("000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97_nnull97_unull97_lnull97_lnull979null977null97_hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!"));
    }

    @Test
    public void test432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test432");
        java.lang.String str1 = strman.Strman.rightTrim("006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c" + "'", str1.equals("006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c"));
    }

    @Test
    public void test433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test433");
        boolean boolean2 = strman.Strman.inequal("1null97null97NnulNULL97NNUL!ih004e0055004c004c00390037004e004e0055004c002100690068", "lunN79llunnull97null97Nnull97Unull97Lnull97Lnull979null977null97nULL97NNULNullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull1097nullnull97nnulhi006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull97nnulnull97null97nnulnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullhi-hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
    }

    @Test
    public void test434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test434");
        java.util.Optional<java.lang.String> strOptional1 = strman.Strman.trimStart("10010110000000000001001000000000");
        org.junit.Assert.assertNotNull(strOptional1);
    }

    @Test
    public void test435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test435");
        java.lang.String[] strArray2 = strman.Strman.split("00300030003000300030003000300030003000310030003000310030003000300030003000300030003000300030003000300031003100300031003000300031", "00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e006c00370039006c006c0075006e006c00370039006c006c0075006e007500370039006c006c0075006e006e00370039006c006c0075006e00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e006c00370039006c006c0075006e006c00370039006c006c0075006e007500370039006c006c0075006e006e00370039006c006c0075006e0031003100300031003100370031003000380031003000380035003700350035006e0075006c006c00390037006e006e0075006c006c003900370075006e0075006c006c00390037006c006e0075006c006c00390037006c006e0075006c006c003900370039006e0075006c006c003900370037006e0075006c006c00390037");
        org.junit.Assert.assertNotNull(strArray2);
    }

    @Test
    public void test436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test436");
        try {
            java.lang.String str3 = strman.Strman.decode("Hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e!", (int) (byte) 100, 160);
            org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException; message: radix 160 greater than Character.MAX_RADIX");
        } catch (java.lang.NumberFormatException e) {
        }
    }

    @Test
    public void test437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test437");
        java.util.Optional<java.lang.String> strOptional1 = strman.Strman.head("Nnullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037hihiullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull");
        org.junit.Assert.assertNotNull(strOptional1);
    }

    @Test
    public void test438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test438");
        java.lang.String str3 = strman.Strman.safeTruncate("hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!", 50, "hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hihihi");
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hihihi" + "'", str3.equals("hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hihihi"));
    }

    @Test
    public void test439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test439");
        java.lang.String str1 = strman.Strman.collapseWhitespace("Nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "Nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull" + "'", str1.equals("Nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull"));
    }

    @Test
    public void test440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test440");
        java.lang.String str3 = strman.Strman.safeTruncate("TlVMTDk3hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!", (int) (byte) 1, "0007200105001040010500078000850007600076000570005500110000780008500076000760005700055001170007800085000760007600057000550010800078000850007600076000570005500108000780008500076000760005700055000570007800085000760007600057000550005500078000850007600076000570005500057000550004900048000780011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080005700055000780011000117001080010800057000550008500110001170010800108000570005500076001100011700108001080005700055000760011000117001080010800057000550005700110001170010800108000570005500055001100011700108001080005700055001100011700108001080005700055");
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "0007200105001040010500078000850007600076000570005500110000780008500076000760005700055001170007800085000760007600057000550010800078000850007600076000570005500108000780008500076000760005700055000570007800085000760007600057000550005500078000850007600076000570005500057000550004900048000780011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080005700055000780011000117001080010800057000550008500110001170010800108000570005500076001100011700108001080005700055000760011000117001080010800057000550005700110001170010800108000570005500055001100011700108001080005700055001100011700108001080005700055" + "'", str3.equals("0007200105001040010500078000850007600076000570005500110000780008500076000760005700055001170007800085000760007600057000550010800078000850007600076000570005500108000780008500076000760005700055000570007800085000760007600057000550005500078000850007600076000570005500057000550004900048000780011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080005700055000780011000117001080010800057000550008500110001170010800108000570005500076001100011700108001080005700055000760011000117001080010800057000550005700110001170010800108000570005500055001100011700108001080005700055001100011700108001080005700055"));
    }

    @Test
    public void test441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test441");
        java.lang.String str1 = strman.Strman.leftTrim("0030003000310030003400300030003100300035006e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c0031003100300031003100370031003000380031003000380035003700350035003000300030003000300030003000300030003100370039004c004c0055004e003700370039004c004c0055004e003900370039004c004c0055004e006c00370039004c004c0055004e006c00370039004c004c0055004e007500370039004c004c0055004e006e00370039004c004c0055004e
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "0030003000310030003400300030003100300035006e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c0031003100300031003100370031003000380031003000380035003700350035003000300030003000300030003000300030003100370039004c004c0055004e003700370039004c004c0055004e003900370039004c004c0055004e006c00370039004c004c0055004e006c00370039004c004c0055004e007500370039004c004c0055004e006e00370039004c004c0055004estr1.equals("0030003000310030003400300030003100300035006e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c0031003100300031003100370031003000380031003000380035003700350035003000300030003000300030003000300030003100370039004c004c0055004e003700370039004c004c0055004e003900370039004c004c0055004e006c00370039004c004c0055004e006c00370039004c004c0055004e007500370039004c004c0055004e006e00370039004c004c0055004e
    }

    @Test
    public void test442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test442");
        java.lang.String[] strArray1 = strman.Strman.lines("100");
        org.junit.Assert.assertNotNull(strArray1);
    }

    @Test
    public void test443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test443");
        int int4 = strman.Strman.indexOf("08000570005500110001100011700108", "bl91X2xfbDk3X25fdWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxuLXUtbC1sOTctbi1uLXUtbA==", 740, false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
    }

    @Test
    public void test444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test444");
        java.lang.String str1 = strman.Strman.underscored("hihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "hihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi" + "'", str1.equals("hihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi"));
    }

    @Test
    public void test445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test445");
        boolean boolean2 = strman.Strman.isEnclosedBetween("blVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxM000000005500000000570000000076000000007600000000850000000078000000005500000000550000000057000000007600000000760000000085000000007800000000570000000055000000005700000000760000000076000000008500000000780000000108000000005500000000570000000076000000007600000000850000000078000000010800000000550000000057000000007600000000760000000085000000007800000001170000000055000000005700000000760000000076000000008500000000780000000110000000005500000000570000000076000000007600000000850000000078hihi", "nullhi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-null97hi\\-00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test446");
        java.lang.String str2 = strman.Strman.toDecamelize("Null97nnul1097nullllun779llun979llunl79llunl79llunu79llunn79llun79llun779llun979llunl79llunl79llunu79llunn79llun");
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "null97nnul1097null971097" + "'", str2.equals("null97nnul1097null971097"));
    }

    @Test
    public void test447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test447");
        java.lang.String str1 = strman.Strman.htmlEncode
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull" + "'", str1.equals("nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull"));
    }

    @Test
    public void test448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test448");
        int int3 = strman.Strman.lastIndexOf("nullhi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e", "NULLNULL", true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
    }

    @Test
    public void test449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test449");
        java.lang.String[] strArray1 = strman.Strman.lines("Ll97");
        org.junit.Assert.assertNotNull(strArray1);
    }

    @Test
    public void test450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test450");
        java.util.Optional<java.lang.String> strOptional1 = strman.Strman.trimEnd("null97n-ullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull
        org.junit.Assert.assertNotNull(strOptional1);
    }

    @Test
    public void test451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test451");
        java.lang.String str1 = strman.Strman.toCamelCase("006e0075006c006c00390037hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "006e0075006c006c00390037hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!" + "'", str1.equals("006e0075006c006c00390037hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!"));
    }

    @Test
    public void test452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test452");
        boolean boolean2 = strman.Strman.isEnclosedBetweennULL97NNULNullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test453");
        java.lang.String str2 = strman.Strman.ensureRight("Hihi", "NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97");
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "HihiNULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97" + "'", str2.equals("HihiNULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97"));
    }

    @Test
    public void test454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test454");
        java.lang.String str1 = strman.Strman.hexEncode("48485151");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "00340038003400380035003100350031" + "'", str1.equals("00340038003400380035003100350031"));
    }

    @Test
    public void test455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test455");
        int int2 = strman.Strman.lastIndexOf("NULL97", "hihi-n-u-l-l97n-n-u-l-l97u-n-u-l-l97l-n-u-l-l97l-n-u-l-l979-n-u-l-l977-n-u-l-l979710");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
    }

    @Test
    public void test456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test456");
        try {
            java.lang.String str3 = strman.Strman.slice("s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_tl_v_m_t_dk330", (-1), 5416);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        }
    }

    @Test
    public void test457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test457");
        java.lang.String str3 = strman.Strman.surround("HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!NULL97HI!00370039006C006C0075006E003700370039006C006C0075006E003900370039006C006C0075006E004C00370039006C006C0075006E004C00370039006C006C0075006E005500370039006C006C0075006E004E00370039006C006C0075006E", "280", "nullhi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e");
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "280HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!NULL97HI!00370039006C006C0075006E003700370039006C006C0075006E003900370039006C006C0075006E004C00370039006C006C0075006E004C00370039006C006C0075006E005500370039006C006C0075006E004E00370039006C006C0075006Enullhi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e" + "'", str3.equals("280HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!NULL97HI!00370039006C006C0075006E003700370039006C006C0075006E003900370039006C006C0075006E004C00370039006C006C0075006E004C00370039006C006C0075006E005500370039006C006C0075006E004E00370039006C006C0075006Enullhi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e"));
    }

    @Test
    public void test458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test458");
        java.lang.String[] strArray2 = strman.Strman.words("3kdtm_v_l_t_hke_s_hke_s_hke_s_hke_s_30", "null97_nnull97_unull97_lnull97_lnull979null977null97_nullsAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAWadmWadmWadmXedmXadmWadmWadmWadmWetmWedmWedmWadmWadmWadmXatmXatmWadmWadmWadmXedmXadmWadmWadmWadmWetmWedmWedmWadmWadmWatmXatmXedmWadmWadmWadmXetmWedmXadmWadmWadmWetmWetmWadmWadmWadmWatmXatmXadmWadmWadmWadmWetmXadmXadmWadmWadmWatmXatmXedmWadmWadmWatmXatmXedmWadmWadmWadmXedmXetmWadmWadmWadmWetmXatmWedmWadmWadmWatmXatmXadmLLUN;RAbREDNu
        org.junit.Assert.assertNotNull(strArray2);
    }

    @Test
    public void test459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test459");
        boolean boolean2 = strman.Strman.endsWith("000780008500076000760005700055001100007800085000760007600057000550011700078000850007600076000570005500108000780008500076000760005700055001080007800085000760007600057000550005700078000850007600076000570005500055000780008500076000760005700055", "hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test460");
        java.util.Map<java.lang.Character, java.lang.Long> charMap1 = strman.Strman.charsCount("000000000179LLUN779LLUN979LLUNl79LLUNl79LLUNu79LLUNn79LLUN10100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100");
        org.junit.Assert.assertNotNull(charMap1);
    }

    @Test
    public void test461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test461");
        boolean boolean2 = strman.Strman.contains("79llun779llun979llunl79llunl79llunu79llunn79llun79llun779llun979llunl79llunl79llunu79llunn79llun", "HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!NULL97HI!00370039006C006C0075006E003700370039006C006C0075006E003900370039006C006C0075006E004C00370039006C006C0075006E004C00370039006C006C0075006E005500370039006C006C0075006E004E00370039006C006C0075006EHiHihiHihiHihiHihiHihiHihiHihiHihiHihiHi");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test462");
        int int3 = strman.Strman.lastIndexOf("11-7210533hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!", "", false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 310 + "'", int3 == 310);
    }

    @Test
    public void test463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test463");
        java.lang.String str3 = strman.Strman.leftPad("HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-NULL97HI-00370039006C006C0075006E003700370039006C006C0075006E003900370039006C006C0075006E004C00370039006C006C0075006E004C00370039006C006C0075006E005500370039006C006C0075006E004E00370039006C006C0075006En-u-l-l97-n-ullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull", "Ihi97hhi97hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101", 7842);
    }

    @Test
    public void test464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test464");
        java.lang.String[] strArray2 = strman.Strman.words("", "nullnull97nnul=g2xphwA000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97Nnull97Unull97Lnull97Lnull979null977null97Hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!00000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hiMw==");
        org.junit.Assert.assertNotNull(strArray2);
    }

    @Test
    public void test465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test465");
        java.lang.String str3 = strman.Strman.removeRight("006900680069005f006800680069002dhi!hi!97", true);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "006900680069005f006800680069002dstr3.equals("006900680069005f006800680069002d
    }

    @Test
    public void test466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test466");
        boolean boolean4 = strman.Strman.endsWith("Hibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mnull97", "false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test467");
        java.lang.String str2 = strman.Strman.repeat("7", (int) (byte) 0);
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "" + "'", str2.equals(""));
    }

    @Test
    public void test468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test468");
        java.lang.String str1 = strman.Strman.removeNonWords("!HI!HI!HI!6");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "HIHIHI6" + "'", str1.equals("HIHIHI6"));
    }

    @Test
    public void test469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test469");
        java.util.Optional<java.lang.String> strOptional2 = strman.Strman.at("001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH", 2851);
        org.junit.Assert.assertNotNull(strOptional2);
    }

    @Test
    public void test470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test470");
        boolean boolean1 = strman.Strman.isLowerCase("Null97Nnull97Unull97Lnull97Lnull979null977null97");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
    }

    @Test
    public void test471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test471");
        java.lang.String str1 = strman.Strman.leftTrim("ihih");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "ihih" + "'", str1.equals("ihih"));
    }

    @Test
    public void test472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test472");
        java.lang.String str3 = strman.Strman.truncate("null33727333727333727333", (int) (byte) 0, "Nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull");
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "" + "'", str3.equals(""));
    }

    @Test
    public void test473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test473");
        java.lang.String str1 = strman.Strman.toCamelCase("hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-null97nnulNULL97N UllnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullHihihihiNULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL979710otk0odq4ntq5otq4ndg1ntuz Ndg0odu0mtax Ndg0odux Ntu0odq4nte1ntq4ndg1mtu3ndg0odu0otk0odq4ntq5otq4ndg1ntuz Ndg0odu0mtax Ndg0odux Ntc0odq4nte1ntq4ndg1mtu3");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "hiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiNull97hiNull97nnulNULL97NUllnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullHihihihiNULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL979710otk0odq4ntq5otq4ndg1ntuzNdg0odu0mtaxNdg0oduxNtu0odq4nte1ntq4ndg1mtu3ndg0odu0otk0odq4ntq5otq4ndg1ntuzNdg0odu0mtaxNdg0oduxNtc0odq4nte1ntq4ndg1mtu3" + "'", str1.equals("hiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiNull97hiNull97nnulNULL97NUllnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullHihihihiNULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL979710otk0odq4ntq5otq4ndg1ntuzNdg0odu0mtaxNdg0oduxNtu0odq4nte1ntq4ndg1mtu3ndg0odu0otk0odq4ntq5otq4ndg1ntuzNdg0odu0mtaxNdg0oduxNtc0odq4nte1ntq4ndg1mtu3"));
    }

    @Test
    public void test474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test474");
        try {
            java.util.Optional<java.lang.String> strOptional2 = strman.Strman.first("NULLNULL000000005500000000570000000076000000007600000000850000000078000000005500000000550000000057000000007600000000760000000085000000007800000000570000000055000000005700000000760000000076000000008500000000780000000108000000005500000000570000000076000000007600000000850000000078000000010800000000550000000057000000007600000000760000000085000000007800000001170000000055000000005700000000760000000076000000008500000000780000000110000000005500000000570000000076000000007600000000850000000078hihiymx_w_t_v_r_f_n_v_z_u_r_xh_p_vl_v4_t_v_rs_vk1_u_r_t_v_w_v_e_v4_t1_z_ve_e1_ub_f_z_n_v_e_u1_vl_r_fe_e9_w_v_xh_n_v_gx_w_t_v_r_f_n_v_z_u_r_xh_p_vl_v4_t_v_rs_vk1_u_r_t_v_w_v_e_v4_t1_z_ve_e1_ub_f_z_n_v_e_u1_vl_r_fe_e9_w_v_xh_n_v_gx_w_t_v_r_f_n_v_z_u_r_xh_p_vl_v4_t_v_rs_vk1_u_r_t_v_w_v_e_v4_t1_z_ve_e1_ub_f_z_n_v_e_u1_vl_r_fe_e9_w_v_xh_n_v_gx_w_t_v_r_f_n_v_z_u_r_xh_p_vl_v4_t_v_rs_vk1_u_r_t_v_w_v_e_v4_t1_z_ve_e1_ub_f_z_n_v_e_u1_vl_r_fe_e9_w_v_xh_n_v_gx_w_t_v_r_f_n_v_z_u_r_xh_p_vl_v4_t_v_rs_vk1_u_r_t_v_w_v_e_v4_t1_z_ve_e1_ub_f_z_n_v_e_u1_vl_r_fe_e9_w_v_xh_n_v_gx_w_t_v_r_f_n_v_z_u_r_xh_p_vl_v4_t_t_aw_m_d_aw_m_d_aw_n_t_uw_m_d_aw_m_d_aw_m_d_u3_m_d_aw_m_d_aw_m_d_a3_nj_aw_m_d_aw_m_d_aw_nz_yw_m_d_aw_m_d_aw_m_dg1_m_d_aw_m_d_aw_m_d_a3_o_d_aw_m_d_aw_m_d_aw_n_t_uw_m_d_aw_m_d_aw_m_d_u1_m_d_aw_m_d_aw_m_d_a1_nz_aw_m_d_aw_m_d_aw_nz_yw_m_d_aw_m_d_aw_m_dc2_m_d_aw_m_d_aw_m_d_a4_n_t_aw_m_d_aw_m_d_aw_nzgw_m_d_aw_m_d_aw_m_d_u3_m_d_aw_m_d_aw_m_d_a1_n_t_aw_m_d_aw_m_d_aw_n_tcw_m_d_aw_m_d_aw_m_dc2_m_d_aw_m_d_aw_m_d_a3_nj_aw_m_d_aw_m_d_aw_o_d_uw_m_d_aw_m_d_aw_m_dc4_m_d_aw_m_d_aw_m_d_ew_o_d_aw_m_d_aw_m_d_aw_n_t_uw_m_d_aw_m_d_aw_m_d_u3_m_d_aw_m_d_aw_m_d_a3_nj_aw_m_d_aw_m_d_aw_nz_yw_m_d_aw_m_d_aw_m_dg1_m_d_aw_m_d_aw_m_d_a3_o_d_aw_m_d_aw_m_d_ax_m_dgw_m_d_aw_m_d_aw_m_d_u1_m_d_aw_m_d_aw_m_d_a1_nz_aw_m_d_aw_m_d_aw_nz_yw_m_d_aw_m_d_aw_m_dc2_m_d_aw_m_d_aw_m_d_a4_n_t_aw_m_d_aw_m_d_aw_nzgw_m_d_aw_m_d_aw_m_t_e3_m_d_aw_m_d_aw_m_d_a1_n_t_aw_m_d_aw_m_d_aw_n_tcw_m_d_aw_m_d_aw_m_dc2_m_d_aw_m_d_aw_m_d_a3_nj_aw_m_d_aw_m_d_aw_o_d_uw_m_d_aw_m_d_aw_m_dc4_m_d_aw_m_d_aw_m_d_ex_m_d_aw_m_d_aw_m_d_aw_n_t_uw_m_d_aw_m_d_aw_m_d_u3_m_d_aw_m_d_aw_m_d_a3_nj_aw_m_d_aw_m_d_aw_nz_yw_m_d_aw_m_d_aw_m_dg1_m_d_aw_m_d_aw_m_d_a3_o_ghpa_gk=", 4342);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 4342");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        }
    }

    @Test
    public void test475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test475");
        long long2 = strman.Strman.countSubstr("Mda2 ztaw nz uw mdzj mda2 yz aw mzkw mdm
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
    }

    @Test
    public void test476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test476");
        java.lang.String[] strArray6 = strman.Strman.split("nullnull97nnulih79llun!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih");
        java.lang.String str7 = strman.Strman.prependArray("97", strArray6);
        java.lang.String str8 = strman.Strman.appendArray("48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101", strArray6);
        java.lang.String str9 = strman.Strman.append("771228561", strArray6);
        java.util.List<java.lang.String> strList10 = strman.Strman.zip(strArray6);
        java.util.List<java.lang.String> strList11 = strman.Strman.zip(strArray6);
        boolean boolean13 = strman.Strman.containsAll("null97hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!nnull97hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!unull97hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!lnull97hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!lnull979null977null97", strArray6, true);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + str7 + "' != '" + "nullnull97nnul97" + "'", str7.equals("nullnull97nnul97"));
        org.junit.Assert.assertTrue("'" + str8 + "' != '" + "48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101nullnull97nnul" + "'", str8.equals("48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101nullnull97nnul"));
        org.junit.Assert.assertTrue("'" + str9 + "' != '" + "771228561nullnull97nnul" + "'", str9.equals("771228561nullnull97nnul"));
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertNotNull(strList11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test477");
        java.lang.String str2 = strman.Strman.repeat
    }

    @Test
    public void test478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test478");
        java.lang.String str3 = strman.Strman.rightPad("HiHi0000000001001000000000000110100197HiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiNull97hi00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e", "Ihi H", 160);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "HiHi0000000001001000000000000110100197HiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiNull97hi00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e" + "'", str3.equals("HiHi0000000001001000000000000110100197HiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiNull97hi00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e"));
    }

    @Test
    public void test479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test479");
        int int3 = strman.Strman.lastIndexOf("006e00680069006800690048006900480069007500680069006800690048006900480069006c00680069006800690048006900480069006cfalse);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
    }

    @Test
    public void test480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test480");
        java.lang.String[] strArray1 = strman.Strman.lines("uVHbslzNO5WdsxWO3Ulb1xGb5cDTuVHbslzNM5WdsxWO3kjb1xGb5czNuVHbslzN");
        org.junit.Assert.assertNotNull(strArray1);
    }

    @Test
    public void test481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test481");
        java.lang.String str1 = strman.Strman.collapseWhitespace("045");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "045" + "'", str1.equals("045"));
    }

    @Test
    public void test482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test482");
        java.lang.String str1 = strman.Strman.htmlEncode("35");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "nullnull" + "'", str1.equals("nullnull"));
    }

    @Test
    public void test483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test483");
        java.util.Optional<java.lang.String> strOptional2 = strman.Strman.first("", 7);
        org.junit.Assert.assertNotNull(strOptional2);
    }

    @Test
    public void test484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test484");
        java.lang.String[] strArray4 = strman.Strman.between("NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97", "null97null97Nnull97Unull97Lnull97Lnull979null977null97", "Null97Nnull97Unull97Lnull97Lnull979null977null97");
        boolean boolean5 = strman.Strman.containsAny("null97null97Nnull97Unull97Lnull97Lnull979null977null97", strArray4);
        java.util.List<java.lang.String> strList6 = strman.Strman.zip(strArray4);
        java.lang.Class<?> wildcardClass7 = strList6.getClass();
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test485");
        java.lang.String str2 = strman.Strman.ensureRight("", "hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_null97hi00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006ehi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!nullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037Hihinullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037Hihinullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037Hihinullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037Hihinullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037Hihinullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037Hihinullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037Hihinullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037Hihinullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037Hihinullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037Hihinull97");
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_null97hi00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006ehi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!nullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037Hihinullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037Hihinullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037Hihinullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037Hihinullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037Hihinullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037Hihinullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037Hihinullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037Hihinullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037Hihinullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037Hihinull97" + "'", str2.equals("hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_null97hi00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006ehi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!nullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037Hihinullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037Hihinullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037Hihinullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037Hihinullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037Hihinullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037Hihinullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037Hihinullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037Hihinullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037Hihinullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037Hihinull97"));
    }

    @Test
    public void test486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test486");
        int int2 = strman.Strman.lastIndexOf("1null97null97Nnull97Unull97Lnull97Lnull979null977null97", "nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnullnullnullnullnull");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
    }

    @Test
    public void test487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test487");
        java.lang.String str1 = strman.Strman.slugify("109700078001170010800108000570005500110001100011700108");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "109700078001170010800108000570005500110001100011700108" + "'", str1.equals("109700078001170010800108000570005500110001100011700108"));
    }

    @Test
    public void test488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test488");
        java.lang.String str3 = strman.Strman.removeRight("null97_nnull97_unull97_lnull97_lnull979null977null97_nullsAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAWadmWadmWadmXedmXadmWadmWadmWadmWetmWedmWedmWadmWadmWadmXatmXatmWadmWadmWadmXedmXadmWadmWadmWadmWetmWedmWedmWadmWadmWatmXatmXedmWadmWadmWadmXetmWedmXadmWadmWadmWetmWetmWadmWadmWadmWatmXatmXadmWadmWadmWadmWetmXadmXadmWadmWadmWatmXatmXedmWadmWadmWatmXatmXedmWadmWadmWadmXedmXetmWadmWadmWadmWetmXatmWedmWadmWadmWatmXatmXadmLLUN;RAbREDNutrue);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "null97_nnull97_unull97_lnull97_lnull979null977null97_nullsAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAWadmWadmWadmXedmXadmWadmWadmWadmWetmWedmWedmWadmWadmWadmXatmXatmWadmWadmWadmXedmXadmWadmWadmWadmWetmWedmWedmWadmWadmWatmXatmXedmWadmWadmWadmXetmWedmXadmWadmWadmWetmWetmWadmWadmWadmWatmXatmXadmWadmWadmWadmWetmXadmXadmWadmWadmWatmXatmXedmWadmWadmWatmXatmXedmWadmWadmWadmXedmXetmWadmWadmWadmWetmXatmWedmWadmWadmWatmXatmXadmLLUN;RAbREDNustr3.equals("null97_nnull97_unull97_lnull97_lnull979null977null97_nullsAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAWadmWadmWadmXedmXadmWadmWadmWadmWetmWedmWedmWadmWadmWadmXatmXatmWadmWadmWadmXedmXadmWadmWadmWadmWetmWedmWedmWadmWadmWatmXatmXedmWadmWadmWadmXetmWedmXadmWadmWadmWetmWetmWadmWadmWadmWatmXatmXadmWadmWadmWadmWetmXadmXadmWadmWadmWatmXatmXedmWadmWadmWatmXatmXedmWadmWadmWadmXedmXetmWadmWadmWadmWetmXatmWedmWadmWadmWatmXatmXadmLLUN;RAbREDNu
    }

    @Test
    public void test489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test489");
        java.util.Optional<java.lang.String> strOptional2 = strman.Strman.at("79llunhihi779llun979llun L79llun L79llun U79llun N79llun Hihi", 240);
        org.junit.Assert.assertNotNull(strOptional2);
    }

    @Test
    public void test490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test490");
        java.lang.String str2 = strman.Strman.toDecamelize("Ihi97hhi97hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101", "null97 nnull97 unull97 lnull97 lnull979null977null97 null97");
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "ihi97hhi97hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101" + "'", str2.equals("ihi97hhi97hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101"));
    }

    @Test
    public void test491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test491");
        java.lang.String str3 = strman.Strman.surround("HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!0033", "00048000480004800048000480004800048000480004800048000490004900048000480004900049000480004800048000480004800048000480004800048000480004900049000480004900048000490011000117001080010800057000550011000110001170010810145848435558484994584849945848475158484551584841012584841014584843555848499458484994584847515848455158484353584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484751584841014584843555848499458484994584847515848455158484551584841014584843555848499458484994584847515848455158484ihihh_ihInullhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!nullnull97nnulnull971lunn79llun", "53");
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "00048000480004800048000480004800048000480004800048000490004900048000480004900049000480004800048000480004800048000480004800048000480004900049000480004900048000490011000117001080010800057000550011000110001170010810145848435558484994584849945848475158484551584841012584841014584843555848499458484994584847515848455158484353584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484751584841014584843555848499458484994584847515848455158484551584841014584843555848499458484994584847515848455158484ihihh_ihInullhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!nullnull97nnulnull971lunn79llunHI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!003353" + "'", str3.equalsihihh_ihInullhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!nullnull97nnulnull971lunn79llunHI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!003353"));
    }

    @Test
    public void test492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test492");
        java.lang.String str4 = strman.Strman.replaceih", "001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!iH00390037", true);
        org.junit.Assert.assertTrue("'" + strstr4.equals
    }

    @Test
    public void test493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test493");
        java.lang.String[] strArray5 = strman.Strman.split("hi!hi!", "hi!");
        java.lang.String str7 = strman.Strman.join(strArray5, "hihi");
        java.lang.String[] strArray8 = strman.Strman.removeEmptyStrings(strArray5);
        java.util.List<java.lang.String> strList9 = strman.Strman.zip(strArray8);
        java.util.List<java.lang.String> strList10 = strman.Strman.zip(strArray8);
        boolean boolean12 = strman.Strman.containsAny("Hi", strArray8, false);
        java.lang.String str13 = strman.Strman.format("000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97Nnull97Unull97Lnull97Lnull979null977null97", strArray8);
        boolean boolean15 = strman.Strman.containsAll("48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101nullnull97nnul", strArray8, false);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + str7 + "' != '" + "" + "'", str7.equals(""));
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + str13 + "' != '" + "000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97Nnull97Unull97Lnull97Lnull979null977null97" + "'", str13.equals("000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97Nnull97Unull97Lnull97Lnull979null977null97"));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test494");
        java.lang.String str1 = strman.Strman.transliterate("97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97" + "'", str1.equals("97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97"));
    }

    @Test
    public void test495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test495");
        java.util.Optional<java.lang.String> strOptional2 = strman.Strman.at("0010400105", 202);
        org.junit.Assert.assertNotNull(strOptional2);
    }

    @Test
    public void test496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test496");
        try {
            java.lang.String str3 = strman.Strman.truncate("006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037-null97006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037-null97006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037-null97006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037-null97006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037-null97006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037-null97006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037-null97006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037-null97006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037-null97006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037-null97", (int) (short) 100, "YmxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TTAwMDAwMDAwNTUwMDAwMDAwMDU3MDAwMDAwMDA3NjAwMDAwMDAwNzYwMDAwMDAwMDg1MDAwMDAwMDA3ODAwMDAwMDAwNTUwMDAwMDAwMDU1MDAwMDAwMDA1NzAwMDAwMDAwNzYwMDAwMDAwMDc2MDAwMDAwMDA4NTAwMDAwMDAwNzgwMDAwMDAwMDU3MDAwMDAwMDA1NTAwMDAwMDAwNTcwMDAwMDAwMDc2MDAwMDAwMDA3NjAwMDAwMDAwODUwMDAwMDAwMDc4MDAwMDAwMDEwODAwMDAwMDAwNTUwMDAwMDAwMDU3MDAwMDAwMDA3NjAwMDAwMDAwNzYwMDAwMDAwMDg1MDAwMDAwMDA3ODAwMDAwMDAxMDgwMDAwMDAwMDU1MDAwMDAwMDA1NzAwMDAwMDAwNzYwMDAwMDAwMDc2MDAwMDAwMDA4NTAwMDAwMDAwNzgwMDAwMDAwMTE3MDAwMDAwMDA1NTAwMDAwMDAwNTcwMDAwMDAwMDc2MDAwMDAwMDA3NjAwMDAwMDAwODUwMDAwMDAwMDc4MDAwMDAwMDExMDAwMDAwMDAwNTUwMDAwMDAwMDU3MDAwMDAwMDA3NjAwMDAwMDAwNzYwMDAwMDAwMDg1MDAwMDAwMDA3OGhpaGk=");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -888");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        }
    }

    @Test
    public void test497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test497");
        java.lang.String str2 = strman.Strman.ensureRight("HI-HI48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101IHIh", "hi-hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101");
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "HI-HI48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101IHIhhi-hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101" + "'", str2.equals("HI-HI48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101IHIhhi-hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101"));
    }

    @Test
    public void test498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test498");
        try {
            java.util.Optional<java.lang.String> strOptional2 = strman.Strman.first("Hi", 7842);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 7842");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        }
    }

    @Test
    public void test499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test499");
        java.lang.String str3 = strman.Strman.ensureLeft("ihi Hhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97", "N u l l97 n n u lhi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi null97hi null97nnul hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!null97 nnul", true);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "N u l l97 n n u lhi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi null97hi null97nnul hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!null97 nnulihi Hhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97" + "'", str3.equals("N u l l97 n n u lhi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi null97hi null97nnul hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!null97 nnulihi Hhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97"));
    }

    @Test
    public void test500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test500");
        boolean boolean2 = strman.Strman.contains("Null97hihi", "32");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }
}

