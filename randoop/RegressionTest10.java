import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest10 {

    public static boolean debug = false;

    @Test
    public void test001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test001");
        boolean boolean2 = strman.Strman.contains("nullnull97nnulbnVsbG5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTA==");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test002");
        long long2 = strman.Strman.countSubstr("nnullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037hihiullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih", "000550005700076000760008500078000550005500057000760007600085000780005700055000570007600076000850007800108000550005700076000760008500078001080005500057000760007600085000780011700055000570007600076000850007800110000550005700076000760008500078000550005700076000760008500078000550005500057000760007600085000780005700055000570007600076000850007800108000550005700076000760008500078001080005500057000760007600085000780011700055000570007600076000850007800110000550005700076000760008500078");
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
    }

    @Test
    public void test003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test003");
        long long4 = strman.Strman.countSubstr("nIHI97HHI97HI48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101uIHI97HHI97HI48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101lIHI97HHI97HI48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101l10145848435558484994584849945848475158484551584841012584841014584843555848499458484994584847515848455158484353584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484751584841014584843555848499458484994584847515848455158484551584841014584843555848499458484994584847515848455158484ih-ihh-ih-i", "hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!5", false, false);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
    }

    @Test
    public void test004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test004");
        java.lang.String str1 = strman.Strman.htmlDecode("nIHI97HHI97HI48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101uIHI97HHI97HI48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101lIHI97HHI97HI48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101l10145848435558484994584849945848475158484551584841012584841014584843555848499458484994584847515848455158484353584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484751584841014584843555848499458484994584847515848455158484551584841014584843555848499458484994584847515848455158484ih-ihh-ih-i");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "null" + "'", str1.equals("null"));
    }

    @Test
    public void test005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test005");
        java.lang.String str2 = strman.Strman.repeat("00000000001100000000000000110000000000000011001100000000001110010000000000110000000000000011000000000000001100110000000000110111000000000110111000000000011101010000000001101100000000000110110000000000001110010000000000110111000000000110111000000000011011100000000001110101000000000110110000000000001100010000000000110000000000000011100100000000001101110000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000000110001000000000011000000000000001110010000000000110111", 256);
    }

    @Test
    public void test006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test006");
        boolean boolean2 = strman.Strman.isEnclosedBetween("HiHinull97nnul", "nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test007");
        boolean boolean4 = strman.Strman.endsWith("000000005500000000570000000076000000007600000000850000000078000000005500000000550000000057000000007600000000760000000085000000007800000000570000000055000000005700000000760000000076000000008500000000780000000108000000005500000000570000000076000000007600000000850000000078000000010800000000550000000057000000007600000000760000000085000000007800000001170000000055000000005700000000760000000076000000008500000000780000000110000000005500000000570000000076000000007600000000850000000078hihi", "hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hifalse);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test008");
        java.lang.String str2 = strman.Strman.removeRight("hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!8484855544848484848484848565348484848484848485556104105104105", "ih");
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!8484855544848484848484848565348484848484848485556104105104105" + "'", str2.equals("hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!8484855544848484848484848565348484848484848485556104105104105"));
    }

    @Test
    public void test009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test009");
        java.lang.String str2 = strman.Strman.toDecamelize("N u l l97 n n u lhi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi null97hi null97nnul hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!null97 nnul hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi null97 hi 00370039006 c006 c0075006 e003700370039006 c006 c0075006 e003900370039006 c006 c0075006 e004 c00370039006 c006 c0075006 e004 c00370039006 c006 c0075006 e005500370039006 c006 c0075006 e004 e00370039006 c006 c0075006 e7210533hi!hi!hi!hi!hi!hi!hi!hi!hi!hn ullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnulli!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hihi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi null97hi00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006ehi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!", "006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037Null97");
    }

    @Test
    public void test010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test010");
        java.lang.String[] strArray2 = strman.Strman.lines
        boolean boolean4 = strman.Strman.containsAny("nhihiHiHiuhihiHiHilhihiHiHil", strArray2, false);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test011");
        java.lang.String str3 = strman.Strman.leftPad("48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101nullnull97nnul", "hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hihihi", 656);
    }

    @Test
    public void test012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test012");
        boolean boolean2 = strman.Strman.endsWith("Hi\\ hihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100", "hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!0NULL971null97null97Nnull97Unull97Lnull97Lnull979null977null
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test013");
        java.lang.String[] strArray6 = strman.Strman.split("hi", "Hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!");
        boolean boolean7 = strman.Strman.containsAny("bnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbA==", strArray6);
        boolean boolean9 = strman.Strman.containsAll("IHI97HHI97HI48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101n-u-l-l97-n-n-u-lhi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-null97nnul-hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!null97-nnul", strArray6, false);
        boolean boolean10 = strman.Strman.containsAll("00300030003100310030003000300031003100370030003000310030003800300030003100300038003000300030003500370030003000300035003500300030003000370038003000300031003100300030003000310031003700300030003100300038", strArray6);
        java.lang.String str11 = strman.Strman.append("HihiihiHhiHi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101", strArray6);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + str11 + "' != '" + "HihiihiHhiHi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101hi" + "'", str11.equals("HihiihiHhiHi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101hi"));
    }

    @Test
    public void test014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test014");
        java.lang.String[] strArray2 = strman.Strman.chars("006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c");
        try {
            java.util.Optional<java.lang.String> strOptional3 = strman.Strman.trimEnd("00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e006c00370039006c006c0075006e006c00370039006c006c0075006e007500370039006c006c0075006e006e00370039006c006c0075006e00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e006c00370039006c006c0075006e006c00370039006c006c0075006e007500370039006c006c0075006e006e00370039006c006c0075006e", strArray2);
            org.junit.Assert.fail("Expected exception of type java.util.regex.PatternSyntaxException; message: Illegal octal escape sequence near index 4\r\n[0\\0\\6\\e\\0\\0\\7\\5\\0\\0\\6\\c\\0\\0\\6\\c\\0\\0\\6\\e\\0\\0\\7\\5\\0\\0\\6\\c\\0\\0\\6\\c\\0\\0\\6\\e\\0\\0\\7\\5\\0\\0\\6\\c\\0\\0\\6\\c\\0\\0\\6\\e\\0\\0\\7\\5\\0\\0\\6\\c\\0\\0\\6\\c\\0\\0\\6\\e\\0\\0\\7\\5\\0\\0\\6\\c\\0\\0\\6\\c\\0\\0\\6\\e\\0\\0\\7\\5\\0\\0\\6\\c\\0\\0\\6\\c\\0\\0\\6\\e\\0\\0\\7\\5\\0\\0\\6\\c\\0\\0\\6\\c\\0\\0\\6\\e\\0\\0\\7\\5\\0\\0\\6\\c\\0\\0\\6\\c\\0\\0\\6\\e\\0\\0\\7\\5\\0\\0\\6\\c\\0\\0\\6\\c\\0\\0\\6\\e\\0\\0\\7\\5\\0\\0\\6\\c\\0\\0\\6\\c\\0\\0\\6\\e\\0\\0\\7\\5\\0\\0\\6\\c\\0\\0\\6\\c\\0\\0\\6\\e\\0\\0\\7\\5\\0\\0\\6\\c\\0\\0\\6\\c\\0\\0\\6\\e\\0\\0\\7\\5\\0\\0\\6\\c\\0\\0\\6\\c\\0\\0\\6\\e\\0\\0\\7\\5\\0\\0\\6\\c\\0\\0\\6\\c\\0\\0\\6\\e\\0\\0\\7\\5\\0\\0\\6\\c\\0\\0\\6\\c\\0\\0\\6\\e\\0\\0\\7\\5\\0\\0\\6\\c\\0\\0\\6\\c\\0\\0\\6\\e\\0\\0\\7\\5\\0\\0\\6\\c\\0\\0\\6\\c\\0\\0\\6\\e\\0\\0\\7\\5\\0\\0\\6\\c\\0\\0\\6\\c\\0\\0\\6\\e\\0\\0\\7\\5\\0\\0\\6\\c\\0\\0\\6\\c\\0\\0\\6\\e\\0\\0\\7\\5\\0\\0\\6\\c\\0\\0\\6\\c\\0\\0\\6\\e\\0\\0\\7\\5\\0\\0\\6\\c\\0\\0\\6\\c\\0\\0\\6\\e\\0\\0\\7\\5\\0\\0\\6\\c\\0\\0\\6\\c\\0\\0\\6\\e\\0\\0\\7\\5\\0\\0\\6\\c\\0\\0\\6\\c\\0\\0\\6\\e\\0\\0\\7\\5\\0\\0\\6\\c\\0\\0\\6\\c\\0\\0\\6\\e\\0\\0\\7\\5\\0\\0\\6\\c\\0\\0\\6\\c\\0\\0\\6\\e\\0\\0\\7\\5\\0\\0\\6\\c\\0\\0\\6\\c\\0\\0\\6\\e\\0\\0\\7\\5\\0\\0\\6\\c\\0\\0\\6\\c\\0\\0\\6\\e\\0\\0\\7\\5\\0\\0\\6\\c\\0\\0\\6\\c\\0\\0\\6\\e\\0\\0\\7\\5\\0\\0\\6\\c\\0\\0\\6\\c\\0\\0\\6\\e\\0\\0\\7\\5\\0\\0\\6\\c\\0\\0\\6\\c\\0\\0\\6\\e\\0\\0\\7\\5\\0\\0\\6\\c\\0\\0\\6\\c\\0\\0\\6\\e\\0\\0\\7\\5\\0\\0\\6\\c\\0\\0\\6\\c\\0\\0\\6\\e\\0\\0\\7\\5\\0\\0\\6\\c\\0\\0\\6\\c\\0\\0\\6\\e\\0\\0\\7\\5\\0\\0\\6\\c\\0\\0\\6\\c\\0\\0\\6\\e\\0\\0\\7\\5\\0\\0\\6\\c\\0\\0\\6\\c\\0\\0\\6\\e\\0\\0\\7\\5\\0\\0\\6\\c\\0\\0\\6\\c\\0\\0\\6\\e\\0\\0\\7\\5\\0\\0\\6\\c\\0\\0\\6\\c\\0\\0\\6\\e\\0\\0\\7\\5\\0\\0\\6\\c\\0\\0\\6\\c\\0\\0\\6\\e\\0\\0\\7\\5\\0\\0\\6\\c\\0\\0\\6\\c\\0\\0\\6\\e\\0\\0\\7\\5\\0\\0\\6\\c\\0\\0\\6\\c\\0\\0\\6\\e\\0\\0\\7\\5\\0\\0\\6\\c\\0\\0\\6\\c\\0\\0\\6\\e\\0\\0\\7\\5\\0\\0\\6\\c\\0\\0\\6\\c\\0\\0\\6\\e\\0\\0\\7\\5\\0\\0\\6\\c\\0\\0\\6\\c\\0\\0\\6\\e\\0\\0\\7\\5\\0\\0\\6\\c\\0\\0\\6\\c\\0\\0\\6\\e\\0\\0\\7\\5\\0\\0\\6\\c\\0\\0\\6\\c\\0\\0\\6\\e\\0\\0\\7\\5\\0\\0\\6\\c\\0\\0\\6\\c\\0\\0\\6\\e\\0\\0\\7\\5\\0\\0\\6\\c\\0\\0\\6\\c\\0\\0\\6\\e\\0\\0\\7\\5\\0\\0\\6\\c\\0\\0\\6\\c\\0\\0\\6\\e\\0\\0\\7\\5\\0\\0\\6\\c\\0\\0\\6\\c\\0\\0\\6\\e\\0\\0\\7\\5\\0\\0\\6\\c\\0\\0\\6\\c\\0\\0\\6\\e\\0\\0\\7\\5\\0\\0\\6\\c\\0\\0\\6\\c\\0\\0\\6\\e\\0\\0\\7\\5\\0\\0\\6\\c\\0\\0\\6\\c\\0\\0\\6\\e\\0\\0\\7\\5\\0\\0\\6\\c\\0\\0\\6\\c\\0\\0\\6\\e\\0\\0\\7\\5\\0\\0\\6\\c\\0\\0\\6\\c\\0\\0\\6\\e\\0\\0\\7\\5\\0\\0\\6\\c\\0\\0\\6\\c\\0\\0\\6\\e\\0\\0\\7\\5\\0\\0\\6\\c\\0\\0\\6\\c\\0\\0\\6\\e\\0\\0\\7\\5\\0\\0\\6\\c\\0\\0\\6\\c\\0\\0\\6\\e\\0\\0\\7\\5\\0\\0\\6\\c\\0\\0\\6\\c\\0\\0\\6\\e\\0\\0\\7\\5\\0\\0\\6\\c\\0\\0\\6\\c\\0\\0\\6\\e\\0\\0\\7\\5\\0\\0\\6\\c\\0\\0\\6\\c\\0\\0\\6\\e\\0\\0\\7\\5\\0\\0\\6\\c\\0\\0\\6\\c]+$\r\n    ^");
        } catch (java.util.regex.PatternSyntaxException e) {
        }
        org.junit.Assert.assertNotNull(strArray2);
    }

    @Test
    public void test015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test015");
        java.lang.String str3 = strman.Strman.removeRight("TnVsbDk3Tm51bGw5N1VudWxsOTdMbnVsbDk3TG51bGw5NzludWxsOTc3bnVsbDk3TlVMTDk3", "", true);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "TnVsbDk3Tm51bGw5N1VudWxsOTdMbnVsbDk3TG51bGw5NzludWxsOTc3bnVsbDk3TlVMTDk3" + "'", str3.equals("TnVsbDk3Tm51bGw5N1VudWxsOTdMbnVsbDk3TG51bGw5NzludWxsOTc3bnVsbDk3TlVMTDk3"));
    }

    @Test
    public void test016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test016");
        java.lang.String str2 = strman.Strman.ensureLeft("lunN79llunnull97null97Nnull97Unull97Lnull97Lnull979null977null97Nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull97Nnull97Unull97Lnull97Lnull979null977null97null97", "000000000011000100000000011011100000000001110101000000000110110000000000011011000000000000111001000000000011011100000000011011100000000001110101000000000110110000000000011011000000000000111001000000000011011100000000001000000000000001101110000000000110111000000000011101010000000001101100000000000010000000000000011011100000000000100000000000000111010100000000001000000000000001101100000000000010000000000000011011000000000000111001000000000011011100000000001000000000000001101110000000000010000000000000011011100000000000100000000000000111010100000000001000000000000001101100000000000010000100000000011010010000000001101000");
        org.junit.Assert.assertTrue("'" + strlunN79llunnull97null97Nnull97Unull97Lnull97Lnull979null977null97Nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull97Nnull97Unull97Lnull97Lnull979null977null97null97" + "'", str2.equalslunN79llunnull97null97Nnull97Unull97Lnull97Lnull979null977null97Nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull97Nnull97Unull97Lnull97Lnull979null977null97null97"));
    }

    @Test
    public void test017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test017");
        java.lang.String str3 = strman.Strman.rightPadi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!", "000720010500092000320010400105000720010500092000320010400105000720010500092000320010400105000720010500092000320010400105000720010500092000320010400105", 1243);
        org.junit.Assert.assertTrue("'" + stri!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!" + "'", str3.equalsi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!"));
    }

    @Test
    public void test018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test018");
        java.lang.String str3 = strman.Strman.safeTruncate("0009800108000570004900088000500012000102000980006800107000510008800050000530010200100000870012000115000980011000086001150009800071000530004900098000710012000117001000008700120001150009800110000860011500098000710005300049000980007100120001170010000087001200011500098001100008600115000980007100053000490009800071001200011700100000870012000115000980011000086001150009800071000530004900098000710012000117001000008700120001150009800110000860011500098000710005300049000980007100120001170010000087001200011500098001100008600115000980007100053000490009800071001200011700100000870012000115000980011000086001150009800071000530004900098000710012000117001000008700120001150009800110000860011500098000710005300049000980007100120001170010000087001200011500098001100008600115000980007100053000490009800071001200011700100000870012000115000980011000086001150009800071000530004900098000710012000117001000008700120001150009800110000860011500098000710005300049000980007100120001170010000087001200011500098001100008600115000980007100053000490009800071001200011700100000870012000115000980011000086001150009800071000530004900098000710012000117001000008700120001150009800110000860011500098000710005300049000980007100120001170010000087001200011500098001100008600115000980007100053000490009800071001200011700100000870012000115000980011000086001150009800071000530004900098000710012000117000760008800085001160009800067000490011500079000840009900116000980010500049001170007600088000850011600098000650006100061", 0, "00530065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b006800200074006c00200076006d00740064006b00331lunn79llun");
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "" + "'", str3.equals(""));
    }

    @Test
    public void test019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test019");
        java.lang.String str4 = strman.Strman.replace("540", "NULL97HIHIHI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!NULL97HI!NNULL97HIHIHI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!NULL97HI!UNULL97HIHIHI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!NULL97HI!LNULL97HIHIHI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!NULL97HI!LNULL979NULL977NULL97HIHINULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULL", "TlVMTDk3aGloaQ==", true);
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "540" + "'", str4.equals("540"));
    }

    @Test
    public void test020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test020");
        java.lang.String str3 = strman.Strman.rightPadhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!", 0);
        org.junit.Assert.assertTrue("'" + strstr3.equals
    }

    @Test
    public void test021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test021");
        java.lang.String str3 = strman.Strman.encode("NULL971null97null97Nnull97Unull97Lnull97Lnull979null977null97", 203, 6416);
    }

    @Test
    public void test022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test022");
        java.lang.String[] strArray1 = null;
        try {
            boolean boolean3 = strman.Strman.containsAll("000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97_nnull97_unull97_lnull97_lnull979null977null97_hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!", strArray1, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test023");
        java.lang.String str3 = strman.Strman.insert("nhihiHiHiuhihiHiHilhihiHiHil", "203", 280);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "nhihiHiHiuhihiHiHilhihiHiHil" + "'", str3.equals("nhihiHiHiuhihiHiHilhihiHiHil"));
    }

    @Test
    public void test024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test024");
        int int3 = strman.Strman.lastIndexOf("Null97nnul", "79llune779llun979llunl_79llunl_79llunu_79llunn_79llun79llun001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000hi!l_u_n_n_79l_l_u_n_lunn_79llun79llun1", false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
    }

    @Test
    public void test025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test025");
        java.lang.String str1 = strman.Strman.binEncode("HI-HI48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101IHIh");
        org.junit.Assert.assertTrue("'" + strstr1.equals
    }

    @Test
    public void test026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test026");
        java.lang.String str2 = strman.Strman.removeLeft("0nULL97NNULhiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiNull97hiNull97nnulhiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiNull97hiNull97nnulullnullnullnullnullnullnull03000300034003800300030003000340039003000300030003400390030003000300034003800300030003000340039003000300030003400380030003000300034003900300030003100310030003000300031003100370030003000310030003800300030003100300038003000300030003500370030003000300035003500300030003100310030003000300031003100300030003000310031003700300030003100300038");
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "0nULL97NNULhiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiNull97hiNull97nnulhiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiNull97hiNull97nnulstr2.equals("0nULL97NNULhiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiNull97hiNull97nnulhiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiNull97hiNull97nnul
    }

    @Test
    public void test027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test027");
        boolean boolean3 = strman.Strman.contains("null97Nnull97Unull97Lnull97Lnull979null977ihihnull", "null00300030003000300030003000300030003000310030003000310030003000300030003000300030003000300030003000300031003100300031003000300031", true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test028");
        java.lang.String str1 = strman.Strman.escapeRegExp("HiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiNull97hi00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "HiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiNull97hi00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e" + "'", str1.equals("HiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiNull97hi00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e"));
    }

    @Test
    public void test029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test029");
        java.lang.String str1 = strman.Strman.rightTrim
        org.junit.Assert.assertTrue("'" + strstr1.equals
    }

    @Test
    public void test030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test030");
        java.lang.String str1 = strman.Strman.binEncode("10145848435558484994584849945848475158484551584841012584841014584843555848499458484994584847515848455158484353584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484751584841014584843555848499458484994584847515848455158484551584841014584843555848499458484994584847515848455158484ihIhllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunlunn79llun790179llun7901lunn79llun001");
        org.junit.Assert.assertTrue("'" + strstr1.equals
    }

    @Test
    public void test031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test031");
        java.lang.String str1 = strman.Strman.reverse("MDAxMTAxMTAwMDAwMDAwMDEwMTAxMTEwMDAwMDAwMDAwMTExMDExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDAxMDAxMTEwMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAxMDEwMTExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDEwMDEwMTEwMDAwMDAwMDAwMDAxMDExMDAwMDAwMDAwMTAxMTAxMDAwMDAwMDAwMDEwMDEwMTEwMDAwMDAwMDAwMDAxMDExMDAwMDAwMDAwLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloMDAzOTAwMzc=");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "=czMwATOzADMolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLwADMwADMwADMxEDMxADMwADMwADMwADMwETMwEDMwEDMwADMwADMwADMxATMxATMwADMwADMwADMxEDMxADMwADMwADMwADMwETMwEDMwEDMwADMwADMwATMxATMxEDMwADMwADMwADMxETMwEDMxADMwADMwADMwETMwETMwADMwADMwADMwATMxATMxADMwADMwADMwADMwETMxADMxADMwADMwADMwATMxATMxEDMwADMwADMwATMxATMxEDMwADMwADMwADMxEDMxETMwADMwADMwADMwETMxATMwEDMwADMwADMwATMxATMxADM" + "'", str1.equals("=czMwATOzADMolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLwADMwADMwADMxEDMxADMwADMwADMwADMwETMwEDMwEDMwADMwADMwADMxATMxATMwADMwADMwADMxEDMxADMwADMwADMwADMwETMwEDMwEDMwADMwADMwATMxATMxEDMwADMwADMwADMxETMwEDMxADMwADMwADMwETMwETMwADMwADMwADMwATMxATMxADMwADMwADMwADMwETMxADMxADMwADMwADMwATMxATMxEDMwADMwADMwATMxATMxEDMwADMwADMwADMxEDMxETMwADMwADMwADMwETMxATMwEDMwADMwADMwATMxATMxADM"));
    }

    @Test
    public void test032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test032");
        java.lang.String str1 = strman.Strman.binEncode("HiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiNull97hiNull97nnul");
        org.junit.Assert.assertTrue("'" + strstr1.equals
    }

    @Test
    public void test033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test033");
        java.lang.String[] strArray1 = strman.Strman.words("bXctaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktbnVsbDk3aGktbnVsbDk3bm51bA==");
        org.junit.Assert.assertNotNull(strArray1);
    }

    @Test
    public void test034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test034");
        java.lang.String str1 = strman.Strman.toStudlyCase("97");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "97" + "'", str1.equals("97"));
    }

    @Test
    public void test035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test035");
        java.lang.String str1 = strman.Strman.lowerFirst("hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_null97hi00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006ehi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!nullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037Hihinullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037Hihinullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037Hihinullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037Hihinullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037Hihinullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037Hihinullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037Hihinullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037Hihinullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037Hihinullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037Hihinull97");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_null97hi00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006ehi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!nullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037Hihinullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037Hihinullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037Hihinullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037Hihinullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037Hihinullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037Hihinullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037Hihinullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037Hihinullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037Hihinullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037Hihinull97" + "'", str1.equals("hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_null97hi00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006ehi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!nullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037Hihinullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037Hihinullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037Hihinullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037Hihinullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037Hihinullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037Hihinullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037Hihinullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037Hihinullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037Hihinullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037Hihinull97"));
    }

    @Test
    public void test036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test036");
        java.lang.String str1 = strman.Strman.collapseWhitespace("hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e!Hi!hi!hi!hi!NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL979710006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037-null97006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037-null97006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037-null97006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037-null97006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037-null97006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037-null97006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037-null97006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037-null97006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037-null97006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037-null97");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e!Hi!hi!hi!hi!NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL979710006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037-null97006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037-null97006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037-null97006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037-null97006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037-null97006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037-null97006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037-null97006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037-null97006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037-null97006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037-null97" + "'", str1.equals("hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e!Hi!hi!hi!hi!NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL979710006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037-null97006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037-null97006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037-null97006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037-null97006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037-null97006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037-null97006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037-null97006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037-null97006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037-null97006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037-null97"));
    }

    @Test
    public void test037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test037");
        boolean boolean3 = strman.Strman.contains("Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Tl Vmtdk3", "==abs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnb!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!", true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test038");
        java.lang.String str1 = strman.Strman.collapseWhitespace("NULL97HIHIHI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!NULL97HI!NNULL97HIHIHI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!NULL97HI!UNULL97HIHIHI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!NULL97HI!LNULL97HIHIHI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!NULL97HI!LNULL979NULL977NULL97HIHINULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULL");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "NULL97HIHIHI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!NULL97HI!NNULL97HIHIHI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!NULL97HI!UNULL97HIHIHI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!NULL97HI!LNULL97HIHIHI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!NULL97HI!LNULL979NULL977NULL97HIHINULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULL" + "'", str1.equals("NULL97HIHIHI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!NULL97HI!NNULL97HIHIHI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!NULL97HI!UNULL97HIHIHI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!NULL97HI!LNULL97HIHIHI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!NULL97HI!LNULL979NULL977NULL97HIHINULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULL"));
    }

    @Test
    public void test039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test039");
        java.lang.String[] strArray6 = strman.Strman.chars("null");
        java.lang.String[] strArray7 = strman.Strman.removeEmptyStrings(strArray6);
        boolean boolean9 = strman.Strman.containsAny("00300030003100310030003000300031003100370030003000310030003800300030003100300038003000300030003500370030003000300035003500300030003000370038003000300031003100300030003000310031003700300030003100300038", strArray7, true);
        boolean boolean11 = strman.Strman.containsAll("0031006c0075006e006e00370039006c006c0075006e", strArray7, false);
        boolean boolean12 = strman.Strman.containsAll("nULL97NNULNullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull", strArray7);
        boolean boolean13 = strman.Strman.containsAll("HiHi", strArray7);
        boolean boolean14 = strman.Strman.containsAll("00530065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b006800200074006c00200076006d00740064006b0033", strArray7);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test040");
        long long4 = strman.Strman.countSubstr("Null97Nnull97Unull97Lnull97Lnull979null977null97", "100", false, false);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
    }

    @Test
    public void test041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test041");
        boolean boolean2 = strman.Strman.containshi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!0004800048000480004800048000480004800048000480004800049000490004800048000490004900048000480004800048000480004800048000480004800048000490004900048000490004800049");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test042");
        java.lang.String str2 = strman.Strman.toDecamelize("mda2 ztaw nz uw mdzj mda2 yz aw mzkw mdm3nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull000000005500000000570000000076000000007600000000850000000078000000005500000000550000000057000000007600000000760000000085000000007800000000570000000055000000005700000000760000000076000000008500000000780000000108000000005500000000570000000076000000007600000000850000000078000000010800000000550000000057000000007600000000760000000085000000007800000001170000000055000000005700000000760000000076000000008500000000780000000110000000005500000000570000000076000000007600000000850000000078hihi", "0001101001000000000110100000000000011010010000000001011111000000000110100000000000011010000000000001101001000000000010110100000000011010000000000001101001000000000011010000000000001110000000000000");
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "mda20001101001000000000110100000000000011010010000000001011111000000000110100000000000011010000000000001101001000000000010110100000000011010000000000001101001000000000011010000000000001110000000000000ztaw0001101001000000000110100000000000011010010000000001011111000000000110100000000000011010000000000001101001000000000010110100000000011010000000000001101001000000000011010000000000001110000000000000nz0001101001000000000110100000000000011010010000000001011111000000000110100000000000011010000000000001101001000000000010110100000000011010000000000001101001000000000011010000000000001110000000000000uw0001101001000000000110100000000000011010010000000001011111000000000110100000000000011010000000000001101001000000000010110100000000011010000000000001101001000000000011010000000000001110000000000000mdzj0001101001000000000110100000000000011010010000000001011111000000000110100000000000011010000000000001101001000000000010110100000000011010000000000001101001000000000011010000000000001110000000000000mda20001101001000000000110100000000000011010010000000001011111000000000110100000000000011010000000000001101001000000000010110100000000011010000000000001101001000000000011010000000000001110000000000000yz0001101001000000000110100000000000011010010000000001011111000000000110100000000000011010000000000001101001000000000010110100000000011010000000000001101001000000000011010000000000001110000000000000aw0001101001000000000110100000000000011010010000000001011111000000000110100000000000011010000000000001101001000000000010110100000000011010000000000001101001000000000011010000000000001110000000000000mzkw0001101001000000000110100000000000011010010000000001011111000000000110100000000000011010000000000001101001000000000010110100000000011010000000000001101001000000000011010000000000001110000000000000mdm3nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull000000005500000000570000000076000000007600000000850000000078000000005500000000550000000057000000007600000000760000000085000000007800000000570000000055000000005700000000760000000076000000008500000000780000000108000000005500000000570000000076000000007600000000850000000078000000010800000000550000000057000000007600000000760000000085000000007800000001170000000055000000005700000000760000000076000000008500000000780000000110000000005500000000570000000076000000007600000000850000000078hihi" + "'", str2.equals("mda20001101001000000000110100000000000011010010000000001011111000000000110100000000000011010000000000001101001000000000010110100000000011010000000000001101001000000000011010000000000001110000000000000ztaw0001101001000000000110100000000000011010010000000001011111000000000110100000000000011010000000000001101001000000000010110100000000011010000000000001101001000000000011010000000000001110000000000000nz0001101001000000000110100000000000011010010000000001011111000000000110100000000000011010000000000001101001000000000010110100000000011010000000000001101001000000000011010000000000001110000000000000uw0001101001000000000110100000000000011010010000000001011111000000000110100000000000011010000000000001101001000000000010110100000000011010000000000001101001000000000011010000000000001110000000000000mdzj0001101001000000000110100000000000011010010000000001011111000000000110100000000000011010000000000001101001000000000010110100000000011010000000000001101001000000000011010000000000001110000000000000mda20001101001000000000110100000000000011010010000000001011111000000000110100000000000011010000000000001101001000000000010110100000000011010000000000001101001000000000011010000000000001110000000000000yz0001101001000000000110100000000000011010010000000001011111000000000110100000000000011010000000000001101001000000000010110100000000011010000000000001101001000000000011010000000000001110000000000000aw0001101001000000000110100000000000011010010000000001011111000000000110100000000000011010000000000001101001000000000010110100000000011010000000000001101001000000000011010000000000001110000000000000mzkw0001101001000000000110100000000000011010010000000001011111000000000110100000000000011010000000000001101001000000000010110100000000011010000000000001101001000000000011010000000000001110000000000000mdm3nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull000000005500000000570000000076000000007600000000850000000078000000005500000000550000000057000000007600000000760000000085000000007800000000570000000055000000005700000000760000000076000000008500000000780000000108000000005500000000570000000076000000007600000000850000000078000000010800000000550000000057000000007600000000760000000085000000007800000001170000000055000000005700000000760000000076000000008500000000780000000110000000005500000000570000000076000000007600000000850000000078hihi"));
    }

    @Test
    public void test043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test043");
        java.lang.String str1 = strman.Strman.capitalize("n-u-l-l97hihi");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "N-u-l-l97hihi" + "'", str1.equals("N-u-l-l97hihi"));
    }

    @Test
    public void test044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test044");
        java.lang.String str3 = strman.Strman.removeLeft("", "79llunhihi779llun979llun L79llun L79llun U79llun N79llun Hihi", true);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "" + "'", str3.equals(""));
    }

    @Test
    public void test045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test045");
        java.lang.String[] strArray3 = strman.Strman.betweenhi!hi!0004800048000490004800052000480004800049000480005300048000480004900048000520004800048000490004800053000480004800048000550005600048000480004800056000530004800048000480005500054000480004800048000550005400048000480004800053000550004800048000480005300053000480004800049000490004800048000480004800055000560004800048000480005600053000480004800048000550005400048000480004800055000540004800048000480005300055000480004800048000530005300048000480004900049000550004800048000480005500056000480004800048000560005300048000480004800055000540004800048000480005500054000480004800048000530005500048000480004800053000530004800048000490004800056000480004800048000550005600048000480004800056000530004800048000480005500054000480004800048000550005400048000480004800053000550004800048000480005300053000480004800049000480005600048000480004800055000560004800048000480005600053000480004800048000550005400048000480004800055000540004800048000480005300055000480004800048000530005300048000480004800053000550004800048000480005500056000480004800048000560005300048000480004800055000540004800048000480005500054000480004800048000530005500048000480004800053000530004800048000480005300053000480004800048000550005600048000480004800056000530004800048000480005500054000480004800048000550005400048000480004800053000550004800048000480005300053000480004800048000530005500048000480004800053000530004800048000480005200057000480004800048000520005600048000480004900049000480004800048000480005200053000480004800049000490005500048000480004800052000530004800048000490004800056000480004800048000520005300048000480004900048000560004800048000480005300055000480004800048000530005300048000480004800052000530004800048000490004900048000480004800048000520005300048000480004900049000480004800048000480005200053000480004800049000490005500048000480004800052000530004800048000490004800056");
        org.junit.Assert.assertNotNull(strArray3);
    }

    @Test
    public void test046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test046");
        java.lang.String str3 = strman.Strman.ensureRight("hiHinull97nnulnull97null97nnull97unull97lnull97lnull979null977null97hihihiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiNull97hiNullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull", "HI_HI", false);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "hiHinull97nnulnull97null97nnull97unull97lnull97lnull979null977null97hihihiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiNull97hiNullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullHI_HI" + "'", str3.equals("hiHinull97nnulnull97null97nnull97unull97lnull97lnull979null977null97hihihiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiNull97hiNullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullHI_HI"));
    }

    @Test
    public void test047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test047");
        int int4 = strman.Strman.indexOf("Null97", "00110001170010800108000570005500078001100011700108hiHi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101", (int) (short) 100, true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
    }

    @Test
    public void test048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test048");
        java.lang.String str2 = strman.Strman.removeRight("00000000010011010000000001000100000000000100000100000000001100100000000001011010000000000101010000000000010000010000000001110111000000000100111000000000011110100000000001010101000000000111011100000000010011010000000001000100000000000101101000000000011010100000000001001101000000000100010000000000010000010000000000110010000000000101100100000000011110100000000001000001000000000111011100000000010011010000000001111010000000000110101100000000011101110000000001001101000000000100010000000000010011010000000000110011", "Hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e!");
        org.junit.Assert.assertTrue("'" + strstr2.equals("00000000010011010000000001000100000000000100000100000000001100100000000001011010000000000101010000000000010000010000000001110111000000000100111000000000011110100000000001010101000000000111011100000000010011010000000001000100000000000101101000000000011010100000000001001101000000000100010000000000010000010000000000110010000000000101100100000000011110100000000001000001000000000111011100000000010011010000000001111010000000000110101100000000011101110000000001001101000000000100010000000000010011010000000000110011"));
    }

    @Test
    public void test049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test049");
        java.lang.String str3 = strman.Strman.slice
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "00055000500004900048000530005100051001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001" + "'", str3.equals("00055000500004900048000530005100051001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001"));
    }

    @Test
    public void test050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test050");
        java.lang.String str1 = strman.Strman.toKebabCase("hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!1null97null97 nnul n u l l97 n n u l!ih!HI!HI!HI!6");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!1null97null97-nnul-n-u-l-l97-n-n-u-l!ih!-h-i!-h-i!-h-i!6" + "'", str1.equals("hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!1null97null97-nnul-n-u-l-l97-n-n-u-l!ih!-h-i!-h-i!-h-i!6"));
    }

    @Test
    public void test051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test051");
        java.lang.String str3 = strman.Strman.leftPad("TlVMTDk3", "MDA2ODAwNjkwMDJkMDA2ODAwNjkwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzEwMDM1MDAzNTAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzMTAwMzUwMDM3MDAzNDAwMzgwMDM0MDAzODAwMzUwMDM0MDAzOTAwMzkwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzQwMDM5MDAzOTAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzNTAwMzUwMDMzMDAzNDAwMzgwMDM0MDAzODAwMzUwMDM0MDAzMTAwMzAwMDMxMDAzNDAwMzgwMDM0MDAzODAwMzUwMDMxMDAzNTAwMzUwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzEwMDM1MDAzNTAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzMTAwMzUwMDM3MDAzNDAwMzgwMDM0MDAzODAwMzUwMDM0MDAzOTAwMzkwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzQwMDM5MDAzOTAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzNTAwMzUwMDMzMDAzNDAwMzgwMDM0MDAzODAwMzUwMDM0MDAzMTAwMzAwMDMxMDAzNDAwMzgwMDM0MDAzODAwMzUwMDMxMDAzNTAwMzcwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzEwMDM1MDAzNTAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzMTAwMzUwMDM3MDAzNDAwMzgwMDM0MDAzODAwMzUwMDM0MDAzOTAwMzkwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzQwMDM5MDAzOTAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzNTAwMzUwMDMzMDAzNDAwMzgwMDM0MDAzODAwMzUwMDM0MDAzMTAwMzAwMDMxMDAzNDAwMzgwMDM0MDAzODAwMzUwMDMyMDAzOTAwMzkwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzEwMDM1MDAzNTAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzMTAwMzUwMDM3MDAzNDAwMzgwMDM0MDAzODAwMzUwMDM0MDAzOTAwMzkwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzQwMDM5MDAzOTAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzNTAwMzUwMDMzMDAzNDAwMzgwMDM0MDAzODAwMzUwMDM0MDAzMTAwMzAwMDMxMDAzNDAwMzgwMDM0MDAzODAwMzUwMDMyMDAzOTAwMzkwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzEwMDM1MDAzNTAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzMTAwMzUwMDM3MDAzNDAwMzgwMDM0MDAzODAwMzUwMDM0MDAzOTAwMzkwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzQwMDM5MDAzOTAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzNTAwMzUwMDMzMDAzNDAwMzgwMDM0MDAzODAwMzUwMDM0MDAzMTAwMzAwMDMxMDAzNDAwMzgwMDM0MDAzODAwMzUwMDMzMDAzNTAwMzMwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzEwMDM1MDAzNTAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzMTAwMzUwMDM3MDAzNDAwMzgwMDM0MDAzODAwMzUwMDM0MDAzOTAwMzkwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzQwMDM5MDAzOTAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzNTAwMzUwMDMzMDAzNDAwMzgwMDM0MDAzODAwMzUwMDM0MDAzMTAwMzAwMDMxMDAzNDAwMzgwMDM0MDAzODAwMzUwMDMyMDAzMTAwMzAwMDMxMDAzNDAwMzgwMDM0MDAzODAwMzUwMDMxMDAzNTAwMzUwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzEwMDM1MDAzNzAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzNDAwMzkwMDM5MDAzNDAwMzgwMDM0MDAzODAwMzUwMDM0MDAzOTAwMzkwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzUwMDM1MDAzMzAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzNDAwMzEwMDMwMDAzMTAwMzAwMDMwMDAzMDAwMzAwMDMwMDAzMDAwMzAwMDMwMDAzMDAwMzEwMDMwMDAzMDAwMzEwMDMwMDAzMDAwMzAwMDMwMDAzMDAwMzAwMDMwMDAzMDAwMzAwMDMwMDAzMDAwMzAwMDMxMDAzMTAwMzAwMDMxMDAzMDAwMzAwMDMx", 68);
    }

    @Test
    public void test052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test052");
        boolean boolean3 = strman.Strman.endsWith("HI!HI!97", "5", false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test053");
        java.lang.String[] strArray1 = strman.Strman.chars("!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ihllun");
        org.junit.Assert.assertNotNull(strArray1);
    }

    @Test
    public void test054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test054");
        java.lang.String str2 = strman.Strman.last("0000000001101001000000000110100000000000011010010000000001001000Null000780008500076000760005700055001100007800085000760007600057000550011700078000850007600076000570005500108000780008500076000760005700055001080007800085000760007600057000550005700078000850007600076000570005500055000780008500076000760005700055", 10);
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "0005700055" + "'", str2.equals("0005700055"));
    }

    @Test
    public void test055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test055");
        java.lang.String[] strArray1 = strman.Strman.lines
        org.junit.Assert.assertNotNull(strArray1);
    }

    @Test
    public void test056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test056");
        java.lang.String str2 = strman.Strman.last("", 1040);
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "" + "'", str2.equals(""));
    }

    @Test
    public void test057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test057");
        java.lang.String str1 = strman.Strman.underscored("HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!" + "'", str1.equals("hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!"));
    }

    @Test
    public void test058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test058");
        java.lang.String[] strArray1 = null;
        try {
            boolean boolean2 = strman.Strman.containsAllstrArray1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test059");
        java.lang.String str4 = strman.Strman.replace("", "nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull&-under-bar;null", "0004800048000480005200053000480004800049000490005500048000480004800052000530004800048000490004800056NULL97NNUL!ih003000300030003400380030003000300034003800300030003000340038003000300030003400380030003000300034003800300030003000340038003000300030003400380030003000300034003800300030003000340038003000300030003400380030003000300034003900300030003000340039003000300030003400380030003000300034003800300030003000340039003000300030003400390030003000300034003800300030003000340038003000300030003400380030003000300034003800300030003000340038003000300030003400380030003000300034003800300030003000340038003000300030003400380030003000300034003800300030003000340039003000300030003400390030003000300034003800300030003000340039003000300030003400380030003000300034003900300030003100310030003000300031003100370030003000310030003800300030003100300038003000300030003500370030003000300035003500300030003100310030003000300031003100300030003000310031003700300030003100300038nzlsb_hvu_nzc5b_gx1bjk3_owxsd_w5_mnzlsb_hvu_tdc5b_gx1bl_u3_owxsd_w5_onzlsb_hvu", false);
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "" + "'", str4.equals(""));
    }

    @Test
    public void test060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test060");
        java.lang.String[] strArray3 = strman.Strman.lines("null");
        boolean boolean4 = strman.Strman.containsAny("Mda2 ztaw nz uw mdzj mda2 yz aw mzkw mdm3nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull", strArray3);
        boolean boolean6 = strman.Strman.containsAll("Mda2 ztaw nz uw mdzj mda2 yz aw mzkw mdm3nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull000000005500000000570000000076000000007600000000850000000078000000005500000000550000000057000000007600000000760000000085000000007800000000570000000055000000005700000000760000000076000000008500000000780000000108000000005500000000570000000076000000007600000000850000000078000000010800000000550000000057000000007600000000760000000085000000007800000001170000000055000000005700000000760000000076000000008500000000780000000110000000005500000000570000000076000000007600000000850000000078hihi", strArray3, false);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
    }

    @Test
    public void test061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test061");
        java.lang.String str3 = strman.Strman.removeRight("TnVsbDk3bm51bG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsblunN79llunnull97null97Nnull97Unull97Lnull97Lnull979null977null97Nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull97Nnull97Unull97Lnull97Lnull979null977null97null97", false);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "TnVsbDk3bm51bG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbA==" + "'", str3.equals("TnVsbDk3bm51bG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbA=="));
    }

    @Test
    public void test062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test062");
        java.lang.String[] strArray2 = strman.Strman.lines("000000005500000000570000000076000000007600000000850000000078000000005500000000550000000057000000007600000000760000000085000000007800000000570000000055000000005700000000760000000076000000008500000000780000000108000000005500000000570000000076000000007600000000850000000078000000010800000000550000000057000000007600000000760000000085000000007800000001170000000055000000005700000000760000000076000000008500000000780000000110000000005500000000570000000076000000007600000000850000000078");
        boolean boolean3 = strman.Strman.containsAny("null97_nnull97_unull97_lnull97_lnull979null977null97_null97", strArray2);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test063");
        java.lang.String[] strArray3 = strman.Strman.lines("null97Nnull97Unull97Lnull97Lnull979null977null97");
        java.lang.String str4 = strman.Strman.format("000780011700108001080005700055000780011000117001080010800057000550008500110001170010800108000570005500076001100011700108001080005700055000760011000117001080010800057000550005700110001170010800108000570005500055001100011700108001080005700055", strArray3);
        java.lang.String str5 = strman.Strman.append("Null97nnul1097null9710971lunn79llun", strArray3);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "000780011700108001080005700055000780011000117001080010800057000550008500110001170010800108000570005500076001100011700108001080005700055000760011000117001080010800057000550005700110001170010800108000570005500055001100011700108001080005700055" + "'", str4.equals("000780011700108001080005700055000780011000117001080010800057000550008500110001170010800108000570005500076001100011700108001080005700055000760011000117001080010800057000550005700110001170010800108000570005500055001100011700108001080005700055"));
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "Null97nnul1097null9710971lunn79llunnull97Nnull97Unull97Lnull97Lnull979null977null97" + "'", str5.equals("Null97nnul1097null9710971lunn79llunnull97Nnull97Unull97Lnull97Lnull979null977null97"));
    }

    @Test
    public void test064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test064");
        java.lang.String str1 = strman.Strman.escapeRegExp("hihiHiHi");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "hihiHiHi" + "'", str1.equals("hihiHiHi"));
    }

    @Test
    public void test065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test065");
        boolean boolean1 = strman.Strman.isLowerCase("000000005500000000570000000076000000007600000000850000000078000000005500000000550000000057000000007600000000760000000085000000007800000000570000000055000000005700000000760000000076000000008500000000780000000108000000005500000000570000000076000000007600000000850000000078000000010800000000550000000057000000007600000000760000000085000000007800000001170000000055000000005700000000760000000076000000008500000000780000000110000000005500000000570000000076000000007600000000850000000078hihiymx_w_t_v_r_f_n_v_z_u_r_xh_p_vl_v4_t_v_rs_vk1_u_r_t_v_w_v_e_v4_t1_z_ve_e1_ub_f_z_n_v_e_u1_vl_r_fe_e9_w_v_xh_n_v_gx_w_t_v_r_f_n_v_z_u_r_xh_p_vl_v4_t_v_rs_vk1_u_r_t_v_w_v_e_v4_t1_z_ve_e1_ub_f_z_n_v_e_u1_vl_r_fe_e9_w_v_xh_n_v_gx_w_t_v_r_f_n_v_z_u_r_xh_p_vl_v4_t_v_rs_vk1_u_r_t_v_w_v_e_v4_t1_z_ve_e1_ub_f_z_n_v_e_u1_vl_r_fe_e9_w_v_xh_n_v_gx_w_t_v_r_f_n_v_z_u_r_xh_p_vl_v4_t_v_rs_vk1_u_r_t_v_w_v_e_v4_t1_z_ve_e1_ub_f_z_n_v_e_u1_vl_r_fe_e9_w_v_xh_n_v_gx_w_t_v_r_f_n_v_z_u_r_xh_p_vl_v4_t_v_rs_vk1_u_r_t_v_w_v_e_v4_t1_z_ve_e1_ub_f_z_n_v_e_u1_vl_r_fe_e9_w_v_xh_n_v_gx_w_t_v_r_f_n_v_z_u_r_xh_p_vl_v4_t_t_aw_m_d_aw_m_d_aw_n_t_uw_m_d_aw_m_d_aw_m_d_u3_m_d_aw_m_d_aw_m_d_a3_nj_aw_m_d_aw_m_d_aw_nz_yw_m_d_aw_m_d_aw_m_dg1_m_d_aw_m_d_aw_m_d_a3_o_d_aw_m_d_aw_m_d_aw_n_t_uw_m_d_aw_m_d_aw_m_d_u1_m_d_aw_m_d_aw_m_d_a1_nz_aw_m_d_aw_m_d_aw_nz_yw_m_d_aw_m_d_aw_m_dc2_m_d_aw_m_d_aw_m_d_a4_n_t_aw_m_d_aw_m_d_aw_nzgw_m_d_aw_m_d_aw_m_d_u3_m_d_aw_m_d_aw_m_d_a1_n_t_aw_m_d_aw_m_d_aw_n_tcw_m_d_aw_m_d_aw_m_dc2_m_d_aw_m_d_aw_m_d_a3_nj_aw_m_d_aw_m_d_aw_o_d_uw_m_d_aw_m_d_aw_m_dc4_m_d_aw_m_d_aw_m_d_ew_o_d_aw_m_d_aw_m_d_aw_n_t_uw_m_d_aw_m_d_aw_m_d_u3_m_d_aw_m_d_aw_m_d_a3_nj_aw_m_d_aw_m_d_aw_nz_yw_m_d_aw_m_d_aw_m_dg1_m_d_aw_m_d_aw_m_d_a3_o_d_aw_m_d_aw_m_d_ax_m_dgw_m_d_aw_m_d_aw_m_d_u1_m_d_aw_m_d_aw_m_d_a1_nz_aw_m_d_aw_m_d_aw_nz_yw_m_d_aw_m_d_aw_m_dc2_m_d_aw_m_d_aw_m_d_a4_n_t_aw_m_d_aw_m_d_aw_nzgw_m_d_aw_m_d_aw_m_t_e3_m_d_aw_m_d_aw_m_d_a1_n_t_aw_m_d_aw_m_d_aw_n_tcw_m_d_aw_m_d_aw_m_dc2_m_d_aw_m_d_aw_m_d_a3_nj_aw_m_d_aw_m_d_aw_o_d_uw_m_d_aw_m_d_aw_m_dc4_m_d_aw_m_d_aw_m_d_ex_m_d_aw_m_d_aw_m_d_aw_n_t_uw_m_d_aw_m_d_aw_m_d_u3_m_d_aw_m_d_aw_m_d_a3_nj_aw_m_d_aw_m_d_aw_nz_yw_m_d_aw_m_d_aw_m_dg1_m_d_aw_m_d_aw_m_d_a3_o_ghpa_gk=");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
    }

    @Test
    public void test066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test066");
        java.lang.String str1 = strman.Strman.toKebabCase("000000000179LLUN779LLUN979LLUNl79LLUNl79LLUNu79LLUNn79LLUN10100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "000000000179-l-l-u-n779-l-l-u-n979-l-l-u-nl79-l-l-u-nl79-l-l-u-nu79-l-l-u-nn79-l-l-u-n10100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100" + "'", str1.equals("000000000179-l-l-u-n779-l-l-u-n979-l-l-u-nl79-l-l-u-nl79-l-l-u-nu79-l-l-u-nn79-l-l-u-n10100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100"));
    }

    @Test
    public void test067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test067");
        java.lang.String str2 = strman.Strman.ensureRight("=g2xphwA", "nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull&excl;nullnull");
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "=g2xphwAnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull&excl;nullnull" + "'", str2.equals("=g2xphwAnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull&excl;nullnull"));
    }

    @Test
    public void test068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test068");
        java.util.Optional<java.lang.String> strOptional2 = strman.Strman.at("n000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97 Nnull97 Unull97 Lnull97 Lnull979null977null97u000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97 Nnull97 Unull97 Lnull97 Lnull979null977null97l000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97 Nnull97 Unull97 Lnull97 Lnull979null977null97l
        org.junit.Assert.assertNotNull(strOptional2);
    }

    @Test
    public void test069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test069");
        java.lang.String str1 = strman.Strman.toStudlyCase("HI!HI!97");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "HI!HI!97" + "'", str1.equals("HI!HI!97"));
    }

    @Test
    public void test070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test070");
        java.lang.String[] strArray4 = strman.Strman.split("hi!hi!", "hi!");
        java.lang.String str6 = strman.Strman.join(strArray4, "hihi");
        java.lang.String[] strArray7 = strman.Strman.removeEmptyStrings(strArray4);
        java.util.List<java.lang.String> strList8 = strman.Strman.zip(strArray7);
        java.util.List<java.lang.String> strList9 = strman.Strman.zip(strArray7);
        boolean boolean11 = strman.Strman.containsAny("Hi", strArray7, false);
        java.lang.String str12 = strman.Strman.format("000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97Nnull97Unull97Lnull97Lnull979null977null97", strArray7);
        java.lang.Class<?> wildcardClass13 = strArray7.getClass();
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "" + "'", str6.equals(""));
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strList8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97Nnull97Unull97Lnull97Lnull979null977null97" + "'", str12.equals("000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97Nnull97Unull97Lnull97Lnull979null977null97"));
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test071");
        java.util.Optional<java.lang.String> strOptional1 = strman.Strman.head("nullnull97nnulnull97null97null97Nnull97Unull97Lnull97Lnull979null977null97");
        org.junit.Assert.assertNotNull(strOptional1);
    }

    @Test
    public void test072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test072");
        int int4 = strman.Strman.indexOfnull97nnul1097null971097null97nnulnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullhi00370039006c006c0075006e0068006900680069003700370039006c006c0075006e003900370039006c006c0075006e002d006c00370039006c006c0075006e002d006c00370039006c006c0075006e002d007500370039006c006c0075006e002d006e00370039006c006c0075006e002d0068006900680069hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101", 256, false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
    }

    @Test
    public void test073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test073");
        java.lang.String str3 = strman.Strman.surround("0000000084000000010800000000860000000077000000008400000000680000000107000000005100000000970000000071000000010800000001110000000097000000008100000000610000000061", "MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA0ZTAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwNTUwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDRjMDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA0YzAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwMzkwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3Nnullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037hihiullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull", "TlVMTDk3SElISUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIU5VTEw5N0hJIU5OVUxMOTdISUhJSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhTlVMTDk3SEkhVU5VTEw5N0hJSElISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFOVUxMOTdISSFMTlVMTDk3SElISUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIU5VTEw5N0hJIUxOVUxMOTc5TlVMTDk3N05VTEw5N0hJSElOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTA==");
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA0ZTAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwNTUwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDRjMDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA0YzAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwMzkwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3Nnullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037hihiullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull0000000084000000010800000000860000000077000000008400000000680000000107000000005100000000970000000071000000010800000001110000000097000000008100000000610000000061TlVMTDk3SElISUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIU5VTEw5N0hJIU5OVUxMOTdISUhJSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhTlVMTDk3SEkhVU5VTEw5N0hJSElISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFOVUxMOTdISSFMTlVMTDk3SElISUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIU5VTEw5N0hJIUxOVUxMOTc5TlVMTDk3N05VTEw5N0hJSElOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTA==" + "'", str3.equals("MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA0ZTAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwNTUwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDRjMDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA0YzAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwMzkwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3Nnullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037hihiullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull0000000084000000010800000000860000000077000000008400000000680000000107000000005100000000970000000071000000010800000001110000000097000000008100000000610000000061TlVMTDk3SElISUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIU5VTEw5N0hJIU5OVUxMOTdISUhJSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhTlVMTDk3SEkhVU5VTEw5N0hJSElISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFOVUxMOTdISSFMTlVMTDk3SElISUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIU5VTEw5N0hJIUxOVUxMOTc5TlVMTDk3N05VTEw5N0hJSElOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTA=="));
    }

    @Test
    public void test074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test074");
        java.lang.String str1 = strman.Strman.startCase("000720010500092000320010400105000720010500092000320010400105000720010500092000320010400105000720010500092000320010400105000720010500092000320010400105");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "000720010500092000320010400105000720010500092000320010400105000720010500092000320010400105000720010500092000320010400105000720010500092000320010400105" + "'", str1.equals("000720010500092000320010400105000720010500092000320010400105000720010500092000320010400105000720010500092000320010400105000720010500092000320010400105"));
    }

    @Test
    public void test075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test075");
        java.lang.String str1 = strman.Strman.collapseWhitespace("nullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037Hihinullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037Hihinullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037Hihinullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037Hihinullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037Hihinullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037Hihinullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037Hihinullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037Hihinullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037Hihinullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037Hihinull97");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "nullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037Hihinullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037Hihinullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037Hihinullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037Hihinullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037Hihinullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037Hihinullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037Hihinullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037Hihinullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037Hihinullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037Hihinull97" + "'", str1.equals("nullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037Hihinullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037Hihinullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037Hihinullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037Hihinullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037Hihinullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037Hihinullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037Hihinullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037Hihinullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037Hihinullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037Hihinull97"));
    }

    @Test
    public void test076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test076");
        java.lang.String str2 = strman.Strman.toDecamelize("N ull97 nnulhi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi null97hi null97nnulhi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi null97hi null97nnul", "Sgloa Wloa V9oa Glfa Gk0odq4nte1ntq4ndg1mtu3ndg0odu0otk0odq4ntq5otq4ndg1ntuz Ndg0odu0mtax Ndg0odux Ntu0odq4nte1ntq4ndg1mtu3ndg0odu0otk0odq4ntq5otq4ndg1ntuz Ndg0odu0mtax Ndg0odux Ntc0odq4nte1ntq4ndg1mtu3ndg0odu0otk0odq4ntq5otq4ndg1ntuz Ndg0odu0mtax Ndg0oduy Otk0odq4nte1ntq4ndg1mtu3ndg0odu0otk0odq4ntq5otq4ndg1ntuz Ndg0odu0mtax Ndg0oduy Otk0odq4nte1ntq4ndg1mtu3ndg0odu0otk0odq4ntq5otq4ndg1ntuz Ndg0odu0mtax Ndg0oduz Ntm0odq4nte1ntq4ndg1mtu3ndg0odu0otk0odq4ntq5otq4ndg1ntuz Ndg0odu0mtax Ndg0oduy Mtax Ndg0odux Ntu0odq4nte1nz Q4ndg1ndk5ndg0odu0otk0odq4ntu1mz Q4ndg1ndew Mq==");
    }

    @Test
    public void test077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test077");
        boolean boolean3 = strman.Strman.isEnclosedBetween("NULL97NNUL!ih00110001170010800108000570005500078001100011700108blVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxM000000005500000000570000000076000000007600000000850000000078000000005500000000550000000057000000007600000000760000000085000000007800000000570000000055000000005700000000760000000076000000008500000000780000000108000000005500000000570000000076000000007600000000850000000078000000010800000000550000000057000000007600000000760000000085000000007800000001170000000055000000005700000000760000000076000000008500000000780000000110000000005500000000570000000076000000007600000000850000000078hihi", "000720010500033001040010500033nullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULL1null97null97NnulNULL97NNUL!ih", "nnullhiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiNull97hi00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006eunullhiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiNull97hi00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006elnullhiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiNull97hi00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006el");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test078");
        int int3 = strman.Strman.lastIndexOf("ullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnullullnullnullnullnullnullnull", "NULL970000000001001000000000000110100197", true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
    }

    @Test
    public void test079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test079");
        java.lang.String[] strArray2 = strman.Strman.lines("NULL97NNUL");
        java.util.List<java.lang.String> strList3 = strman.Strman.zip(strArray2);
        java.lang.String str4 = strman.Strman.format("0000000000110000000000000011000000000000001100110000000000110000000000000011000000000000001100000000000000110011000000000011000000000000001100000000000000110000000000000011001100000000001100110000000000110000000000000011000000000000001100110000000000110011", strArray2);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(strList3);
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "0000000000110000000000000011000000000000001100110000000000110000000000000011000000000000001100000000000000110011000000000011000000000000001100000000000000110000000000000011001100000000001100110000000000110000000000000011000000000000001100110000000000110011" + "'", str4.equals("0000000000110000000000000011000000000000001100110000000000110000000000000011000000000000001100000000000000110011000000000011000000000000001100000000000000110000000000000011001100000000001100110000000000110000000000000011000000000000001100110000000000110011"));
    }

    @Test
    public void test080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test080");
        java.lang.String str1 = strman.Strman.decEncode("i3kdtmV lT hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeShi-h");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "00105000510010700100001160010900086000320010800084000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300104001050004500104" + "'", str1.equals("00105000510010700100001160010900086000320010800084000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300104001050004500104"));
    }

    @Test
    public void test081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test081");
        java.lang.String str1 = strman.Strman.hexEncode("null97hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!nnull97hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!unull97hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!lnull97hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!lnull979null977null971097null97");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "006e0075006c006c003900370068006900680069006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006e0075006c006c00390037006800690021006e006e0075006c006ce0075006c006c003900370068006900210075006e0075006c006ce0075006c006c00390037006800690021006c006e0075006c006ce0075006c006c00390037006800690021006c006e0075006c006c003900370039006e0075006c006c003900370037006e0075006c006c003900370031003000390037006e0075006c006c00390037" + "'", str1.equals("006e0075006c006ce0075006c006c00390037006800690021006e006e0075006c006ce0075006c006c003900370068006900210075006e0075006c006ce0075006c006c00390037006800690021006c006e0075006c006ce0075006c006c00390037006800690021006c006e0075006c006c003900370039006e0075006c006c003900370037006e0075006c006c003900370031003000390037006e0075006c006c00390037"));
    }

    @Test
    public void test082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test082");
        java.lang.String str1 = strman.Strman.humanize("110117108108575500000000017900000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97l00000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97l00000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97u00000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97n77900000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97l00000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97l00000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97u00000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97n97900000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97l00000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97l00000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97u00000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97nl7900000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97l00000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97l00000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97u00000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97nl7900000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97l00000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97l00000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97u00000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97nu7900000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97l00000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97l00000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97u00000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97nn7900000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97l00000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97l00000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97u00000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97n10100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "110117108108575500000000017900000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97l00000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97l00000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97u00000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97n77900000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97l00000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97l00000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97u00000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97n97900000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97l00000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97l00000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97u00000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97nl7900000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97l00000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97l00000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97u00000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97nl7900000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97l00000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97l00000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97u00000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97nu7900000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97l00000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97l00000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97u00000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97nn7900000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97l00000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97l00000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97u00000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97n10100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100" + "'", str1.equals("110117108108575500000000017900000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97l00000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97l00000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97u00000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97n77900000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97l00000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97l00000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97u00000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97n97900000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97l00000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97l00000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97u00000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97nl7900000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97l00000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97l00000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97u00000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97nl7900000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97l00000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97l00000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97u00000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97nu7900000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97l00000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97l00000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97u00000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97nn7900000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97l00000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97l00000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97u00000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97n10100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100"));
    }

    @Test
    public void test083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test083");
        java.lang.String[] strArray4 = strman.Strman.split("hi", "Hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!");
        java.util.List<java.lang.String> strList5 = strman.Strman.zip(strArray4);
        java.lang.String str6 = strman.Strman.append("null97nhinullhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101nul1097null971097nULL97NNULNullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullhi\\-hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101", strArray4);
        java.util.Optional<java.lang.String> strOptional7 = strman.Strman.trimStart("hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97_hi!00370039006_c006_c0075006_e003700370039006_c006_c0075006_e003900370039006_c006_c0075006_e004_c00370039006_c006_c0075006_e004_c00370039006_c006_c0075006_e005500370039006_c006_c0075006_e004_e00370039006_c006_c0075006_e", strArray4);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "null97nhinullhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101nul1097null971097nULL97NNULNullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullhi\\-hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101hi" + "'", str6.equals("null97nhinullhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101nul1097null971097nULL97NNULNullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullhi\\-hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101hi"));
        org.junit.Assert.assertNotNull(strOptional7);
    }

    @Test
    public void test084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test084");
        java.lang.String[] strArray3 = strman.Strman.between("48485457484854564848545748485310248485456484854564848545748485010048485456484854574848515248485156484851524848515648485153484851494848515348485153484851524848515648485152484851564848515348485149484851534848515548485152484851564848515248485156484851534848515248485157484851574848515248485156484851524848515648485153484851524848515748485157484851524848515648485152484851564848515348485153484851534848515148485152484851564848515248485156484851534848515248485149484851484848514948485152484851564848515248485156484851534848514948485153484851534848515248485156484851524848515648485153484851494848515348485153484851524848515648485152484851564848515348485149484851534848515548485152484851564848515248485156484851534848515248485157484851574848515248485156484851524848515648485153484851524848515748485157484851524848515648485152484851564848515348485153484851534848515148485152484851564848515248485156484851534848515248485149484851484848514948485152484851564848515248485156484851534848514948485153484851554848515248485156484851524848515648485153484851494848515348485153484851524848515648485152484851564848515348485149484851534848515548485152484851564848515248485156484851534848515248485157484851574848515248485156484851524848515648485153484851524848515748485157484851524848515648485152484851564848515348485153484851534848515148485152484851564848515248485156484851534848515248485149484851484848514948485152484851564848515248485156484851534848515048485157484851574848515248485156484851524848515648485153484851494848515348485153484851524848515648485152484851564848515348485149484851534848515548485152484851564848515248485156484851534848515248485157484851574848515248485156484851524848515648485153484851524848515748485157484851524848515648485152484851564848515348485153484851534848515148485152484851564848515248485156484851534848515248485149484851484848514948485152484851564848515248485156484851534848515048485157484851574848515248485156484851524848515648485153484851494848515348485153484851524848515648485152484851564848515348485149484851534848515548485152484851564848515248485156484851534848515248485157484851574848515248485156484851524848515648485153484851524848515748485157484851524848515648485152484851564848515348485153484851534848515148485152484851564848515248485156484851534848515248485149484851484848514948485152484851564848515248485156484851534848515148485153484851514848515248485156484851524848515648485153484851494848515348485153484851524848515648485152484851564848515348485149484851534848515548485152484851564848515248485156484851534848515248485157484851574848515248485156484851524848515648485153484851524848515748485157484851524848515648485152484851564848515348485153484851534848515148485152484851564848515248485156484851534848515248485149484851484848514948485152484851564848515248485156484851534848515048485149484851484848514948485152484851564848515248485156484851534848514948485153484851534848515248485156484851524848515648485153484851494848515348485155484851524848515648485152484851564848515348485152484851574848515748485152484851564848515248485156484851534848515248485157484851574848515248485156484851524848515648485153484851534848515348485151484851524848515648485152484851564848515348485152484851494848514848485149104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533", "5555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555", "79LLUN779LLUN979LLUNl79LLUNl79LLUNu79LLUNn79LLUN");
        org.junit.Assert.assertNotNull(strArray3);
    }

    @Test
    public void test085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test085");
        java.lang.String str1 = strman.Strman.underscored("00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e" + "'", str1.equals("00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e"));
    }

    @Test
    public void test086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test086");
        java.lang.String str3 = strman.Strman.removeLeft("nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull&UnderBar;nullnullnull", "n_ullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull", false);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull&UnderBar;nullnullnull" + "'", str3.equals("nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull&UnderBar;nullnullnull"));
    }

    @Test
    public void test087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test087");
        java.lang.String str2 = strman.Strman.repeat("Hi!hi!", (int) (short) 10);
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "Hi!hi!Hi!hi!Hi!hi!Hi!hi!Hi!hi!Hi!hi!Hi!hi!Hi!hi!Hi!hi!Hi!hi!" + "'", str2.equals("Hi!hi!Hi!hi!Hi!hi!Hi!hi!Hi!hi!Hi!hi!Hi!hi!Hi!hi!Hi!hi!Hi!hi!"));
    }

    @Test
    public void test088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test088");
        java.lang.String str1 = strman.Strman.htmlDecode("Ihihhihi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "null" + "'", str1.equals("null"));
    }

    @Test
    public void test089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test089");
        java.lang.String str1 = strman.Strman.humanize("006900680069005f006800680069002d0068006900340038003400380035003100350035003400380034003800350031003500370034003800340038003500340039003900340038003400380035003400390039003400380034003800350035003500330034003800340038003500340031003000310034003800340038003500310035003500340038003400380035003100350035003400380034003800350031003500370034003800340038003500340039003900340038003400380035003400390039003400380034003800350035003500330034003800340038003500340031003000310034003800340038003500310035003700340038003400380035003100350035003400380034003800350031003500370034003800340038003500340039003900340038003400380035003400390039003400380034003800350035003500330034003800340038003500340031003000310034003800340038003500320039003900340038003400380035003100350035003400380034003800350031003500370034003800340038003500340039003900340038003400380035003400390039003400380034003800350035003500330034003800340038003500340031003000310034003800340038003500320039003900340038003400380035003100350035003400380034003800350031003500370034003800340038003500340039003900340038003400380035003400390039003400380034003800350035003500330034003800340038003500340031003000310034003800340038003500330035003300340038003400380035003100350035003400380034003800350031003500370034003800340038003500340039003900340038003400380035003400390039003400380034003800350035003500330034003800340038003500340031003000310034003800340038003500320031003000310034003800340038003500310035003500340038003400380035003100350037003400380034003800350034003900390034003800340038003500340039003900340038003400380035003500350033003400380034003800350034003100300031hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "006900680069005f006800680069002dhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!" + "'", str1.equals("006900680069005f006800680069002dhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!"));
    }

    @Test
    public void test090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test090");
        java.lang.String str1 = strman.Strman.escapeRegExp("null00300030003000300030003000300030003000310030003000310030003000300030003000300030003000300030003000300031003100300031003000300031");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "null00300030003000300030003000300030003000310030003000310030003000300030003000300030003000300030003000300031003100300031003000300031" + "'", str1.equals("null00300030003000300030003000300030003000310030003000310030003000300030003000300030003000300030003000300031003100300031003000300031"));
    }

    @Test
    public void test091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test091");
        java.lang.String str1 = strman.Strman.startCase("32");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "32" + "'", str1.equals("32"));
    }

    @Test
    public void test092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test092");
        java.lang.String str3 = strman.Strman.surround("hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_null97hi00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006ehi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!", "", "");
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_null97hi00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006ehi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!" + "'", str3.equals("hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_null97hi00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006ehi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!"));
    }

    @Test
    public void test093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test093");
        java.lang.String str1 = strman.Strman.base64Encode("hIHIHIHInull97Nnull97Unull97Lnull97Lnull979null977null979710");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "aElISUhJSEludWxsOTdObnVsbDk3VW51bGw5N0xudWxsOTdMbnVsbDk3OW51bGw5NzdudWxsOTc5NzEw" + "'", str1.equals("aElISUhJSEludWxsOTdObnVsbDk3VW51bGw5N0xudWxsOTdMbnVsbDk3OW51bGw5NzdudWxsOTc5NzEw"));
    }

    @Test
    public void test094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test094");
        java.lang.String str2 = strman.Strman.ensureLeft("006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037Null", "5500075000801008010071100011005500055000750008010080100711000110075000550007500080100801007110001100670005500075000801008010071100011006700055000750008010080100711000110058000550007500080100801007110001100870005500075000801008010071100870003kDTMVlThkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEs");
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "5500075000801008010071100011005500055000750008010080100711000110075000550007500080100801007110001100670005500075000801008010071100011006700055000750008010080100711000110058000550007500080100801007110001100870005500075000801008010071100870003kDTMVlThkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEs006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037Null" + "'", str2.equals("5500075000801008010071100011005500055000750008010080100711000110075000550007500080100801007110001100670005500075000801008010071100011006700055000750008010080100711000110058000550007500080100801007110001100870005500075000801008010071100870003kDTMVlThkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEs006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037Null"));
    }

    @Test
    public void test095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test095");
        java.lang.String str1 = strman.Strman.capitalize("TlVMTDk3");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "Tlvmtdk3" + "'", str1.equals("Tlvmtdk3"));
    }

    @Test
    public void test096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test096");
        long long2 = strman.Strman.countSubstr("hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!0004800048000480004800048000480004800048000480004800049000490004800048000490004900048000480004800048000480004800048000480004800048000490004900048000490004800049", "nhihiHiHiuhihiHiHilhihiHiHil");
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
    }

    @Test
    public void test097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test097");
        java.lang.String[] strArray3 = strman.Strman.split("97", "");
        java.lang.Class<?> wildcardClass4 = strArray3.getClass();
        java.lang.String str5 = strman.Strman.append("nullstrArray3);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "nullstr5.equals("null
    }

    @Test
    public void test098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test098");
        java.lang.String str1 = strman.Strman.hexEncode("79llunhihi779llun979llun L79llun L79llun U79llun N79llun Hihi");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "00370039006c006c0075006e0068006900680069003700370039006c006c0075006e003900370039006c006c0075006e0020004c00370039006c006c0075006e0020004c00370039006c006c0075006e0020005500370039006c006c0075006e0020004e00370039006c006c0075006e00200048006900680069" + "'", str1.equals("00370039006c006c0075006e0068006900680069003700370039006c006c0075006e003900370039006c006c0075006e0020004c00370039006c006c0075006e0020004c00370039006c006c0075006e0020005500370039006c006c0075006e0020004e00370039006c006c0075006e00200048006900680069"));
    }

    @Test
    public void test099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test099");
        java.lang.String str3 = strman.Strman.rightPad("000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97Nnull97Unull97Lnull97Lnull979null977null97Hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!", "6", (int) (short) 0);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97Nnull97Unull97Lnull97Lnull979null977null97Hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!" + "'", str3.equals("000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97Nnull97Unull97Lnull97Lnull979null977null97Hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!"));
    }

    @Test
    public void test100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test100");
        java.lang.String str1 = strman.Strman.lowerFirst("11");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "11" + "'", str1.equals("11"));
    }

    @Test
    public void test101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test101");
        boolean boolean2 = strman.Strman.unequalllun779llun979llunl79llunl79llunu79llunn79llun79llun779llun979llunl79llunl79llunu79llunn79llun
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
    }

    @Test
    public void test102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test102");
        java.lang.String str3 = strman.Strman.encodeh_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!7", 4, 540);
    }

    @Test
    public void test103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test103");
        java.lang.String str1 = strman.Strman.toCamelCase("hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!Hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!blVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!Hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!blVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100" + "'", str1.equals("hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!Hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!blVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100"));
    }

    @Test
    public void test104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test104");
        java.lang.String str1 = strman.Strman.reverse
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "840008400094000940008400094000940008400084000840008400084000840008400084000840009400084000940008400094000940009400084000840008400084000840008400084000840008400084000940009400094000840009400094000840008400084000840008400084000840008400084000840009400094000940008400094000940008400084000840008400084000840008400084000840009400094000940008400094000940008400084000840008400084000840008400084000840008400094000840008400094000940009400084000840008400084000840008400084000840008400084000840008400094000940008400094000940008400084000840008400084000840008400084000840008400084000940009400084000940009400084000840008400084000840008400084000840008400094000840009400084000940009400094000840008400084000840008400084000840008400084000840009400094000940008400094000940008400084000840008400084000840008400084000840009400084000840009400084000940009400084000840008400084000840008400084000840008400084000840008400094000840009400094000840008400084000840008400084000840008400084000940008400094000940008400094000840008400084000840008400084000840008400084000840009400084000840009400084000940009400084000840008400084000840008400084000840008400084000840008400094000840009400087000580006700067000750005500001100870005800067000670007500055000711008700058000670006700075000550008010087000580006700067000750005500080100870005800067000670007500055000750008700058000670006700075000550005500087000580006700067000750005500094000840008400084000840008400084000840008400084000" + "'", str1.equals
    }

    @Test
    public void test105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test105");
        boolean boolean1 = strman.Strman.isLowerCase("MDAwOTgwMDEwODAwMDU3MDAwNDkwMDA4ODAwMDUwMDAxMjAwMDEwMjAwMDk4MDAwNjgwMDEwNzAwMDUxMDAwODgwMDA1MDAwMDUzMDAxMDIwMDEwMDAwMDg3MDAxMjAwMDExNTAwMDk4MDAxMTAwMDA4NjAwMTE1MDAwOTgwMDA3MTAwMDUzMDAwNDkwMDA5ODAwMDcxMDAxMjAwMDExNzAwMTAwMDAwODcwMDEyMDAwMTE1MDAwOTgwMDExMDAwMDg2MDAxMTUwMDA5ODAwMDcxMDAwNTMwMDA0OTAwMDk4MDAwNzEwMDEyMDAwMTE3MDAxMDAwMDA4NzAwMTIwMDAxMTUwMDA5ODAwMTEwMDAwODYwMDExNTAwMDk4MDAwNzEwMDA1MzAwMDQ5MDAwOTgwMDA3MTAwMTIwMDAxMTcwMDEwMDAwMDg3MDAxMjAwMDExNTAwMDk4MDAxMTAwMDA4NjAwMTE1MDAwOTgwMDA3MTAwMDUzMDAwNDkwMDA5ODAwMDcxMDAxMjAwMDExNzAwMTAwMDAwODcwMDEyMDAwMTE1MDAwOTgwMDExMDAwMDg2MDAxMTUwMDA5ODAwMDcxMDAwNTMwMDA0OTAwMDk4MDAwNzEwMDEyMDAwMTE3MDAxMDAwMDA4NzAwMTIwMDAxMTUwMDA5ODAwMTEwMDAwODYwMDExNTAwMDk4MDAwNzEwMDA1MzAwMDQ5MDAwOTgwMDA3MTAwMTIwMDAxMTcwMDEwMDAwMDg3MDAxMjAwMDExNTAwMDk4MDAxMTAwMDA4NjAwMTE1MDAwOTgwMDA3MTAwMDUzMDAwNDkwMDA5ODAwMDcxMDAxMjAwMDExNzAwMTAwMDAwODcwMDEyMDAwMTE1MDAwOTgwMDExMDAwMDg2MDAxMTUwMDA5ODAwMDcxMDAwNTMwMDA0OTAwMDk4MDAwNzEwMDEyMDAwMTE3MDAxMDAwMDA4NzAwMTIwMDAxMTUwMDA5ODAwMTEwMDAwODYwMDExNTAwMDk4MDAwNzEwMDA1MzAwMDQ5MDAwOTgwMDA3MTAwMTIwMDAxMTcwMDEwMDAwMDg3MDAxMjAwMDExNTAwMDk4MDAxMTAwMDA4NjAwMTE1MDAwOTgwMDA3MTAwMDUzMDAwNDkwMDA5ODAwMDcxMDAxMjAwMDExNzAwMTAwMDAwODcwMDEyMDAwMTE1MDAwOTgwMDExMDAwMDg2MDAxMTUwMDA5ODAwMDcxMDAwNTMwMDA0OTAwMDk4MDAwNzEwMDEyMDAwMTE3MDAxMDAwMDA4NzAwMTIwMDAxMTUwMDA5ODAwMTEwMDAwODYwMDExNTAwMDk4MDAwNzEwMDA1MzAwMDQ5MDAwOTgwMDA3MTAwMTIwMDAxMTcwMDEwMDAwMDg3MDAxMjAwMDExNTAwMDk4MDAxMTAwMDA4NjAwMTE1MDAwOTgwMDA3MTAwMDUzMDAwNDkwMDA5ODAwMDcxMDAxMjAwMDExNzAwMTAwMDAwODcwMDEyMDAwMTE1MDAwOTgwMDExMDAwMDg2MDAxMTUwMDA5ODAwMDcxMDAwNTMwMDA0OTAwMDk4MDAwNzEwMDEyMDAwMTE3MDAxMDAwMDA4NzAwMTIwMDAxMTUwMDA5ODAwMTEwMDAwODYwMDExNTAwMDk4MDAwNzEwMDA1MzAwMDQ5MDAwOTgwMDA3MTAwMTIwMDAxMTcwMDEwMDAwMDg3MDAxMjAwMDExNTAwMDk4MDAxMTAwMDA4NjAwMTE1MDAwOTgwMDA3MTAwMDUzMDAwNDkwMDA5ODAwMDcxMDAxMjAwMDExNzAwMDc2MDAwODgwMDA4NTAwMTE2MDAwOTgwMDA2NzAwMDQ5MDAxMTUwMDA3OTAwMDg0MDAwOTkwMDExNjAwMDk4MDAxMDUwMDA0OTAwMTE3MDAwNzYwMDA4ODAwMDg1MDAxMTYwMDA5ODAwMDY1MDAwNjEwMDA2MQ==");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
    }

    @Test
    public void test106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test106");
        java.util.Map<java.lang.Character, java.lang.Long> charMap1 = strman.Strman.charsCount("MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM300078001170010800108000570005500110001100011700108000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97Nnull97Unull97Lnull97Lnull979null977null97Hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!");
        org.junit.Assert.assertNotNull(charMap1);
    }

    @Test
    public void test107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test107");
        java.lang.String str1 = strman.Strman.base64Encode("7710097503212211697119321101223211711932109100122106321091009750321211223297119321091221071193210910010951110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108484848484848484853534848484848484848535548484848484848485554484848484848484855544848484848484848565348484848484848485556484848484848484853534848484848484848535348484848484848485355484848484848484855544848484848484848555448484848484848485653484848484848484855564848484848484848535548484848484848485353484848484848484853554848484848484848555448484848484848485554484848484848484856534848484848484848555648484848484848494856484848484848484853534848484848484848535548484848484848485554484848484848484855544848484848484848565348484848484848485556484848484848484948564848484848484848535348484848484848485355484848484848484855544848484848484848555448484848484848485653484848484848484855564848484848484849495548484848484848485353484848484848484853554848484848484848555448484848484848485554484848484848484856534848484848484848555648484848484848494948484848484848484853534848484848484848535548484848484848485554484848484848484855544848484848484848565348484848484848485556104105104105");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "NzcxMDA5NzUwMzIxMjIxMTY5NzExOTMyMTEwMTIyMzIxMTcxMTkzMjEwOTEwMDEyMjEwNjMyMTA5MTAwOTc1MDMyMTIxMTIyMzI5NzExOTMyMTA5MTIyMTA3MTE5MzIxMDkxMDAxMDk1MTExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODQ4NDg0ODQ4NDg0ODQ4NDg1MzUzNDg0ODQ4NDg0ODQ4NDg0ODUzNTU0ODQ4NDg0ODQ4NDg0ODQ4NTU1NDQ4NDg0ODQ4NDg0ODQ4NDg1NTU0NDg0ODQ4NDg0ODQ4NDg0ODU2NTM0ODQ4NDg0ODQ4NDg0ODQ4NTU1NjQ4NDg0ODQ4NDg0ODQ4NDg1MzUzNDg0ODQ4NDg0ODQ4NDg0ODUzNTM0ODQ4NDg0ODQ4NDg0ODQ4NTM1NTQ4NDg0ODQ4NDg0ODQ4NDg1NTU0NDg0ODQ4NDg0ODQ4NDg0ODU1NTQ0ODQ4NDg0ODQ4NDg0ODQ4NTY1MzQ4NDg0ODQ4NDg0ODQ4NDg1NTU2NDg0ODQ4NDg0ODQ4NDg0ODUzNTU0ODQ4NDg0ODQ4NDg0ODQ4NTM1MzQ4NDg0ODQ4NDg0ODQ4NDg1MzU1NDg0ODQ4NDg0ODQ4NDg0ODU1NTQ0ODQ4NDg0ODQ4NDg0ODQ4NTU1NDQ4NDg0ODQ4NDg0ODQ4NDg1NjUzNDg0ODQ4NDg0ODQ4NDg0ODU1NTY0ODQ4NDg0ODQ4NDg0ODQ5NDg1NjQ4NDg0ODQ4NDg0ODQ4NDg1MzUzNDg0ODQ4NDg0ODQ4NDg0ODUzNTU0ODQ4NDg0ODQ4NDg0ODQ4NTU1NDQ4NDg0ODQ4NDg0ODQ4NDg1NTU0NDg0ODQ4NDg0ODQ4NDg0ODU2NTM0ODQ4NDg0ODQ4NDg0ODQ4NTU1NjQ4NDg0ODQ4NDg0ODQ4NDk0ODU2NDg0ODQ4NDg0ODQ4NDg0ODUzNTM0ODQ4NDg0ODQ4NDg0ODQ4NTM1NTQ4NDg0ODQ4NDg0ODQ4NDg1NTU0NDg0ODQ4NDg0ODQ4NDg0ODU1NTQ0ODQ4NDg0ODQ4NDg0ODQ4NTY1MzQ4NDg0ODQ4NDg0ODQ4NDg1NTU2NDg0ODQ4NDg0ODQ4NDg0OTQ5NTU0ODQ4NDg0ODQ4NDg0ODQ4NTM1MzQ4NDg0ODQ4NDg0ODQ4NDg1MzU1NDg0ODQ4NDg0ODQ4NDg0ODU1NTQ0ODQ4NDg0ODQ4NDg0ODQ4NTU1NDQ4NDg0ODQ4NDg0ODQ4NDg1NjUzNDg0ODQ4NDg0ODQ4NDg0ODU1NTY0ODQ4NDg0ODQ4NDg0ODQ5NDk0ODQ4NDg0ODQ4NDg0ODQ4NDg1MzUzNDg0ODQ4NDg0ODQ4NDg0ODUzNTU0ODQ4NDg0ODQ4NDg0ODQ4NTU1NDQ4NDg0ODQ4NDg0ODQ4NDg1NTU0NDg0ODQ4NDg0ODQ4NDg0ODU2NTM0ODQ4NDg0ODQ4NDg0ODQ4NTU1NjEwNDEwNTEwNDEwNQ==" + "'", str1.equals("NzcxMDA5NzUwMzIxMjIxMTY5NzExOTMyMTEwMTIyMzIxMTcxMTkzMjEwOTEwMDEyMjEwNjMyMTA5MTAwOTc1MDMyMTIxMTIyMzI5NzExOTMyMTA5MTIyMTA3MTE5MzIxMDkxMDAxMDk1MTExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODExMDExNzEwODEwODQ4NDg0ODQ4NDg0ODQ4NDg1MzUzNDg0ODQ4NDg0ODQ4NDg0ODUzNTU0ODQ4NDg0ODQ4NDg0ODQ4NTU1NDQ4NDg0ODQ4NDg0ODQ4NDg1NTU0NDg0ODQ4NDg0ODQ4NDg0ODU2NTM0ODQ4NDg0ODQ4NDg0ODQ4NTU1NjQ4NDg0ODQ4NDg0ODQ4NDg1MzUzNDg0ODQ4NDg0ODQ4NDg0ODUzNTM0ODQ4NDg0ODQ4NDg0ODQ4NTM1NTQ4NDg0ODQ4NDg0ODQ4NDg1NTU0NDg0ODQ4NDg0ODQ4NDg0ODU1NTQ0ODQ4NDg0ODQ4NDg0ODQ4NTY1MzQ4NDg0ODQ4NDg0ODQ4NDg1NTU2NDg0ODQ4NDg0ODQ4NDg0ODUzNTU0ODQ4NDg0ODQ4NDg0ODQ4NTM1MzQ4NDg0ODQ4NDg0ODQ4NDg1MzU1NDg0ODQ4NDg0ODQ4NDg0ODU1NTQ0ODQ4NDg0ODQ4NDg0ODQ4NTU1NDQ4NDg0ODQ4NDg0ODQ4NDg1NjUzNDg0ODQ4NDg0ODQ4NDg0ODU1NTY0ODQ4NDg0ODQ4NDg0ODQ5NDg1NjQ4NDg0ODQ4NDg0ODQ4NDg1MzUzNDg0ODQ4NDg0ODQ4NDg0ODUzNTU0ODQ4NDg0ODQ4NDg0ODQ4NTU1NDQ4NDg0ODQ4NDg0ODQ4NDg1NTU0NDg0ODQ4NDg0ODQ4NDg0ODU2NTM0ODQ4NDg0ODQ4NDg0ODQ4NTU1NjQ4NDg0ODQ4NDg0ODQ4NDk0ODU2NDg0ODQ4NDg0ODQ4NDg0ODUzNTM0ODQ4NDg0ODQ4NDg0ODQ4NTM1NTQ4NDg0ODQ4NDg0ODQ4NDg1NTU0NDg0ODQ4NDg0ODQ4NDg0ODU1NTQ0ODQ4NDg0ODQ4NDg0ODQ4NTY1MzQ4NDg0ODQ4NDg0ODQ4NDg1NTU2NDg0ODQ4NDg0ODQ4NDg0OTQ5NTU0ODQ4NDg0ODQ4NDg0ODQ4NTM1MzQ4NDg0ODQ4NDg0ODQ4NDg1MzU1NDg0ODQ4NDg0ODQ4NDg0ODU1NTQ0ODQ4NDg0ODQ4NDg0ODQ4NTU1NDQ4NDg0ODQ4NDg0ODQ4NDg1NjUzNDg0ODQ4NDg0ODQ4NDg0ODU1NTY0ODQ4NDg0ODQ4NDg0ODQ5NDk0ODQ4NDg0ODQ4NDg0ODQ4NDg1MzUzNDg0ODQ4NDg0ODQ4NDg0ODUzNTU0ODQ4NDg0ODQ4NDg0ODQ4NTU1NDQ4NDg0ODQ4NDg0ODQ4NDg1NTU0NDg0ODQ4NDg0ODQ4NDg0ODU2NTM0ODQ4NDg0ODQ4NDg0ODQ4NTU1NjEwNDEwNTEwNDEwNQ=="));
    }

    @Test
    public void test108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test108");
        boolean boolean2 = strman.Strman.endsWith("HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!NULL97HI!00370039006C006C0075006E003700370039006C006C0075006E003900370039006C006C0075006E004C00370039006C006C0075006E004C00370039006C006C0075006E005500370039006C006C0075006E004E00370039006C006C0075006EHiHihiHihiHihiHihiHihiHihiHihiHihiHihiHi", "nullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037Hihi");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test109");
        java.lang.String[] strArray3 = strman.Strman.between("nullnnull97null97Nnull97Unull97Lnull97Lnull979null977null97Hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!Nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull", "00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e006c00370039006c006c0075006e006c00370039006c006c0075006e007500370039006c006c0075006e006e00370039006c006c0075006e00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e006c00370039006c006c0075006e006c00370039006c006c0075006e007500370039006c006c0075006e006e00370039006c006c0075006e");
        org.junit.Assert.assertNotNull(strArray3);
    }

    @Test
    public void test110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test110");
        long long2 = strman.Strman.countSubstr("Nullhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!", "000780011700108001080005700055000780011000117001080010800057000550008500110001170010800108000570005500076001100011700108001080005700055000760011000117001080010800057000550005700110001170010800108000570005500055001100011700108001080005700055");
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
    }

    @Test
    public void test111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test111");
        try {
            java.util.Optional<java.lang.String> strOptional2 = strman.Strman.first("HihiNULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL979710", (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 97");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        }
    }

    @Test
    public void test112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test112");
        java.lang.String[] strArray1 = null;
        java.lang.String str2 = strman.Strman.appendArraystrArray1);
        org.junit.Assert.assertTrue("'" + strstr2.equals("000000000110111000000000010111110000000001110101000000000101111100000000011011000000000001011111000000000110110000000000001110010000000000110111000000000110111000000000010111110000000001101110000000000101111100000000011101010000000001011111000000000110110000000000010111110000000001101100000000000011100100000000001101110000000001110101000000000101111100000000011011100000000001011111000000000111010100000000010111110000000001101100000000000101111100000000011011000000000000111001000000000011011100000000011011000000000001011111000000000110111000000000010111110000000001110101000000000101111100000000011011000000000001011111000000000110110000000000001110010000000000110111000000000110110000000000010111110000000001101110000000000101111100000000011101010000000001011111000000000110110000000000010111110000000001101100000000000011100100000000001101110000000000111001000000000101111100000000011011100000000001011111000000000111010100000000010111110000000001101100000000000101111100000000011011000000000000111001000000000011011100000000001101110000000001011111000000000110111000000000010111110000000001110101000000000101111100000000011011000000000001011111000000000110110000000000001110010000000000110111"));
    }

    @Test
    public void test113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test113");
        java.lang.String[] strArray3 = strman.Strman.between("00mda2 ztaw nz uw mdzj mda2 yz aw mzkw mdm3nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull000000005500000000570000000076000000007600000000850000000078000000005500000000550000000057000000007600000000760000000085000000007800000000570000000055000000005700000000760000000076000000008500000000780000000108000000005500000000570000000076000000007600000000850000000078000000010800000000550000000057000000007600000000760000000085000000007800000001170000000055000000005700000000760000000076000000008500000000780000000110000000005500000000570000000076000000007600000000850000000078hihiull");
        java.util.List<java.lang.String> strList4 = strman.Strman.zip(strArray3);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(strList4);
    }

    @Test
    public void test114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test114");
        java.lang.String str1 = strman.Strman.decEncode("lunn79llun");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "00108001170011000110000550005700108001080011700110" + "'", str1.equals("00108001170011000110000550005700108001080011700110"));
    }

    @Test
    public void test115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test115");
        long long4 = strman.Strman.countSubstr("NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97hihi", "Hihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100", false, false);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
    }

    @Test
    public void test116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test116");
        java.lang.String str3 = strman.Strman.encode("Hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97", 280, 0);
    }

    @Test
    public void test117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test117");
        java.lang.String str1 = strman.Strman.rightTrim("000720010500033001040010500033nullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLhi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_null97hi00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "000720010500033001040010500033nullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLhi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_null97hi00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e" + "'", str1.equals("000720010500033001040010500033nullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLhi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_null97hi00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e"));
    }

    @Test
    public void test118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test118");
        int int2 = strman.Strman.lastIndexOf("Hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97", "NULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULL");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
    }

    @Test
    public void test119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test119");
        java.lang.String str1 = strman.Strman.startCase("null97nnul1097null971097");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "Null97nnul1097null971097" + "'", str1.equals("Null97nnul1097null971097"));
    }

    @Test
    public void test120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test120");
        java.util.Optional<java.lang.String> strOptional1 = strman.Strman.trimEnd("5500075000Hihillun10145848435558484994584849945848475158484551584841012584841014584843555848499458484994584847515848455158484353584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484751584841014584843555848499458484994584847515848455158484551584841014584843555848499458484994584847515848455158484ih-ihllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunlunn79llun790179llun7901lunn79llun");
        org.junit.Assert.assertNotNull(strOptional1);
    }

    @Test
    public void test121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test121");
        java.lang.String str1 = strman.Strman.removeSpaces("nhihiHiHiuhihiHiHilhihiHiHil");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "nhihiHiHiuhihiHiHilhihiHiHil" + "'", str1.equals("nhihiHiHiuhihiHiHilhihiHiHil"));
    }

    @Test
    public void test122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test122");
        int int4 = strman.Strman.lastIndexOf("Null000780008500076000760005700055001100007800085000760007600057000550011700078000850007600076000570005500108000780008500076000760005700055001080007800085000760007600057000550005700078000850007600076000570005500055000780008500076000760005700055", "001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000ihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi_h", (int) (byte) 0, true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
    }

    @Test
    public void test123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test123");
        int int1 = strman.Strman.length("Tlvmtdk3");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8 + "'", int1 == 8);
    }

    @Test
    public void test124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test124");
        java.lang.String[] strArray2 = strman.Strman.words("ymxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TTAwMDAwMDAwNTUwMDAwMDAwMDU3MDAwMDAwMDA3NjAwMDAwMDAwNzYwMDAwMDAwMDg1MDAwMDAwMDA3ODAwMDAwMDAwNTUwMDAwMDAwMDU1MDAwMDAwMDA1NzAwMDAwMDAwNzYwMDAwMDAwMDc2MDAwMDAwMDA4NTAwMDAwMDAwNzgwMDAwMDAwMDU3MDAwMDAwMDA1NTAwMDAwMDAwNTcwMDAwMDAwMDc2MDAwMDAwMDA3NjAwMDAwMDAwODUwMDAwMDAwMDc4MDAwMDAwMDEwODAwMDAwMDAwNTUwMDAwMDAwMDU3MDAwMDAwMDA3NjAwMDAwMDAwNzYwMDAwMDAwMDg1MDAwMDAwMDA3ODAwMDAwMDAxMDgwMDAwMDAwMDU1MDAwMDAwMDA1NzAwMDAwMDAwNzYwMDAwMDAwMDc2MDAwMDAwMDA4NTAwMDAwMDAwNzgwMDAwMDAwMTE3MDAwMDAwMDA1NTAwMDAwMDAwNTcwMDAwMDAwMDc2MDAwMDAwMDA3NjAwMDAwMDAwODUwMDAwMDAwMDc4MDAwMDAwMDExMDAwMDAwMDAwNTUwMDAwMDAwMDU3MDAwMDAwMDA3NjAwMDAwMDAwNzYwMDAwMDAwMDg1MDAwMDAwMDA3OGhpaGk=", "N u l l97 n n u lhi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi null97hi null97nnul hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!null97 nnul0000000000110000000000000011000000000000001100110000000000110000000000000011000000000000001100000000000000110011000000000011000000000000001100000000000000110000000000000011001100000000001100110000000000110000000000000011000000000000001100110000000000110011hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97_hi!00370039006_c006_c0075006_e003700370039006_c006_c0075006_e003900370039006_c006_c0075006_e004_c00370039006_c006_c0075006_e004_c00370039006_c006_c0075006_e005500370039006_c006_c0075006_e004_e00370039006_c006_c0075006_e");
        org.junit.Assert.assertNotNull(strArray2);
    }

    @Test
    public void test125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test125");
        boolean boolean4 = strman.Strman.endsWithtrue);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test126");
        java.lang.String str3 = strman.Strman.removeRight("hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000 ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih", "Hi", false);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000 ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih" + "'", str3.equals("hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000 ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih"));
    }

    @Test
    public void test127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test127");
        java.lang.String str1 = strman.Strman.htmlDecode
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "null" + "'", str1.equals("null"));
    }

    @Test
    public void test128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test128");
        java.lang.String[] strArray3 = strman.Strman.between("hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hig2xphwA000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97Nnull97Unull97Lnull97Lnull979null977null97Hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!");
        org.junit.Assert.assertNotNull(strArray3);
    }

    @Test
    public void test129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test129");
        java.lang.String[] strArray2 = strman.Strman.lines("null");
        boolean boolean4 = strman.Strman.containsAll("000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97 Nnull97 Unull97 Lnull97 Lnull979null977null97", strArray2, true);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
    }

    @Test
    public void test130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test130");
        long long4 = strman.Strman.countSubstr("n-u-l-l97-n-n-u-lhi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-null97nnulhi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-null97nnulHihiihi_hhi_hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101", "00055000500004900048000530005100051001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033101171081085755Null97Nnull97Unull97Lnull97Lnull979null977null97", false, false);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
    }

    @Test
    public void test131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test131");
        java.lang.String str1 = strman.Strman.startCase("nullhi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-null97hi\\-00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "Nullhi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Null97hi\\ 00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e" + "'", str1.equals("Nullhi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Null97hi\\ 00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e"));
    }

    @Test
    public void test132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test132");
        java.lang.String str1 = strman.Strman.upperFirst("00110110000000001010111000000000011101100000000001110110000000001110110000000000100111000000000000110110000000000011011000000000101011100000000001110110000000001001011000000000000101100000000010110100000000001001011000000000000101100000000033727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "00110110000000001010111000000000011101100000000001110110000000001110110000000000100111000000000000110110000000000011011000000000101011100000000001110110000000001001011000000000000101100000000010110100000000001001011000000000000101100000000033727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih" + "'", str1.equals("00110110000000001010111000000000011101100000000001110110000000001110110000000000100111000000000000110110000000000011011000000000101011100000000001110110000000001001011000000000000101100000000010110100000000001001011000000000000101100000000033727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih"));
    }

    @Test
    public void test133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test133");
        java.lang.String[] strArray6 = strman.Strman.words("n-u-l-l97-n-n-u-l", "hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97");
        boolean boolean8 = strman.Strman.containsAll("9710", strArray6, false);
        java.lang.String str9 = strman.Strman.appendArraystrArray6);
        java.lang.String str10 = strman.Strman.append("n_u_l_l97_n_ullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull", strArray6);
        boolean boolean11 = strman.Strman.containsAny("hihiihi_hhi_hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101n_u_l_l97_n_n_u_lhi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_null97hi_null97nnulhi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_null97hi_null97nnul", strArray6);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + str9 + "' != '" + "00072001050010400105001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001100011700108001080005700055001040010500033n-u-l-l97-n-n-u-l" + "'", str9.equalsn-u-l-l97-n-n-u-l"));
        org.junit.Assert.assertTrue("'" + str10 + "' != '" + "n_u_l_l97_n_ullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnulln-u-l-l97-n-n-u-l" + "'", str10.equals("n_u_l_l97_n_ullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnulln-u-l-l97-n-n-u-l"));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test134");
        java.lang.String str1 = strman.Strman.lowerFirst("nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull&UnderBar;null");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull&UnderBar;null" + "'", str1.equals("nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull&UnderBar;null"));
    }

    @Test
    public void test135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test135");
        java.lang.String[] strArray2 = strman.Strman.chop("5500075000801008010071100011005500055000750008010080100711000110075000550007500080100801007110001100670005500075000801008010071100011006700055000750008010080100711000110058000550007500080100801007110001100870005500075000801008010071100870003kDTMVlThkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEs", 5);
        org.junit.Assert.assertNotNull(strArray2);
    }

    @Test
    public void test136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test136");
        boolean boolean1 = strman.Strman.isLowerCase("006e0075006c006c006e0075006c006c00390037006e006e0075006c");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
    }

    @Test
    public void test137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test137");
        java.lang.String str2 = strman.Strman.removeLeft("006900680069005f006800680069002dhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!", "3kdtmV lT hkeS hkeS hkeS hkeS 30");
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "006900680069005f006800680069002dhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!" + "'", str2.equals("006900680069005f006800680069002dhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!"));
    }

    @Test
    public void test138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test138");
        boolean boolean3 = strman.Strman.contains("00000000001100110000000000110101000000000011001100000000001101010000000000110011000000000011010100000000001100110000000000110101000000000011001100000000001101010000000000110011000000000011010100000000001100110000000000110101", "hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!35blvmte5vtexovuxmtlvmte5vtexovuxmtlvmte5vtexovuxmtlvmte5vtexovuxmtlvmte5vtexovuxmtlvmte5vtexovuxmtlvmte5vtexovuxmtlvmte5vtexovuxmtlvmte5vtexovuxmtlvmte5vtexovuxmtlvmte5vtexovuxmtlvmte5vtexovuxmtlvmte5vtexovuxmtlvmte5vtexovuxmtlvmte5vtexovuxmtlvmte5vtexovuxm000000005500000000570000000076000000007600000000850000000078000000005500000000550000000057000000007600000000760000000085000000007800000000570000000055000000005700000000760000000076000000008500000000780000000108000000005500000000570000000076000000007600000000850000000078000000010800000000550000000057000000007600000000760000000085000000007800000001170000000055000000005700000000760000000076000000008500000000780000000110000000005500000000570000000076000000007600000000850000000078hihi", false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test139");
        java.lang.String str1 = strman.Strman.swapCase("ihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi H");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "IHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI h" + "'", str1.equals("IHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI hIHI h"));
    }

    @Test
    public void test140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test140");
        java.lang.String str2 = strman.Strman.ensureRight("mda2006e0075006c006c00390037ztaw006e0075006c006c00390037nz006e0075006c006c00390037uw006e0075006c006c00390037mdzj006e0075006c006c00390037mda2006e0075006c006c00390037yz006e0075006c006c00390037aw006e0075006c006c00390037mzkw006e0075006c006c00390037mdmhihi", "79llune779llun979llunl_79llunl_79llunu_79llunn_79llun79llun001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000hi!l_u_n_n_79l_l_u_n_lunn_79llun79llun1");
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "mda2006e0075006c006c00390037ztaw006e0075006c006c00390037nz006e0075006c006c00390037uw006e0075006c006c00390037mdzj006e0075006c006c00390037mda2006e0075006c006c00390037yz006e0075006c006c00390037aw006e0075006c006c00390037mzkw006e0075006c006c00390037mdmhihi79llune779llun979llunl_79llunl_79llunu_79llunn_79llun79llun001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000hi!l_u_n_n_79l_l_u_n_lunn_79llun79llun1" + "'", str2.equals("mda2006e0075006c006c00390037ztaw006e0075006c006c00390037nz006e0075006c006c00390037uw006e0075006c006c00390037mdzj006e0075006c006c00390037mda2006e0075006c006c00390037yz006e0075006c006c00390037aw006e0075006c006c00390037mzkw006e0075006c006c00390037mdmhihi79llune779llun979llunl_79llunl_79llunu_79llunn_79llun79llun001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000hi!l_u_n_n_79l_l_u_n_lunn_79llun79llun1"));
    }

    @Test
    public void test141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test141");
        int int4 = strman.Strman.indexOf("Mda2 ztaw nz uw mdzj mda2 yz aw mzkw mdm3nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull", "MDAxMTAxMTAwMDAwMDAwMDEwMTAxMTEwMDAwMDAwMDAwMTExMDExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDAxMDAxMTEwMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAxMDEwMTExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDEwMDEwMTEwMDAwMDAwMDAwMDAxMDExMDAwMDAwMDAwMTAxMTAxMDAwMDAwMDAwMDEwMDEwMTEwMDAwMDAwMDAwMDAxMDExMDAwMDAwMDAwLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloMDAzOTAwMzc=", 6416, false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
    }

    @Test
    public void test142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test142");
        boolean boolean2 = strman.Strman.isEnclosedBetween("NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97hihi", "");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
    }

    @Test
    public void test143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test143");
        java.lang.String[] strArray2 = strman.Strman.chop("MDA2ODAwNjkwMDJkMDA2ODAwNjkwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzEwMDM1MDAzNTAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzMTAwMzUwMDM3MDAzNDAwMzgwMDM0MDAzODAwMzUwMDM0MDAzOTAwMzkwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzQwMDM5MDAzOTAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzNTAwMzUwMDMzMDAzNDAwMzgwMDM0MDAzODAwMzUwMDM0MDAzMTAwMzAwMDMxMDAzNDAwMzgwMDM0MDAzODAwMzUwMDMxMDAzNTAwMzUwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzEwMDM1MDAzNTAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzMTAwMzUwMDM3MDAzNDAwMzgwMDM0MDAzODAwMzUwMDM0MDAzOTAwMzkwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzQwMDM5MDAzOTAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzNTAwMzUwMDMzMDAzNDAwMzgwMDM0MDAzODAwMzUwMDM0MDAzMTAwMzAwMDMxMDAzNDAwMzgwMDM0MDAzODAwMzUwMDMxMDAzNTAwMzcwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzEwMDM1MDAzNTAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzMTAwMzUwMDM3MDAzNDAwMzgwMDM0MDAzODAwMzUwMDM0MDAzOTAwMzkwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzQwMDM5MDAzOTAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzNTAwMzUwMDMzMDAzNDAwMzgwMDM0MDAzODAwMzUwMDM0MDAzMTAwMzAwMDMxMDAzNDAwMzgwMDM0MDAzODAwMzUwMDMyMDAzOTAwMzkwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzEwMDM1MDAzNTAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzMTAwMzUwMDM3MDAzNDAwMzgwMDM0MDAzODAwMzUwMDM0MDAzOTAwMzkwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzQwMDM5MDAzOTAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzNTAwMzUwMDMzMDAzNDAwMzgwMDM0MDAzODAwMzUwMDM0MDAzMTAwMzAwMDMxMDAzNDAwMzgwMDM0MDAzODAwMzUwMDMyMDAzOTAwMzkwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzEwMDM1MDAzNTAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzMTAwMzUwMDM3MDAzNDAwMzgwMDM0MDAzODAwMzUwMDM0MDAzOTAwMzkwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzQwMDM5MDAzOTAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzNTAwMzUwMDMzMDAzNDAwMzgwMDM0MDAzODAwMzUwMDM0MDAzMTAwMzAwMDMxMDAzNDAwMzgwMDM0MDAzODAwMzUwMDMzMDAzNTAwMzMwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzEwMDM1MDAzNTAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzMTAwMzUwMDM3MDAzNDAwMzgwMDM0MDAzODAwMzUwMDM0MDAzOTAwMzkwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzQwMDM5MDAzOTAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzNTAwMzUwMDMzMDAzNDAwMzgwMDM0MDAzODAwMzUwMDM0MDAzMTAwMzAwMDMxMDAzNDAwMzgwMDM0MDAzODAwMzUwMDMyMDAzMTAwMzAwMDMxMDAzNDAwMzgwMDM0MDAzODAwMzUwMDMxMDAzNTAwMzUwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzEwMDM1MDAzNzAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzNDAwMzkwMDM5MDAzNDAwMzgwMDM0MDAzODAwMzUwMDM0MDAzOTAwMzkwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzUwMDM1MDAzMzAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzNDAwMzEwMDMwMDAzMTAwMzAwMDMwMDAzMDAwMzAwMDMwMDAzMDAwMzAwMDMwMDAzMDAwMzEwMDMwMDAzMDAwMzEwMDMwMDAzMDAwMzAwMDMwMDAzMDAwMzAwMDMwMDAzMDAwMzAwMDMwMDAzMDAwMzAwMDMxMDAzMTAwMzAwMDMxMDAzMDAwMzAwMDMx", (int) 'a');
        org.junit.Assert.assertNotNull(strArray2);
    }

    @Test
    public void test144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test144");
        java.lang.String str2 = strman.Strman.toDecamelize("NULL971null97null97Nnull97Unull97Lnull97Lnull979null977null97MwnULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL979710", "006900680069005f006800680069002d
    }

    @Test
    public void test145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test145");
        boolean boolean4 = strman.Strman.endsWith("ihi Hhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97", "10145848435558484994584849945848475158484551584841012584841014584843555848499458484994584847515848455158484353584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484751584841014584843555848499458484994584847515848455158484551584841014584843555848499458484994584847515848455158484ih_ihllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunlunn79llun790179llun7901lunn79llun", 2176, false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test146");
        java.lang.String str3 = strman.Strman.safeTruncateint) (short) 0, "00110001170010800108000570005500078001100011700108hihi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101");
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "" + "'", str3.equals(""));
    }

    @Test
    public void test147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test147");
        java.lang.String str2 = strman.Strman.removeRight("hiHi", "35blVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxM000000005500000000570000000076000000007600000000850000000078000000005500000000550000000057000000007600000000760000000085000000007800000000570000000055000000005700000000760000000076000000008500000000780000000108000000005500000000570000000076000000007600000000850000000078000000010800000000550000000057000000007600000000760000000085000000007800000001170000000055000000005700000000760000000076000000008500000000780000000110000000005500000000570000000076000000007600000000850000000078hihi");
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hiHi" + "'", str2.equals("hiHi"));
    }

    @Test
    public void test148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test148");
        java.lang.String str3 = strman.Strman.leftPad("001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000ihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihiH", "!ihnullnull97Nnull97Unull97Lnull97Lnull979null977nuln_u_l_l97_n_ullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnulll97NULL9748485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101", 0);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000ihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihiH" + "'", str3.equals("001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000ihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihiH"));
    }

    @Test
    public void test149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test149");
        java.lang.String[] strArray4 = strman.Strman.words("Nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull97Nnull97Unull97Lnull97Lnull979null977null97hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97", "");
        java.lang.String str5 = strman.Strman.format("ullnullnullnullnullnullnull", strArray4);
        boolean boolean6 = strman.Strman.containsAll("NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97", strArray4);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "ullnullnullnullnullnullnull" + "'", str5.equals("ullnullnullnullnullnullnull"));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test150");
        try {
            java.lang.String str3 = strman.Strman.truncate("bnVsbDk3aGloaWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIW51bGw5N2hpIW5udWxsOTdoaWhpaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhbnVsbDk3aGkhdW51bGw5N2hpaGloaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFudWxsOTdoaSFsbnVsbDk3aGloaWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIW51bGw5N2hpIWxudWxsOTc5bnVsbDk3N251bGw5N24tdS1sLWw5Ny1uLXVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGw5N25udWwxMDk3bnVsbDk3MTA5N251bGw5N25udWxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxoaS1oaTQ4NDg1MTU1NDg0ODUxNTc0ODQ4NTQ5OTQ4NDg1NDk5NDg0ODU1NTM0ODQ4NTQxMDE0ODQ4NTE1NTQ4NDg1MTU1NDg0ODUxNTc0ODQ4NTQ5OTQ4NDg1NDk5NDg0ODU1NTM0ODQ4NTQxMDE0ODQ4NTE1NzQ4NDg1MTU1NDg0ODUxNTc0ODQ4NTQ5OTQ4NDg1NDk5NDg0ODU1NTM0ODQ4NTQxMDE0ODQ4NTI5OTQ4NDg1MTU1NDg0ODUxNTc0ODQ4NTQ5OTQ4NDg1NDk5NDg0ODU1NTM0ODQ4NTQxMDE0ODQ4NTI5OTQ4NDg1MTU1NDg0ODUxNTc0ODQ4NTQ5OTQ4NDg1NDk5NDg0ODU1NTM0ODQ4NTQxMDE0ODQ4NTM1MzQ4NDg1MTU1NDg0ODUxNTc0ODQ4NTQ5OTQ4NDg1NDk5NDg0ODU1NTM0ODQ4NTQxMDE0ODQ4NTIxMDE0ODQ4NTE1NTQ4NDg1MTU3NDg0ODU0OTk0ODQ4NTQ5OTQ4NDg1NTUzNDg0ODU0MTAx", (intnull97null97-nnull97-unull97-lnull97-lnull979null977null97-hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!-nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1285");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        }
    }

    @Test
    public void test151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test151");
        boolean boolean1 = strman.Strman.isString((java.lang.Object) "Nullnull97nnul=g2xphw A000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97nnull97unull97lnull97lnull979null977null97hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hihi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Mw==");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
    }

    @Test
    public void test152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test152");
        java.lang.String str3 = strman.Strman.ensureLeft("006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037", "bnVsbDk3bm51bDEwOTdudWxsOTcxMDk3", true);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "bnVsbDk3bm51bDEwOTdudWxsOTcxMDk3006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037" + "'", str3.equals("bnVsbDk3bm51bDEwOTdudWxsOTcxMDk3006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037"));
    }

    @Test
    public void test153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test153");
        boolean boolean2 = strman.Strman.unequal("000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033", "00104001050010400105000780008500076000760005700055001100007800085000760007600057000550011700078000850007600076000570005500108000780008500076000760005700055001080007800085000760007600057000550005700078000850007600076000570005500055000780008500076000760005700055000570005500049000480011000045001170004500108000450010800057000550004500110000450011000045001170004500108");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
    }

    @Test
    public void test154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test154");
        java.lang.String str1 = strman.Strman.collapseWhitespace("sEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhTlVMTDk3000780011700108001080005700055000780011000117001080010800057000550008500110001170010800108000570005500076001100011700108001080005700055000760011000117001080010800057000550005700110001170010800108000570005500055001100011700108001080005700055");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "sEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhTlVMTDk3000780011700108001080005700055000780011000117001080010800057000550008500110001170010800108000570005500076001100011700108001080005700055000760011000117001080010800057000550005700110001170010800108000570005500055001100011700108001080005700055" + "'", str1.equals("sEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhTlVMTDk3000780011700108001080005700055000780011000117001080010800057000550008500110001170010800108000570005500076001100011700108001080005700055000760011000117001080010800057000550005700110001170010800108000570005500055001100011700108001080005700055"));
    }

    @Test
    public void test155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test155");
        java.lang.String str1 = strman.Strman.transliterate("Hihiihi_hhi_hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "Hihiihi_hhi_hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101" + "'", str1.equals("Hihiihi_hhi_hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101"));
    }

    @Test
    public void test156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test156");
        java.lang.String[] strArray4 = strman.Strman.between("null97", "", "1097");
        boolean boolean5 = strman.Strman.containsAll("", strArray4);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test157");
        java.lang.String str1 = strman.Strman.startCase("0004900108001170011000110000550005700108001080011700110");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "0004900108001170011000110000550005700108001080011700110" + "'", str1.equals("0004900108001170011000110000550005700108001080011700110"));
    }

    @Test
    public void test158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test158");
        java.lang.String str1 = strman.Strman.binEncode("a-whp-x2g
    }

    @Test
    public void test159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test159");
        java.lang.String str3 = strman.Strman.ensureRight("11", "HiHinull97nnul", true);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "11HiHinull97nnul" + "'", str3.equals("11HiHinull97nnul"));
    }

    @Test
    public void test160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test160");
        java.lang.String str3 = strman.Strman.encode("lunn-79llun!ih79llun!ih!ih!ih!001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000ihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihiH00390037ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih-lunn79llun-ih79llun-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ihl-u-n-n-79l-l-u-n001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000 ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih006e0075006c006c00390037", 330, 4);
    }

    @Test
    public void test161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test161");
        boolean boolean1 = strman.Strman.isUpperCase("lunn-79llun!ih79llun!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih-lunn79llun-ih79llun-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ihl-u-n-n-79l-l-u-n001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000 ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih006e0075006c006c00390037");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
    }

    @Test
    public void test162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test162");
        java.util.Optional<java.lang.String> strOptional2 = strman.Strman.at("bnVsbDk3bm51bDEwOTdudWxsOTcxMDk3", 440);
        org.junit.Assert.assertNotNull(strOptional2);
    }

    @Test
    public void test163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test163");
        java.lang.String str3 = strman.Strman.removeRight("hihihihinull97nnull97unull97lnull97lnull979null977null979710", "hil-u-n-n-79l-l-u-n-lunn-79llun79llun1", true);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "hihihihinull97nnull97unull97lnull97lnull979null977null979710" + "'", str3.equals("hihihihinull97nnull97unull97lnull97lnull979null977null979710"));
    }

    @Test
    public void test164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test164");
        java.lang.String str3 = strman.Strman.ensureRight("hi!him_d_a2_z_t_aw_nz_uw_m_d_zj_m_d_a2_yz_aw_mzkw_m_d_m3_m_d_a0_z_t_aw_nm_uw_m_dc1_m_d_a2_yz_aw_nm_mw_m_d_m5_m_d_az_nz_aw_n_t_uw_m_d_zl_m_d_a3_n_t_aw_nm_mw_m_d_zj_m_d_az_o_t_aw_mzcw_m_d_rj_m_d_a2_z_t_aw_nz_uw_m_d_zj_m_d_a2_yz_aw_mzkw_m_d_m3_m_d_a0_yz_aw_nm_uw_m_dc1_m_d_a2_yz_aw_nm_mw_m_d_m5_m_d_az_nz_aw_mzkw_m_d_zl_m_d_a3_n_t_aw_nm_mw_m_d_zj_m_d_az_o_t_aw_mzcw_m_d_m3_m_d_a2_z_t_aw_nz_uw_m_d_zj_m_d_a2_yz_aw_mzkw_m_d_m3", false);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "hi!him_d_a2_z_t_aw_nz_uw_m_d_zj_m_d_a2_yz_aw_mzkw_m_d_m3_m_d_a0_z_t_aw_nm_uw_m_dc1_m_d_a2_yz_aw_nm_mw_m_d_m5_m_d_az_nz_aw_n_t_uw_m_d_zl_m_d_a3_n_t_aw_nm_mw_m_d_zj_m_d_az_o_t_aw_mzcw_m_d_rj_m_d_a2_z_t_aw_nz_uw_m_d_zj_m_d_a2_yz_aw_mzkw_m_d_m3_m_d_a0_yz_aw_nm_uw_m_dc1_m_d_a2_yz_aw_nm_mw_m_d_m5_m_d_az_nz_aw_mzkw_m_d_zl_m_d_a3_n_t_aw_nm_mw_m_d_zj_m_d_az_o_t_aw_mzcw_m_d_m3_m_d_a2_z_t_aw_nz_uw_m_d_zj_m_d_a2_yz_aw_mzkw_m_d_m3" + "'", str3.equals("hi!him_d_a2_z_t_aw_nz_uw_m_d_zj_m_d_a2_yz_aw_mzkw_m_d_m3_m_d_a0_z_t_aw_nm_uw_m_dc1_m_d_a2_yz_aw_nm_mw_m_d_m5_m_d_az_nz_aw_n_t_uw_m_d_zl_m_d_a3_n_t_aw_nm_mw_m_d_zj_m_d_az_o_t_aw_mzcw_m_d_rj_m_d_a2_z_t_aw_nz_uw_m_d_zj_m_d_a2_yz_aw_mzkw_m_d_m3_m_d_a0_yz_aw_nm_uw_m_dc1_m_d_a2_yz_aw_nm_mw_m_d_m5_m_d_az_nz_aw_mzkw_m_d_zl_m_d_a3_n_t_aw_nm_mw_m_d_zj_m_d_az_o_t_aw_mzcw_m_d_m3_m_d_a2_z_t_aw_nz_uw_m_d_zj_m_d_a2_yz_aw_mzkw_m_d_m3"));
    }

    @Test
    public void test165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test165");
        boolean boolean2 = strman.Strman.endsWithHi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!null97Nnulnull000780008500076000760005700055001100007800085000760007600057000550011700078000850007600076000570005500108000780008500076000760005700055001080007800085000760007600057000550005700078000850007600076000570005500055000780008500076000760005700055");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test166");
        java.lang.String[] strArray2 = strman.Strman.chop("nhihiHiHiuhihiHiHilhihiHiHil", 402);
        org.junit.Assert.assertNotNull(strArray2);
    }

    @Test
    public void test167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test167");
        java.lang.String str1 = strman.Strman.reverse("1-NULL97");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "79LLUN-1" + "'", str1.equals("79LLUN-1"));
    }

    @Test
    public void test168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test168");
        java.lang.String[] strArray3 = strman.Strman.split("Null97hihi", "");
        java.lang.String str4 = strman.Strman.format("hihiihi_hhi_hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101", strArray3);
        java.lang.String[] strArray5 = strman.Strman.removeEmptyStrings(strArray3);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "hihiihi_hhi_hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101" + "'", str4.equals("hihiihi_hhi_hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101"));
        org.junit.Assert.assertNotNull(strArray5);
    }

    @Test
    public void test169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test169");
        java.util.Optional<java.lang.String> strOptional2 = strman.Strman.at("1null97null97-nnull97-unull97-lnull97-lnull979null977null97", 2088);
        org.junit.Assert.assertNotNull(strOptional2);
    }

    @Test
    public void test170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test170");
        java.lang.String str1 = strman.Strman.upperFirst("0000000084000000010800000000860000000077000000008400000000680000000107000000005100000000970000000071000000010800000001110000000097000000008100000000610000000061");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "0000000084000000010800000000860000000077000000008400000000680000000107000000005100000000970000000071000000010800000001110000000097000000008100000000610000000061" + "'", str1.equals("0000000084000000010800000000860000000077000000008400000000680000000107000000005100000000970000000071000000010800000001110000000097000000008100000000610000000061"));
    }

    @Test
    public void test171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test171");
        java.lang.String str1 = strman.Strman.htmlDecode("nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "null" + "'", str1.equals("null"));
    }

    @Test
    public void test172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test172");
        java.lang.String str4 = strman.Strman.replace("1null97null97NnulNULL97NNUL!ih", "==AbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnb", "n-u-l-l97-n-n-u-lhi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-null97nnulhi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-null97nnulHihiihi_hhi_hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101", false);
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "1null97null97NnulNULL97NNUL!ih" + "'", str4.equals("1null97null97NnulNULL97NNUL!ih"));
    }

    @Test
    public void test173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test173");
        java.lang.String str3 = strman.Strman.leftPad("Null97nnul1097null971097nULL97NNULNullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullhi-hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101hihi", "484854694848555348485467484854674848515748485155727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333", 202);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "Null97nnul1097null971097nULL97NNULNullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullhi-hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101hihi" + "'", str3.equals("Null97nnul1097null971097nULL97NNULNullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullhi-hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101hihi"));
    }

    @Test
    public void test174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test174");
        boolean boolean1 = strman.Strman.isUpperCase("1null97null97_nnul_n_u_l_l97_n_n_u_lih");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
    }

    @Test
    public void test175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test175");
        boolean boolean2 = strman.Strman.contains("n_u_l_l97_n_ullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnulln-u-l-l97-n-n-u-l", "Mda2ztaWnZuWmdzJmda2yZaWmZKWmdm3mda0ztaWnMuWmdC1mda2yZaWnMmWmdm5mdaZnZaWntuWmdzLmda3ntaWnMmWmdzJmdaZotaWmZCWmdrJmda2ztaWnZuWmdzJmda2yZaWmZKWmdm3mda0yZaWnMuWmdC1mda2yZaWnMmWmdm5mdaZnZaWmZKWmdzLmda3ntaWnMmWmdzJmdaZotaWmZCWmdm3mda2ztaWnZuWmdzJmda2yZaWmZKWmdmiH79LLUNiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHmW==hI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!NULL97HI!NULL97nNULNULL000780008500076000760005700055001100007800085000760007600057000550011700078000850007600076000570005500108000780008500076000760005700055001080007800085000760007600057000550005700078000850007600076000570005500055000780008500076000760005700055");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test176");
        java.lang.String str3 = strman.Strman.encode("Mda2 ztaw nz uw mdzj mda2 yz aw mzkw mdm3nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull000000005500000000570000000076000000007600000000850000000078000000005500000000550000000057000000007600000000760000000085000000007800000000570000000055000000005700000000760000000076000000008500000000780000000108000000005500000000570000000076000000007600000000850000000078000000010800000000550000000057000000007600000000760000000085000000007800000001170000000055000000005700000000760000000076000000008500000000780000000110000000005500000000570000000076000000007600000000850000000078hihi", 68, 10);
    }

    @Test
    public void test177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test177");
        java.lang.String str1 = strman.Strman.htmlEncode("Ihihhihi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull" + "'", str1.equals("nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull"));
    }

    @Test
    public void test178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test178");
        java.lang.String str1 = strman.Strman.htmlDecode("sEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhTlVMTDk3");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "null" + "'", str1.equals("null"));
    }

    @Test
    public void test179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test179");
        java.lang.String[] strArray5 = strman.Strman.words("", "null");
        java.util.Optional<java.lang.String> strOptional6 = strman.Strman.trimStart("", strArray5);
        java.lang.String[] strArray7 = strman.Strman.removeEmptyStrings(strArray5);
        java.lang.String str8 = strman.Strman.appendArray("hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hiMw==", strArray5);
        boolean boolean10 = strman.Strman.containsAll("nULL97", strArray5, true);
        java.util.List<java.lang.String> strList11 = strman.Strman.zip(strArray5);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strOptional6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + str8 + "' != '" + "hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hiMw==" + "'", str8.equals("hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hiMw=="));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strList11);
    }

    @Test
    public void test180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test180");
        java.lang.String str2 = strman.Strman.removeLeft("", "1220122112201221");
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "" + "'", str2.equals(""));
    }

    @Test
    public void test181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test181");
        java.lang.String str1 = strman.Strman.leftTrim("Hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "Hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97" + "'", str1.equals("Hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97"));
    }

    @Test
    public void test182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test182");
        java.lang.String[] strArray4 = strman.Strman.chars("null");
        boolean boolean5 = strman.Strman.containsAny("null97Nnull97Unull97Lnull97Lnull979null977null97", strArray4);
        java.lang.String str6 = strman.Strman.format("null97null97Nnull97Unull97Lnull97Lnull979null977null97", strArray4);
        java.lang.String str7 = strman.Strman.prepend("ihi H", strArray4);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "null97null97Nnull97Unull97Lnull97Lnull979null977null97" + "'", str6.equals("null97null97Nnull97Unull97Lnull97Lnull979null977null97"));
        org.junit.Assert.assertTrue("'" + str7 + "' != '" + "nullihi H" + "'", str7.equals("nullihi H"));
    }

    @Test
    public void test183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test183");
        java.lang.String str1 = strman.Strman.transliterate("MDAwMDAwMDAwMTAwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTExMDAwMDAwMDAwMDExMTAxMDEwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDAxMTEwMDEwMDAwMDAwMDAwMTEwMTExMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAx");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "MDAwMDAwMDAwMTAwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTExMDAwMDAwMDAwMDExMTAxMDEwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDAxMTEwMDEwMDAwMDAwMDAwMTEwMTExMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAx" + "'", str1.equals("MDAwMDAwMDAwMTAwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTExMDAwMDAwMDAwMDExMTAxMDEwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDAxMTEwMDEwMDAwMDAwMDAwMTEwMTExMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAx"));
    }

    @Test
    public void test184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test184");
        java.lang.String str3 = strman.Strman.removeLeft("s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_tl_v_m_t_dk330", "000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97-nnull97-unull97-lnull97-lnull979null977null97", false);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_tl_v_m_t_dk330" + "'", str3.equals("s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_s_ekh_tl_v_m_t_dk330"));
    }

    @Test
    public void test185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test185");
        java.lang.String str1 = strman.Strman.dasherize("ullnullnullnullnullnullnullNull97nnul1097null971097");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "ullnullnullnullnullnullnull-null97nnul1097null971097" + "'", str1.equals("ullnullnullnullnullnullnull-null97nnul1097null971097"));
    }

    @Test
    public void test186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test186");
        java.lang.String[] strArray3 = strman.Strman.lines("Hihihihinull97nnull97unull97lnull97lnull979null977null979710");
        java.lang.String str5 = strman.Strman.join(strArray3, "000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97_nnull97_unull97_lnull97_lnull979null977null97_hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!");
        java.lang.String str6 = strman.Strman.prependArray("MzU=", strArray3);
        java.lang.String str7 = strman.Strman.format("0000000001101001000000000110100000000000011010010000000001001000", strArray3);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "Hihihihinull97nnull97unull97lnull97lnull979null977null979710" + "'", str5.equals("Hihihihinull97nnull97unull97lnull97lnull979null977null979710"));
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Hihihihinull97nnull97unull97lnull97lnull979null977null979710MzU=" + "'", str6.equals("Hihihihinull97nnull97unull97lnull97lnull979null977null979710MzU="));
        org.junit.Assert.assertTrue("'" + str7 + "' != '" + "0000000001101001000000000110100000000000011010010000000001001000" + "'", str7.equals("0000000001101001000000000110100000000000011010010000000001001000"));
    }

    @Test
    public void test187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test187");
        java.lang.String str3 = strman.Strman.truncate("HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!0033", 160, "006e0075006c006c0039003700390037");
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!0033" + "'", str3.equals("HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!0033"));
    }

    @Test
    public void test188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test188");
        long long4 = strman.Strman.countSubstr("1null97null97nnulnull97nnulih", "0nULL97NNULhiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiNull97hiNull97nnulhiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiNull97hiNull97nnulfalse, false);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
    }

    @Test
    public void test189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test189");
        java.lang.String str2 = strman.Strman.removeLeft("Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Tl Vmtdk3", "mda2 ztaw nz uw mdzj mda2 yz aw mzkw mdm3nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull000000005500000000570000000076000000007600000000850000000078000000005500000000550000000057000000007600000000760000000085000000007800000000570000000055000000005700000000760000000076000000008500000000780000000108000000005500000000570000000076000000007600000000850000000078000000010800000000550000000057000000007600000000760000000085000000007800000001170000000055000000005700000000760000000076000000008500000000780000000110000000005500000000570000000076000000007600000000850000000078hihi");
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Tl Vmtdk3" + "'", str2.equals("Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Tl Vmtdk3"));
    }

    @Test
    public void test190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test190");
        java.lang.String str1 = strman.Strman.toStudlyCase("NzlsbHVuNzc5bGx1bjk3OWxsdW5MNzlsbHVuTDc5bGx1blU3OWxsdW5ONzlsbHVu");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "NzlsbHVuNzc5bGx1bjk3OWxsdW5MNzlsbHVuTDc5bGx1blU3OWxsdW5ONzlsbHVu" + "'", str1.equals("NzlsbHVuNzc5bGx1bjk3OWxsdW5MNzlsbHVuTDc5bGx1blU3OWxsdW5ONzlsbHVu"));
    }

    @Test
    public void test191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test191");
        boolean boolean2 = strman.Strman.unequal("35", "Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Null97hi 00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
    }

    @Test
    public void test192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test192");
        java.lang.String str1 = strman.Strman.reverse("48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101Nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "llunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunlluN10145848435558484994584849945848475158484551584841012584841014584843555848499458484994584847515848455158484353584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484751584841014584843555848499458484994584847515848455158484551584841014584843555848499458484994584847515848455158484" + "'", str1.equals("llunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunlluN10145848435558484994584849945848475158484551584841012584841014584843555848499458484994584847515848455158484353584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484751584841014584843555848499458484994584847515848455158484551584841014584843555848499458484994584847515848455158484"));
    }

    @Test
    public void test193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test193");
        java.util.Map<java.lang.Character, java.lang.Long> charMap1 = strman.Strman.charsCount("hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!9ihi H7");
        org.junit.Assert.assertNotNull(charMap1);
    }

    @Test
    public void test194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test194");
        java.lang.String str3 = strman.Strman.surround("000780011700108001080005700055000780011000117001080010800057000550008500110001170010800108000570005500076001100011700108001080005700055000760011000117001080010800057000550005700110001170010800108000570005500055001100011700108001080005700055000000000110100000000000011010010000000000100001", "000000000011000100000000011011100000000001110101000000000110110000000000011011000000000000111001000000000011011100000000011011100000000001110101000000000110110000000000011011000000000000111001000000000011011100000000001000000000000001101110000000000110111000000000011101010000000001101100000000000010000000000000011011100000000000100000000000000111010100000000001000000000000001101100000000000010000000000000011011000000000000111001000000000011011100000000001000000000000001101110000000000010000000000000011011100000000000100000000000000111010100000000001000000000000001101100000000000010000100000000011010010000000001101000", "001");
        org.junit.Assert.assertTrue("'" + strstr3.equals
    }

    @Test
    public void test195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test195");
        java.lang.String[] strArray4 = strman.Strman.between("nullnullnullnullnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexcl", "256", "nullnull&excl;nullnull&excl;");
        java.lang.String str5 = strman.Strman.format("nullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037Hihi", strArray4);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "nullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037Hihi" + "'", str5.equals("nullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037Hihi"));
    }

    @Test
    public void test196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test196");
        java.lang.String str1 = strman.Strman.lowerFirst("000720010500033001040010500033");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "000720010500033001040010500033" + "'", str1.equals("000720010500033001040010500033"));
    }

    @Test
    public void test197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test197");
        java.lang.String[] strArray5 = strman.Strman.lines("hi!hi!");
        java.lang.String[] strArray6 = strman.Strman.removeEmptyStrings(strArray5);
        java.lang.String str7 = strman.Strman.prependArray("hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!", strArray6);
        boolean boolean8 = strman.Strman.containsAll("hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!", strArray6);
        java.util.Optional<java.lang.String> strOptional9 = strman.Strman.trimEnd("HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!", strArray6);
        java.util.Optional<java.lang.String> strOptional10 = strman.Strman.trimEndstrArray6);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + str7 + "' != '" + "hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!" + "'", str7.equals("hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!"));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strOptional9);
        org.junit.Assert.assertNotNull(strOptional10);
    }

    @Test
    public void test198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test198");
        int int4 = strman.Strman.indexOf("nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnullnullnullnullnullNzlsbHVuNzc5bGx1bjk3OWxsdW5MNzlsbHVuTDc5bGx1blU3OWxsdW5ONzlsbHVu", "", 240, true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 240 + "'", int4 == 240);
    }

    @Test
    public void test199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test199");
        try {
            java.lang.String str3 = strman.Strman.decode("hi-hi", (int) (short) 0, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException; message: radix 1 less than Character.MIN_RADIX");
        } catch (java.lang.NumberFormatException e) {
        }
    }

    @Test
    public void test200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test200");
        java.lang.String[] strArray4 = strman.Strman.words("Nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull97Nnull97Unull97Lnull97Lnull979null977null97hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97", "hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!");
        java.util.Optional<java.lang.String> strOptional5 = strman.Strman.trimEnd("MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA0ZTAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwNTUwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDRjMDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA0YzAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwMzkwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111001000000000-ih79llun-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih", strArray4);
        java.lang.String[] strArray6 = strman.Strman.removeEmptyStrings(strArray4);
        boolean boolean7 = strman.Strman.containsAny("79ll040100", strArray6);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(strOptional5);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test201");
        java.lang.String str1 = strman.Strman.removeSpaces("9ihi h7");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "9ihih7" + "'", str1.equals("9ihih7"));
    }

    @Test
    public void test202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test202");
        java.lang.String[] strArray2 = strman.Strman.chop("Nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull97Nnull97Unull97Lnull97Lnull979null977null97null97Mda2 ztaw nz uw mdzj mda2 yz aw mzkw mdm3nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull000000005500000000570000000076000000007600000000850000000078000000005500000000550000000057000000007600000000760000000085000000007800000000570000000055000000005700000000760000000076000000008500000000780000000108000000005500000000570000000076000000007600000000850000000078000000010800000000550000000057000000007600000000760000000085000000007800000001170000000055000000005700000000760000000076000000008500000000780000000110000000005500000000570000000076000000007600000000850000000078hihi", 505);
        org.junit.Assert.assertNotNull(strArray2);
    }

    @Test
    public void test203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test203");
        java.lang.String[] strArray2 = strman.Strman.split("mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=", "000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97 Nnull97 Unull97 Lnull97 Lnull979null977null97");
        org.junit.Assert.assertNotNull(strArray2);
    }

    @Test
    public void test204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test204");
        long long2 = strman.Strman.countSubstr("", "Ihi Hhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97");
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
    }

    @Test
    public void test205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test205");
        boolean boolean1 = strman.Strman.isLowerCase("NULL97NNUL!ih00110001170010800108000570005500078001100011700108blVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxM000000005500000000570000000076000000007600000000850000000078000000005500000000550000000057000000007600000000760000000085000000007800000000570000000055000000005700000000760000000076000000008500000000780000000108000000005500000000570000000076000000007600000000850000000078000000010800000000550000000057000000007600000000760000000085000000007800000001170000000055000000005700000000760000000076000000008500000000780000000110000000005500000000570000000076000000007600000000850000000078hihi");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
    }

    @Test
    public void test206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test206");
        java.lang.String str3 = strman.Strman.leftPad("NzlsbHVuNzc5bGx1bjk3OWxsdW5MNzlsbHVuTDc5bGx1blU3OWxsdW5ONzlsbHVu", "nullnullnullnullnullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;", (int) (byte) -1);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "NzlsbHVuNzc5bGx1bjk3OWxsdW5MNzlsbHVuTDc5bGx1blU3OWxsdW5ONzlsbHVu" + "'", str3.equals("NzlsbHVuNzc5bGx1bjk3OWxsdW5MNzlsbHVuTDc5bGx1blU3OWxsdW5ONzlsbHVu"));
    }

    @Test
    public void test207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test207");
        java.lang.String[] strArray5 = strman.Strman.chars("null");
        java.lang.String str6 = strman.Strman.format("null97nnul", strArray5);
        java.lang.String str7 = strman.Strman.prepend("hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e", strArray5);
        java.lang.String str9 = strman.Strman.join(strArray5, "TnVsbDk3bm51bA==");
        boolean boolean11 = strman.Strman.containsAll("nullnullnullnullnullnullnullnullnullnull", strArray5, false);
        java.lang.String[] strArray12 = strman.Strman.removeEmptyStrings(strArray5);
        boolean boolean14 = strman.Strman.containsAny("NULL970000000001001000000000000110100197", strArray12, false);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "null97nnul" + "'", str6.equals("null97nnul"));
        org.junit.Assert.assertTrue("'" + str7 + "' != '" + "nullhi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e" + "'", str7.equals("nullhi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e"));
        org.junit.Assert.assertTrue("'" + str9 + "' != '" + "nTnVsbDk3bm51bA==uTnVsbDk3bm51bA==lTnVsbDk3bm51bA==l" + "'", str9.equals("nTnVsbDk3bm51bA==uTnVsbDk3bm51bA==lTnVsbDk3bm51bA==l"));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test208");
        java.lang.String str1 = strman.Strman.underscoredn u l l97 n n u l");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "00072001050010400105001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001100011700108001080005700055001040010500033n_u_l_l97_n_n_u_l" + "'", str1.equalsn_u_l_l97_n_n_u_l"));
    }

    @Test
    public void test209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test209");
        java.lang.String[] strArray3 = strman.Strman.split("TnVsbDk3aGloaWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIW51bGw5N2hpIW5udWxsOTdoaWhpaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhbnVsbDk3aGkhdW51bGw5N2hpaGloaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFudWxsOTdoaSFsbnVsbDk3aGloaWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIW51bGw5N2hpIWxudWxsOTc5bnVsbDk3N251bGw5Nw==", "0021004800490021004800490021004800490021 null97null97nnull97unull97lnull97lnull979null977null97");
        java.util.Optional<java.lang.String> strOptional4 = strman.Strman.trimStart("MDAwNzIwMDEwNTAwMTA0MDAxMDUwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwM00000000001100110000000000110101000000000011001100000000001101010000000000110011000000000011010100000000001100110000000000110101000000000011001100000000001101010000000000110011000000000011010100000000001100110000000000110101TA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDExMDAwMTE3MDAxMDgwMDEwODAwMDU3MDAwNTUwMDEwNDAwMTA1MDAwMzM=", strArray3);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(strOptional4);
    }

    @Test
    public void test210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test210");
        java.lang.String str3 = strman.Strman.removeRight("", "79llun779llun979llunl_79llunl_79llunu_79llunn_79llun79llun001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000hi!l_u_n_n_79l_l_u_n_lunn_79llun79llun1", true);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "" + "'", str3.equals(""));
    }

    @Test
    public void test211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test211");
        boolean boolean2 = strman.Strman.unequal("", "10145848435558484994584849945848475158484551584841012584841014584843555848499458484994584847515848455158484353584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484751584841014584843555848499458484994584847515848455158484551584841014584843555848499458484994584847515848455158484ihIhhIhI");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
    }

    @Test
    public void test212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test212");
        java.lang.String[] strArray4 = strman.Strman.chars("null");
        boolean boolean5 = strman.Strman.containsAny("null97Nnull97Unull97Lnull97Lnull979null977null97", strArray4);
        java.lang.String str6 = strman.Strman.format("null97null97Nnull97Unull97Lnull97Lnull979null977null97", strArray4);
        java.lang.String[] strArray7 = strman.Strman.removeEmptyStrings(strArray4);
        java.lang.String str8 = strman.Strman.prependArray("hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_null97hi00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006ehi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!==AbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnb", strArray4);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "null97null97Nnull97Unull97Lnull97Lnull979null977null97" + "'", str6.equals("null97null97Nnull97Unull97Lnull97Lnull979null977null97"));
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + str8 + "' != '" + "nullhi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_null97hi00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006ehi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!==AbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnb" + "'", str8.equals("nullhi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_null97hi00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006ehi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!==AbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnb"));
    }

    @Test
    public void test213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test213");
        java.lang.String str1 = strman.Strman.toCamelCase("00300030003000300030003000300030003000310030003000310030003000300030003000300030003000300030003000300031003100300031003000300031");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "00300030003000300030003000300030003000310030003000310030003000300030003000300030003000300030003000300031003100300031003000300031" + "'", str1.equals("00300030003000300030003000300030003000310030003000310030003000300030003000300030003000300030003000300031003100300031003000300031"));
    }

    @Test
    public void test214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test214");
        java.util.Map<java.lang.Character, java.lang.Long> charMap1 = strman.Strman.charsCount("nullnullnullnullnullnullnullnullnullnull");
        org.junit.Assert.assertNotNull(charMap1);
    }

    @Test
    public void test215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test215");
        java.lang.String[] strArray2 = strman.Strman.chop("hi-hihi-hihi-hihi-hihi-hihi-hihi-hihi-hihi-hihi-hi", 655);
        org.junit.Assert.assertNotNull(strArray2);
    }

    @Test
    public void test216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test216");
        java.lang.String str1 = strman.Strman.hexEncode("ihi Hhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "00690068006900200048006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006e0075006c006c00390037" + "'", str1.equalse0075006c006c00390037"));
    }

    @Test
    public void test217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test217");
        java.lang.String str1 = strman.Strman.escapeRegExp("001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000ihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi_h1null97null97_nnul_n_u_l_l97_n_n_u_lih");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000ihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi_h1null97null97_nnul_n_u_l_l97_n_n_u_lih" + "'", str1.equals("001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000ihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi_h1null97null97_nnul_n_u_l_l97_n_n_u_lih"));
    }

    @Test
    public void test218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test218");
        java.lang.String str3 = strman.Strman.removeLeft("97-n-n-u-l", "!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ihllun", false);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "97-n-n-u-l" + "'", str3.equals("97-n-n-u-l"));
    }

    @Test
    public void test219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test219");
        java.lang.String str1 = strman.Strman.humanize("Nzlsb-hvu-nzc5b-gx1bjk3-owxsd-w5-mnzlsb-hvu-tdc5b-gx1bl-u3-owxsd-w5-onzlsb-hvu");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "Nzlsb hvu nzc5b gx1bjk3 owxsd w5 mnzlsb hvu tdc5b gx1bl u3 owxsd w5 onzlsb hvu" + "'", str1.equals("Nzlsb hvu nzc5b gx1bjk3 owxsd w5 mnzlsb hvu tdc5b gx1bl u3 owxsd w5 onzlsb hvu"));
    }

    @Test
    public void test220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test220");
        int int1 = strman.Strman.length("1-7210533hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 309 + "'", int1 == 309);
    }

    @Test
    public void test221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test221");
        java.lang.String str2 = strman.Strman.last("MDAwMDAwMDA1NTAwMDAwMDAwNTcwMDAwMDAwMDc2MDAwMDAwMDA3NjAwMDAwMDAwODUwMDAwMDAwMDc4MDAwMDAwMDA1NTAwMDAwMDAwNTUwMDAwMDAwMDU3MDAwMDAwMDA3NjAwMDAwMDAwNzYwMDAwMDAwMDg1MDAwMDAwMDA3ODAwMDAwMDAwNTcwMDAwMDAwMDU1MDAwMDAwMDA1NzAwMDAwMDAwNzYwMDAwMDAwMDc2MDAwMDAwMDA4NTAwMDAwMDAwNzgwMDAwMDAwMTA4MDAwMDAwMDA1NTAwMDAwMDAwNTcwMDAwMDAwMDc2MDAwMDAwMDA3NjAwMDAwMDAwODUwMDAwMDAwMDc4MDAwMDAwMDEwODAwMDAwMDAwNTUwMDAwMDAwMDU3MDAwMDAwMDA3NjAwMDAwMDAwNzYwMDAwMDAwMDg1MDAwMDAwMDA3ODAwMDAwMDAxMTcwMDAwMDAwMDU1MDAwMDAwMDA1NzAwMDAwMDAwNzYwMDAwMDAwMDc2MDAwMDAwMDA4NTAwMDAwMDAwNzgwMDAwMDAwMTEwMDAwMDAwMDA1NTAwMDAwMDAwNTcwMDAwMDAwMDc2MDAwMDAwMDA3NjAwMDAwMDAwODUwMDAwMDAwMDc4", (int) '4');
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "MDAwMDAwMDc2MDAwMDAwMDA3NjAwMDAwMDAwODUwMDAwMDAwMDc4" + "'", str2.equals("MDAwMDAwMDc2MDAwMDAwMDA3NjAwMDAwMDAwODUwMDAwMDAwMDc4"));
    }

    @Test
    public void test222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test222");
        boolean boolean2 = strman.Strman.contains("", "m-d-a2-z-t-aw-nz-uw-m-d-zj-m-d-a2-yz-aw-mzkw-m-d-m3-m-d-a0-z-t-aw-nm-uw-m-dc1-m-d-a2-yz-aw-nm-mw-m-d-m5-m-d-az-nz-aw-n-t-uw-m-d-zl-m-d-a3-n-t-aw-nm-mw-m-d-zj-m-d-az-o-t-aw-mzcw-m-d-rj-m-d-a2-z-t-aw-nz-uw-m-d-zj-m-d-a2-yz-aw-mzkw-m-d-m3-m-d-a0-yz-aw-nm-uw-m-dc1-m-d-a2-yz-aw-nm-mw-m-d-m5-m-d-az-nz-aw-mzkw-m-d-zl-m-d-a3-n-t-aw-nm-mw-m-d-zj-m-d-az-o-t-aw-mzcw-m-d-m3-m-d-a2-z-t-aw-nz-uw-m-d-zj-m-d-a2-yz-aw-mzkw-m-d-mih79llun-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test223");
        java.util.Optional<java.lang.String> strOptional1 = strman.Strman.tail("bl91X2xfbDk3aGloaQ==");
        org.junit.Assert.assertNotNull(strOptional1);
    }

    @Test
    public void test224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test224");
        java.lang.String str1 = strman.Strman.transliterate("Mda2 ztaw nz uw mdzj mda2 yz aw mzkw mdm3nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull000000005500000000570000000076000000007600000000850000000078000000005500000000550000000057000000007600000000760000000085000000007800000000570000000055000000005700000000760000000076000000008500000000780000000108000000005500000000570000000076000000007600000000850000000078000000010800000000550000000057000000007600000000760000000085000000007800000001170000000055000000005700000000760000000076000000008500000000780000000110000000005500000000570000000076000000007600000000850000000078hihi");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "Mda2 ztaw nz uw mdzj mda2 yz aw mzkw mdm3nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull000000005500000000570000000076000000007600000000850000000078000000005500000000550000000057000000007600000000760000000085000000007800000000570000000055000000005700000000760000000076000000008500000000780000000108000000005500000000570000000076000000007600000000850000000078000000010800000000550000000057000000007600000000760000000085000000007800000001170000000055000000005700000000760000000076000000008500000000780000000110000000005500000000570000000076000000007600000000850000000078hihi" + "'", str1.equals("Mda2 ztaw nz uw mdzj mda2 yz aw mzkw mdm3nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull000000005500000000570000000076000000007600000000850000000078000000005500000000550000000057000000007600000000760000000085000000007800000000570000000055000000005700000000760000000076000000008500000000780000000108000000005500000000570000000076000000007600000000850000000078000000010800000000550000000057000000007600000000760000000085000000007800000001170000000055000000005700000000760000000076000000008500000000780000000110000000005500000000570000000076000000007600000000850000000078hihi"));
    }

    @Test
    public void test225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test225");
        java.lang.String str1 = strman.Strman.toSnakeCase("nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull&UnderBar;nullMDAxMTAxMTAwMDAwMDAwMDEwMTAxMTEwMDAwMDAwMDAwMTExMDExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDAxMDAxMTEwMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAxMDEwMTExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDEwMDEwMTEwMDAwMDAwMDAwMDAxMDExMDAwMDAwMDAwMTAxMTAxMDAwMDAwMDAwMDEwMDEwMTEwMDAwMDAwMDAwMDAxMDExMDAwMDAwMDAwaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaS1oihi\\-hhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull&_under_bar;null_m_d_ax_m_t_ax_m_t_aw_m_d_aw_m_d_aw_m_d_ew_m_t_ax_m_t_ew_m_d_aw_m_d_aw_m_d_aw_m_t_ex_m_d_ex_m_d_aw_m_d_aw_m_d_aw_m_d_ex_m_t_ax_m_t_aw_m_d_aw_m_d_aw_m_d_ex_m_t_ax_m_t_aw_m_d_aw_m_d_aw_m_d_ax_m_d_ax_m_t_ew_m_d_aw_m_d_aw_m_d_aw_m_d_ax_m_t_ax_m_t_aw_m_d_aw_m_d_aw_m_d_aw_m_t_ew_m_t_ew_m_d_aw_m_d_aw_m_d_ax_m_d_ew_m_t_ex_m_d_aw_m_d_aw_m_d_aw_m_d_ex_m_t_ax_m_t_aw_m_d_aw_m_d_aw_m_d_ew_m_d_ew_m_t_ew_m_d_aw_m_d_aw_m_d_aw_m_d_ax_m_d_ex_m_d_aw_m_d_aw_m_d_aw_m_t_ax_m_t_ax_m_d_aw_m_d_aw_m_d_aw_m_d_ew_m_d_ew_m_t_ew_m_d_aw_m_d_aw_m_d_aw_m_d_ax_m_d_ex_m_d_aw_m_d_aw_m_d_awa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_s1oihi\\_hhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!" + "'", str1.equals("nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull&_under_bar;null_m_d_ax_m_t_ax_m_t_aw_m_d_aw_m_d_aw_m_d_ew_m_t_ax_m_t_ew_m_d_aw_m_d_aw_m_d_aw_m_t_ex_m_d_ex_m_d_aw_m_d_aw_m_d_aw_m_d_ex_m_t_ax_m_t_aw_m_d_aw_m_d_aw_m_d_ex_m_t_ax_m_t_aw_m_d_aw_m_d_aw_m_d_ax_m_d_ax_m_t_ew_m_d_aw_m_d_aw_m_d_aw_m_d_ax_m_t_ax_m_t_aw_m_d_aw_m_d_aw_m_d_aw_m_t_ew_m_t_ew_m_d_aw_m_d_aw_m_d_ax_m_d_ew_m_t_ex_m_d_aw_m_d_aw_m_d_aw_m_d_ex_m_t_ax_m_t_aw_m_d_aw_m_d_aw_m_d_ew_m_d_ew_m_t_ew_m_d_aw_m_d_aw_m_d_aw_m_d_ax_m_d_ex_m_d_aw_m_d_aw_m_d_aw_m_t_ax_m_t_ax_m_d_aw_m_d_aw_m_d_aw_m_d_ew_m_d_ew_m_t_ew_m_d_aw_m_d_aw_m_d_aw_m_d_ax_m_d_ex_m_d_aw_m_d_aw_m_d_awa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_s1oihi\\_hhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!"));
    }

    @Test
    public void test226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test226");
        java.lang.String str1 = strman.Strman.toKebabCase("mDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3TnVsbA==");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "m-d-a2-z-t-aw-nz-uw-m-d-zj-m-d-a2-yz-aw-mzkw-m-d-m3-m-d-a2-z-t-aw-nz-uw-m-d-zj-m-d-a2-yz-aw-mzkw-m-d-m3-m-d-a2-z-t-aw-nz-uw-m-d-zj-m-d-a2-yz-aw-mzkw-m-d-m3-m-d-a2-z-t-aw-nz-uw-m-d-zj-m-d-a2-yz-aw-mzkw-m-d-m3-m-d-a2-z-t-aw-nz-uw-m-d-zj-m-d-a2-yz-aw-mzkw-m-d-m3-m-d-a2-z-t-aw-nz-uw-m-d-zj-m-d-a2-yz-aw-mzkw-m-d-m3-m-d-a2-z-t-aw-nz-uw-m-d-zj-m-d-a2-yz-aw-mzkw-m-d-m3-m-d-a2-z-t-aw-nz-uw-m-d-zj-m-d-a2-yz-aw-mzkw-m-d-m3-m-d-a2-z-t-aw-nz-uw-m-d-zj-m-d-a2-yz-aw-mzkw-m-d-m3-m-d-a2-z-t-aw-nz-uw-m-d-zj-m-d-a2-yz-aw-mzkw-m-d-m3-tn-vsb-a==" + "'", str1.equals("m-d-a2-z-t-aw-nz-uw-m-d-zj-m-d-a2-yz-aw-mzkw-m-d-m3-m-d-a2-z-t-aw-nz-uw-m-d-zj-m-d-a2-yz-aw-mzkw-m-d-m3-m-d-a2-z-t-aw-nz-uw-m-d-zj-m-d-a2-yz-aw-mzkw-m-d-m3-m-d-a2-z-t-aw-nz-uw-m-d-zj-m-d-a2-yz-aw-mzkw-m-d-m3-m-d-a2-z-t-aw-nz-uw-m-d-zj-m-d-a2-yz-aw-mzkw-m-d-m3-m-d-a2-z-t-aw-nz-uw-m-d-zj-m-d-a2-yz-aw-mzkw-m-d-m3-m-d-a2-z-t-aw-nz-uw-m-d-zj-m-d-a2-yz-aw-mzkw-m-d-m3-m-d-a2-z-t-aw-nz-uw-m-d-zj-m-d-a2-yz-aw-mzkw-m-d-m3-m-d-a2-z-t-aw-nz-uw-m-d-zj-m-d-a2-yz-aw-mzkw-m-d-m3-m-d-a2-z-t-aw-nz-uw-m-d-zj-m-d-a2-yz-aw-mzkw-m-d-m3-tn-vsb-a=="));
    }

    @Test
    public void test227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test227");
        try {
            java.lang.String str3 = strman.Strman.slice("484848555048484855514848485151484848555048484855514848485151484848555048484855514848485151484848555048484855514848485151484848555048484855514848485151484848555048484855514848485151484848555048484855514848485151484848555048484855514848485151484848555048484855514848485151484848555048484855514848485151484848555048484855514848485151484848555048484855514848485151484848555048484855514848485151484848555048484855514848485151484848555048484855514848485151484848555048484855514848485151484848555048484855514848485151484848555048484855514848485151484848555048484855514848485151484848555048484855514848485151484848555048484855514848485151484848555048484855514848485151484848555048484855514848485151484848555048484855514848485151484848555048484855514848485151484848555048484855514848485151484848555048484855514848485151484848555048484855514848485151484848555048484855514848485151484848555048484855514848485151484848555048484855514848485151484848555048484855514848485151484848555048484855514848485151484848555048484855514848485151484848555048484855514848485151484848555048484855514848485151484848555048484855514848485151484848555048484855514848485151484848555048484855514848485151484848555048484855514848485151484848555048484855514848485151484848555048484855514848485151484848555048484855514848485151484848555048484855514848485151484848555048484855514848485151484848555048484855514848485151484848555048484855514848485151484848555048484855514848485151484848555048484855514848485151484848555048484855514848485151484848555048484855514848485151484848555048484855514848485151484848555048484855514848485151484848555048484855514848485151484848555048484855514848485151484848555048484855514848485151484848555048484855514848485151484848555048484855514848485151484848555048484855514848485151484848555048484855514848485151484848555048484855514848485151484848555048484855514848485151484848555048484855514848485151484848555048484855514848485151484848555048484855514848485151484848555048484855514848485151484848555048484855514848485151484848555048484855514848485151484848555048484855514848485151484848555048484855514848485151484848555048484855514848485151484848555048484855514848485151484848555048484855514848485151484848555048484855514848485151484848555048484855514848485151484848555048484855514848485151484848555048484855514848485151484848555048484855514848485151484848555048484855514848485151484848555048484855514848485151484848555048484855514848485151484848555048484855514848485151484848555048484855514848485151484848555048484855514848485151484848555048484855514848485151484848555048484855514848485151484848555048484855514848485151484848555048484855514848485151484848555048484855514848485151484848555048484855514848485151484848555048484855514848485151484848555048484855514848485151484848555048484855514848485151484848555048484855514848485151484848555048484855514848485151484848555048484855514848485151484848555048484855514848485151484848555048484855514848485151484848555048484855514848485151484848555048484855514848485151aWhpX2g=", 2851, 64);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2787");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        }
    }

    @Test
    public void test228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test228");
        java.lang.String[] strArray3 = strman.Strman.chop("", 100);
        java.lang.String str4 = strman.Strman.append("hihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100", strArray3);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "hihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100" + "'", str4.equals("hihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100"));
    }

    @Test
    public void test229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test229");
        java.lang.String str3 = strman.Strman.insertb0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b006800200074006c00200076006d00740064006b00331lunn79llun", 4944);
        org.junit.Assert.assertTrue("'" + strstr3.equals
    }

    @Test
    public void test230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test230");
        boolean boolean2 = strman.Strman.unequal("000780011700108001080005700055000780011000117001080010800057000550008500110001170010800108000570005500076001100011700108001080005700055000760011000117001080010800057000550005700110001170010800108000570005500055001100011700108001080005700055", "Hibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mnull978484855544848484848484848565348484848484848485556104105104105");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
    }

    @Test
    public void test231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test231");
        boolean boolean1 = strman.Strman.isBlank
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
    }

    @Test
    public void test232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test232");
        java.lang.String str2 = strman.Strman.last("771228561", 7270);
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "771228561" + "'", str2.equals("771228561"));
    }

    @Test
    public void test233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test233");
        java.lang.String[] strArray3 = strman.Strman.chars("null");
        java.lang.String[] strArray4 = strman.Strman.removeEmptyStrings(strArray3);
        java.lang.String str5 = strman.Strman.appendArray("9ihi h7", strArray4);
        java.lang.String str6 = strman.Strman.format("79llunhihi779llun979llunL79llunL79llunU79llunN79llunHihi", strArray4);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "9ihi h7null" + "'", str5.equals("9ihi h7null"));
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "79llunhihi779llun979llunL79llunL79llunU79llunN79llunHihi" + "'", str6.equals("79llunhihi779llun979llunL79llunL79llunU79llunN79llunHihi"));
    }

    @Test
    public void test234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test234");
        java.lang.String[] strArray2 = strman.Strman.words("Null97nnul1097null971097nULL97NNULNullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullhi-hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101", "001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001100011700108001080005700055HiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiNull97hiNull97nnul");
        org.junit.Assert.assertNotNull(strArray2);
    }

    @Test
    public void test235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test235");
        java.lang.String[] strArray7 = strman.Strman.words("", "null");
        boolean boolean9 = strman.Strman.containsAny("1", strArray7, true);
        boolean boolean11 = strman.Strman.containsAny("97", strArray7, true);
        java.lang.String str12 = strman.Strman.format("79llunhihi779llun979llun-l79llun-l79llun-u79llun-n79llun-hihi", strArray7);
        java.lang.Class<?> wildcardClass13 = strArray7.getClass();
        boolean boolean14 = strman.Strman.containsAny("!ihnullhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!", strArray7);
        try {
            java.util.Optional<java.lang.String> strOptional15 = strman.Strman.trimStart("5500075000Hihi0011000117001080010800104001050004500104001050004500104001050004500104001050004500104001050004500104001050004500104001050004500104001050004500104001050004500104001050004500104001050004500104001050004500104001050004500104001050004500104001050004500104001050004500104001050004500104001050004500104001050004500104001050004500104001050004500104001050004500104001050004500104001050004500104001050004500104001050004500104001050004500104001050004500104001050004500104001050004500104001050004500104001050004500104001050004500104001050004500104001050004500104001050004500104001050004500104001050004500104001050004500104001050004500104001050004500104001050004500104001050004500104001050004500104001050004500104001050004500104001050004500104001050004500104001050004500104001050004500104001050004500104001050004500104001050004500104001050004500104001050004500104001050004500104001050004500104001050004500104001050004500104001050004500104001050004500104001050004500104001050004500104001050004500104001050004500104001050004500104001050004500104001050004500104001050004500104001050004500104001050004500104001050004500104001050004500104001050004500104001050004500104001050004500104001050004500104001050004500104001050004500104001050004500104001050004500104001050004500104001050004500104001050004500104001050004500104001050004500104001050004500104001050004500104001050004500104001050004500104001050004500104001050004500104001050004500104001050004500104001050004500104001050004500104001050004500104001050004500104001050004500104001050004500110001170010800108000570005500104001050004500048000480005100055000480004800051000570004800048000540009900048000480005400099000480004800055000530004800048000540010100048000480005100055000480004800051000550004800048000510005700048000480005400099000480004800054000990004800048000550005300048000480005400101000480004800051000570004800048000510005500048000480005100057000480004800054000990004800048000540009900048000480005500053000480004800054001010004800048000520009900048000480005100055000480004800051000570004800048000540009900048000480005400099000480004800055000530004800048000540010100048000480005200099000480004800051000550004800048000510005700048000480005400099000480004800054000990004800048000550005300048000480005400101000480004800053000530004800048000510005500048000480005100057000480004800054000990004800048000540009900048000480005500053000480004800054001010004800048000520010100048000480005100055000480004800051000570004800048000540009900048000480005400099000480004800055000530004800048000540010167000670005800087000550005500075000670006700058000870007500055000750006700067000580008700080100550007500067000670005800087000801005500075000670006700058000870007110055000750006700067000580008700001100550007500067000670005800087000llun10145848435558484994584849945848475158484551584841012584841014584843555848499458484994584847515848455158484353584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484751584841014584843555848499458484994584847515848455158484551584841014584843555848499458484994584847515848455158484ih-ihllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunlunn79llun790179llun7901lunn79llun", strArray7);
            org.junit.Assert.fail("Expected exception of type java.util.regex.PatternSyntaxException; message: Unclosed character class near index 3\r\n^[]+\r\n   ^");
        } catch (java.util.regex.PatternSyntaxException e) {
        }
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "79llunhihi779llun979llun-l79llun-l79llun-u79llun-n79llun-hihi" + "'", str12.equals("79llunhihi779llun979llun-l79llun-l79llun-u79llun-n79llun-hihi"));
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test236");
        java.lang.String str2 = strman.Strman.ensureLeft("!ih", "Null97nhinullhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101nul1097null971097nULL97NNULNullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullhiHi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101");
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "Null97nhinullhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101nul1097null971097nULL97NNULNullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullhiHi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101!ih" + "'", str2.equals("Null97nhinullhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101nul1097null971097nULL97NNULNullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullhiHi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101!ih"));
    }

    @Test
    public void test237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test237");
        java.lang.String[] strArray3 = strman.Strman.split("97", "");
        java.lang.Class<?> wildcardClass4 = strArray3.getClass();
        boolean boolean5 = strman.Strman.containsAnystrArray3);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test238");
        java.lang.String str1 = strman.Strman.dasherize("hihiHI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-nULL97NNULHI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-NULL97HI-00370039006C006C0075006E003700370039006C006C0075006E003900370039006C006C0075006E004C00370039006C006C0075006E004C00370039006C006C0075006E005500370039006C006C0075006E004E00370039006C006C0075006E");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "hihi-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-n-u-l-l97-n-n-u-l-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-n-u-l-l97-h-i00370039006-c006-c0075006-e003700370039006-c006-c0075006-e003900370039006-c006-c0075006-e004-c00370039006-c006-c0075006-e004-c00370039006-c006-c0075006-e005500370039006-c006-c0075006-e004-e00370039006-c006-c0075006-e" + "'", str1.equals("hihi-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-n-u-l-l97-n-n-u-l-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-n-u-l-l97-h-i00370039006-c006-c0075006-e003700370039006-c006-c0075006-e003900370039006-c006-c0075006-e004-c00370039006-c006-c0075006-e004-c00370039006-c006-c0075006-e005500370039006-c006-c0075006-e004-e00370039006-c006-c0075006-e"));
    }

    @Test
    public void test239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test239");
        java.lang.String[] strArray1 = strman.Strman.lines("TlVMTDk3aGloaQ==");
        java.lang.String str3 = strman.Strman.join(strArray1, "Hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!blVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxM");
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "TlVMTDk3aGloaQ==" + "'", str3.equals("TlVMTDk3aGloaQ=="));
    }

    @Test
    public void test240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test240");
        java.lang.String str3 = strman.Strman.removeLeft("540", "SGloaWloaV9oaGlfaGk0ODQ4NTE1NTQ4NDg1MTU3NDg0ODU0OTk0ODQ4NTQ5OTQ4NDg1NTUzNDg0ODU0MTAxNDg0ODUxNTU0ODQ4NTE1NTQ4NDg1MTU3NDg0ODU0OTk0ODQ4NTQ5OTQ4NDg1NTUzNDg0ODU0MTAxNDg0ODUxNTc0ODQ4NTE1NTQ4NDg1MTU3NDg0ODU0OTk0ODQ4NTQ5OTQ4NDg1NTUzNDg0ODU0MTAxNDg0ODUyOTk0ODQ4NTE1NTQ4NDg1MTU3NDg0ODU0OTk0ODQ4NTQ5OTQ4NDg1NTUzNDg0ODU0MTAxNDg0ODUyOTk0ODQ4NTE1NTQ4NDg1MTU3NDg0ODU0OTk0ODQ4NTQ5OTQ4NDg1NTUzNDg0ODU0MTAxNDg0ODUzNTM0ODQ4NTE1NTQ4NDg1MTU3NDg0ODU0OTk0ODQ4NTQ5OTQ4NDg1NTUzNDg0ODU0MTAxNDg0ODUyMTAxNDg0ODUxNTU0ODQ4NTE1NzQ4NDg1NDk5NDg0ODU0OTk0ODQ4NTU1MzQ4NDg1NDEwMQ==n-u-l-l97-n-n-u-l", false);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "540" + "'", str3.equals("540"));
    }

    @Test
    public void test241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test241");
        java.util.Optional<java.lang.String> strOptional1 = strman.Strman.head("hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!0NULL971null97null97Nnull97Unull97Lnull97Lnull979null977null
        org.junit.Assert.assertNotNull(strOptional1);
    }

    @Test
    public void test242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test242");
        boolean boolean2 = strman.Strman.contains("TnVsbDk3aGloaWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIW51bGw5N2hpIW5udWxsOTdoaWhpaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhbnVsbDk3aGkhdW51bGw5N2hpaGloaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFudWxsOTdoaSFsbnVsbDk3aGloaWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIW51bGw5N2hpIWxudWxsOTc5bnVsbDk3N251bGw5Nw==", "n_ullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullhi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_null97hi00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006ehi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!==AbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbhi-hinull97nnul");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test243");
        java.lang.String str3 = strman.Strman.ensureRight("LunN79llunnull97null97Nnull97Unull97Lnull97Lnull979null977null97", "uVHbslzNO5WdsxWO3Ulb1xGb5cDTuVHbslzNM5WdsxWO3kjb1xGb5czNuVHbslzN", false);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "LunN79llunnull97null97Nnull97Unull97Lnull97Lnull979null977null97uVHbslzNO5WdsxWO3Ulb1xGb5cDTuVHbslzNM5WdsxWO3kjb1xGb5czNuVHbslzN" + "'", str3.equals("LunN79llunnull97null97Nnull97Unull97Lnull97Lnull979null977null97uVHbslzNO5WdsxWO3Ulb1xGb5cDTuVHbslzNM5WdsxWO3kjb1xGb5czNuVHbslzN"));
    }

    @Test
    public void test244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test244");
        java.lang.String[] strArray4 = strman.Strman.lines("hi");
        boolean boolean5 = strman.Strman.containsAny("006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037Null", strArray4);
        java.util.Optional<java.lang.String> strOptional6 = strman.Strman.trimStart("00108001170011000078000550005700108001080011700110", strArray4);
        java.lang.String str7 = strman.Strman.prepend("001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih", strArray4);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strOptional6);
        org.junit.Assert.assertTrue("'" + str7 + "' != '" + "hi001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih" + "'", str7.equals("hi001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih"));
    }

    @Test
    public void test245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test245");
        java.lang.String[] strArray2 = strman.Strman.split("lunN79llun", "n_u_l_l97n_n_u_l_l97u_n_u_l_l97l_n_u_l_l97l_n_u_l_l979_n_u_l_l977_n_u_l_l97");
        java.lang.String str4 = strman.Strman.join(strArray2, "bnVsbDk3bm51bDEwOTdudWxsOTcxMDk3");
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "lunN79llun" + "'", str4.equals("lunN79llun"));
    }

    @Test
    public void test246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test246");
        java.lang.String str3 = strman.Strman.rightPad("hi-hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101ihiH", "Ll97", 440);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "hi-hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101ihiHLl97Ll97Ll97Ll97Ll97Ll97Ll97Ll97Ll97Ll97Ll97Ll97Ll97Ll97Ll97Ll97Ll97Ll97Ll97Ll97Ll97Ll97Ll97Ll97Ll97Ll97Ll97Ll97Ll97Ll97Ll97Ll97Ll97Ll97Ll97Ll97Ll97Ll97Ll97" + "'", str3.equals("hi-hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101ihiHLl97Ll97Ll97Ll97Ll97Ll97Ll97Ll97Ll97Ll97Ll97Ll97Ll97Ll97Ll97Ll97Ll97Ll97Ll97Ll97Ll97Ll97Ll97Ll97Ll97Ll97Ll97Ll97Ll97Ll97Ll97Ll97Ll97Ll97Ll97Ll97Ll97Ll97Ll97"));
    }

    @Test
    public void test247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test247");
        java.lang.String[] strArray2 = strman.Strman.lines("hihi");
        java.lang.String str3 = strman.Strman.prepend("NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL979710", strArray2);
        java.lang.String[] strArray4 = strman.Strman.removeEmptyStrings(strArray2);
        java.lang.String str6 = strman.Strman.join(strArray2, "0000000001101001000000000110100000000000011010010000000001001000");
        boolean boolean7 = strman.Strman.isString((java.lang.Object) str6);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "hihiNULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL979710" + "'", str3.equals("hihiNULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL979710"));
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "hihi" + "'", str6.equals("hihi"));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test248");
        java.util.Optional<java.lang.String> strOptional2 = strman.Strman.at("Hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!", 740);
        org.junit.Assert.assertNotNull(strOptional2);
    }

    @Test
    public void test249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test249");
        boolean boolean3 = strman.Strman.endsWith("ihi97hhi97hi4848515548485157484854994848549948485553484854101484", "hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000 ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih", true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test250");
        int int3 = strman.Strman.lastIndexOf("Null97nnulnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull9ihiH7", "79llun779llun979llunl_79llunl_79llunu_79llunn_79llun79llun001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000hi!l_u_n_n_79l_l_u_n_lunn_79llun79llun1", true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
    }

    @Test
    public void test251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test251");
        boolean boolean2 = strman.Strman.endsWithih79llun!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test252");
        java.lang.String str1 = strman.Strman.removeSpaces("hi-hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101ihiH");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "hi-hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101ihiH" + "'", str1.equals("hi-hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101ihiH"));
    }

    @Test
    public void test253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test253");
        java.lang.String[] strArray2 = strman.Strman.words("0011000085000760007600057000550007800078000850007697", "hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97");
        org.junit.Assert.assertNotNull(strArray2);
    }

    @Test
    public void test254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test254");
        java.lang.String str3 = strman.Strman.truncate("
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "000720010500033001040010500033nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull00110000850007600076000570005500078000780008500076" + "'", str3.equals("000720010500033001040010500033nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull00110000850007600076000570005500078000780008500076"));
    }

    @Test
    public void test255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test255");
        java.lang.String str3 = strman.Strman.surround("HI-HIHI-HIHI-HIHI-HIHI-HIHI-HIHI-HIHI-HIHI-HIHI-HI", "006f0074006b0030006f006400710034006e007400710035006f007400710034006e006400670031006e00740075007a0020004e006400670030006f006400750030006d0074006100780020004e006400670030006f0064007500780020004e007400750030006f006400710034006e007400650031006e007400710034006e006400670031006d007400750033006e006400670030006f006400750030006f0074006b0030006f006400710034006e007400710035006f007400710034006e006400670031006e00740075007a0020004e006400670030006f006400750030006d0074006100780020004e006400670030006f0064007500780020004e007400630030006f006400710034006e007400650031006e007400710034006e006400670031006d007400750033", "006f0074006b0030006f006400710034006e007400710035006f007400710034006e006400670031006e00740075007a0020004e006400670030006f006400750030006d0074006100780020004e006400670030006f0064007500780020004e007400750030006f006400710034006e007400650031006e007400710034006e006400670031006d007400750033006e006400670030006f006400750030006f0074006b0030006f006400710034006e007400710035006f007400710034006e006400670031006e00740075007a0020004e006400670030006f006400750030006d0074006100780020004e006400670030006f0064007500780020004e007400630030006f006400710034006e007400650031006e007400710034006e006400670031006d007400750033");
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "006f0074006b0030006f006400710034006e007400710035006f007400710034006e006400670031006e00740075007a0020004e006400670030006f006400750030006d0074006100780020004e006400670030006f0064007500780020004e007400750030006f006400710034006e007400650031006e007400710034006e006400670031006d007400750033006e006400670030006f006400750030006f0074006b0030006f006400710034006e007400710035006f007400710034006e006400670031006e00740075007a0020004e006400670030006f006400750030006d0074006100780020004e006400670030006f0064007500780020004e007400630030006f006400710034006e007400650031006e007400710034006e006400670031006d007400750033HI-HIHI-HIHI-HIHI-HIHI-HIHI-HIHI-HIHI-HIHI-HIHI-HI006f0074006b0030006f006400710034006e007400710035006f007400710034006e006400670031006e00740075007a0020004e006400670030006f006400750030006d0074006100780020004e006400670030006f0064007500780020004e007400750030006f006400710034006e007400650031006e007400710034006e006400670031006d007400750033006e006400670030006f006400750030006f0074006b0030006f006400710034006e007400710035006f007400710034006e006400670031006e00740075007a0020004e006400670030006f006400750030006d0074006100780020004e006400670030006f0064007500780020004e007400630030006f006400710034006e007400650031006e007400710034006e006400670031006d007400750033" + "'", str3.equals("006f0074006b0030006f006400710034006e007400710035006f007400710034006e006400670031006e00740075007a0020004e006400670030006f006400750030006d0074006100780020004e006400670030006f0064007500780020004e007400750030006f006400710034006e007400650031006e007400710034006e006400670031006d007400750033006e006400670030006f006400750030006f0074006b0030006f006400710034006e007400710035006f007400710034006e006400670031006e00740075007a0020004e006400670030006f006400750030006d0074006100780020004e006400670030006f0064007500780020004e007400630030006f006400710034006e007400650031006e007400710034006e006400670031006d007400750033HI-HIHI-HIHI-HIHI-HIHI-HIHI-HIHI-HIHI-HIHI-HIHI-HI006f0074006b0030006f006400710034006e007400710035006f007400710034006e006400670031006e00740075007a0020004e006400670030006f006400750030006d0074006100780020004e006400670030006f0064007500780020004e007400750030006f006400710034006e007400650031006e007400710034006e006400670031006d007400750033006e006400670030006f006400750030006f0074006b0030006f006400710034006e007400710035006f007400710034006e006400670031006e00740075007a0020004e006400670030006f006400750030006d0074006100780020004e006400670030006f0064007500780020004e007400630030006f006400710034006e007400650031006e007400710034006e006400670031006d007400750033"));
    }

    @Test
    public void test256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test256");
        java.lang.String str1 = strman.Strman.hexEncode("104105033104105033104105033104105033104105033104105033104105033104105033104105033104105033104105033104105033104105033104105033104105033104105033104105033104105033104105033104105033104105033104105033104105033104105033104105033104105033104105033104105033104105033104105033104105033104105033104105033104105033104105033104105033104105033104105033104105033104105033104105033104105033104105033104105033104105033104105033104105033104105033104105033104105033104105033104105033104105033104105033104105033104105033104105033104105033104105033104105033104105033104105033104105033104105033104105033104105033104105033104105033104105033104105033104105033104105033104105033104105033104105033104105033104105033104105033104105033104105033104105033104105033104105033104105033104105033104105033104105033104105033104105033104105033104105033104105033104105033104105033104105033104105033104105033104105033104105033104105033104105033104105033057105104105032072055");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003000350037003100300035003100300034003100300035003000330032003000370032003000350035" + "'", str1.equals("003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003100300034003100300035003000330033003000350037003100300035003100300034003100300035003000330032003000370032003000350035"));
    }

    @Test
    public void test257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test257");
        java.lang.String str3 = strman.Strman.ensureLeft("0000000001101001000000000110100000000000011010010000000001001000", "iHIHHIHI484851554848515748485499484854994848555348485410148485155484851554848515748485499484854994848555348485410148485157484851554848515748485499484854994848555348485410148485299484851554848515748485499484854994848555348485410148485299484851554848515748485499484854994848555348485410148485353484851554848515748485499484854994848555348485410148485210148485155484851574848549948485499484855534848541019ihi h7null", false);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "iHIHHIHI484851554848515748485499484854994848555348485410148485155484851554848515748485499484854994848555348485410148485157484851554848515748485499484854994848555348485410148485299484851554848515748485499484854994848555348485410148485299484851554848515748485499484854994848555348485410148485353484851554848515748485499484854994848555348485410148485210148485155484851574848549948485499484855534848541019ihi h7null0000000001101001000000000110100000000000011010010000000001001000" + "'", str3.equals("iHIHHIHI484851554848515748485499484854994848555348485410148485155484851554848515748485499484854994848555348485410148485157484851554848515748485499484854994848555348485410148485299484851554848515748485499484854994848555348485410148485299484851554848515748485499484854994848555348485410148485353484851554848515748485499484854994848555348485410148485210148485155484851574848549948485499484855534848541019ihi h7null0000000001101001000000000110100000000000011010010000000001001000"));
    }

    @Test
    public void test258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test258");
        java.lang.String str1 = strman.Strman.base64Encode("!ihnullnull97Nnull97Unull97Lnull97Lnull979null977nuln_u_l_l97_n_ullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnulll97NULL9748485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "IWlobnVsbG51bGw5N05udWxsOTdVbnVsbDk3TG51bGw5N0xudWxsOTc5bnVsbDk3N251bG5fdV9sX2w5N19uX3VsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbDk3TlVMTDk3NDg0ODUxNTU0ODQ4NTE1NzQ4NDg1NDk5NDg0ODU0OTk0ODQ4NTU1MzQ4NDg1NDEwMTQ4NDg1MTU1NDg0ODUxNTU0ODQ4NTE1NzQ4NDg1NDk5NDg0ODU0OTk0ODQ4NTU1MzQ4NDg1NDEwMTQ4NDg1MTU3NDg0ODUxNTU0ODQ4NTE1NzQ4NDg1NDk5NDg0ODU0OTk0ODQ4NTU1MzQ4NDg1NDEwMTQ4NDg1Mjk5NDg0ODUxNTU0ODQ4NTE1NzQ4NDg1NDk5NDg0ODU0OTk0ODQ4NTU1MzQ4NDg1NDEwMTQ4NDg1Mjk5NDg0ODUxNTU0ODQ4NTE1NzQ4NDg1NDk5NDg0ODU0OTk0ODQ4NTU1MzQ4NDg1NDEwMTQ4NDg1MzUzNDg0ODUxNTU0ODQ4NTE1NzQ4NDg1NDk5NDg0ODU0OTk0ODQ4NTU1MzQ4NDg1NDEwMTQ4NDg1MjEwMTQ4NDg1MTU1NDg0ODUxNTc0ODQ4NTQ5OTQ4NDg1NDk5NDg0ODU1NTM0ODQ4NTQxMDE=" + "'", str1.equals("IWlobnVsbG51bGw5N05udWxsOTdVbnVsbDk3TG51bGw5N0xudWxsOTc5bnVsbDk3N251bG5fdV9sX2w5N19uX3VsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbDk3TlVMTDk3NDg0ODUxNTU0ODQ4NTE1NzQ4NDg1NDk5NDg0ODU0OTk0ODQ4NTU1MzQ4NDg1NDEwMTQ4NDg1MTU1NDg0ODUxNTU0ODQ4NTE1NzQ4NDg1NDk5NDg0ODU0OTk0ODQ4NTU1MzQ4NDg1NDEwMTQ4NDg1MTU3NDg0ODUxNTU0ODQ4NTE1NzQ4NDg1NDk5NDg0ODU0OTk0ODQ4NTU1MzQ4NDg1NDEwMTQ4NDg1Mjk5NDg0ODUxNTU0ODQ4NTE1NzQ4NDg1NDk5NDg0ODU0OTk0ODQ4NTU1MzQ4NDg1NDEwMTQ4NDg1Mjk5NDg0ODUxNTU0ODQ4NTE1NzQ4NDg1NDk5NDg0ODU0OTk0ODQ4NTU1MzQ4NDg1NDEwMTQ4NDg1MzUzNDg0ODUxNTU0ODQ4NTE1NzQ4NDg1NDk5NDg0ODU0OTk0ODQ4NTU1MzQ4NDg1NDEwMTQ4NDg1MjEwMTQ4NDg1MTU1NDg0ODUxNTc0ODQ4NTQ5OTQ4NDg1NDk5NDg0ODU1NTM0ODQ4NTQxMDE="));
    }

    @Test
    public void test259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test259");
        java.lang.String str3 = strman.Strman.removeLeft("Hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e", "MDAwNzIwMDEwNTAwMTA0MDAxMDUwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwM00000000001100110000000000110101000000000011001100000000001101010000000000110011000000000011010100000000001100110000000000110101000000000011001100000000001101010000000000110011000000000011010100000000001100110000000000110101TA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDExMDAwMTE3MDAxMDgwMDEwODAwMDU3MDAwNTUwMDEwNDAwMTA1MDAwMzM=", false);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "Hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e" + "'", str3.equals("Hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e"));
    }

    @Test
    public void test260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test260");
        java.lang.String str1 = strman.Strman.slugify
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "77686550908465119781228511977689010677686550891226511977122107119776877514848485556484849495548484948564848494856484848535548484853534848494948484849494848484949554848494856484848484848484848494948494848484848484848484848484949484948484948484848484848484848494849494849484848484848484848494948494848484848484848484848484949484948484948484848484848484849494849494948484848484848484848494949484948494848484848484848484949484949484848484848484848484849494849494848484848484848484848484949494848494848484848484848484849494849494948484848484848484849494849494948484848484848484848494948494949484848484848484848484949494849484948484848484848484849494849494848110117108108575511011710810857557811011710810857558511011710810857557611011710810857557611011710810857555711011710810857555511011710810857557210510410510410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533110117108108575510410533" + "'", str1.equals("77686550908465119781228511977689010677686550891226511977122107119776877514848485556484849495548484948564848494856484848535548484853534848494948484849494848484949554848494856484848484848484848494948494848484848484848484848484949484948484948484848484848484848494849494849484848484848484848494948494848484848484848484848484949484948484948484848484848484849494849494948484848484848484848494949484948494848484848484848484949484949484848484848484848484849494849494848484848484848484848484949494848494848484848484848484849494849494948484848484848484849494849494948484848484848484848494948494949484848484848484848484949494849484948484848484848484849494849494848110117108108575511011710810857557811011710810857558511011710810857557611011710810857557611011710810857555711011710810857555511011710810857557210510410510410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533110117108108575510410533"));
    }

    @Test
    public void test261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test261");
        java.lang.String str1 = strman.Strman.base64Encode("1nullhi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e0000000001001000000000000110100100680069002d
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "MW51bGxoaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1udWxsOTdoaS0wMDM3MDAzOTAwNmMwMDZjMDA3NTAwNmUwMDM3MDAzNzAwMzkwMDZjMDA2YzAwNzUwMDZlMDAzOTAwMzcwMDM5MDA2YzAwNmMwMDc1MDA2ZTAwNGMwMDM3MDAzOTAwNmMwMDZjMDA3NTAwNmUwMDRjMDAzNzAwMzkwMDZjMDA2YzAwNzUwMDZlMDA1NTAwMzcwMDM5MDA2YzAwNmMwMDc1MDA2ZTAwNGUwMDM3MDAzOTAwNmMwMDZjMDA3NTAwNmUwMDAwMDAwMDAxMDAxMDAwMDAwMDAwMDAwMTEwMTAwMTAwNjgwMDY5MDAyZDAwNjgwMDY5MDAzNDAwMzgwMDM0MDAzODAwMzUwMDMxMDAzNTAwMzUwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzEwMDM1MDAzNzAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzNDAwMzkwMDM5MDAzNDAwMzgwMDM0MDAzODAwMzUwMDM0MDAzOTAwMzkwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzUwMDM1MDAzMzAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzNDAwMzEwMDMwMDAzMTAwMzQwMDM4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTEyMDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA3MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTEyMDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTEyMDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA3MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTEyMDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA3MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTEyMDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA3MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTEyMDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA3MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTEyMDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA3MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA3MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTEyMDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA3MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTEyMDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA3MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTEyMDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTEyMDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA3MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTEyMDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA3MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTEyMDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA3MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTEyMDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA3MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTEyMDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA3MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA3MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTEyMDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA3MDAzNDAwMzgwMDM1MDAzMTAwMzUwMDM1MDAzNDAwMzgwMDM0MDAzODAwMzUwMDMxMDAzNTAwMzUwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzEwMDM1MDAzNzAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzNDAwMzkwMDM5MDAzNDAwMzgwMDM0MDAzODAwMzUwMDM0MDAzOTAwMzkwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzUwMDM1MDAzMzAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzNDAwMzEwMDMwMDAzMTAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzMTAwMzUwMDM3MDAzNDAwMzgwMDM0MDAzODAwMzUwMDMxMDAzNTAwMzUwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzEwMDM1MDAzNzAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzNDAwMzkwMDM5MDAzNDAwMzgwMDM0MDAzODAwMzUwMDM0MDAzOTAwMzkwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzUwMDM1MDAzMzAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzNDAwMzEwMDMwMDAzMTAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzMjAwMzkwMDM5MDAzNDAwMzgwMDM0MDAzODAwMzUwMDMxMDAzNTAwMzUwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzEwMDM1MDAzNzAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzNDAwMzkwMDM5MDAzNDAwMzgwMDM0MDAzODAwMzUwMDM0MDAzOTAwMzkwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzUwMDM1MDAzMzAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzNDAwMzEwMDMwMDAzMTAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzMjAwMzkwMDM5MDAzNDAwMzgwMDM0MDAzODAwMzUwMDMxMDAzNTAwMzUwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzEwMDM1MDAzNzAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzNDAwMzkwMDM5MDAzNDAwMzgwMDM0MDAzODAwMzUwMDM0MDAzOTAwMzkwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzUwMDM1MDAzMzAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzNDAwMzEwMDMwMDAzMTAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzMzAwMzUwMDMzMDAzNDAwMzgwMDM0MDAzODAwMzUwMDMxMDAzNTAwMzUwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzEwMDM1MDAzNzAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzNDAwMzkwMDM5MDAzNDAwMzgwMDM0MDAzODAwMzUwMDM0MDAzOTAwMzkwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzUwMDM1MDAzMzAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzNDAwMzEwMDMwMDAzMTAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzMjAwMzEwMDMwMDAzMTAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzMTAwMzUwMDM1MDAzNDAwMzgwMDM0MDAzODAwMzUwMDMxMDAzNTAwMzcwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzQwMDM5MDAzOTAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzNDAwMzkwMDM5MDAzNDAwMzgwMDM0MDAzODAwMzUwMDM1MDAzNTAwMzMwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzQwMDMxMDAzMDAwMzEwMDMwMDAzMDAwMzAwMDMwMDAzMDAwMzAwMDMwMDAzMDAwMzAwMDMxMDAzMDAwMzAwMDMxMDAzMDAwMzAwMDMwMDAzMDAwMzAwMDMwMDAzMDAwMzAwMDMwMDAzMDAwMzAwMDMwMDAzMTAwMzEwMDMwMDAzMTAwMzAwMDMwMDAzMTQ5MTEwMTE3MTA4MTA4NTc1NTExMDExNzEwODEwODU3NTU3ODExMDExNzEwODc4ODU3Njc2NTc1NTc4Nzg4NTc2MzMxMDUxMDQ=" + "'", str1.equals("MW51bGxoaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1oaS1udWxsOTdoaS0wMDM3MDAzOTAwNmMwMDZjMDA3NTAwNmUwMDM3MDAzNzAwMzkwMDZjMDA2YzAwNzUwMDZlMDAzOTAwMzcwMDM5MDA2YzAwNmMwMDc1MDA2ZTAwNGMwMDM3MDAzOTAwNmMwMDZjMDA3NTAwNmUwMDRjMDAzNzAwMzkwMDZjMDA2YzAwNzUwMDZlMDA1NTAwMzcwMDM5MDA2YzAwNmMwMDc1MDA2ZTAwNGUwMDM3MDAzOTAwNmMwMDZjMDA3NTAwNmUwMDAwMDAwMDAxMDAxMDAwMDAwMDAwMDAwMTEwMTAwMTAwNjgwMDY5MDAyZDAwNjgwMDY5MDAzNDAwMzgwMDM0MDAzODAwMzUwMDMxMDAzNTAwMzUwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzEwMDM1MDAzNzAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzNDAwMzkwMDM5MDAzNDAwMzgwMDM0MDAzODAwMzUwMDM0MDAzOTAwMzkwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzUwMDM1MDAzMzAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzNDAwMzEwMDMwMDAzMTAwMzQwMDM4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTEyMDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA3MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTEyMDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTEyMDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA3MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTEyMDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA3MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTEyMDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA3MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTEyMDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA3MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTEyMDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA3MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA3MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTEyMDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA3MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTEyMDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA3MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTEyMDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTEyMDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA3MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTEyMDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA3MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTEyMDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA3MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTEyMDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA3MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTEyMDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA3MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA3MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTEyMDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA3MDAzNDAwMzgwMDM1MDAzMTAwMzUwMDM1MDAzNDAwMzgwMDM0MDAzODAwMzUwMDMxMDAzNTAwMzUwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzEwMDM1MDAzNzAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzNDAwMzkwMDM5MDAzNDAwMzgwMDM0MDAzODAwMzUwMDM0MDAzOTAwMzkwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzUwMDM1MDAzMzAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzNDAwMzEwMDMwMDAzMTAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzMTAwMzUwMDM3MDAzNDAwMzgwMDM0MDAzODAwMzUwMDMxMDAzNTAwMzUwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzEwMDM1MDAzNzAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzNDAwMzkwMDM5MDAzNDAwMzgwMDM0MDAzODAwMzUwMDM0MDAzOTAwMzkwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzUwMDM1MDAzMzAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzNDAwMzEwMDMwMDAzMTAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzMjAwMzkwMDM5MDAzNDAwMzgwMDM0MDAzODAwMzUwMDMxMDAzNTAwMzUwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzEwMDM1MDAzNzAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzNDAwMzkwMDM5MDAzNDAwMzgwMDM0MDAzODAwMzUwMDM0MDAzOTAwMzkwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzUwMDM1MDAzMzAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzNDAwMzEwMDMwMDAzMTAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzMjAwMzkwMDM5MDAzNDAwMzgwMDM0MDAzODAwMzUwMDMxMDAzNTAwMzUwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzEwMDM1MDAzNzAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzNDAwMzkwMDM5MDAzNDAwMzgwMDM0MDAzODAwMzUwMDM0MDAzOTAwMzkwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzUwMDM1MDAzMzAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzNDAwMzEwMDMwMDAzMTAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzMzAwMzUwMDMzMDAzNDAwMzgwMDM0MDAzODAwMzUwMDMxMDAzNTAwMzUwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzEwMDM1MDAzNzAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzNDAwMzkwMDM5MDAzNDAwMzgwMDM0MDAzODAwMzUwMDM0MDAzOTAwMzkwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzUwMDM1MDAzMzAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzNDAwMzEwMDMwMDAzMTAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzMjAwMzEwMDMwMDAzMTAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzMTAwMzUwMDM1MDAzNDAwMzgwMDM0MDAzODAwMzUwMDMxMDAzNTAwMzcwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzQwMDM5MDAzOTAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzNDAwMzkwMDM5MDAzNDAwMzgwMDM0MDAzODAwMzUwMDM1MDAzNTAwMzMwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzQwMDMxMDAzMDAwMzEwMDMwMDAzMDAwMzAwMDMwMDAzMDAwMzAwMDMwMDAzMDAwMzAwMDMxMDAzMDAwMzAwMDMxMDAzMDAwMzAwMDMwMDAzMDAwMzAwMDMwMDAzMDAwMzAwMDMwMDAzMDAwMzAwMDMwMDAzMTAwMzEwMDMwMDAzMTAwMzAwMDMwMDAzMTQ5MTEwMTE3MTA4MTA4NTc1NTExMDExNzEwODEwODU3NTU3ODExMDExNzEwODc4ODU3Njc2NTc1NTc4Nzg4NTc2MzMxMDUxMDQ="));
    }

    @Test
    public void test262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test262");
        boolean boolean3 = strman.Strman.contains("SEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhTlVMTDk3", "9ihi h7", false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test263");
        java.lang.String str3 = strman.Strman.leftPad("ihi_hhi_hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101", "", 4342);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "ihi_hhi_hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101" + "'", str3.equals("ihi_hhi_hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101"));
    }

    @Test
    public void test264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test264");
        boolean boolean2 = strman.Strman.endsWith("null97hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!nnull97hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!unull97hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!lnull97hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!lnull979null977null97n_u_l_l97_n_ullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull", "591089912010138108108117110108108117110591089912010138108108117110108108117110nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test265");
        java.lang.String[] strArray5 = new java.lang.String[] { "hihi" };
        java.util.List<java.lang.String> strList6 = strman.Strman.zip(strArray5);
        java.lang.String[] strArray7 = strman.Strman.removeEmptyStrings(strArray5);
        java.lang.String str8 = strman.Strman.prependstrArray5);
        java.lang.String str9 = strman.Strman.prepend("HiHi", strArray5);
        java.util.Optional<java.lang.String> strOptional10 = strman.Strman.trimEnd("0030003000330033", strArray5);
        java.lang.String[] strArray11 = strman.Strman.removeEmptyStrings(strArray5);
        boolean boolean13 = strman.Strman.containsAll("000000000179LLUN779LLUN979LLUNl79LLUNl79LLUNu79LLUNn79LLUN10100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100", strArray5, false);
        java.lang.Class<?> wildcardClass14 = strArray5.getClass();
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + str8 + "' != '" + "hihistr8.equals("hihi
        org.junit.Assert.assertTrue("'" + str9 + "' != '" + "hihiHiHi" + "'", str9.equals("hihiHiHi"));
        org.junit.Assert.assertNotNull(strOptional10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test266");
        java.lang.String str1 = strman.Strman.htmlEncode("MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;" + "'", str1.equals("nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;"));
    }

    @Test
    public void test267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test267");
        java.lang.String str1 = strman.Strman.lowerFirst("00055000570010800108001170011000104001050010400105000550005500057001080010800117001100005700055000570010800108001170011000076000550005700108001080011700110000760005500057001080010800117001100008500055000570010800108001170011000078000550005700108001080011700110");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "00055000570010800108001170011000104001050010400105000550005500057001080010800117001100005700055000570010800108001170011000076000550005700108001080011700110000760005500057001080010800117001100008500055000570010800108001170011000078000550005700108001080011700110" + "'", str1.equals("00055000570010800108001170011000104001050010400105000550005500057001080010800117001100005700055000570010800108001170011000076000550005700108001080011700110000760005500057001080010800117001100008500055000570010800108001170011000078000550005700108001080011700110"));
    }

    @Test
    public void test268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test268");
        java.lang.String[] strArray5 = strman.Strman.lines("hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!");
        java.lang.String str6 = strman.Strman.prepend("null97", strArray5);
        java.lang.String str8 = strman.Strman.join(strArray5, "100");
        java.lang.String str9 = strman.Strman.format("006e0075006c006c00390037", strArray5);
        boolean boolean10 = strman.Strman.containsAll("00001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000ihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi-h0000000100111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100", strArray5);
        java.lang.String str11 = strman.Strman.format("hihiihi_hhi_hi484851554848515748485499484854994848555348485410148485155484851554848515748485499484854994848555348485410148485157484851554848515748485499484854994848555348485410148485299484851554848515748485499484854994848555348485410148485299484851554848515748485499484854994848555348485410148485353484851554848515748485499484854994848555348485410148485210148485155484851574848549948485499484855534848541010000000001101001000000000110100000000000011010010000000001001000Null000780008500076000760005700055001100007800085000760007600057000550011700078000850007600076000570005500108000780008500076000760005700055001080007800085000760007600057000550005700078000850007600076000570005500055000780008500076000760005700055", strArray5);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97" + "'", str6.equals("hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97"));
        org.junit.Assert.assertTrue("'" + str8 + "' != '" + "hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!" + "'", str8.equals("hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!"));
        org.junit.Assert.assertTrue("'" + str9 + "' != '" + "006e0075006c006c00390037" + "'", str9.equals("006e0075006c006c00390037"));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + str11 + "' != '" + "hihiihi_hhi_hi484851554848515748485499484854994848555348485410148485155484851554848515748485499484854994848555348485410148485157484851554848515748485499484854994848555348485410148485299484851554848515748485499484854994848555348485410148485299484851554848515748485499484854994848555348485410148485353484851554848515748485499484854994848555348485410148485210148485155484851574848549948485499484855534848541010000000001101001000000000110100000000000011010010000000001001000Null000780008500076000760005700055001100007800085000760007600057000550011700078000850007600076000570005500108000780008500076000760005700055001080007800085000760007600057000550005700078000850007600076000570005500055000780008500076000760005700055" + "'", str11.equals("hihiihi_hhi_hi484851554848515748485499484854994848555348485410148485155484851554848515748485499484854994848555348485410148485157484851554848515748485499484854994848555348485410148485299484851554848515748485499484854994848555348485410148485299484851554848515748485499484854994848555348485410148485353484851554848515748485499484854994848555348485410148485210148485155484851574848549948485499484855534848541010000000001101001000000000110100000000000011010010000000001001000Null000780008500076000760005700055001100007800085000760007600057000550011700078000850007600076000570005500108000780008500076000760005700055001080007800085000760007600057000550005700078000850007600076000570005500055000780008500076000760005700055"));
    }

    @Test
    public void test269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test269");
        boolean boolean2 = strman.Strman.contains("hihiHiHi", "N ull97 nnulhi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi null97hi null97nnulhi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi null97hi null97nnul");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test270");
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.util.List<java.lang.String> strList9 = strman.Strman.zip(strArray8);
        boolean boolean11 = strman.Strman.containsAny("", strArray8, true);
        boolean boolean13 = strman.Strman.containsAny("hi!hi!", strArray8, true);
        boolean boolean15 = strman.Strman.containsAll("10", strArray8, false);
        java.lang.String str17 = strman.Strman.join(strArray8, "hi!");
        java.lang.String[] strArray18 = strman.Strman.removeEmptyStrings(strArray8);
        java.lang.String str19 = strman.Strman.prepend("006e0075006c006c0039003700390037", strArray8);
        boolean boolean21 = strman.Strman.containsAny("Hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!blVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxM", strArray8, false);
        boolean boolean22 = strman.Strman.containsAll("ll97", strArray8);
        java.lang.String str23 = strman.Strman.appendArrayhI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!7", strArray8);
        java.lang.String str24 = strman.Strman.format("Nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull", strArray8);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + str17 + "' != '" + "" + "'", str17.equals(""));
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + str19 + "' != '" + "006e0075006c006c0039003700390037" + "'", str19.equals("006e0075006c006c0039003700390037"));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + str23 + "' != '" + "90007800117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800057000550007800110001170010800108000570005500085001100011700108001080005700055000760011000117001080010800057000550007600110001170010800108000570005500057001100011700108001080005700055000550011000117001080010800057000550010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330011000117001080010800057000550000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001050000000000hI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!7" + "'", str23.equalshI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!7"));
        org.junit.Assert.assertTrue("'" + str24 + "' != '" + "Nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull" + "'", str24.equals("Nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull"));
    }

    @Test
    public void test271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test271");
        boolean boolean2 = strman.Strman.unequal("00000000001100110000000000110101000000000011001100000000001101010000000000110011000000000011010100000000001100110000000000110101000000000011001100000000001101010000000000110011000000000011010100000000001100110000000000110101", "004e0055004c004c00390037004e004e0055004c002100690068");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
    }

    @Test
    public void test272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test272");
        boolean boolean2 = strman.Strman.inequal("Mw==", "006e0075006c006c00390037006e002d0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
    }

    @Test
    public void test273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test273");
        java.lang.String[] strArray3 = strman.Strman.words("Nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull97Nnull97Unull97Lnull97Lnull979null977null97hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97", "hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!");
        java.util.Optional<java.lang.String> strOptional4 = strman.Strman.trimEnd("MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA0ZTAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwNTUwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDRjMDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA0YzAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwMzkwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111001000000000-ih79llun-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih", strArray3);
        java.lang.String[] strArray5 = strman.Strman.removeEmptyStrings(strArray3);
        java.lang.String[] strArray6 = strman.Strman.removeEmptyStrings(strArray5);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(strOptional4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray6);
    }

    @Test
    public void test274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test274");
        java.lang.String str3 = strman.Strman.ensureLeft("nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull", "nnullhi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006eunullhi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006elnullhi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006el", false);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "nnullhi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006eunullhi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006elnullhi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006elnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull" + "'", str3.equals("nnullhi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006eunullhi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006elnullhi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006elnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull"));
    }

    @Test
    public void test275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test275");
        java.lang.String str1 = strman.Strman.base64Encode("00105000510010700100001160010900086000320010800084000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300032001040010700101000830003200104001070010100083000320010400107001010008300104001050004500104");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "MDAxMDUwMDA1MTAwMTA3MDAxMDAwMDExNjAwMTA5MDAwODYwMDAzMjAwMTA4MDAwODQwMDAzMjAwMTA0MDAxMDcwMDEwMTAwMDgzMDAwMzIwMDEwNDAwMTA3MDAxMDEwMDA4MzAwMDMyMDAxMDQwMDEwNzAwMTAxMDAwODMwMDAzMjAwMTA0MDAxMDcwMDEwMTAwMDgzMDAwMzIwMDEwNDAwMTA3MDAxMDEwMDA4MzAwMDMyMDAxMDQwMDEwNzAwMTAxMDAwODMwMDAzMjAwMTA0MDAxMDcwMDEwMTAwMDgzMDAwMzIwMDEwNDAwMTA3MDAxMDEwMDA4MzAwMDMyMDAxMDQwMDEwNzAwMTAxMDAwODMwMDAzMjAwMTA0MDAxMDcwMDEwMTAwMDgzMDAwMzIwMDEwNDAwMTA3MDAxMDEwMDA4MzAwMDMyMDAxMDQwMDEwNzAwMTAxMDAwODMwMDAzMjAwMTA0MDAxMDcwMDEwMTAwMDgzMDAwMzIwMDEwNDAwMTA3MDAxMDEwMDA4MzAwMDMyMDAxMDQwMDEwNzAwMTAxMDAwODMwMDAzMjAwMTA0MDAxMDcwMDEwMTAwMDgzMDAwMzIwMDEwNDAwMTA3MDAxMDEwMDA4MzAwMDMyMDAxMDQwMDEwNzAwMTAxMDAwODMwMDAzMjAwMTA0MDAxMDcwMDEwMTAwMDgzMDAwMzIwMDEwNDAwMTA3MDAxMDEwMDA4MzAwMDMyMDAxMDQwMDEwNzAwMTAxMDAwODMwMDAzMjAwMTA0MDAxMDcwMDEwMTAwMDgzMDAwMzIwMDEwNDAwMTA3MDAxMDEwMDA4MzAwMDMyMDAxMDQwMDEwNzAwMTAxMDAwODMwMDAzMjAwMTA0MDAxMDcwMDEwMTAwMDgzMDAwMzIwMDEwNDAwMTA3MDAxMDEwMDA4MzAwMDMyMDAxMDQwMDEwNzAwMTAxMDAwODMwMDAzMjAwMTA0MDAxMDcwMDEwMTAwMDgzMDAwMzIwMDEwNDAwMTA3MDAxMDEwMDA4MzAwMDMyMDAxMDQwMDEwNzAwMTAxMDAwODMwMDAzMjAwMTA0MDAxMDcwMDEwMTAwMDgzMDAwMzIwMDEwNDAwMTA3MDAxMDEwMDA4MzAwMDMyMDAxMDQwMDEwNzAwMTAxMDAwODMwMDAzMjAwMTA0MDAxMDcwMDEwMTAwMDgzMDAwMzIwMDEwNDAwMTA3MDAxMDEwMDA4MzAwMDMyMDAxMDQwMDEwNzAwMTAxMDAwODMwMDAzMjAwMTA0MDAxMDcwMDEwMTAwMDgzMDAwMzIwMDEwNDAwMTA3MDAxMDEwMDA4MzAwMDMyMDAxMDQwMDEwNzAwMTAxMDAwODMwMDAzMjAwMTA0MDAxMDcwMDEwMTAwMDgzMDAwMzIwMDEwNDAwMTA3MDAxMDEwMDA4MzAwMDMyMDAxMDQwMDEwNzAwMTAxMDAwODMwMDAzMjAwMTA0MDAxMDcwMDEwMTAwMDgzMDAwMzIwMDEwNDAwMTA3MDAxMDEwMDA4MzAwMDMyMDAxMDQwMDEwNzAwMTAxMDAwODMwMDAzMjAwMTA0MDAxMDcwMDEwMTAwMDgzMDAwMzIwMDEwNDAwMTA3MDAxMDEwMDA4MzAwMDMyMDAxMDQwMDEwNzAwMTAxMDAwODMwMDAzMjAwMTA0MDAxMDcwMDEwMTAwMDgzMDAwMzIwMDEwNDAwMTA3MDAxMDEwMDA4MzAwMDMyMDAxMDQwMDEwNzAwMTAxMDAwODMwMDAzMjAwMTA0MDAxMDcwMDEwMTAwMDgzMDAwMzIwMDEwNDAwMTA3MDAxMDEwMDA4MzAwMDMyMDAxMDQwMDEwNzAwMTAxMDAwODMwMDAzMjAwMTA0MDAxMDcwMDEwMTAwMDgzMDAwMzIwMDEwNDAwMTA3MDAxMDEwMDA4MzAwMDMyMDAxMDQwMDEwNzAwMTAxMDAwODMwMDAzMjAwMTA0MDAxMDcwMDEwMTAwMDgzMDAwMzIwMDEwNDAwMTA3MDAxMDEwMDA4MzAwMDMyMDAxMDQwMDEwNzAwMTAxMDAwODMwMDAzMjAwMTA0MDAxMDcwMDEwMTAwMDgzMDAwMzIwMDEwNDAwMTA3MDAxMDEwMDA4MzAwMDMyMDAxMDQwMDEwNzAwMTAxMDAwODMwMDAzMjAwMTA0MDAxMDcwMDEwMTAwMDgzMDAwMzIwMDEwNDAwMTA3MDAxMDEwMDA4MzAwMDMyMDAxMDQwMDEwNzAwMTAxMDAwODMwMDAzMjAwMTA0MDAxMDcwMDEwMTAwMDgzMDAwMzIwMDEwNDAwMTA3MDAxMDEwMDA4MzAwMDMyMDAxMDQwMDEwNzAwMTAxMDAwODMwMDAzMjAwMTA0MDAxMDcwMDEwMTAwMDgzMDAwMzIwMDEwNDAwMTA3MDAxMDEwMDA4MzAwMDMyMDAxMDQwMDEwNzAwMTAxMDAwODMwMDAzMjAwMTA0MDAxMDcwMDEwMTAwMDgzMDAwMzIwMDEwNDAwMTA3MDAxMDEwMDA4MzAwMDMyMDAxMDQwMDEwNzAwMTAxMDAwODMwMDAzMjAwMTA0MDAxMDcwMDEwMTAwMDgzMDAwMzIwMDEwNDAwMTA3MDAxMDEwMDA4MzAwMDMyMDAxMDQwMDEwNzAwMTAxMDAwODMwMDAzMjAwMTA0MDAxMDcwMDEwMTAwMDgzMDAwMzIwMDEwNDAwMTA3MDAxMDEwMDA4MzAwMDMyMDAxMDQwMDEwNzAwMTAxMDAwODMwMDAzMjAwMTA0MDAxMDcwMDEwMTAwMDgzMDAwMzIwMDEwNDAwMTA3MDAxMDEwMDA4MzAwMDMyMDAxMDQwMDEwNzAwMTAxMDAwODMwMDAzMjAwMTA0MDAxMDcwMDEwMTAwMDgzMDAwMzIwMDEwNDAwMTA3MDAxMDEwMDA4MzAwMDMyMDAxMDQwMDEwNzAwMTAxMDAwODMwMDAzMjAwMTA0MDAxMDcwMDEwMTAwMDgzMDAwMzIwMDEwNDAwMTA3MDAxMDEwMDA4MzAwMDMyMDAxMDQwMDEwNzAwMTAxMDAwODMwMDAzMjAwMTA0MDAxMDcwMDEwMTAwMDgzMDAwMzIwMDEwNDAwMTA3MDAxMDEwMDA4MzAwMDMyMDAxMDQwMDEwNzAwMTAxMDAwODMwMDAzMjAwMTA0MDAxMDcwMDEwMTAwMDgzMDAwMzIwMDEwNDAwMTA3MDAxMDEwMDA4MzAwMDMyMDAxMDQwMDEwNzAwMTAxMDAwODMwMDAzMjAwMTA0MDAxMDcwMDEwMTAwMDgzMDAwMzIwMDEwNDAwMTA3MDAxMDEwMDA4MzAwMDMyMDAxMDQwMDEwNzAwMTAxMDAwODMwMDAzMjAwMTA0MDAxMDcwMDEwMTAwMDgzMDAxMDQwMDEwNTAwMDQ1MDAxMDQ=" + "'", str1.equals("MDAxMDUwMDA1MTAwMTA3MDAxMDAwMDExNjAwMTA5MDAwODYwMDAzMjAwMTA4MDAwODQwMDAzMjAwMTA0MDAxMDcwMDEwMTAwMDgzMDAwMzIwMDEwNDAwMTA3MDAxMDEwMDA4MzAwMDMyMDAxMDQwMDEwNzAwMTAxMDAwODMwMDAzMjAwMTA0MDAxMDcwMDEwMTAwMDgzMDAwMzIwMDEwNDAwMTA3MDAxMDEwMDA4MzAwMDMyMDAxMDQwMDEwNzAwMTAxMDAwODMwMDAzMjAwMTA0MDAxMDcwMDEwMTAwMDgzMDAwMzIwMDEwNDAwMTA3MDAxMDEwMDA4MzAwMDMyMDAxMDQwMDEwNzAwMTAxMDAwODMwMDAzMjAwMTA0MDAxMDcwMDEwMTAwMDgzMDAwMzIwMDEwNDAwMTA3MDAxMDEwMDA4MzAwMDMyMDAxMDQwMDEwNzAwMTAxMDAwODMwMDAzMjAwMTA0MDAxMDcwMDEwMTAwMDgzMDAwMzIwMDEwNDAwMTA3MDAxMDEwMDA4MzAwMDMyMDAxMDQwMDEwNzAwMTAxMDAwODMwMDAzMjAwMTA0MDAxMDcwMDEwMTAwMDgzMDAwMzIwMDEwNDAwMTA3MDAxMDEwMDA4MzAwMDMyMDAxMDQwMDEwNzAwMTAxMDAwODMwMDAzMjAwMTA0MDAxMDcwMDEwMTAwMDgzMDAwMzIwMDEwNDAwMTA3MDAxMDEwMDA4MzAwMDMyMDAxMDQwMDEwNzAwMTAxMDAwODMwMDAzMjAwMTA0MDAxMDcwMDEwMTAwMDgzMDAwMzIwMDEwNDAwMTA3MDAxMDEwMDA4MzAwMDMyMDAxMDQwMDEwNzAwMTAxMDAwODMwMDAzMjAwMTA0MDAxMDcwMDEwMTAwMDgzMDAwMzIwMDEwNDAwMTA3MDAxMDEwMDA4MzAwMDMyMDAxMDQwMDEwNzAwMTAxMDAwODMwMDAzMjAwMTA0MDAxMDcwMDEwMTAwMDgzMDAwMzIwMDEwNDAwMTA3MDAxMDEwMDA4MzAwMDMyMDAxMDQwMDEwNzAwMTAxMDAwODMwMDAzMjAwMTA0MDAxMDcwMDEwMTAwMDgzMDAwMzIwMDEwNDAwMTA3MDAxMDEwMDA4MzAwMDMyMDAxMDQwMDEwNzAwMTAxMDAwODMwMDAzMjAwMTA0MDAxMDcwMDEwMTAwMDgzMDAwMzIwMDEwNDAwMTA3MDAxMDEwMDA4MzAwMDMyMDAxMDQwMDEwNzAwMTAxMDAwODMwMDAzMjAwMTA0MDAxMDcwMDEwMTAwMDgzMDAwMzIwMDEwNDAwMTA3MDAxMDEwMDA4MzAwMDMyMDAxMDQwMDEwNzAwMTAxMDAwODMwMDAzMjAwMTA0MDAxMDcwMDEwMTAwMDgzMDAwMzIwMDEwNDAwMTA3MDAxMDEwMDA4MzAwMDMyMDAxMDQwMDEwNzAwMTAxMDAwODMwMDAzMjAwMTA0MDAxMDcwMDEwMTAwMDgzMDAwMzIwMDEwNDAwMTA3MDAxMDEwMDA4MzAwMDMyMDAxMDQwMDEwNzAwMTAxMDAwODMwMDAzMjAwMTA0MDAxMDcwMDEwMTAwMDgzMDAwMzIwMDEwNDAwMTA3MDAxMDEwMDA4MzAwMDMyMDAxMDQwMDEwNzAwMTAxMDAwODMwMDAzMjAwMTA0MDAxMDcwMDEwMTAwMDgzMDAwMzIwMDEwNDAwMTA3MDAxMDEwMDA4MzAwMDMyMDAxMDQwMDEwNzAwMTAxMDAwODMwMDAzMjAwMTA0MDAxMDcwMDEwMTAwMDgzMDAwMzIwMDEwNDAwMTA3MDAxMDEwMDA4MzAwMDMyMDAxMDQwMDEwNzAwMTAxMDAwODMwMDAzMjAwMTA0MDAxMDcwMDEwMTAwMDgzMDAwMzIwMDEwNDAwMTA3MDAxMDEwMDA4MzAwMDMyMDAxMDQwMDEwNzAwMTAxMDAwODMwMDAzMjAwMTA0MDAxMDcwMDEwMTAwMDgzMDAwMzIwMDEwNDAwMTA3MDAxMDEwMDA4MzAwMDMyMDAxMDQwMDEwNzAwMTAxMDAwODMwMDAzMjAwMTA0MDAxMDcwMDEwMTAwMDgzMDAwMzIwMDEwNDAwMTA3MDAxMDEwMDA4MzAwMDMyMDAxMDQwMDEwNzAwMTAxMDAwODMwMDAzMjAwMTA0MDAxMDcwMDEwMTAwMDgzMDAwMzIwMDEwNDAwMTA3MDAxMDEwMDA4MzAwMDMyMDAxMDQwMDEwNzAwMTAxMDAwODMwMDAzMjAwMTA0MDAxMDcwMDEwMTAwMDgzMDAwMzIwMDEwNDAwMTA3MDAxMDEwMDA4MzAwMDMyMDAxMDQwMDEwNzAwMTAxMDAwODMwMDAzMjAwMTA0MDAxMDcwMDEwMTAwMDgzMDAwMzIwMDEwNDAwMTA3MDAxMDEwMDA4MzAwMDMyMDAxMDQwMDEwNzAwMTAxMDAwODMwMDAzMjAwMTA0MDAxMDcwMDEwMTAwMDgzMDAwMzIwMDEwNDAwMTA3MDAxMDEwMDA4MzAwMDMyMDAxMDQwMDEwNzAwMTAxMDAwODMwMDAzMjAwMTA0MDAxMDcwMDEwMTAwMDgzMDAwMzIwMDEwNDAwMTA3MDAxMDEwMDA4MzAwMDMyMDAxMDQwMDEwNzAwMTAxMDAwODMwMDAzMjAwMTA0MDAxMDcwMDEwMTAwMDgzMDAwMzIwMDEwNDAwMTA3MDAxMDEwMDA4MzAwMDMyMDAxMDQwMDEwNzAwMTAxMDAwODMwMDAzMjAwMTA0MDAxMDcwMDEwMTAwMDgzMDAwMzIwMDEwNDAwMTA3MDAxMDEwMDA4MzAwMDMyMDAxMDQwMDEwNzAwMTAxMDAwODMwMDAzMjAwMTA0MDAxMDcwMDEwMTAwMDgzMDAwMzIwMDEwNDAwMTA3MDAxMDEwMDA4MzAwMDMyMDAxMDQwMDEwNzAwMTAxMDAwODMwMDAzMjAwMTA0MDAxMDcwMDEwMTAwMDgzMDAwMzIwMDEwNDAwMTA3MDAxMDEwMDA4MzAwMDMyMDAxMDQwMDEwNzAwMTAxMDAwODMwMDAzMjAwMTA0MDAxMDcwMDEwMTAwMDgzMDAwMzIwMDEwNDAwMTA3MDAxMDEwMDA4MzAwMDMyMDAxMDQwMDEwNzAwMTAxMDAwODMwMDAzMjAwMTA0MDAxMDcwMDEwMTAwMDgzMDAwMzIwMDEwNDAwMTA3MDAxMDEwMDA4MzAwMDMyMDAxMDQwMDEwNzAwMTAxMDAwODMwMDAzMjAwMTA0MDAxMDcwMDEwMTAwMDgzMDAwMzIwMDEwNDAwMTA3MDAxMDEwMDA4MzAwMDMyMDAxMDQwMDEwNzAwMTAxMDAwODMwMDAzMjAwMTA0MDAxMDcwMDEwMTAwMDgzMDAxMDQwMDEwNTAwMDQ1MDAxMDQ="));
    }

    @Test
    public void test276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test276");
        java.lang.String[] strArray4 = strman.Strman.chop("hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!", 100);
        java.lang.String str5 = strman.Strman.formatstrArray4);
        java.lang.String str6 = strman.Strman.appendArray("nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull&excl;nullnull", strArray4);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "7710097503212211697119321101223211711932109100122106321091009750321211223297119321091221071193210910010951110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108484848484848484853534848484848484848535548484848484848485554484848484848484855544848484848484848565348484848484848485556484848484848484853534848484848484848535348484848484848485355484848484848484855544848484848484848555448484848484848485653484848484848484855564848484848484848535548484848484848485353484848484848484853554848484848484848555448484848484848485554484848484848484856534848484848484848555648484848484848494856484848484848484853534848484848484848535548484848484848485554484848484848484855544848484848484848565348484848484848485556484848484848484948564848484848484848535348484848484848485355484848484848484855544848484848484848555448484848484848485653484848484848484855564848484848484849495548484848484848485353484848484848484853554848484848484848555448484848484848485554484848484848484856534848484848484848555648484848484848494948484848484848484853534848484848484848535548484848484848485554484848484848484855544848484848484848565348484848484848485556104105104105" + "'", str5.equals
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull&excl;nullnullhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!" + "'", str6.equals("nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull&excl;nullnullhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!"));
    }

    @Test
    public void test277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test277");
        long long4 = strman.Strman.countSubstr("ihiH", "hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97_hi!00370039006_c006_c0075006_e003700370039006_c006_c0075006_e003900370039006_c006_c0075006_e004_c00370039006_c006_c0075006_e004_c00370039006_c006_c0075006_e005500370039006_c006_c0075006_e004_e00370039006_c006_c0075006_e", false, true);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
    }

    @Test
    public void test278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test278");
        java.lang.String str1 = strman.Strman.transliterate("aWhpX2hoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFudWxsOTdudWxsOTduVUxMOTc=");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "aWhpX2hoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFudWxsOTdudWxsOTduVUxMOTc=" + "'", str1.equals("aWhpX2hoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFudWxsOTdudWxsOTduVUxMOTc="));
    }

    @Test
    public void test279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test279");
        java.util.Optional<java.lang.String> strOptional2 = strman.Strman.at("!ihnull006900680069005f006800680069002dhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!006900680069005f006800680069002dhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!006900680069005f006800680069002dhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!", (int) 'a');
        org.junit.Assert.assertNotNull(strOptional2);
    }

    @Test
    public void test280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test280");
        boolean boolean3 = strman.Strman.endsWith("000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97_nnull97_unull97_lnull97_lnull979null977null97hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e!", "g2xphwA001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!iH00390037", false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test281");
        java.lang.String str1 = strman.Strman.toSnakeCase("hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!" + "'", str1.equals("hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!"));
    }

    @Test
    public void test282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test282");
        java.lang.String[] strArray2 = strman.Strman.words("ihiH");
        java.lang.String str3 = strman.Strman.prependArray("hibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mnull97", strArray2);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "ihiHhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mnull97" + "'", str3.equals("ihiHhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mnull97"));
    }

    @Test
    public void test283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test283");
        java.util.Optional<java.lang.String> strOptional1 = strman.Strman.trimEnd("n-u-l-l97-n-n-u-lhi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-null97nnulhi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-null97nnul3kdtm_v_l_t_hke_s_hke_s_hke_s_hke_s_30");
        org.junit.Assert.assertNotNull(strOptional1);
    }

    @Test
    public void test284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test284");
        java.lang.String str1 = strman.Strman.hexEncode("0005100051000550005000055000510005100051000550005000055000510005100051000550005000055000510005100051");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "0030003000300035003100300030003000350031003000300030003500350030003000300035003000300030003000350035003000300030003500310030003000300035003100300030003000350031003000300030003500350030003000300035003000300030003000350035003000300030003500310030003000300035003100300030003000350031003000300030003500350030003000300035003000300030003000350035003000300030003500310030003000300035003100300030003000350031" + "'", str1.equals("0030003000300035003100300030003000350031003000300030003500350030003000300035003000300030003000350035003000300030003500310030003000300035003100300030003000350031003000300030003500350030003000300035003000300030003000350035003000300030003500310030003000300035003100300030003000350031003000300030003500350030003000300035003000300030003000350035003000300030003500310030003000300035003100300030003000350031"));
    }

    @Test
    public void test285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test285");
        java.lang.String str1 = strman.Strman.rightTrim("00000000011010010000000001101000000000000110100100000000001011010000000001101000");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "00000000011010010000000001101000000000000110100100000000001011010000000001101000" + "'", str1.equals("00000000011010010000000001101000000000000110100100000000001011010000000001101000"));
    }

    @Test
    public void test286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test286");
        java.lang.String str3 = strman.Strman.ensureRight("nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullih79llun!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ihtrue);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullih79llun!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ihstr3.equals("nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullih79llun!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih
    }

    @Test
    public void test287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test287");
        java.lang.String[] strArray1 = strman.Strman.lines("TlVMTDk3aGloaQ==");
        java.util.List<java.lang.String> strList2 = strman.Strman.zip(strArray1);
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNotNull(strList2);
    }

    @Test
    public void test288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test288");
        java.lang.String str1 = strman.Strman.leftTrim("Mw==Hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!null97Nnul");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "Mw==Hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!null97Nnul" + "'", str1.equals("Mw==Hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!null97Nnul"));
    }

    @Test
    public void test289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test289");
        boolean boolean3 = strman.Strman.contains("001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih", "52", false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test290");
        java.lang.String str1 = strman.Strman.toKebabCase("hi_hi");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "hi-hi" + "'", str1.equals("hi-hi"));
    }

    @Test
    public void test291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test291");
        java.lang.String[] strArray4 = strman.Strman.between("NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97", "null97null97Nnull97Unull97Lnull97Lnull979null977null97", "Null97Nnull97Unull97Lnull97Lnull979null977null97");
        java.lang.String str5 = strman.Strman.append("hi-hi0000000001001000000000000110100197-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e", strArray4);
        java.lang.String str7 = strman.Strman.join(strArray4, "000000000110100100000000011010000000000001101001000000000101111100000000011010000000000001101000000000000110100100000000001011010000000001101000000000000110100100000000001101000000000000111000000000000011010000000000001110000000000000110101000000000011000100000000001101010000000000110101000000000011010000000000001110000000000000110100000000000011100000000000001101010000000000110001000000000011010100000000001101110000000000110100000000000011100000000000001101000000000000111000000000000011010100000000001101000000000000111001000000000011100100000000001101000000000000111000000000000011010000000000001110000000000000110101000000000011010000000000001110010000000000111001000000000011010000000000001110000000000000110100000000000011100000000000001101010000000000110101000000000011010100000000001100110000000000110100000000000011100000000000001101000000000000111000000000000011010100000000001101000000000000110001000000000011000000000000001100010000000000110100000000000011100000000000001101000000000000111000000000000011010100000000001100010000000000110101000000000011010100000000001101000000000000111000000000000011010000000000001110000000000000110101000000000011000100000000001101010000000000110101000000000011010000000000001110000000000000110100000000000011100000000000001101010000000000110001000000000011010100000000001101110000000000110100000000000011100000000000001101000000000000111000000000000011010100000000001101000000000000111001000000000011100100000000001101000000000000111000000000000011010000000000001110000000000000110101000000000011010000000000001110010000000000111001000000000011010000000000001110000000000000110100000000000011100000000000001101010000000000110101000000000011010100000000001100110000000000110100000000000011100000000000001101000000000000111000000000000011010100000000001101000000000000110001000000000011000000000000001100010000000000110100000000000011100000000000001101000000000000111000000000000011010100000000001100010000000000110101000000000011011100000000001101000000000000111000000000000011010000000000001110000000000000110101000000000011000100000000001101010000000000110101000000000011010000000000001110000000000000110100000000000011100000000000001101010000000000110001000000000011010100000000001101110000000000110100000000000011100000000000001101000000000000111000000000000011010100000000001101000000000000111001000000000011100100000000001101000000000000111000000000000011010000000000001110000000000000110101000000000011010000000000001110010000000000111001000000000011010000000000001110000000000000110100000000000011100000000000001101010000000000110101000000000011010100000000001100110000000000110100000000000011100000000000001101000000000000111000000000000011010100000000001101000000000000110001000000000011000000000000001100010000000000110100000000000011100000000000001101000000000000111000000000000011010100000000001100100000000000111001000000000011100100000000001101000000000000111000000000000011010000000000001110000000000000110101000000000011000100000000001101010000000000110101000000000011010000000000001110000000000000110100000000000011100000000000001101010000000000110001000000000011010100000000001101110000000000110100000000000011100000000000001101000000000000111000000000000011010100000000001101000000000000111001000000000011100100000000001101000000000000111000000000000011010000000000001110000000000000110101000000000011010000000000001110010000000000111001000000000011010000000000001110000000000000110100000000000011100000000000001101010000000000110101000000000011010100000000001100110000000000110100000000000011100000000000001101000000000000111000000000000011010100000000001101000000000000110001000000000011000000000000001100010000000000110100000000000011100000000000001101000000000000111000000000000011010100000000001100100000000000111001000000000011100100000000001101000000000000111000000000000011010000000000001110000000000000110101000000000011000100000000001101010000000000110101000000000011010000000000001110000000000000110100000000000011100000000000001101010000000000110001000000000011010100000000001101110000000000110100000000000011100000000000001101000000000000111000000000000011010100000000001101000000000000111001000000000011100100000000001101000000000000111000000000000011010000000000001110000000000000110101000000000011010000000000001110010000000000111001000000000011010000000000001110000000000000110100000000000011100000000000001101010000000000110101000000000011010100000000001100110000000000110100000000000011100000000000001101000000000000111000000000000011010100000000001101000000000000110001000000000011000000000000001100010000000000110100000000000011100000000000001101000000000000111000000000000011010100000000001100110000000000110101000000000011001100000000001101000000000000111000000000000011010000000000001110000000000000110101000000000011000100000000001101010000000000110101000000000011010000000000001110000000000000110100000000000011100000000000001101010000000000110001000000000011010100000000001101110000000000110100000000000011100000000000001101000000000000111000000000000011010100000000001101000000000000111001000000000011100100000000001101000000000000111000000000000011010000000000001110000000000000110101000000000011010000000000001110010000000000111001000000000011010000000000001110000000000000110100000000000011100000000000001101010000000000110101000000000011010100000000001100110000000000110100000000000011100000000000001101000000000000111000000000000011010100000000001101000000000000110001000000000011000000000000001100010000000000110100000000000011100000000000001101000000000000111000000000000011010100000000001100100000000000110001000000000011000000000000001100010000000000110100000000000011100000000000001101000000000000111000000000000011010100000000001100010000000000110101000000000011010100000000001101000000000000111000000000000011010000000000001110000000000000110101000000000011000100000000001101010000000000110111000000000011010000000000001110000000000000110100000000000011100000000000001101010000000000110100000000000011100100000000001110010000000000110100000000000011100000000000001101000000000000111000000000000011010100000000001101000000000000111001000000000011100100000000001101000000000000111000000000000011010000000000001110000000000000110101000000000011010100000000001101010000000000110011000000000011010000000000001110000000000000110100000000000011100000000000001101010000000000110100000000000011000100000000001100000000000000110001");
        java.lang.Class<?> wildcardClass8 = strArray4.getClass();
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "hi-hi0000000001001000000000000110100197-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e" + "'", str5.equals("hi-hi0000000001001000000000000110100197-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e"));
        org.junit.Assert.assertTrue("'" + str7 + "' != '" + "" + "'", str7.equals(""));
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test292");
        java.lang.String str1 = strman.Strman.toSnakeCase("hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!" + "'", str1.equals("hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!"));
    }

    @Test
    public void test293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test293");
        java.lang.String str1 = strman.Strman.rightTrim("Null97null97nnull97unull97lnull97lnull979null977null97");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "Null97null97nnull97unull97lnull97lnull979null977null97" + "'", str1.equals("Null97null97nnull97unull97lnull97lnull979null977null97"));
    }

    @Test
    public void test294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test294");
        java.lang.String[] strArray2 = strman.Strman.words("lunN79llunnull97null97Nnull97Unull97Lnull97Lnull979null977null97", "ll97");
        boolean boolean3 = strman.Strman.isString((java.lang.Object) "ll97");
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
    }

    @Test
    public void test295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test295");
        java.lang.String str1 = strman.Strman.removeNonWords("bnVsbDk3bm51bDEwOTdudWxsOTcxMDk3006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "bnVsbDk3bm51bDEwOTdudWxsOTcxMDk3006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037" + "'", str1.equals("bnVsbDk3bm51bDEwOTdudWxsOTcxMDk3006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037"));
    }

    @Test
    public void test296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test296");
        boolean boolean3 = strman.Strman.endsWith("300300301301300300300301301313300300301300320300300301300320300300300311313300300300311311300300300313320300300301301300300300301301313300300301300320000480004800049000490004800048000480004900049000550004800048000490004800056000480004800049000480005600048000480004800053000550004800048000480005300053000480004800048000550005600048000480004900049000480004800048000490004900055000480004800049000480005600104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300110001170010800108000570005579llun779llun979llunl79llunl79llunu79llunn79llun79llun779llun979llunl79llunl79llunu79llunn79llunMda2 ztaw nz uw mdzj mda2 yz aw mzkw mdm3nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullull97nnul1097null9710971lunn79llun", false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test297");
        java.util.Map<java.lang.Character, java.lang.Long> charMap1 = strman.Strman.charsCount");
        org.junit.Assert.assertNotNull(charMap1);
    }

    @Test
    public void test298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test298");
        java.lang.String[] strArray3 = strman.Strman.words("Nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull97Nnull97Unull97Lnull97Lnull979null977null97hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97", "hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!");
        java.util.Optional<java.lang.String> strOptional4 = strman.Strman.trimEnd("MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA0ZTAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwNTUwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDRjMDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA0YzAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwMzkwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111001000000000-ih79llun-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih", strArray3);
        java.lang.String[] strArray5 = strman.Strman.removeEmptyStrings(strArray3);
        java.util.List<java.lang.String> strList6 = strman.Strman.zip(strArray3);
        java.lang.Class<?> wildcardClass7 = strArray3.getClass();
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(strOptional4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test299");
        java.lang.String str3 = strman.Strman.rightPad("", "hihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi", (int) (short) 100);
    }

    @Test
    public void test300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test300");
        java.lang.String str1 = strman.Strman.toCamelCase("SGloaWloaV9oaGlfaGk0ODQ4NTE1NTQ4NDg1MTU3NDg0ODU0OTk0ODQ4NTQ5OTQ4NDg1NTUzNDg0ODU0MTAxNDg0ODUxNTU0ODQ4NTE1NTQ4NDg1MTU3NDg0ODU0OTk0ODQ4NTQ5OTQ4NDg1NTUzNDg0ODU0MTAxNDg0ODUxNTc0ODQ4NTE1NTQ4NDg1MTU3NDg0ODU0OTk0ODQ4NTQ5OTQ4NDg1NTUzNDg0ODU0MTAxNDg0ODUyOTk0ODQ4NTE1NTQ4NDg1MTU3NDg0ODU0OTk0ODQ4NTQ5OTQ4NDg1NTUzNDg0ODU0MTAxNDg0ODUyOTk0ODQ4NTE1NTQ4NDg1MTU3NDg0ODU0OTk0ODQ4NTQ5OTQ4NDg1NTUzNDg0ODU0MTAxNDg0ODUzNTM0ODQ4NTE1NTQ4NDg1MTU3NDg0ODU0OTk0ODQ4NTQ5OTQ4NDg1NTUzNDg0ODU0MTAxNDg0ODUyMTAxNDg0ODUxNTU0ODQ4NTE1NzQ4NDg1NDk5NDg0ODU0OTk0ODQ4NTU1MzQ4NDg1NDEwMQ==n-u-l-l97-n-n-u-l");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "sGloaWloaV9oaGlfaGk0ODQ4NTE1NTQ4NDg1MTU3NDg0ODU0OTk0ODQ4NTQ5OTQ4NDg1NTUzNDg0ODU0MTAxNDg0ODUxNTU0ODQ4NTE1NTQ4NDg1MTU3NDg0ODU0OTk0ODQ4NTQ5OTQ4NDg1NTUzNDg0ODU0MTAxNDg0ODUxNTc0ODQ4NTE1NTQ4NDg1MTU3NDg0ODU0OTk0ODQ4NTQ5OTQ4NDg1NTUzNDg0ODU0MTAxNDg0ODUyOTk0ODQ4NTE1NTQ4NDg1MTU3NDg0ODU0OTk0ODQ4NTQ5OTQ4NDg1NTUzNDg0ODU0MTAxNDg0ODUyOTk0ODQ4NTE1NTQ4NDg1MTU3NDg0ODU0OTk0ODQ4NTQ5OTQ4NDg1NTUzNDg0ODU0MTAxNDg0ODUzNTM0ODQ4NTE1NTQ4NDg1MTU3NDg0ODU0OTk0ODQ4NTQ5OTQ4NDg1NTUzNDg0ODU0MTAxNDg0ODUyMTAxNDg0ODUxNTU0ODQ4NTE1NzQ4NDg1NDk5NDg0ODU0OTk0ODQ4NTU1MzQ4NDg1NDEwMQ==nULL97NNUL" + "'", str1.equals("sGloaWloaV9oaGlfaGk0ODQ4NTE1NTQ4NDg1MTU3NDg0ODU0OTk0ODQ4NTQ5OTQ4NDg1NTUzNDg0ODU0MTAxNDg0ODUxNTU0ODQ4NTE1NTQ4NDg1MTU3NDg0ODU0OTk0ODQ4NTQ5OTQ4NDg1NTUzNDg0ODU0MTAxNDg0ODUxNTc0ODQ4NTE1NTQ4NDg1MTU3NDg0ODU0OTk0ODQ4NTQ5OTQ4NDg1NTUzNDg0ODU0MTAxNDg0ODUyOTk0ODQ4NTE1NTQ4NDg1MTU3NDg0ODU0OTk0ODQ4NTQ5OTQ4NDg1NTUzNDg0ODU0MTAxNDg0ODUyOTk0ODQ4NTE1NTQ4NDg1MTU3NDg0ODU0OTk0ODQ4NTQ5OTQ4NDg1NTUzNDg0ODU0MTAxNDg0ODUzNTM0ODQ4NTE1NTQ4NDg1MTU3NDg0ODU0OTk0ODQ4NTQ5OTQ4NDg1NTUzNDg0ODU0MTAxNDg0ODUyMTAxNDg0ODUxNTU0ODQ4NTE1NzQ4NDg1NDk5NDg0ODU0OTk0ODQ4NTU1MzQ4NDg1NDEwMQ==nULL97NNUL"));
    }

    @Test
    public void test301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test301");
        java.lang.String[] strArray3 = strman.Strman.split("hi!hi!", "hi!");
        java.lang.String str5 = strman.Strman.join(strArray3, "hihi");
        java.lang.String[] strArray6 = strman.Strman.removeEmptyStrings(strArray3);
        java.util.List<java.lang.String> strList7 = strman.Strman.zip(strArray6);
        boolean boolean9 = strman.Strman.containsAllstrArray6, false);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "" + "'", str5.equals(""));
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test302");
        java.lang.String str1 = strman.Strman.transliterate("006e00680069006800690048006900480069007500680069006800690048006900480069006c00680069006800690048006900480069006c");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "006e00680069006800690048006900480069007500680069006800690048006900480069006c00680069006800690048006900480069006c" + "'", str1.equals("006e00680069006800690048006900480069007500680069006800690048006900480069006c00680069006800690048006900480069006c"));
    }

    @Test
    public void test303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test303");
        java.lang.String str1 = strman.Strman.upperFirst("nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "Nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull" + "'", str1.equals("Nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull"));
    }

    @Test
    public void test304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test304");
        try {
            java.lang.String str3 = strman.Strman.decode("00000000010011010000000001000100000000000100000100000000001100100000000001011010000000000101010000000000010000010000000001110111000000000100111000000000011110100000000001010101000000000111011100000000010011010000000001000100000000000101101000000000011010100000000001001101000000000100010000000000010000010000000000110010000000000101100100000000011110100000000001000001000000000111011100000000010011010000000001111010000000000110101100000000011101110000000001001101000000000100010000000000010011010000000000110011", 6432, 4944);
            org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException; message: radix 4944 greater than Character.MAX_RADIX");
        } catch (java.lang.NumberFormatException e) {
        }
    }

    @Test
    public void test305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test305");
        java.lang.String str4 = strman.Strman.replace("771228561nullnull97nnul001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97", "ihnull006900680069005f006800680069002d0068006900340038003400380035003100350035003400380034003800350031003500370034003800340038003500340039003900340038003400380035003400390039003400380034003800350035003500330034003800340038003500340031003000310034003800340038003500310035003500340038003400380035003100350035003400380034003800350031003500370034003800340038003500340039003900340038003400380035003400390039003400380034003800350035003500330034003800340038003500340031003000310034003800340038003500310035003700340038003400380035003100350035003400380034003800350031003500370034003800340038003500340039003900340038003400380035003400390039003400380034003800350035003500330034003800340038003500340031003000310034003800340038003500320039003900340038003400380035003100350035003400380034003800350031003500370034003800340038003500340039003900340038003400380035003400390039003400380034003800350035003500330034003800340038003500340031003000310034003800340038003500320039003900340038003400380035003100350035003400380034003800350031003500370034003800340038003500340039003900340038003400380035003400390039003400380034003800350035003500330034003800340038003500340031003000310034003800340038003500330035003300340038003400380035003100350035003400380034003800350031003500370034003800340038003500340039003900340038003400380035003400390039003400380034003800350035003500330034003800340038003500340031003000310034003800340038003500320031003000310034003800340038003500310035003500340038003400380035003100350037003400380034003800350034003900390034003800340038003500340039003900340038003400380035003500350033003400380034003800350034003100300031hihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi006900680069005f006800680069002dhihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi006900680069005f006800680069002dhihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi", "480", true);
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "771228561nullnull97nnul001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97" + "'", str4.equals("771228561nullnull97nnul001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97"));
    }

    @Test
    public void test306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test306");
        try {
            java.lang.String str3 = strman.Strman.decode("9ihih7", 202, 256);
            org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException; message: radix 256 greater than Character.MAX_RADIX");
        } catch (java.lang.NumberFormatException e) {
        }
    }

    @Test
    public void test307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test307");
        java.lang.String str1 = strman.Strman.binEncode("HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!0033");
        org.junit.Assert.assertTrue("'" + strstr1.equals
    }

    @Test
    public void test308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test308");
        long long4 = strman.Strman.countSubstr("TnVsbDk3bm51bG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbA==", "lunn79llun", true, false);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
    }

    @Test
    public void test309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test309");
        boolean boolean2 = strman.Strman.endsWith("nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullullnullnullnullnullnullnull", "n-u-l-l97-n-ullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test310");
        java.util.Optional<java.lang.String> strOptional1 = strman.Strman.trimEnd("Hi!hi!");
        boolean boolean2 = strman.Strman.isString((java.lang.Object) strOptional1);
        org.junit.Assert.assertNotNull(strOptional1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test311");
        java.lang.String str1 = strman.Strman.removeSpacesih79llun!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih");
        org.junit.Assert.assertTrue("'" + strih79llun!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih" + "'", str1.equalsih79llun!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih"));
    }

    @Test
    public void test312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test312");
        java.lang.String str3 = strman.Strman.removeRight("00000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97", "10145848435558484994584849945848475158484551584841012584841014584843555848499458484994584847515848455158484353584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484751584841014584843555848499458484994584847515848455158484551584841014584843555848499458484994584847515848455158484ih-ihh-ih-i", true);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "00000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97" + "'", str3.equals("00000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97"));
    }

    @Test
    public void test313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test313");
        boolean boolean2 = strman.Strman.endsWith("null97nnul1097null971097001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000ihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihiH00390037", "5500075000Hihillun10145848435558484994584849945848475158484551584841012584841014584843555848499458484994584847515848455158484353584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484751584841014584843555848499458484994584847515848455158484551584841014584843555848499458484994584847515848455158484ih-ihllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunlunn79llun790179llun7901lunn79llun");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test314");
        java.lang.String[] strArray2 = strman.Strman.words("hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e!", "IHI97HHI97HI48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101n-u-l-l97-n-n-u-lhi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hinULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULL-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-null97nnul-hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!null97-nnul");
        org.junit.Assert.assertNotNull(strArray2);
    }

    @Test
    public void test315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test315");
        java.lang.String str1 = strman.Strman.decEncode("5!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih");
        org.junit.Assert.assertTrue("'" + strstr1.equals
    }

    @Test
    public void test316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test316");
        boolean boolean1 = strman.Strman.isLowerCase("000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97 Nnull97 Unull97 Lnull97 Lnull979null977null97 Hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
    }

    @Test
    public void test317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test317");
        java.util.Optional<java.lang.String> strOptional2 = strman.Strman.at("iullnullnullnullnullnullnull03000300034003800300030003000340039003000300030003400390030003000300034003800300030003000340039003000300030003400380030003000300034003900300030003100310030003000300031003100370030003000310030003800300030003100300038003000300030003500370030003000300035003500300030003100310030003000300031003100300030003000310031003700300030003100300038hullnullnullnullnullnullnull03000300034003800300030003000340039003000300030003400390030003000300034003800300030003000340039003000300030003400380030003000300034003900300030003100310030003000300031003100370030003000310030003800300030003100300038003000300030003500370030003000300035003500300030003100310030003000300031003100300030003000310031003700300030003100300038iullnullnullnullnullnullnull03000300034003800300030003000340039003000300030003400390030003000300034003800300030003000340039003000300030003400380030003000300034003900300030003100310030003000300031003100370030003000310030003800300030003100300038003000300030003500370030003000300035003500300030003100310030003000300031003100300030003000310031003700300030003100300038hullnullnullnullnullnullnull03000300034003800300030003000340039003000300030003400390030003000300034003800300030003000340039003000300030003400380030003000300034003900300030003100310030003000300031003100370030003000310030003800300030003100300038003000300030003500370030003000300035003500300030003100310030003000300031003100300030003000310031003700300030003100300038hullnullnullnullnullnullnull03000300034003800300030003000340039003000300030003400390030003000300034003800300030003000340039003000300030003400380030003000300034003900300030003100310030003000300031003100370030003000310030003800300030003100300038003000300030003500370030003000300035003500300030003100310030003000300031003100300030003000310031003700300030003100300038iullnullnullnullnullnullnull03000300034003800300030003000340039003000300030003400390030003000300034003800300030003000340039003000300030003400380030003000300034003900300030003100310030003000300031003100370030003000310030003800300030003100300038003000300030003500370030003000300035003500300030003100310030003000300031003100300030003000310031003700300030003100300038hullnullnullnullnullnullnull03000300034003800300030003000340039003000300030003400390030003000300034003800300030003000340039003000300030003400380030003000300034003900300030003100310030003000300031003100370030003000310030003800300030003100300038003000300030003500370030003000300035003500300030003100310030003000300031003100300030003000310031003700300030003100300038i484851554848515748485499484854994848555348485410148485155484851554848515748485499484854994848555348485410148485157484851554848515748485499484854994848555348485410148485299484851554848515748485499484854994848555348485410148485299484851554848515748485499484854994848555348485410148485353484851554848515748485499484854994848555348485410148485210148485155484851574848549948485499484855534848541019ihiullnullnullnullnullnullnull03000300034003800300030003000340039003000300030003400390030003000300034003800300030003000340039003000300030003400380030003000300034003900300030003100310030003000300031003100370030003000310030003800300030003100300038003000300030003500370030003000300035003500300030003100310030003000300031003100300030003000310031003700300030003100300038h7null", 310);
        org.junit.Assert.assertNotNull(strOptional2);
    }

    @Test
    public void test318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test318");
        java.util.Optional<java.lang.String> strOptional1 = strman.Strman.tail("hi!hi!-n-u-l-l97");
        org.junit.Assert.assertNotNull(strOptional1);
    }

    @Test
    public void test319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test319");
        java.lang.String[] strArray2 = strman.Strman.split("00370039006c006c0075006e0068006900680069003700370039006c006c0075006e003900370039006c006c0075006e0020004c00370039006c006c0075006e0020004c00370039006c006c0075006e0020005500370039006c006c0075006e0020004e00370039006c006c0075006e
        org.junit.Assert.assertNotNull(strArray2);
    }

    @Test
    public void test320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test320");
        java.lang.String str2 = strman.Strman.ensureRight("lunn79llun006900680069005f006800680069002d
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "lunn79llun006900680069005f006800680069002dstr2.equals("lunn79llun006900680069005f006800680069002d
    }

    @Test
    public void test321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test321");
        java.lang.String str1 = strman.Strman.toSnakeCase("79llun779llun979llunl79llunl79llunu79llunn79llun79llun779llun979llunl79llunl79llunu79llunn79llun1101171081085755null97nnull97unull97lnull97lnull979null977null97");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "79llun779llun979llunl79llunl79llunu79llunn79llun79llun779llun979llunl79llunl79llunu79llunn79llun1101171081085755null97nnull97unull97lnull97lnull979null977null97" + "'", str1.equals("79llun779llun979llunl79llunl79llunu79llunn79llun79llun779llun979llunl79llunl79llunu79llunn79llun1101171081085755null97nnull97unull97lnull97lnull979null977null97"));
    }

    @Test
    public void test322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test322");
        java.lang.String str1 = strman.Strman.rightTrim("nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullullnullnullnullnullnullnull");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullullnullnullnullnullnullnull" + "'", str1.equals("nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullullnullnullnullnullnullnull"));
    }

    @Test
    public void test323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test323");
        java.lang.String str1 = strman.Strman.slugify("860096001200c4005500e400e40073009300c400c4005500e400hi!LUNN79LLUNlunN79llun79llun1");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "860096001200c4005500e400e40073009300c400c4005500e400hi-lunn79llunlunn79llun79llun1" + "'", str1.equals("860096001200c4005500e400e40073009300c400c4005500e400hi-lunn79llunlunn79llun79llun1"));
    }

    @Test
    public void test324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test324");
        java.lang.String str3 = strman.Strman.ensureRight("00110000850007600076000570005500078000780008500076006e0075006c006c00390037004e006e0075006c006c003900370055006e0075006c006c00390037004c006e0075006c006c00390037004c006e0075006c006c003900370039006e0075006c006c003900370037006e0075006c006c00390037hi-hi0000000001001000000000000110100197-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e", "10145848435558484994584849945848475158484551584841012584841014584843555848499458484994584847515848455158484353584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484751584841014584843555848499458484994584847515848455158484551584841014584843555848499458484994584847515848455158484ihIhhIhI", false);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "00110000850007600076000570005500078000780008500076006e0075006c006c00390037004e006e0075006c006c003900370055006e0075006c006c00390037004c006e0075006c006c00390037004c006e0075006c006c003900370039006e0075006c006c003900370037006e0075006c006c00390037hi-hi0000000001001000000000000110100197-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e10145848435558484994584849945848475158484551584841012584841014584843555848499458484994584847515848455158484353584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484751584841014584843555848499458484994584847515848455158484551584841014584843555848499458484994584847515848455158484ihIhhIhI" + "'", str3.equals("00110000850007600076000570005500078000780008500076006e0075006c006c00390037004e006e0075006c006c003900370055006e0075006c006c00390037004c006e0075006c006c00390037004c006e0075006c006c003900370039006e0075006c006c003900370037006e0075006c006c00390037hi-hi0000000001001000000000000110100197-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e10145848435558484994584849945848475158484551584841012584841014584843555848499458484994584847515848455158484353584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484751584841014584843555848499458484994584847515848455158484551584841014584843555848499458484994584847515848455158484ihIhhIhI"));
    }

    @Test
    public void test325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test325");
        boolean boolean2 = strman.Strman.contains
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test326");
        java.lang.String[] strArray4 = new java.lang.String[] { "hihi" };
        java.util.List<java.lang.String> strList5 = strman.Strman.zip(strArray4);
        java.lang.String str7 = strman.Strman.join(strArray4, "null97Nnull97Unull97Lnull97Lnull979null977null97");
        java.util.Optional<java.lang.String> strOptional8 = strman.Strman.trimEnd("1101171081085755", strArray4);
        boolean boolean10 = strman.Strman.containsAll("hihi", strArray4, false);
        boolean boolean12 = strman.Strman.containsAny("Hihihihinull97nnull97unull97lnull97lnull979null977null979710MzU=", strArray4, false);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertTrue("'" + str7 + "' != '" + "hihi" + "'", str7.equals("hihi"));
        org.junit.Assert.assertNotNull(strOptional8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test327");
        java.lang.String str1 = strman.Strman.decEncode("1null97null97_nnul_n_u_l_l97_n_n_u_l!ihhI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "000490011000117001080010800057000550011000117001080010800057000550009500110001100011700108000950011000095001170009500108000950010800057000550009500110000950011000095001170009500108000330010500104001040007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033" + "'", str1.equals
    }

    @Test
    public void test328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test328");
        java.lang.String[] strArray4 = strman.Strman.between("00110000850007600076000570005500078000780008500076006e0075006c006c00390037004e006e0075006c006c003900370055006e0075006c006c00390037004c006e0075006c006c00390037004c006e0075006c006c003900370039006e0075006c006c003900370037006e0075006c006c00390037", "771228561nullnull97nnul001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97", "000720010500092000320010400105000720010500092000320010400105000720010500092000320010400105000720010500092000320010400105000720010500092000320010400105");
        java.lang.String str5 = strman.Strman.appendArray("Null97Nnull97Unull97Lnull97Lnull979null977null979710", strArray4);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "Null97Nnull97Unull97Lnull97Lnull979null977null979710" + "'", str5.equals("Null97Nnull97Unull97Lnull97Lnull979null977null979710"));
    }

    @Test
    public void test329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test329");
        long long4 = strman.Strman.countSubstr("MDAwMDAwMDAwMTAwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTEwMTExMDAwMDAwMDAwMDExMTAxMDEwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDAxMTEwMDEwMDAwMDAwMDAwMTEwMTExMDAwMDAwMDAwMTEwMTAwMDAwMDAwMDAwMDExMDEwMDEwMDAwMDAwMDAwMTAwMDAx", "aGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhbnVsbDk3aGkhMDAwMDAwMDAwMTAwMTExMDAwMDAwMDAwMDExMTAxMDEwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMTAwMDAwMDAwMDAxMTEwMTAxMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTEwMDAwMDAwMDAwMTExMDEwMTAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTExMDAwMDAwMDAwMDExMTAxMDEwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMTAwMDAwMDAwMDAxMTEwMTAxMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTEwMDAwMDAwMDAwMTExMDEwMTAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTExMDAwMDAwMDAwMDExMTAxMDEwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMTAwMDAwMDAwMDAxMTEwMTAxMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTEwMDAwMDAwMDAwMTExMDEwMTAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTExMDAwMDAwMDAwMDExMTAxMDEwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMTAwMDAwMDAwMDAxMTEwMTAxMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTEwMDAwMDAwMDAwMTExMDEwMTAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTExMDAwMDAwMDAwMDExMTAxMDEwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMTAwMDAwMDAwMDAxMTEwMTAxMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTEwMDAwMDAwMDAwMTExMDEwMTAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTExMDAwMDAwMDAwMDExMTAxMDEwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMTAwMDAwMDAwMDAxMTEwMTAxMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTEwMDAwMDAwMDAwMTExMDEwMTAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTExMDAwMDAwMDAwMDExMTAxMDEwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMTAwMDAwMDAwMDAxMTEwMTAxMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTEwMDAwMDAwMDAwMTExMDEwMTAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTExMDAwMDAwMDAwMDExMTAxMDEwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMTAwMDAwMDAwMDAxMTEwMTAxMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTEwMDAwMDAwMDAwMTExMDEwMTAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTExMDAwMDAwMDAwMDExMTAxMDEwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMTAwMDAwMDAwMDAxMTEwMTAxMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTEwMDAwMDAwMDAwMTExMDEwMTAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTExMDAwMDAwMDAwMDExMTAxMDEwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMTAwMDAwMDAwMDAxMTEwMTAxMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTEwMDAwMDAwMDAwMTExMDEwMTAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTExMDAwMDAwMDAwMDExMTAxMDEwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMTAwMDAwMDAwMDAxMTEwMTAxMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTEwMDAwMDAwMDAwMTExMDEwMTAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTExMDAwMDAwMDAwMDExMTAxMDEwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMTAwMDAwMDAwMDAxMTEwMTAxMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTEwMDAwMDAwMDAwMTExMDEwMTAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTExMDAwMDAwMDAwMDExMTAxMDEwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMTAwMDAwMDAwMDAxMTEwMTAxMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTEwMDAwMDAwMDAwMTExMDEwMTAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTExMDAwMDAwMDAwMDExMTAxMDEwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMTAwMDAwMDAwMDAxMTEwMTAxMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTEwMDAwMDAwMDAwMTExMDEwMTAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTExMDAwMDAwMDAwMDExMTAxMDEwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMTAwMDAwMDAwMDAxMTEwMTAxMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTEwMDAwMDAwMDAwMTExMDEwMTAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTExMDAwMDAwMDAwMDExMTAxMDEwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMTAwMDAwMDAwMDAxMTEwMTAxMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTEwMDAwMDAwMDAwMTExMDEwMTAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTAwNzIxMDUzM2hpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIQ==", false, false);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
    }

    @Test
    public void test330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test330");
        java.lang.String[] strArray1 = null;
        try {
            boolean boolean3 = strman.Strman.containsAny("MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA0ZTAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwNTUwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDRjMDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA0YzAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwMzkwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3Nnullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037hihiullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull", strArray1, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test331");
        java.lang.String str2 = strman.Strman.removeLeft("006e0075006c006ce0075006c006c00390037006800690021006e006e0075006c006c003900370068006900680069006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006e0075006c006c003900370068006900210075006e0075006c006ce0075006c006c00390037006800690021006c006e0075006c006ce0075006c006c00390037006800690021006c006e0075006c006c003900370039006e0075006c006c003900370037006e0075006c006c003900370031003000390037006e0075006c006c00390037", "Null97nnul1097null9710971lunn79llun");
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "006e0075006c006ce0075006c006c00390037006800690021006e006e0075006c006ce0075006c006c003900370068006900210075006e0075006c006ce0075006c006c00390037006800690021006c006e0075006c006ce0075006c006c00390037006800690021006c006e0075006c006c003900370039006e0075006c006c003900370037006e0075006c006c003900370031003000390037006e0075006c006c00390037" + "'", str2.equals("006e0075006c006ce0075006c006c00390037006800690021006e006e0075006c006ce0075006c006c003900370068006900210075006e0075006c006ce0075006c006c00390037006800690021006c006e0075006c006ce0075006c006c00390037006800690021006c006e0075006c006c003900370039006e0075006c006c003900370037006e0075006c006c003900370031003000390037006e0075006c006c00390037"));
    }

    @Test
    public void test332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test332");
        java.lang.String[] strArray5 = strman.Strman.between("79llun779llun979llunL79llunL79llunU79llunN79llun", "null97Nnull97Unull97Lnull97Lnull979null977null97", "NULL97");
        java.lang.String str6 = strman.Strman.prepend("null97", strArray5);
        java.util.List<java.lang.String> strList7 = strman.Strman.zip(strArray5);
        boolean boolean8 = strman.Strman.containsAll("", strArray5);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "null97" + "'", str6.equals("null97"));
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test333");
        java.lang.String[] strArray4 = new java.lang.String[] { "hihi" };
        java.util.List<java.lang.String> strList5 = strman.Strman.zip(strArray4);
        java.lang.String[] strArray6 = strman.Strman.removeEmptyStrings(strArray4);
        java.lang.String str7 = strman.Strman.prependstrArray4);
        java.lang.String str8 = strman.Strman.appendArray("MDAxMTAxMTAwMDAwMDAwMDEwMTAxMTEwMDAwMDAwMDAwMTExMDExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDAxMDAxMTEwMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAxMDEwMTExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDEwMDEwMTEwMDAwMDAwMDAwMDAxMDExMDAwMDAwMDAwMTAxMTAxMDAwMDAwMDAwMDEwMDEwMTEwMDAwMDAwMDAwMDAxMDExMDAwMDAwMDAwaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaS1o", strArray4);
        java.lang.String str9 = strman.Strman.prepend("Mda2 ztaw nz uw mdzj mda2 yz aw mzkw mdm3nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullMDAxMTAxMTAwMDAwMDAwMDEwMTAxMTEwMDAwMDAwMDAwMTExMDExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDAxMDAxMTEwMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAxMDEwMTExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDEwMDEwMTEwMDAwMDAwMDAwMDAxMDExMDAwMDAwMDAwMTAxMTAxMDAwMDAwMDAwMDEwMDEwMTEwMDAwMDAwMDAwMDAxMDExMDAwMDAwMDAwaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaS1o", strArray4);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + str7 + "' != '" + "hihistr7.equals("hihi
        org.junit.Assert.assertTrue("'" + str8 + "' != '" + "MDAxMTAxMTAwMDAwMDAwMDEwMTAxMTEwMDAwMDAwMDAwMTExMDExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDAxMDAxMTEwMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAxMDEwMTExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDEwMDEwMTEwMDAwMDAwMDAwMDAxMDExMDAwMDAwMDAwMTAxMTAxMDAwMDAwMDAwMDEwMDEwMTEwMDAwMDAwMDAwMDAxMDExMDAwMDAwMDAwaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaS1ohihi" + "'", str8.equals("MDAxMTAxMTAwMDAwMDAwMDEwMTAxMTEwMDAwMDAwMDAwMTExMDExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDAxMDAxMTEwMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAxMDEwMTExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDEwMDEwMTEwMDAwMDAwMDAwMDAxMDExMDAwMDAwMDAwMTAxMTAxMDAwMDAwMDAwMDEwMDEwMTEwMDAwMDAwMDAwMDAxMDExMDAwMDAwMDAwaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaS1ohihi"));
        org.junit.Assert.assertTrue("'" + str9 + "' != '" + "hihiMda2 ztaw nz uw mdzj mda2 yz aw mzkw mdm3nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullMDAxMTAxMTAwMDAwMDAwMDEwMTAxMTEwMDAwMDAwMDAwMTExMDExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDAxMDAxMTEwMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAxMDEwMTExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDEwMDEwMTEwMDAwMDAwMDAwMDAxMDExMDAwMDAwMDAwMTAxMTAxMDAwMDAwMDAwMDEwMDEwMTEwMDAwMDAwMDAwMDAxMDExMDAwMDAwMDAwaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaS1o" + "'", str9.equals("hihiMda2 ztaw nz uw mdzj mda2 yz aw mzkw mdm3nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullMDAxMTAxMTAwMDAwMDAwMDEwMTAxMTEwMDAwMDAwMDAwMTExMDExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDAxMDAxMTEwMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAxMDEwMTExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDEwMDEwMTEwMDAwMDAwMDAwMDAxMDExMDAwMDAwMDAwMTAxMTAxMDAwMDAwMDAwMDEwMDEwMTEwMDAwMDAwMDAwMDAxMDExMDAwMDAwMDAwaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaS1o"));
    }

    @Test
    public void test334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test334");
        java.lang.String str1 = strman.Strman.toKebabCase
        org.junit.Assert.assertTrue("'" + strstr1.equals
    }

    @Test
    public void test335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test335");
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.util.List<java.lang.String> strList6 = strman.Strman.zip(strArray5);
        boolean boolean8 = strman.Strman.containsAny("", strArray5, true);
        boolean boolean10 = strman.Strman.containsAny("hi!hi!", strArray5, true);
        boolean boolean12 = strman.Strman.containsAll("10", strArray5, false);
        java.lang.String str14 = strman.Strman.join(strArray5, "hi!");
        java.lang.String str15 = strman.Strman.format("000000000110100000000000011010010000000000100001", strArray5);
        java.lang.String[] strArray16 = strman.Strman.removeEmptyStrings(strArray5);
        try {
            java.util.Optional<java.lang.String> strOptional17 = strman.Strman.trimStartihihh_ihInullhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!nullnull97nnulnull971lunn79llunHI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!003353", strArray5);
            org.junit.Assert.fail("Expected exception of type java.util.regex.PatternSyntaxException; message: Unclosed character class near index 3\r\n^[]+\r\n   ^");
        } catch (java.util.regex.PatternSyntaxException e) {
        }
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "" + "'", str14.equals(""));
        org.junit.Assert.assertTrue("'" + str15 + "' != '" + "000000000110100000000000011010010000000000100001" + "'", str15.equals("000000000110100000000000011010010000000000100001"));
        org.junit.Assert.assertNotNull(strArray16);
    }

    @Test
    public void test336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test336");
        boolean boolean1 = strman.Strman.isUpperCase("HiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiNull97hiNull97nnul");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
    }

    @Test
    public void test337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test337");
        boolean boolean1 = strman.Strman.isBlank("hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
    }

    @Test
    public void test338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test338");
        java.lang.String str1 = strman.Strman.startCase("Nnullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037hihiullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "Nnullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037hihiullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000 Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih" + "'", str1.equals("Nnullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037hihiullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000 Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih"));
    }

    @Test
    public void test339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test339");
        boolean boolean3 = strman.Strman.isEnclosedBetween("000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97nnull97unull97lnull97lnull979null977null97hihihiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiNull97hiNullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull", "hihi550007500067000670005800087000550005500075000670006700058000870007500055000750006700067000580008700080100550007500067000670005800087000801005500075000670006700058000870007110055000750006700067000580008700001100550007500067000670005800087000llun10145848435558484994584849945848475158484551584841012584841014584843555848499458484994584847515848455158484353584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484751584841014584843555848499458484994584847515848455158484551584841014584843555848499458484994584847515848455158484ih-ihllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunlunn79llun790179llun7901lunn79llun", "!ih");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test340");
        java.lang.String str3 = strman.Strman.rightPad("32", "35blVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxM000000005500000000570000000076000000007600000000850000000078000000005500000000550000000057000000007600000000760000000085000000007800000000570000000055000000005700000000760000000076000000008500000000780000000108000000005500000000570000000076000000007600000000850000000078000000010800000000550000000057000000007600000000760000000085000000007800000001170000000055000000005700000000760000000076000000008500000000780000000110000000005500000000570000000076000000007600000000850000000078hihi==abs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnb!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!", (int) '#');
    }

    @Test
    public void test341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test341");
        java.lang.String str1 = strman.Strman.formatNumber((long) 607);
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "607" + "'", str1.equals("607"));
    }

    @Test
    public void test342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test342");
        java.lang.String str1 = strman.Strman.removeSpaces("000780011700108001080005700055000780011000117001080010800057000550008500110001170010800108000570005500076001100011700108001080005700055000760011000117001080010800057000550005700110001170010800108000570005500055001100011700108001080005700055");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "000780011700108001080005700055000780011000117001080010800057000550008500110001170010800108000570005500076001100011700108001080005700055000760011000117001080010800057000550005700110001170010800108000570005500055001100011700108001080005700055" + "'", str1.equals("000780011700108001080005700055000780011000117001080010800057000550008500110001170010800108000570005500076001100011700108001080005700055000760011000117001080010800057000550005700110001170010800108000570005500055001100011700108001080005700055"));
    }

    @Test
    public void test343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test343");
        java.lang.String str1 = strman.Strman.removeSpaces("hi-hi");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "hi-hi" + "'", str1.equals("hi-hi"));
    }

    @Test
    public void test344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test344");
        java.lang.String[] strArray5 = strman.Strman.split("nullnull97nnulih79llun!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih");
        java.lang.String str6 = strman.Strman.prependArray("97", strArray5);
        java.lang.String str7 = strman.Strman.appendArray("48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101", strArray5);
        java.lang.Class<?> wildcardClass8 = strArray5.getClass();
        java.util.Optional<java.lang.String> strOptional9 = strman.Strman.trimEnd("", strArray5);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "nullnull97nnul97" + "'", str6.equals("nullnull97nnul97"));
        org.junit.Assert.assertTrue("'" + str7 + "' != '" + "48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101nullnull97nnul" + "'", str7.equals("48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101nullnull97nnul"));
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(strOptional9);
    }

    @Test
    public void test345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test345");
        java.lang.String[] strArray6 = strman.Strman.between("hi-hinull97nnul", "000780008500076000760005700055001100007800085000760007600057000550011700078000850007600076000570005500108000780008500076000760005700055001080007800085000760007600057000550005700078000850007600076000570005500055000780008500076000760005700055", "MzU=");
        boolean boolean7 = strman.Strman.containsAny("Ihi_hhi-hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101", strArray6);
        java.lang.String str8 = strman.Strman.append("000480004800048000480004900112000480004800048000480004900114000480004800048000480005100105000480004800048000480005100105000480004800048000480005100114000480004800048000480005100107000480004800048000480004900112000480004800048000480004900112000480004800048000480004900114000480004800048000480005100105000480004800048000480005100105000480004800048000480005100114000480004800048000480005100107000480004800048000480004900114000480004800048000480004900112000480004800048000480004900114000480004800048000480005100105000480004800048000480005100105000480004800048000480005100114000480004800048000480005100107000480004800048000480005100105000480004800048000480004900112000480004800048000480004900114000480004800048000480005100105000480004800048000480005100105000480004800048000480005100114000480004800048000480005100107000480004800048000480005100105000480004800048000480004900112000480004800048000480004900114000480004800048000480005100105000480004800048000480005100105000480004800048000480005100114000480004800048000480005100107000480004800048000480005100114000480004800048000480004900112000480004800048000480004900114000480004800048000480005100105000480004800048000480005100105000480004800048000480005100114000480004800048000480005100107000480004800048000480005100107000480004800048000480004900112000480004800048000480004900114000480004800048000480005100105000480004800048000480005100105000480004800048000480005100114000480004800048000480005100107000480004800048000480004900112000480004800048000480004900114000480004800048000480005100105000480004800048000480005100105000480004800048000480005100114000480004800048000480005100107000480004800048000480004900112000480004800048000480004900112000480004800048000480004900114000480004800048000480005100105000480004800048000480005100105000480004800048000480005100114000480004800048000480005100107000480004800048000480004900114000480004800048000480004900112000480004800048000480004900114000480004800048000480005100105000480004800048000480005100105000480004800048000480005100114000480004800048000480005100107000480004800048000480005100105000480004800048000480004900112000480004800048000480004900114000480004800048000480005100105000480004800048000480005100105000480004800048000480005100114000480004800048000480005100107000480004800048000480005100105000480004800048000480004900112000480004800048000480004900114000480004800048000480005100105000480004800048000480005100105000480004800048000480005100114000480004800048000480005100107000480004800048000480005100114000480004800048000480004900112000480004800048000480004900114000480004800048000480005100105000480004800048000480005100105000480004800048000480005100114000480004800048000480005100107000480004800048000480005100107000480004800048000480004900112000480004800048000480004900114000480004800048000480005100105000480004800048000480005100105000480004800048000480005100114000480004800048000480005100107", strArray6);
        boolean boolean9 = strman.Strman.containsAll("", strArray6);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + str8 + "' != '" + "000480004800048000480004900112000480004800048000480004900114000480004800048000480005100105000480004800048000480005100105000480004800048000480005100114000480004800048000480005100107000480004800048000480004900112000480004800048000480004900112000480004800048000480004900114000480004800048000480005100105000480004800048000480005100105000480004800048000480005100114000480004800048000480005100107000480004800048000480004900114000480004800048000480004900112000480004800048000480004900114000480004800048000480005100105000480004800048000480005100105000480004800048000480005100114000480004800048000480005100107000480004800048000480005100105000480004800048000480004900112000480004800048000480004900114000480004800048000480005100105000480004800048000480005100105000480004800048000480005100114000480004800048000480005100107000480004800048000480005100105000480004800048000480004900112000480004800048000480004900114000480004800048000480005100105000480004800048000480005100105000480004800048000480005100114000480004800048000480005100107000480004800048000480005100114000480004800048000480004900112000480004800048000480004900114000480004800048000480005100105000480004800048000480005100105000480004800048000480005100114000480004800048000480005100107000480004800048000480005100107000480004800048000480004900112000480004800048000480004900114000480004800048000480005100105000480004800048000480005100105000480004800048000480005100114000480004800048000480005100107000480004800048000480004900112000480004800048000480004900114000480004800048000480005100105000480004800048000480005100105000480004800048000480005100114000480004800048000480005100107000480004800048000480004900112000480004800048000480004900112000480004800048000480004900114000480004800048000480005100105000480004800048000480005100105000480004800048000480005100114000480004800048000480005100107000480004800048000480004900114000480004800048000480004900112000480004800048000480004900114000480004800048000480005100105000480004800048000480005100105000480004800048000480005100114000480004800048000480005100107000480004800048000480005100105000480004800048000480004900112000480004800048000480004900114000480004800048000480005100105000480004800048000480005100105000480004800048000480005100114000480004800048000480005100107000480004800048000480005100105000480004800048000480004900112000480004800048000480004900114000480004800048000480005100105000480004800048000480005100105000480004800048000480005100114000480004800048000480005100107000480004800048000480005100114000480004800048000480004900112000480004800048000480004900114000480004800048000480005100105000480004800048000480005100105000480004800048000480005100114000480004800048000480005100107000480004800048000480005100107000480004800048000480004900112000480004800048000480004900114000480004800048000480005100105000480004800048000480005100105000480004800048000480005100114000480004800048000480005100107" + "'", str8.equals
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test346");
        java.lang.String[] strArray3 = strman.Strman.split("TnVsbDk3aGloaWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIW51bGw5N2hpIW5udWxsOTdoaWhpaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhbnVsbDk3aGkhdW51bGw5N2hpaGloaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFudWxsOTdoaSFsbnVsbDk3aGloaWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIW51bGw5N2hpIWxudWxsOTc5bnVsbDk3N251bGw5Nw==", "0021004800490021004800490021004800490021 null97null97nnull97unull97lnull97lnull979null977null97");
        boolean boolean4 = strman.Strman.containsAny("null97nnul1097null971097null97nnulnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullhi00370039006c006c0075006e0068006900680069003700370039006c006c0075006e003900370039006c006c0075006e002d006c00370039006c006c0075006e002d006c00370039006c006c0075006e002d007500370039006c006c0075006e002d006e00370039006c006c0075006e002d0068006900680069hi4848515548485157484854994848549948485553484854101484851554848515548485157484854994848549948485553484854101484851574848515548485157484854994848549948485553484854101484852994848515548485157484854994848549948485553484854101484852994848515548485157484854994848549948485553484854101484853534848515548485157484854994848549948485553484854101484852101484851554848515748485499484854994848555348485410100370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e00000000011010010000000001101000", strArray3);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test347");
        java.lang.String str1 = strman.Strman.transliterate("Nnullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037hihiullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000 Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "Nnullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037hihiullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000 Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih" + "'", str1.equals("Nnullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037hihiullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000 Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih Ih"));
    }

    @Test
    public void test348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test348");
        java.lang.String str2 = strman.Strman.removeRight("001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IHhi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_null97hi00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006ehi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!==AbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnb", "!ihnull");
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IHhi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_null97hi00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006ehi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!==AbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnb" + "'", str2.equals("001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IHhi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_null97hi00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006ehi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!==AbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnb"));
    }

    @Test
    public void test349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test349");
        java.util.Optional<java.lang.String> strOptional1 = strman.Strman.tail("10145848435558484994584849945848475158484551584841012584841014584843555848499458484994584847515848455158484353584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484751584841014584843555848499458484994584847515848455158484551584841014584843555848499458484994584847515848455158484ihIhllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunlunn79llun790179llun7901lunn79llun001");
        org.junit.Assert.assertNotNull(strOptional1);
    }

    @Test
    public void test350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test350");
        java.lang.String str1 = strman.Strman.swapCase("Hi-hinull97nnul");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "hI-HINULL97NNUL" + "'", str1.equals("hI-HINULL97NNUL"));
    }

    @Test
    public void test351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test351");
        java.lang.String str3 = strman.Strman.rightPad("MDAwOTgwMDEwODAwMDU3MDAwNDkwMDA4ODAwMDUwMDAxMjAwMDEwMjAwMDk4MDAwNjgwMDEwNzAwMDUxMDAwODgwMDA1MDAwMDUzMDAxMDIwMDEwMDAwMDg3MDAxMjAwMDExNTAwMDk4MDAxMTAwMDA4NjAwMTE1MDAwOTgwMDA3MTAwMDUzMDAwNDkwMDA5ODAwMDcxMDAxMjAwMDExNzAwMTAwMDAwODcwMDEyMDAwMTE1MDAwOTgwMDExMDAwMDg2MDAxMTUwMDA5ODAwMDcxMDAwNTMwMDA0OTAwMDk4MDAwNzEwMDEyMDAwMTE3MDAxMDAwMDA4NzAwMTIwMDAxMTUwMDA5ODAwMTEwMDAwODYwMDExNTAwMDk4MDAwNzEwMDA1MzAwMDQ5MDAwOTgwMDA3MTAwMTIwMDAxMTcwMDEwMDAwMDg3MDAxMjAwMDExNTAwMDk4MDAxMTAwMDA4NjAwMTE1MDAwOTgwMDA3MTAwMDUzMDAwNDkwMDA5ODAwMDcxMDAxMjAwMDExNzAwMTAwMDAwODcwMDEyMDAwMTE1MDAwOTgwMDExMDAwMDg2MDAxMTUwMDA5ODAwMDcxMDAwNTMwMDA0OTAwMDk4MDAwNzEwMDEyMDAwMTE3MDAxMDAwMDA4NzAwMTIwMDAxMTUwMDA5ODAwMTEwMDAwODYwMDExNTAwMDk4MDAwNzEwMDA1MzAwMDQ5MDAwOTgwMDA3MTAwMTIwMDAxMTcwMDEwMDAwMDg3MDAxMjAwMDExNTAwMDk4MDAxMTAwMDA4NjAwMTE1MDAwOTgwMDA3MTAwMDUzMDAwNDkwMDA5ODAwMDcxMDAxMjAwMDExNzAwMTAwMDAwODcwMDEyMDAwMTE1MDAwOTgwMDExMDAwMDg2MDAxMTUwMDA5ODAwMDcxMDAwNTMwMDA0OTAwMDk4MDAwNzEwMDEyMDAwMTE3MDAxMDAwMDA4NzAwMTIwMDAxMTUwMDA5ODAwMTEwMDAwODYwMDExNTAwMDk4MDAwNzEwMDA1MzAwMDQ5MDAwOTgwMDA3MTAwMTIwMDAxMTcwMDEwMDAwMDg3MDAxMjAwMDExNTAwMDk4MDAxMTAwMDA4NjAwMTE1MDAwOTgwMDA3MTAwMDUzMDAwNDkwMDA5ODAwMDcxMDAxMjAwMDExNzAwMTAwMDAwODcwMDEyMDAwMTE1MDAwOTgwMDExMDAwMDg2MDAxMTUwMDA5ODAwMDcxMDAwNTMwMDA0OTAwMDk4MDAwNzEwMDEyMDAwMTE3MDAxMDAwMDA4NzAwMTIwMDAxMTUwMDA5ODAwMTEwMDAwODYwMDExNTAwMDk4MDAwNzEwMDA1MzAwMDQ5MDAwOTgwMDA3MTAwMTIwMDAxMTcwMDEwMDAwMDg3MDAxMjAwMDExNTAwMDk4MDAxMTAwMDA4NjAwMTE1MDAwOTgwMDA3MTAwMDUzMDAwNDkwMDA5ODAwMDcxMDAxMjAwMDExNzAwMTAwMDAwODcwMDEyMDAwMTE1MDAwOTgwMDExMDAwMDg2MDAxMTUwMDA5ODAwMDcxMDAwNTMwMDA0OTAwMDk4MDAwNzEwMDEyMDAwMTE3MDAxMDAwMDA4NzAwMTIwMDAxMTUwMDA5ODAwMTEwMDAwODYwMDExNTAwMDk4MDAwNzEwMDA1MzAwMDQ5MDAwOTgwMDA3MTAwMTIwMDAxMTcwMDEwMDAwMDg3MDAxMjAwMDExNTAwMDk4MDAxMTAwMDA4NjAwMTE1MDAwOTgwMDA3MTAwMDUzMDAwNDkwMDA5ODAwMDcxMDAxMjAwMDExNzAwMDc2MDAwODgwMDA4NTAwMTE2MDAwOTgwMDA2NzAwMDQ5MDAxMTUwMDA3OTAwMDg0MDAwOTkwMDExNjAwMDk4MDAxMDUwMDA0OTAwMTE3MDAwNzYwMDA4ODAwMDg1MDAxMTYwMDA5ODAwMDY1MDAwNjEwMDA2MQ==", "Null97nhinullhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101nul1097null971097nULL97NNULNullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullhi\\-hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101ihiH", (int) 'a');
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "MDAwOTgwMDEwODAwMDU3MDAwNDkwMDA4ODAwMDUwMDAxMjAwMDEwMjAwMDk4MDAwNjgwMDEwNzAwMDUxMDAwODgwMDA1MDAwMDUzMDAxMDIwMDEwMDAwMDg3MDAxMjAwMDExNTAwMDk4MDAxMTAwMDA4NjAwMTE1MDAwOTgwMDA3MTAwMDUzMDAwNDkwMDA5ODAwMDcxMDAxMjAwMDExNzAwMTAwMDAwODcwMDEyMDAwMTE1MDAwOTgwMDExMDAwMDg2MDAxMTUwMDA5ODAwMDcxMDAwNTMwMDA0OTAwMDk4MDAwNzEwMDEyMDAwMTE3MDAxMDAwMDA4NzAwMTIwMDAxMTUwMDA5ODAwMTEwMDAwODYwMDExNTAwMDk4MDAwNzEwMDA1MzAwMDQ5MDAwOTgwMDA3MTAwMTIwMDAxMTcwMDEwMDAwMDg3MDAxMjAwMDExNTAwMDk4MDAxMTAwMDA4NjAwMTE1MDAwOTgwMDA3MTAwMDUzMDAwNDkwMDA5ODAwMDcxMDAxMjAwMDExNzAwMTAwMDAwODcwMDEyMDAwMTE1MDAwOTgwMDExMDAwMDg2MDAxMTUwMDA5ODAwMDcxMDAwNTMwMDA0OTAwMDk4MDAwNzEwMDEyMDAwMTE3MDAxMDAwMDA4NzAwMTIwMDAxMTUwMDA5ODAwMTEwMDAwODYwMDExNTAwMDk4MDAwNzEwMDA1MzAwMDQ5MDAwOTgwMDA3MTAwMTIwMDAxMTcwMDEwMDAwMDg3MDAxMjAwMDExNTAwMDk4MDAxMTAwMDA4NjAwMTE1MDAwOTgwMDA3MTAwMDUzMDAwNDkwMDA5ODAwMDcxMDAxMjAwMDExNzAwMTAwMDAwODcwMDEyMDAwMTE1MDAwOTgwMDExMDAwMDg2MDAxMTUwMDA5ODAwMDcxMDAwNTMwMDA0OTAwMDk4MDAwNzEwMDEyMDAwMTE3MDAxMDAwMDA4NzAwMTIwMDAxMTUwMDA5ODAwMTEwMDAwODYwMDExNTAwMDk4MDAwNzEwMDA1MzAwMDQ5MDAwOTgwMDA3MTAwMTIwMDAxMTcwMDEwMDAwMDg3MDAxMjAwMDExNTAwMDk4MDAxMTAwMDA4NjAwMTE1MDAwOTgwMDA3MTAwMDUzMDAwNDkwMDA5ODAwMDcxMDAxMjAwMDExNzAwMTAwMDAwODcwMDEyMDAwMTE1MDAwOTgwMDExMDAwMDg2MDAxMTUwMDA5ODAwMDcxMDAwNTMwMDA0OTAwMDk4MDAwNzEwMDEyMDAwMTE3MDAxMDAwMDA4NzAwMTIwMDAxMTUwMDA5ODAwMTEwMDAwODYwMDExNTAwMDk4MDAwNzEwMDA1MzAwMDQ5MDAwOTgwMDA3MTAwMTIwMDAxMTcwMDEwMDAwMDg3MDAxMjAwMDExNTAwMDk4MDAxMTAwMDA4NjAwMTE1MDAwOTgwMDA3MTAwMDUzMDAwNDkwMDA5ODAwMDcxMDAxMjAwMDExNzAwMTAwMDAwODcwMDEyMDAwMTE1MDAwOTgwMDExMDAwMDg2MDAxMTUwMDA5ODAwMDcxMDAwNTMwMDA0OTAwMDk4MDAwNzEwMDEyMDAwMTE3MDAxMDAwMDA4NzAwMTIwMDAxMTUwMDA5ODAwMTEwMDAwODYwMDExNTAwMDk4MDAwNzEwMDA1MzAwMDQ5MDAwOTgwMDA3MTAwMTIwMDAxMTcwMDEwMDAwMDg3MDAxMjAwMDExNTAwMDk4MDAxMTAwMDA4NjAwMTE1MDAwOTgwMDA3MTAwMDUzMDAwNDkwMDA5ODAwMDcxMDAxMjAwMDExNzAwMDc2MDAwODgwMDA4NTAwMTE2MDAwOTgwMDA2NzAwMDQ5MDAxMTUwMDA3OTAwMDg0MDAwOTkwMDExNjAwMDk4MDAxMDUwMDA0OTAwMTE3MDAwNzYwMDA4ODAwMDg1MDAxMTYwMDA5ODAwMDY1MDAwNjEwMDA2MQ==" + "'", str3.equals("MDAwOTgwMDEwODAwMDU3MDAwNDkwMDA4ODAwMDUwMDAxMjAwMDEwMjAwMDk4MDAwNjgwMDEwNzAwMDUxMDAwODgwMDA1MDAwMDUzMDAxMDIwMDEwMDAwMDg3MDAxMjAwMDExNTAwMDk4MDAxMTAwMDA4NjAwMTE1MDAwOTgwMDA3MTAwMDUzMDAwNDkwMDA5ODAwMDcxMDAxMjAwMDExNzAwMTAwMDAwODcwMDEyMDAwMTE1MDAwOTgwMDExMDAwMDg2MDAxMTUwMDA5ODAwMDcxMDAwNTMwMDA0OTAwMDk4MDAwNzEwMDEyMDAwMTE3MDAxMDAwMDA4NzAwMTIwMDAxMTUwMDA5ODAwMTEwMDAwODYwMDExNTAwMDk4MDAwNzEwMDA1MzAwMDQ5MDAwOTgwMDA3MTAwMTIwMDAxMTcwMDEwMDAwMDg3MDAxMjAwMDExNTAwMDk4MDAxMTAwMDA4NjAwMTE1MDAwOTgwMDA3MTAwMDUzMDAwNDkwMDA5ODAwMDcxMDAxMjAwMDExNzAwMTAwMDAwODcwMDEyMDAwMTE1MDAwOTgwMDExMDAwMDg2MDAxMTUwMDA5ODAwMDcxMDAwNTMwMDA0OTAwMDk4MDAwNzEwMDEyMDAwMTE3MDAxMDAwMDA4NzAwMTIwMDAxMTUwMDA5ODAwMTEwMDAwODYwMDExNTAwMDk4MDAwNzEwMDA1MzAwMDQ5MDAwOTgwMDA3MTAwMTIwMDAxMTcwMDEwMDAwMDg3MDAxMjAwMDExNTAwMDk4MDAxMTAwMDA4NjAwMTE1MDAwOTgwMDA3MTAwMDUzMDAwNDkwMDA5ODAwMDcxMDAxMjAwMDExNzAwMTAwMDAwODcwMDEyMDAwMTE1MDAwOTgwMDExMDAwMDg2MDAxMTUwMDA5ODAwMDcxMDAwNTMwMDA0OTAwMDk4MDAwNzEwMDEyMDAwMTE3MDAxMDAwMDA4NzAwMTIwMDAxMTUwMDA5ODAwMTEwMDAwODYwMDExNTAwMDk4MDAwNzEwMDA1MzAwMDQ5MDAwOTgwMDA3MTAwMTIwMDAxMTcwMDEwMDAwMDg3MDAxMjAwMDExNTAwMDk4MDAxMTAwMDA4NjAwMTE1MDAwOTgwMDA3MTAwMDUzMDAwNDkwMDA5ODAwMDcxMDAxMjAwMDExNzAwMTAwMDAwODcwMDEyMDAwMTE1MDAwOTgwMDExMDAwMDg2MDAxMTUwMDA5ODAwMDcxMDAwNTMwMDA0OTAwMDk4MDAwNzEwMDEyMDAwMTE3MDAxMDAwMDA4NzAwMTIwMDAxMTUwMDA5ODAwMTEwMDAwODYwMDExNTAwMDk4MDAwNzEwMDA1MzAwMDQ5MDAwOTgwMDA3MTAwMTIwMDAxMTcwMDEwMDAwMDg3MDAxMjAwMDExNTAwMDk4MDAxMTAwMDA4NjAwMTE1MDAwOTgwMDA3MTAwMDUzMDAwNDkwMDA5ODAwMDcxMDAxMjAwMDExNzAwMTAwMDAwODcwMDEyMDAwMTE1MDAwOTgwMDExMDAwMDg2MDAxMTUwMDA5ODAwMDcxMDAwNTMwMDA0OTAwMDk4MDAwNzEwMDEyMDAwMTE3MDAxMDAwMDA4NzAwMTIwMDAxMTUwMDA5ODAwMTEwMDAwODYwMDExNTAwMDk4MDAwNzEwMDA1MzAwMDQ5MDAwOTgwMDA3MTAwMTIwMDAxMTcwMDEwMDAwMDg3MDAxMjAwMDExNTAwMDk4MDAxMTAwMDA4NjAwMTE1MDAwOTgwMDA3MTAwMDUzMDAwNDkwMDA5ODAwMDcxMDAxMjAwMDExNzAwMDc2MDAwODgwMDA4NTAwMTE2MDAwOTgwMDA2NzAwMDQ5MDAxMTUwMDA3OTAwMDg0MDAwOTkwMDExNjAwMDk4MDAxMDUwMDA0OTAwMTE3MDAwNzYwMDA4ODAwMDg1MDAxMTYwMDA5ODAwMDY1MDAwNjEwMDA2MQ=="));
    }

    @Test
    public void test352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test352");
        java.lang.String str1 = strman.Strman.capitalize("Null97 nnull97 unull97 lnull97 lnull979null977null97 null97");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "Null97 nnull97 unull97 lnull97 lnull979null977null97 null97" + "'", str1.equals("Null97 nnull97 unull97 lnull97 lnull979null977null97 null97"));
    }

    @Test
    public void test353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test353");
        java.util.Optional<java.lang.String> strOptional2 = strman.Strman.at("hinullhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000", (int) (byte) 100);
        org.junit.Assert.assertNotNull(strOptional2);
    }

    @Test
    public void test354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test354");
        java.lang.String str1 = strman.Strman.toStudlyCase
        org.junit.Assert.assertTrue("'" + strstr1.equals
    }

    @Test
    public void test355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test355");
        java.lang.String str1 = strman.Strman.decEncode("1101171081085755Null97Nnull97Unull97Lnull97Lnull979null977null97");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "00049000490004800049000490005500049000480005600049000480005600053000550005300053000780011700108001080005700055000780011000117001080010800057000550008500110001170010800108000570005500076001100011700108001080005700055000760011000117001080010800057000550005700110001170010800108000570005500055001100011700108001080005700055" + "'", str1.equals("00049000490004800049000490005500049000480005600049000480005600053000550005300053000780011700108001080005700055000780011000117001080010800057000550008500110001170010800108000570005500076001100011700108001080005700055000760011000117001080010800057000550005700110001170010800108000570005500055001100011700108001080005700055"));
    }

    @Test
    public void test356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test356");
        java.lang.String str2 = strman.Strman.ensureLeft("hihiHI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-NULL97HI-00370039006C006C0075006E003700370039006C006C0075006E003900370039006C006C0075006E004C00370039006C006C0075006E004C00370039006C006C0075006E005500370039006C006C0075006E004E00370039006C006C0075006E", "0010400105001040010500072000730004500072000730004500072000730004500072000730004500072000730004500072000730004500072000730004500072000730004500072000730004500072000730004500072000730004500072000730004500072000730004500072000730004500072000730004500072000730004500072000730004500072000730004500072000730004500072000730004500110000850007600076000570005500078000780008500076000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000780008500076000760005700055000720007300045000480004800051000550004800048000510005700048000480005400067000480004800054000670004800048000550005300048000480005400069000480004800051000550004800048000510005500048000480005100057000480004800054000670004800048000540006700048000480005500053000480004800054000690004800048000510005700048000480005100055000480004800051000570004800048000540006700048000480005400067000480004800055000530004800048000540006900048000480005200067000480004800051000550004800048000510005700048000480005400067000480004800054000670004800048000550005300048000480005400069000480004800052000670004800048000510005500048000480005100057000480004800054000670004800048000540006700048000480005500053000480004800054000690004800048000530005300048000480005100055000480004800051000570004800048000540006700048000480005400067000480004800055000530004800048000540006900048000480005200069000480004800051000550004800048000510005700048000480005400067000480004800054000670004800048000550005300048000480005400069");
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "0010400105001040010500072000730004500072000730004500072000730004500072000730004500072000730004500072000730004500072000730004500072000730004500072000730004500072000730004500072000730004500072000730004500072000730004500072000730004500072000730004500072000730004500072000730004500072000730004500072000730004500072000730004500110000850007600076000570005500078000780008500076000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000720007300045000780008500076000760005700055000720007300045000480004800051000550004800048000510005700048000480005400067000480004800054000670004800048000550005300048000480005400069000480004800051000550004800048000510005500048000480005100057000480004800054000670004800048000540006700048000480005500053000480004800054000690004800048000510005700048000480005100055000480004800051000570004800048000540006700048000480005400067000480004800055000530004800048000540006900048000480005200067000480004800051000550004800048000510005700048000480005400067000480004800054000670004800048000550005300048000480005400069000480004800052000670004800048000510005500048000480005100057000480004800054000670004800048000540006700048000480005500053000480004800054000690004800048000530005300048000480005100055000480004800051000570004800048000540006700048000480005400067000480004800055000530004800048000540006900048000480005200069000480004800051000550004800048000510005700048000480005400067000480004800054000670004800048000550005300048000480005400069hihiHI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-NULL97HI-00370039006C006C0075006E003700370039006C006C0075006E003900370039006C006C0075006E004C00370039006C006C0075006E004C00370039006C006C0075006E005500370039006C006C0075006E004E00370039006C006C0075006E" + "'", str2.equalshihiHI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-NULL97HI-00370039006C006C0075006E003700370039006C006C0075006E003900370039006C006C0075006E004C00370039006C006C0075006E004C00370039006C006C0075006E005500370039006C006C0075006E004E00370039006C006C0075006E"));
    }

    @Test
    public void test357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test357");
        boolean boolean1 = strman.Strman.isUpperCase
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
    }

    @Test
    public void test358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test358");
        java.lang.String str1 = strman.Strman.swapCase("MDAwNzIwMDEwNTAwMTA0MDAxMDUwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwM00000000001100110000000000110101000000000011001100000000001101010000000000110011000000000011010100000000001100110000000000110101000000000011001100000000001101010000000000110011000000000011010100000000001100110000000000110101TA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDExMDAwMTE3MDAxMDgwMDEwODAwMDU3MDAwNTUwMDEwNDAwMTA1MDAwMzM=");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "mdaWnZiWmdeWntaWmta0mdaXmduWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWm00000000001100110000000000110101000000000011001100000000001101010000000000110011000000000011010100000000001100110000000000110101000000000011001100000000001101010000000000110011000000000011010100000000001100110000000000110101ta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeXmdaWmte3mdaXmdGWmdeWodaWmdu3mdaWntuWmdeWndaWmta1mdaWmZm=" + "'", str1.equals("mdaWnZiWmdeWntaWmta0mdaXmduWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWm00000000001100110000000000110101000000000011001100000000001101010000000000110011000000000011010100000000001100110000000000110101000000000011001100000000001101010000000000110011000000000011010100000000001100110000000000110101ta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeXmdaWmte3mdaXmdGWmdeWodaWmdu3mdaWntuWmdeWndaWmta1mdaWmZm="));
    }

    @Test
    public void test359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test359");
        boolean boolean3 = strman.Strman.endsWith("IHI97HHI97HI48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101n-u-l-l97-n-n-u-lhi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-null97nnul-hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!null97-nnul", "tNvSBdK3BM51Ba==", true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test360");
        java.lang.String str2 = strman.Strman.repeathi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!000480004800048000480004800048000480004800048000490005500057000760007600085000780005500055000570007600076000850007800057000550005700076000760008500078001080005500057000760007600085000780010800055000570007600076000850007800117000550005700076000760008500078001100005500057000760007600085000780004900048000490004800048000480004800048000480004800048000480004800048000480004900049000480004900048000480004900048000480004800048000480004800048000480004800048000490004800049000490004800049000480004800048000480004800048000480004800048000490004900048000490004800048000480004800048000480004800048000480004800048000480004900049000480004900048000480004900048000480004800048000480004800048000480004800049000490004800049000490004900048000480004800048000480004800048000480004800048000490004900049000480004900048000490004800048000480004800048000480004800048000480004900049000480004900049000480004800048000480004800048000480004800048000480004800049000490004800049000490004800048000480004800048000480004800048000480004800048000480004900049000490004800048000490004800048000480004800048000480004800048000480004800049000490004800049000490004900048000480004800048000480004800048000480004800049000490004800049000490004900048000480004800048000480004800048000480004800048000490004900048000490004900049000480004800048000480004800048000480004800048000480004900049000490004800049000480004900048000480004800048000480004800048000480004800049000490004800049000490004800048", 6432);
    }

    @Test
    public void test361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test361");
        java.util.Optional<java.lang.String> strOptional1 = strman.Strman.head("000000000179-l-l-u-n779-l-l-u-n979-l-l-u-nl79-l-l-u-nl79-l-l-u-nu79-l-l-u-nn79-l-l-u-n10100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100");
        org.junit.Assert.assertNotNull(strOptional1);
    }

    @Test
    public void test362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test362");
        java.lang.String str1 = strman.Strman.htmlEncode("00340038003400380035003100350031");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull" + "'", str1.equals("nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull"));
    }

    @Test
    public void test363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test363");
        java.util.Optional<java.lang.String> strOptional2 = strman.Strman.at("n-u-l-l97-n-n-u-lhi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-null97nnul-hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!null97-nnul", (int) (short) 10);
        org.junit.Assert.assertNotNull(strOptional2);
    }

    @Test
    public void test364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test364");
        boolean boolean3 = strman.Strman.isEnclosedBetween("!HI!HI!HI!6nullih79llun!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ihmw-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-null97nnul", "00300030003100310030003000300031003100370030003000310030003800300030003100300038003000300030003500370030003000300035003500300030003000370038003000300031003100300030003000310031003700300030003100300038nullnullnullnullnullnullnullnullnullnull");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test365");
        java.lang.String str4 = strman.Strman.replace("nullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULL", "ymxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TTAwMDAwMDAwNTUwMDAwMDAwMDU3MDAwMDAwMDA3NjAwMDAwMDAwNzYwMDAwMDAwMDg1MDAwMDAwMDA3ODAwMDAwMDAwNTUwMDAwMDAwMDU1MDAwMDAwMDA1NzAwMDAwMDAwNzYwMDAwMDAwMDc2MDAwMDAwMDA4NTAwMDAwMDAwNzgwMDAwMDAwMDU3MDAwMDAwMDA1NTAwMDAwMDAwNTcwMDAwMDAwMDc2MDAwMDAwMDA3NjAwMDAwMDAwODUwMDAwMDAwMDc4MDAwMDAwMDEwODAwMDAwMDAwNTUwMDAwMDAwMDU3MDAwMDAwMDA3NjAwMDAwMDAwNzYwMDAwMDAwMDg1MDAwMDAwMDA3ODAwMDAwMDAxMDgwMDAwMDAwMDU1MDAwMDAwMDA1NzAwMDAwMDAwNzYwMDAwMDAwMDc2MDAwMDAwMDA4NTAwMDAwMDAwNzgwMDAwMDAwMTE3MDAwMDAwMDA1NTAwMDAwMDAwNTcwMDAwMDAwMDc2MDAwMDAwMDA3NjAwMDAwMDAwODUwMDAwMDAwMDc4MDAwMDAwMDExMDAwMDAwMDAwNTUwMDAwMDAwMDU3MDAwMDAwMDA3NjAwMDAwMDAwNzYwMDAwMDAwMDg1MDAwMDAwMDA3OGhpaGk=", "Null97nnul1097null971097nULL97NNULNullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullhi-hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101", false);
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "nullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULL" + "'", str4.equals("nullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULL"));
    }

    @Test
    public void test366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test366");
        boolean boolean2 = strman.Strman.inequal("n00108001170011000078000550005700108001080011700110u00108001170011000078000550005700108001080011700110l00108001170011000078000550005700108001080011700110l", "aWhpX2hoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFudWxsOTdudWxsOTduVUxMOTc=");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
    }

    @Test
    public void test367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test367");
        java.lang.String str3 = strman.Strman.leftPad("006900680069005f006800680069002dhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!", "sGloaWloaV9oaGlfaGk0ODQ4NTE1NTQ4NDg1MTU3NDg0ODU0OTk0ODQ4NTQ5OTQ4NDg1NTUzNDg0ODU0MTAxNDg0ODUxNTU0ODQ4NTE1NTQ4NDg1MTU3NDg0ODU0OTk0ODQ4NTQ5OTQ4NDg1NTUzNDg0ODU0MTAxNDg0ODUxNTc0ODQ4NTE1NTQ4NDg1MTU3NDg0ODU0OTk0ODQ4NTQ5OTQ4NDg1NTUzNDg0ODU0MTAxNDg0ODUyOTk0ODQ4NTE1NTQ4NDg1MTU3NDg0ODU0OTk0ODQ4NTQ5OTQ4NDg1NTUzNDg0ODU0MTAxNDg0ODUyOTk0ODQ4NTE1NTQ4NDg1MTU3NDg0ODU0OTk0ODQ4NTQ5OTQ4NDg1NTUzNDg0ODU0MTAxNDg0ODUzNTM0ODQ4NTE1NTQ4NDg1MTU3NDg0ODU0OTk0ODQ4NTQ5OTQ4NDg1NTUzNDg0ODU0MTAxNDg0ODUyMTAxNDg0ODUxNTU0ODQ4NTE1NzQ4NDg1NDk5NDg0ODU0OTk0ODQ4NTU1MzQ4NDg1NDEwMQ==nULL97NNUL", 560);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "006900680069005f006800680069002dhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!" + "'", str3.equals("006900680069005f006800680069002dhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!"));
    }

    @Test
    public void test368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test368");
        java.lang.String str1 = strman.Strman.toStudlyCase("nnullhi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006eunullhi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006elnullhi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006elnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "NnullhiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiNull97hi00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006eunullhiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiNull97hi00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006elnullhiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiNull97hi00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006elnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull" + "'", str1.equals("NnullhiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiNull97hi00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006eunullhiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiNull97hi00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006elnullhiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiNull97hi00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006elnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull"));
    }

    @Test
    public void test369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test369");
        java.lang.String str1 = strman.Strman.leftTrim
        org.junit.Assert.assertTrue("'" + strstr1.equals
    }

    @Test
    public void test370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test370");
        java.lang.String[] strArray3 = strman.Strman.lines("null97Nnull97Unull97Lnull97Lnull979null977null97");
        boolean boolean5 = strman.Strman.containsAny("00000000011101010000000001101100", strArray3, false);
        java.lang.String str6 = strman.Strman.prepend("006E0075006C006C00390037HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!", strArray3);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "null97Nnull97Unull97Lnull97Lnull979null977null97006E0075006C006C00390037HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!" + "'", str6.equals("null97Nnull97Unull97Lnull97Lnull979null977null97006E0075006C006C00390037HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!"));
    }

    @Test
    public void test371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test371");
        java.lang.String[] strArray3 = strman.Strman.lines("null");
        java.util.List<java.lang.String> strList4 = strman.Strman.zip(strArray3);
        boolean boolean6 = strman.Strman.containsAllstrArray3, false);
        java.lang.String str7 = strman.Strman.prependArray("ihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi HHi-hinull97nnul", strArray3);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(strList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + str7 + "' != '" + "nullihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi HHi-hinull97nnul" + "'", str7.equals("nullihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi HHi-hinull97nnul"));
    }

    @Test
    public void test372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test372");
        java.lang.String str1 = strman.Strman.transliterate("Null97Nnull97Unull97Lnull97Lnull979null977null97NULL97Nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "Null97Nnull97Unull97Lnull97Lnull979null977null97NULL97Nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull" + "'", str1.equals("Null97Nnull97Unull97Lnull97Lnull979null977null97NULL97Nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull"));
    }

    @Test
    public void test373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test373");
        java.lang.String str1 = strman.Strman.leftTrim
        org.junit.Assert.assertTrue("'" + strstr1.equals
    }

    @Test
    public void test374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test374");
        java.lang.String str1 = strman.Strman.upperFirst("nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull&UnderBar;nullMDAxMTAxMTAwMDAwMDAwMDEwMTAxMTEwMDAwMDAwMDAwMTExMDExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDAxMDAxMTEwMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAxMDEwMTExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDEwMDEwMTEwMDAwMDAwMDAwMDAxMDExMDAwMDAwMDAwMTAxMTAxMDAwMDAwMDAwMDEwMDEwMTEwMDAwMDAwMDAwMDAxMDExMDAwMDAwMDAwaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaS1oihi-hhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "Nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull&UnderBar;nullMDAxMTAxMTAwMDAwMDAwMDEwMTAxMTEwMDAwMDAwMDAwMTExMDExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDAxMDAxMTEwMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAxMDEwMTExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDEwMDEwMTEwMDAwMDAwMDAwMDAxMDExMDAwMDAwMDAwMTAxMTAxMDAwMDAwMDAwMDEwMDEwMTEwMDAwMDAwMDAwMDAxMDExMDAwMDAwMDAwaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaS1oihi-hhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!" + "'", str1.equals("Nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull&UnderBar;nullMDAxMTAxMTAwMDAwMDAwMDEwMTAxMTEwMDAwMDAwMDAwMTExMDExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDAxMDAxMTEwMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAxMDEwMTExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDEwMDEwMTEwMDAwMDAwMDAwMDAxMDExMDAwMDAwMDAwMTAxMTAxMDAwMDAwMDAwMDEwMDEwMTEwMDAwMDAwMDAwMDAxMDExMDAwMDAwMDAwaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaS1oihi-hhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!"));
    }

    @Test
    public void test375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test375");
        java.lang.String str1 = strman.Strman.toCamelCase("771228561null97");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "771228561null97" + "'", str1.equals("771228561null97"));
    }

    @Test
    public void test376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test376");
        java.lang.String[] strArray1 = null;
        java.lang.String str2 = strman.Strman.format("Awhpx2g=", strArray1);
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "Awhpx2g=" + "'", str2.equals("Awhpx2g="));
    }

    @Test
    public void test377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test377");
        boolean boolean4 = strman.Strman.endsWith("nIHI97HHI97HI48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101uIHI97HHI97HI48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101lIHI97HHI97HI48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101l10145848435558484994584849945848475158484551584841012584841014584843555848499458484994584847515848455158484353584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484751584841014584843555848499458484994584847515848455158484551584841014584843555848499458484994584847515848455158484ih-ihh-ih-i", "ih", 256, false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
    }

    @Test
    public void test378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test378");
        try {
            java.lang.String str3 = strman.Strman.decode("HihihihiNULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL979710", 5, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
        }
    }

    @Test
    public void test379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test379");
        java.lang.String str1 = strman.Strman.removeSpaces("nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull&_under_bar;null_m_d_ax_m_t_ax_m_t_aw_m_d_aw_m_d_aw_m_d_ew_m_t_ax_m_t_ew_m_d_aw_m_d_aw_m_d_aw_m_t_ex_m_d_ex_m_d_aw_m_d_aw_m_d_aw_m_d_ex_m_t_ax_m_t_aw_m_d_aw_m_d_aw_m_d_ex_m_t_ax_m_t_aw_m_d_aw_m_d_aw_m_d_ax_m_d_ax_m_t_ew_m_d_aw_m_d_aw_m_d_aw_m_d_ax_m_t_ax_m_t_aw_m_d_aw_m_d_aw_m_d_aw_m_t_ew_m_t_ew_m_d_aw_m_d_aw_m_d_ax_m_d_ew_m_t_ex_m_d_aw_m_d_aw_m_d_aw_m_d_ex_m_t_ax_m_t_aw_m_d_aw_m_d_aw_m_d_ew_m_d_ew_m_t_ew_m_d_aw_m_d_aw_m_d_aw_m_d_ax_m_d_ex_m_d_aw_m_d_aw_m_d_aw_m_t_ax_m_t_ax_m_d_aw_m_d_aw_m_d_aw_m_d_ew_m_d_ew_m_t_ew_m_d_aw_m_d_aw_m_d_aw_m_d_ax_m_d_ex_m_d_aw_m_d_aw_m_d_awa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_s1oihi\\_hhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull&_under_bar;null_m_d_ax_m_t_ax_m_t_aw_m_d_aw_m_d_aw_m_d_ew_m_t_ax_m_t_ew_m_d_aw_m_d_aw_m_d_aw_m_t_ex_m_d_ex_m_d_aw_m_d_aw_m_d_aw_m_d_ex_m_t_ax_m_t_aw_m_d_aw_m_d_aw_m_d_ex_m_t_ax_m_t_aw_m_d_aw_m_d_aw_m_d_ax_m_d_ax_m_t_ew_m_d_aw_m_d_aw_m_d_aw_m_d_ax_m_t_ax_m_t_aw_m_d_aw_m_d_aw_m_d_aw_m_t_ew_m_t_ew_m_d_aw_m_d_aw_m_d_ax_m_d_ew_m_t_ex_m_d_aw_m_d_aw_m_d_aw_m_d_ex_m_t_ax_m_t_aw_m_d_aw_m_d_aw_m_d_ew_m_d_ew_m_t_ew_m_d_aw_m_d_aw_m_d_aw_m_d_ax_m_d_ex_m_d_aw_m_d_aw_m_d_aw_m_t_ax_m_t_ax_m_d_aw_m_d_aw_m_d_aw_m_d_ew_m_d_ew_m_t_ew_m_d_aw_m_d_aw_m_d_aw_m_d_ax_m_d_ex_m_d_aw_m_d_aw_m_d_awa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_s1oihi\\_hhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!" + "'", str1.equals("nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull&_under_bar;null_m_d_ax_m_t_ax_m_t_aw_m_d_aw_m_d_aw_m_d_ew_m_t_ax_m_t_ew_m_d_aw_m_d_aw_m_d_aw_m_t_ex_m_d_ex_m_d_aw_m_d_aw_m_d_aw_m_d_ex_m_t_ax_m_t_aw_m_d_aw_m_d_aw_m_d_ex_m_t_ax_m_t_aw_m_d_aw_m_d_aw_m_d_ax_m_d_ax_m_t_ew_m_d_aw_m_d_aw_m_d_aw_m_d_ax_m_t_ax_m_t_aw_m_d_aw_m_d_aw_m_d_aw_m_t_ew_m_t_ew_m_d_aw_m_d_aw_m_d_ax_m_d_ew_m_t_ex_m_d_aw_m_d_aw_m_d_aw_m_d_ex_m_t_ax_m_t_aw_m_d_aw_m_d_aw_m_d_ew_m_d_ew_m_t_ew_m_d_aw_m_d_aw_m_d_aw_m_d_ax_m_d_ex_m_d_aw_m_d_aw_m_d_aw_m_t_ax_m_t_ax_m_d_aw_m_d_aw_m_d_aw_m_d_ew_m_d_ew_m_t_ew_m_d_aw_m_d_aw_m_d_aw_m_d_ax_m_d_ex_m_d_aw_m_d_aw_m_d_awa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_s1oihi\\_hhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!"));
    }

    @Test
    public void test380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test380");
        java.lang.String[] strArray2 = strman.Strman.splitih79llun!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ihbnVsbDk3bm51bDEwOTdudWxsOTcxMDk3");
        org.junit.Assert.assertNotNull(strArray2);
    }

    @Test
    public void test381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test381");
        java.lang.String str1 = strman.Strman.rightTrim("nullnull97nnulnull97");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "nullnull97nnulnull97" + "'", str1.equals("nullnull97nnulnull97"));
    }

    @Test
    public void test382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test382");
        java.lang.String str1 = strman.Strman.htmlEncode("MDAwMDAwMDA1NTAwMDAwMDAwNTcwMDAwMDAwMDc2MDAwMDAwMDA3NjAwMDAwMDAwODUwMDAwMDAwMDc4MDAwMDAwMDA1NTAwMDAwMDAwNTUwMDAwMDAwMDU3MDAwMDAwMDA3NjAwMDAwMDAwNzYwMDAwMDAwMDg1MDAwMDAwMDA3ODAwMDAwMDAwNTcwMDAwMDAwMDU1MDAwMDAwMDA1NzAwMDAwMDAwNzYwMDAwMDAwMDc2MDAwMDAwMDA4NTAwMDAwMDAwNzgwMDAwMDAwMTA4MDAwMDAwMDA1NTAwMDAwMDAwNTcwMDAwMDAwMDc2MDAwMDAwMDA3NjAwMDAwMDAwODUwMDAwMDAwMDc4MDAwMDAwMDEwODAwMDAwMDAwNTUwMDAwMDAwMDU3MDAwMDAwMDA3NjAwMDAwMDAwNzYwMDAwMDAwMDg1MDAwMDAwMDA3ODAwMDAwMDAxMTcwMDAwMDAwMDU1MDAwMDAwMDA1NzAwMDAwMDAwNzYwMDAwMDAwMDc2MDAwMDAwMDA4NTAwMDAwMDAwNzgwMDAwMDAwMTEwMDAwMDAwMDA1NTAwMDAwMDAwNTcwMDAwMDAwMDc2MDAwMDAwMDA3NjAwMDAwMDAwODUwMDAwMDAwMDc4");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull" + "'", str1.equals("nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull"));
    }

    @Test
    public void test383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test383");
        boolean boolean2 = strman.Strman.contains("uVHbslzNO5WdsxWO3Ulb1xGb5cDTuVHbslzNM5WdsxWO3kjb1xGb5czNuVHbslzN", "000720010500092000320010400105000000hi!hi!97005500hi!hi!97000000hi!hi!97570000hi!hi!97000076hi!hi!97000000hi!hi!97007600hi!hi!97000000hi!hi!97850000hi!hi!97000078hi!hi!97000000hi!hi!97005500hi!hi!97000000hi!hi!97550000hi!hi!97000057hi!hi!97000000hi!hi!97007600hi!hi!97000000hi!hi!97760000hi!hi!97000085hi!hi!97000000hi!hi!97007800hi!hi!97000000hi!hi!97570000hi!hi!97000055hi!hi!97000000hi!hi!97005700hi!hi!97000000hi!hi!97760000hi!hi!97000076hi!hi!97000000hi!hi!97008500hi!hi!97000000hi!hi!97780000hi!hi!97000108hi!hi!97000000hi!hi!97005500hi!hi!97000000hi!hi!97570000hi!hi!97000076hi!hi!97000000hi!hi!97007600hi!hi!97000000hi!hi!97850000hi!hi!97000078hi!hi!97000000hi!hi!97010800hi!hi!97000000hi!hi!97550000hi!hi!97000057hi!hi!97000000hi!hi!97007600hi!hi!97000000hi!hi!97760000hi!hi!97000085hi!hi!97000000hi!hi!97007800hi!hi!97000001hi!hi!97170000hi!hi!97000055hi!hi!97000000hi!hi!97005700hi!hi!97000000hi!hi!97760000hi!hi!97000076hi!hi!97000000hi!hi!97008500hi!hi!97000000hi!hi!97780000hi!hi!97000110hi!hi!97000000hi!hi!97005500hi!hi!97000000hi!hi!97570000hi!hi!97000076hi!hi!97000000hi!hi!97007600hi!hi!97000000hi!hi!97850000hi!hi!97000078");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test384");
        java.lang.String[] strArray6 = strman.Strman.chars("null");
        boolean boolean7 = strman.Strman.containsAny("null97Nnull97Unull97Lnull97Lnull979null977null97", strArray6);
        java.lang.String str8 = strman.Strman.prepend("nULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULL", strArray6);
        boolean boolean9 = strman.Strman.containsAll("hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97histrArray6);
        java.lang.String str10 = strman.Strman.format("0031006c0075006e006e00370039006c006c0075006e", strArray6);
        boolean boolean12 = strman.Strman.containsAnystrArray6, false);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + str8 + "' != '" + "nullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULL" + "'", str8.equals("nullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULL"));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + str10 + "' != '" + "0031006c0075006e006e00370039006c006c0075006e" + "'", str10.equals("0031006c0075006e006e00370039006c006c0075006e"));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test385");
        java.lang.String str3 = strman.Strman.truncate("LunN79llunnull97null97Nnull97Unull97Lnull97Lnull979null977null97", 402, "000780011700108001080005700055000780011000117001080010800057000550008500110001170010800108000570005500076001100011700108001080005700055000760011000117001080010800057000550005700110001170010800108000570005500055001100011700108001080005700055000000000110100000000000011010010000000000100001");
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "LunN79llunnull97null97Nnull97Unull97Lnull97Lnull979null977null97" + "'", str3.equals("LunN79llunnull97null97Nnull97Unull97Lnull97Lnull979null977null97"));
    }

    @Test
    public void test386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test386");
        java.lang.String str1 = strman.Strman.capitalize("N ull97 nnulhi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi null97hi null97nnulhi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi null97hi null97nnul");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "N ull97 nnulhi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi null97hi null97nnulhi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi null97hi null97nnul" + "'", str1.equals("N ull97 nnulhi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi null97hi null97nnulhi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi null97hi null97nnul"));
    }

    @Test
    public void test387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test387");
        java.lang.String str3 = strman.Strman.rightPad("Tlvmtdk3", "Hibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mnull9700370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e", 2);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "Tlvmtdk3" + "'", str3.equals("Tlvmtdk3"));
    }

    @Test
    public void test388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test388");
        int int4 = strman.Strman.indexOf("lunN79llunnull97null97Nnull97Unull97Lnull97Lnull979null977null97", "1null97null97Nnull97Unull97Lnull97Lnull979null977null97", 0, false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
    }

    @Test
    public void test389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test389");
        java.util.Optional<java.lang.String> strOptional2 = strman.Strman.firstnull97null97Nnull97Unull97Lnull97Lnull979null977null97Hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!Nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull", 7);
        org.junit.Assert.assertNotNull(strOptional2);
    }

    @Test
    public void test390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test390");
        boolean boolean2 = strman.Strman.contains("hihiHI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-NULL97HI-00370039006C006C0075006E003700370039006C006C0075006E003900370039006C006C0075006E004C00370039006C006C0075006E004C00370039006C006C0075006E005500370039006C006C0075006E004E00370039006C006C0075006EHiHi0000000001001000000000000110100197HiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiNull97hi00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e1097", "IhiH");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
    }

    @Test
    public void test391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test391");
        java.lang.String str1 = strman.Strman.dasherize("0000000001001000000000000110100100680069002d
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "0000000001001000000000000110100100680069002d006800690034003800340038003500310035003500340038003400380035003100350037003400380034003800350034003900390034003800340038003500340039003900340038003400380035003500350033003400380034003800350034003100300031003400380034003800350031003500350034003800340038003500310035003500340038003400380035003100350037003400380034003800350034003900390034003800340038003500340039003900340038003400380035003500350033003400380034003800350034003100300031003400380034003800350031003500370034003800340038003500310035003500340038003400380035003100350037003400380034003800350034003900390034003800340038003500340039003900340038003400380035003500350033003400380034003800350034003100300031003400380034003800350032003900390034003800340038003500310035003500340038003400380035003100350037003400380034003800350034003900390034003800340038003500340039003900340038003400380035003500350033003400380034003800350034003100300031003400380034003800350032003900390034003800340038003500310035003500340038003400380035003100350037003400380034003800350034003900390034003800340038003500340039003900340038003400380035003500350033003400380034003800350034003100300031003400380034003800350033003500330034003800340038003500310035003500340038003400380035003100350037003400380034003800350034003900390034003800340038003500340039003900340038003400380035003500350033003400380034003800350034003100300031003400380034003800350032003100300031003400380034003800350031003500350034003800340038003500310035003700340038003400380035003400390039003400380034003800350034003900390034003800340038003500350035003300340038003400380035003400310030003100300030003000300030003000300030003000310030003000310030003000300030003000300030003000300030003000300031003100300031003000300031" + "'", str1.equals("0000000001001000000000000110100100680069002d
    }

    @Test
    public void test392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test392");
        boolean boolean2 = strman.Strman.contains("hihiihi_hhi_hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101", "hiHinull97nnulnull97null97nnull97unull97lnull97lnull979null977null97hihihiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiNull97hiNullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test393");
        java.lang.String str1 = strman.Strman.leftTrim("79llune779llun979llunl_79llunl_79llunu_79llunn_79llun79llun001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000hi!l_u_n_n_79l_l_u_n_lunn_79llun79llun1");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "79llune779llun979llunl_79llunl_79llunu_79llunn_79llun79llun001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000hi!l_u_n_n_79l_l_u_n_lunn_79llun79llun1" + "'", str1.equals("79llune779llun979llunl_79llunl_79llunu_79llunn_79llun79llun001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000hi!l_u_n_n_79l_l_u_n_lunn_79llun79llun1"));
    }

    @Test
    public void test394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test394");
        try {
            java.lang.String str3 = strman.Strman.slice("lun-n79llunnull97null97-nnull97-unull97-lnull97-lnull979null977null97", 404, 202);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 202");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        }
    }

    @Test
    public void test395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test395");
        try {
            java.lang.String str3 = strman.Strman.decode("00370039006c006c0075006e0068006900680069003700370039006c006c0075006e003900370039006c006c0075006e002d006c00370039006c006c0075006e002d006c00370039006c006c0075006e002d007500370039006c006c0075006e002d006e00370039006c006c0075006e002d0068006900680069", 330, 402);
            org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException; message: radix 402 greater than Character.MAX_RADIX");
        } catch (java.lang.NumberFormatException e) {
        }
    }

    @Test
    public void test396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test396");
        java.lang.String str1 = strman.Strman.decEncode("NULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULL");
        org.junit.Assert.assertTrue("'" + strstr1.equals("00078000850007600076000780008500076000760007800085000760007600078000850007600076000780008500076000760007800085000760007600078000850007600076000780008500076000760007800085000760007600078000850007600076000780008500076000760007800085000760007600078000850007600076000780008500076000760007800085000760007600078000850007600076000780008500076000760007800085000760007600078000850007600076000780008500076000760007800085000760007600078000850007600076000780008500076000760007800085000760007600078000850007600076"));
    }

    @Test
    public void test397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test397");
        java.lang.String[] strArray2 = strman.Strman.chars("NULL97N Ullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull");
        java.lang.String[] strArray3 = strman.Strman.removeEmptyStrings(strArray2);
        java.lang.String str4 = strman.Strman.prepend("1097nullnull97nnulhi", strArray2);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "NULL97N Ullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull1097nullnull97nnulhi" + "'", str4.equals("NULL97N Ullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull1097nullnull97nnulhi"));
    }

    @Test
    public void test398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test398");
        java.lang.String[] strArray2 = strman.Strman.lines("hi!");
        boolean boolean4 = strman.Strman.containsAllstrArray2, true);
        java.lang.Class<?> wildcardClass5 = strArray2.getClass();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test399");
        java.lang.String str3 = strman.Strman.truncate("3kdtmV lT hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS", 6432, "null97n-ullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull");
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "3kdtmV lT hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS" + "'", str3.equals("3kdtmV lT hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS"));
    }

    @Test
    public void test400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test400");
        java.lang.String str3 = strman.Strman.leftPad("TnVsbDk3Tm51bGw5N1VudWxsOTdMbnVsbDk3TG51bGw5NzludWxsOTc3bnVsbDk3TlVMTDk3", "-1hi-hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101ihiH", 1243);
    }

    @Test
    public void test401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test401");
        java.lang.String[] strArray2 = strman.Strman.lines("Hihihihinull97nnull97unull97lnull97lnull979null977null979710");
        java.lang.String str4 = strman.Strman.join(strArray2, "000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97_nnull97_unull97_lnull97_lnull979null977null97_hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!");
        boolean boolean6 = strman.Strman.containsAll("0004900108001170011000110000550005700108001080011700110", strArray2, false);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Hihihihinull97nnull97unull97lnull97lnull979null977null979710" + "'", str4.equals("Hihihihinull97nnull97unull97lnull97lnull979null977null979710"));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test402");
        java.lang.String[] strArray2 = strman.Strman.split("Null97Nnull97Unull97Lnull97Lnull979null977null
        java.lang.String[] strArray3 = strman.Strman.removeEmptyStrings(strArray2);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(strArray3);
    }

    @Test
    public void test403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test403");
        java.lang.String str1 = strman.Strman.removeSpaces("Nnullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037hihiullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "Nnullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037hihiullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih" + "'", str1.equals("Nnullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037hihiullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih"));
    }

    @Test
    public void test404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test404");
        java.lang.String str1 = strman.Strman.swapCase("5500075000801008010071100011005500055000750008010080100711000110075000550007500080100801007110001100670005500075000801008010071100011006700055000750008010080100711000110058000550007500080100801007110001100870005500075000801008010071100870003kDTMVlThkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEs006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037Null");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "5500075000801008010071100011005500055000750008010080100711000110075000550007500080100801007110001100670005500075000801008010071100011006700055000750008010080100711000110058000550007500080100801007110001100870005500075000801008010071100870003KdtmvLtHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKeS006E0075006C006C00390037006E0075006C006C00390037006E0075006C006C00390037006E0075006C006C00390037006E0075006C006C00390037006E0075006C006C00390037006E0075006C006C00390037006E0075006C006C00390037006E0075006C006C00390037006E0075006C006C00390037nULL" + "'", str1.equals("5500075000801008010071100011005500055000750008010080100711000110075000550007500080100801007110001100670005500075000801008010071100011006700055000750008010080100711000110058000550007500080100801007110001100870005500075000801008010071100870003KdtmvLtHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKesHKeS006E0075006C006C00390037006E0075006C006C00390037006E0075006C006C00390037006E0075006C006C00390037006E0075006C006C00390037006E0075006C006C00390037006E0075006C006C00390037006E0075006C006C00390037006E0075006C006C00390037006E0075006C006C00390037nULL"));
    }

    @Test
    public void test405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test405");
        java.lang.String[] strArray5 = strman.Strman.lines("hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!");
        java.lang.String str6 = strman.Strman.prepend("null97", strArray5);
        java.util.List<java.lang.String> strList7 = strman.Strman.zip(strArray5);
        boolean boolean9 = strman.Strman.containsAll("Hi!hi!", strArray5, true);
        java.lang.String[] strArray10 = strman.Strman.removeEmptyStrings(strArray5);
        java.lang.String str11 = strman.Strman.appendArray("7210533", strArray5);
        boolean boolean13 = strman.Strman.containsAny("0004800048000480005200053000480004800049000490005500048000480004800052000530004800048000490004800056NULL97NNUL!ih", strArray5, true);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97" + "'", str6.equals("hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97"));
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + str11 + "' != '" + "7210533hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!" + "'", str11.equals("7210533hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!"));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test406");
        java.lang.String[] strArray2 = strman.Strman.lines("lunN79llunnull97null97Nnull97Unull97Lnull97Lnull979null977null97nULL97NNULNullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull");
        java.util.Optional<java.lang.String> strOptional3 = strman.Strman.trimStart("Ihi97hhi97hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101", strArray2);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(strOptional3);
    }

    @Test
    public void test407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test407");
        java.lang.String str1 = strman.Strman.slugify("006e0075006c006c0039003700390037");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "006e0075006c006c0039003700390037" + "'", str1.equals("006e0075006c006c0039003700390037"));
    }

    @Test
    public void test408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test408");
        long long4 = strman.Strman.countSubstr("001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000ihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi_h", "hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e", true, true);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
    }

    @Test
    public void test409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test409");
        java.util.Optional<java.lang.String> strOptional1 = strman.Strman.trimEnd("nullnullhihi");
        org.junit.Assert.assertNotNull(strOptional1);
    }

    @Test
    public void test410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test410");
        java.lang.String[] strArray3 = strman.Strman.chars("null");
        java.lang.String[] strArray4 = strman.Strman.removeEmptyStrings(strArray3);
        boolean boolean6 = strman.Strman.containsAny("00300030003100310030003000300031003100370030003000310030003800300030003100300038003000300030003500370030003000300035003500300030003000370038003000300031003100300030003000310031003700300030003100300038", strArray4, true);
        boolean boolean8 = strman.Strman.containsAll("0031006c0075006e006e00370039006c006c0075006e", strArray4, false);
        java.lang.String str10 = strman.Strman.join(strArray4, "null97Nnul");
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + str10 + "' != '" + "nnull97Nnulunull97Nnullnull97Nnull" + "'", str10.equals("nnull97Nnulunull97Nnullnull97Nnull"));
    }

    @Test
    public void test411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test411");
        java.lang.String str3 = strman.Strman.encode("nullhi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e0000000001001000000000000110100100680069002d0068006900340038003400380035003100350035003400380034003800350031003500370034003800340038003500340039003900340038003400380035003400390039003400380034003800350035003500330034003800340038003500340031003000310034003800048000480004800048000490011200048000480004800048000490011400048000480004800048000510010500048000480004800048000510010500048000480004800048000510011400048000480004800048000510010700048000480004800048000490011200048000480004800048000490011200048000480004800048000490011400048000480004800048000510010500048000480004800048000510010500048000480004800048000510011400048000480004800048000510010700048000480004800048000490011400048000480004800048000490011200048000480004800048000490011400048000480004800048000510010500048000480004800048000510010500048000480004800048000510011400048000480004800048000510010700048000480004800048000510010500048000480004800048000490011200048000480004800048000490011400048000480004800048000510010500048000480004800048000510010500048000480004800048000510011400048000480004800048000510010700048000480004800048000510010500048000480004800048000490011200048000480004800048000490011400048000480004800048000510010500048000480004800048000510010500048000480004800048000510011400048000480004800048000510010700048000480004800048000510011400048000480004800048000490011200048000480004800048000490011400048000480004800048000510010500048000480004800048000510010500048000480004800048000510011400048000480004800048000510010700048000480004800048000510010700048000480004800048000490011200048000480004800048000490011400048000480004800048000510010500048000480004800048000510010500048000480004800048000510011400048000480004800048000510010700048000480004800048000490011200048000480004800048000490011400048000480004800048000510010500048000480004800048000510010500048000480004800048000510011400048000480004800048000510010700048000480004800048000490011200048000480004800048000490011200048000480004800048000490011400048000480004800048000510010500048000480004800048000510010500048000480004800048000510011400048000480004800048000510010700048000480004800048000490011400048000480004800048000490011200048000480004800048000490011400048000480004800048000510010500048000480004800048000510010500048000480004800048000510011400048000480004800048000510010700048000480004800048000510010500048000480004800048000490011200048000480004800048000490011400048000480004800048000510010500048000480004800048000510010500048000480004800048000510011400048000480004800048000510010700048000480004800048000510010500048000480004800048000490011200048000480004800048000490011400048000480004800048000510010500048000480004800048000510010500048000480004800048000510011400048000480004800048000510010700048000480004800048000510011400048000480004800048000490011200048000480004800048000490011400048000480004800048000510010500048000480004800048000510010500048000480004800048000510011400048000480004800048000510010700048000480004800048000510010700048000480004800048000490011200048000480004800048000490011400048000480004800048000510010500048000480004800048000510010500048000480004800048000510011400048000480004800048000510010700340038003500310035003500340038003400380035003100350035003400380034003800350031003500370034003800340038003500340039003900340038003400380035003400390039003400380034003800350035003500330034003800340038003500340031003000310034003800340038003500310035003700340038003400380035003100350035003400380034003800350031003500370034003800340038003500340039003900340038003400380035003400390039003400380034003800350035003500330034003800340038003500340031003000310034003800340038003500320039003900340038003400380035003100350035003400380034003800350031003500370034003800340038003500340039003900340038003400380035003400390039003400380034003800350035003500330034003800340038003500340031003000310034003800340038003500320039003900340038003400380035003100350035003400380034003800350031003500370034003800340038003500340039003900340038003400380035003400390039003400380034003800350035003500330034003800340038003500340031003000310034003800340038003500330035003300340038003400380035003100350035003400380034003800350031003500370034003800340038003500340039003900340038003400380035003400390039003400380034003800350035003500330034003800340038003500340031003000310034003800340038003500320031003000310034003800340038003500310035003500340038003400380035003100350037003400380034003800350034003900390034003800340038003500340039003900340038003400380035003500350033003400380034003800350034003100300031003000300030003000300030003000300030003100300030003100300030003000300030003000300030003000300030003000310031003000310030003000314911011710810857551101171081085755781101171087885767657557878857633105104", 540, 5);
    }

    @Test
    public void test412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test412");
        java.lang.String str2 = strman.Strman.removeRight("nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull&UnderBar;nullMDAxMTAxMTAwMDAwMDAwMDEwMTAxMTEwMDAwMDAwMDAwMTExMDExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDAxMDAxMTEwMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAxMDEwMTExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDEwMDEwMTEwMDAwMDAwMDAwMDAxMDExMDAwMDAwMDAwMTAxMTAxMDAwMDAwMDAwMDEwMDEwMTEwMDAwMDAwMDAwMDAxMDExMDAwMDAwMDAwaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaS1oihi-hhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!00000000001100110000000000110101Ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 nq==", "hihiHI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-NULL97HI-00370039006C006C0075006E003700370039006C006C0075006E003900370039006C006C0075006E004C00370039006C006C0075006E004C00370039006C006C0075006E005500370039006C006C0075006E004E00370039006C006C0075006EHiHi0000000001001000000000000110100197HiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiNull97hi00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e1097");
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull&UnderBar;nullMDAxMTAxMTAwMDAwMDAwMDEwMTAxMTEwMDAwMDAwMDAwMTExMDExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDAxMDAxMTEwMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAxMDEwMTExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDEwMDEwMTEwMDAwMDAwMDAwMDAxMDExMDAwMDAwMDAwMTAxMTAxMDAwMDAwMDAwMDEwMDEwMTEwMDAwMDAwMDAwMDAxMDExMDAwMDAwMDAwaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaS1oihi-hhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!00000000001100110000000000110101Ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 nq==" + "'", str2.equals("nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull&UnderBar;nullMDAxMTAxMTAwMDAwMDAwMDEwMTAxMTEwMDAwMDAwMDAwMTExMDExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDAxMDAxMTEwMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAxMDEwMTExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDEwMDEwMTEwMDAwMDAwMDAwMDAxMDExMDAwMDAwMDAwMTAxMTAxMDAwMDAwMDAwMDEwMDEwMTEwMDAwMDAwMDAwMDAxMDExMDAwMDAwMDAwaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaS1oihi-hhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!00000000001100110000000000110101Ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 nq=="));
    }

    @Test
    public void test413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test413");
        java.lang.String str3 = strman.Strman.encode("hi!hi!ihnull006900680069005f006800680069002dhihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi006900680069005f006800680069002dhihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi006900680069005f006800680069002dhihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi", (int) (byte) 1, 1);
    }

    @Test
    public void test414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test414");
        java.lang.String str1 = strman.Strman.toSnakeCase("Hi!hi!NULL97");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "hi!hi!_n_u_l_l97" + "'", str1.equals("hi!hi!_n_u_l_l97"));
    }

    @Test
    public void test415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test415");
        java.lang.String str3 = strman.Strman.removeLeft("0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001050000000000hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hin_u_l_l97_n_n_u_l", true);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001050000000000hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!" + "'", str3.equals("0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001050000000000hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!"));
    }

    @Test
    public void test416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test416");
        java.lang.String str3 = strman.Strman.ensureRight("4,342", "79llun!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ihH ihI", true);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "4,34279llun!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ihH ihI" + "'", str3.equals("4,34279llun!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ihH ihI"));
    }

    @Test
    public void test417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test417");
        java.lang.String str1 = strman.Strman.htmlDecode("nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull&UnderBar;nullMDAxMTAxMTAwMDAwMDAwMDEwMTAxMTEwMDAwMDAwMDAwMTExMDExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDAxMDAxMTEwMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAxMDEwMTExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDEwMDEwMTEwMDAwMDAwMDAwMDAxMDExMDAwMDAwMDAwMTAxMTAxMDAwMDAwMDAwMDEwMDEwMTEwMDAwMDAwMDAwMDAxMDExMDAwMDAwMDAwaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaS1oihi\\-hhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "null" + "'", str1.equals("null"));
    }

    @Test
    public void test418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test418");
        java.lang.String str2 = strman.Strman.removeLeft("bl91X2xfbDk3X25fdWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxuLXUtbC1sOTctbi1uLXUtbA==", "00110110000000001010111000000000011101100000000001110110000000001110110000000000100111000000000000110110000000000011011000000000101011100000000001110110000000001001011000000000000101100000000010110100000000001001011000000000000101100000000033727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih");
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "bl91X2xfbDk3X25fdWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxuLXUtbC1sOTctbi1uLXUtbA==" + "'", str2.equals("bl91X2xfbDk3X25fdWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxuLXUtbC1sOTctbi1uLXUtbA=="));
    }

    @Test
    public void test419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test419");
        java.lang.String str2 = strman.Strman.removeLeft("HihiblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxM000000005500000000570000000076000000007600000000850000000078000000005500000000550000000057000000007600000000760000000085000000007800000000570000000055000000005700000000760000000076000000008500000000780000000108000000005500000000570000000076000000007600000000850000000078000000010800000000550000000057000000007600000000760000000085000000007800000001170000000055000000005700000000760000000076000000008500000000780000000110000000005500000000570000000076000000007600000000850000000078hihi", "null97nnul1097null971097null97nnulnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullhi-hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101");
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "HihiblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxM000000005500000000570000000076000000007600000000850000000078000000005500000000550000000057000000007600000000760000000085000000007800000000570000000055000000005700000000760000000076000000008500000000780000000108000000005500000000570000000076000000007600000000850000000078000000010800000000550000000057000000007600000000760000000085000000007800000001170000000055000000005700000000760000000076000000008500000000780000000110000000005500000000570000000076000000007600000000850000000078hihi" + "'", str2.equals("HihiblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxM000000005500000000570000000076000000007600000000850000000078000000005500000000550000000057000000007600000000760000000085000000007800000000570000000055000000005700000000760000000076000000008500000000780000000108000000005500000000570000000076000000007600000000850000000078000000010800000000550000000057000000007600000000760000000085000000007800000001170000000055000000005700000000760000000076000000008500000000780000000110000000005500000000570000000076000000007600000000850000000078hihi"));
    }

    @Test
    public void test420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test420");
        java.lang.String[] strArray2 = strman.Strman.words("n-u-l-l97-n-n-u-l", "hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97");
        java.lang.String str4 = strman.Strman.join(strArray2, "Nnullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037hihiullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih");
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "n-u-l-l97-n-n-u-l" + "'", str4.equals("n-u-l-l97-n-n-u-l"));
    }

    @Test
    public void test421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test421");
        java.lang.String str3 = strman.Strman.insertkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhTlVMTDk330", 199);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "str3.equals(""));
    }

    @Test
    public void test422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test422");
        java.util.Optional<java.lang.String> strOptional2 = strman.Strman.at("001040010500110001170010800108000570005500078001100011700108", 2088);
        org.junit.Assert.assertNotNull(strOptional2);
    }

    @Test
    public void test423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test423");
        java.lang.String str1 = strman.Strman.rightTrim
        org.junit.Assert.assertTrue("'" + strstr1.equals
    }

    @Test
    public void test424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test424");
        java.util.Optional<java.lang.String> strOptional2 = strman.Strman.first("ihi-hhi-hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101", 302);
        org.junit.Assert.assertNotNull(strOptional2);
    }

    @Test
    public void test425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test425");
        java.lang.String str2 = strman.Strman.ensureLeft("HI_HI", "hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi");
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hiHI_HI" + "'", str2.equals("hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hiHI_HI"));
    }

    @Test
    public void test426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test426");
        long long2 = strman.Strman.countSubstr("10145848435558484994584849945848475158484551584841012584841014584843555848499458484994584847515848455158484353584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484751584841014584843555848499458484994584847515848455158484551584841014584843555848499458484994584847515848455158484ih-ihh_ihI", "1null97null97_nnul_n_u_l_l97_n_n_u_l!ihhI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!");
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
    }

    @Test
    public void test427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test427");
        boolean boolean2 = strman.Strman.inequal("0000000001001000000000000110100100680069002d
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
    }

    @Test
    public void test428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test428");
        java.lang.String[] strArray3 = new java.lang.String[] {};
        java.util.List<java.lang.String> strList4 = strman.Strman.zip(strArray3);
        boolean boolean6 = strman.Strman.containsAny("", strArray3, true);
        boolean boolean7 = strman.Strman.containsAll("00390037", strArray3);
        java.lang.String str9 = strman.Strman.join(strArray3, "Ihi H");
        java.lang.String str10 = strman.Strman.prepend("!HI!HI!HI!6", strArray3);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(strList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + str9 + "' != '" + "" + "'", str9.equals(""));
        org.junit.Assert.assertTrue("'" + str10 + "' != '" + "!HI!HI!HI!6" + "'", str10.equals("!HI!HI!HI!6"));
    }

    @Test
    public void test429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test429");
        java.lang.String[] strArray2 = strman.Strman.chop("lunn79llu-nih79llu-ni-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-h", 2851);
        org.junit.Assert.assertNotNull(strArray2);
    }

    @Test
    public void test430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test430");
        java.lang.String[] strArray2 = strman.Strman.words("hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!1null97null97 nnul n u l l97 n n u l!ih!HI!HI!HI!6", "0004800048000480005200053000480004800049000490005500048000480004800052000530004800048000490004800056");
        org.junit.Assert.assertNotNull(strArray2);
    }

    @Test
    public void test431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test431");
        java.lang.String[] strArray2 = strman.Strman.chop("Hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null971-NULL97", 309);
        org.junit.Assert.assertNotNull(strArray2);
    }

    @Test
    public void test432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test432");
        int int4 = strman.Strman.lastIndexOf("hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!006e0075006c006c00390037null97", "", 505, true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 505 + "'", int4 == 505);
    }

    @Test
    public void test433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test433");
        java.lang.String str1 = strman.Strman.toCamelCase("NULL000780008500076000760005700055001100007800085000760007600057000550011700078000850007600076000570005500108000780008500076000760005700055001080007800085000760007600057000550005700078000850007600076000570005500055000780008500076000760005700055HINULLHI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111001000000000!IH79LLUN!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IHHI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "nULL000780008500076000760005700055001100007800085000760007600057000550011700078000850007600076000570005500108000780008500076000760005700055001080007800085000760007600057000550005700078000850007600076000570005500055000780008500076000760005700055HINULLHI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111001000000000!IH79LLUN!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IHHI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101" + "'", str1.equals("nULL000780008500076000760005700055001100007800085000760007600057000550011700078000850007600076000570005500108000780008500076000760005700055001080007800085000760007600057000550005700078000850007600076000570005500055000780008500076000760005700055HINULLHI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111001000000000!IH79LLUN!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IHHI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101"));
    }

    @Test
    public void test434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test434");
        java.lang.String str3 = strman.Strman.removeRight("hihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi_hllun779llun979llunl79llunl79llunu79llunn79llun79llun779llun979llunl79llunl79llunu79llunn79llun", false);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "hihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi_h" + "'", str3.equals("hihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi_h"));
    }

    @Test
    public void test435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test435");
        boolean boolean2 = strman.Strman.endsWith("0NULL971null97null97Nnull97Unull97Lnull97Lnull979null977null
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test436");
        boolean boolean1 = strman.Strman.isLowerCase("hihiihi_hhi_hi484851554848515748485499484854994848555348485410148485155484851554848515748485499484854994848555348485410148485157484851554848515748485499484854994848555348485410148485299484851554848515748485499484854994848555348485410148485299484851554848515748485499484854994848555348485410148485353484851554848515748485499484854994848555348485410148485210148485155484851574848549948485499484855534848541010000000001101001000000000110100000000000011010010000000001001000Null000780008500076000760005700055001100007800085000760007600057000550011700078000850007600076000570005500108000780008500076000760005700055001080007800085000760007600057000550005700078000850007600076000570005500055000780008500076000760005700055");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
    }

    @Test
    public void test437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test437");
        java.lang.String str3 = strman.Strman.rightPad("HiHinull97nnul", "hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL979710", (-1));
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "HiHinull97nnul" + "'", str3.equals("HiHinull97nnul"));
    }

    @Test
    public void test438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test438");
        java.lang.String str3 = strman.Strman.encode("iHIHHIHI484851554848515748485499484854994848555348485410148485155484851554848515748485499484854994848555348485410148485157484851554848515748485499484854994848555348485410148485299484851554848515748485499484854994848555348485410148485299484851554848515748485499484854994848555348485410148485353484851554848515748485499484854994848555348485410148485210148485155484851574848549948485499484855534848541019ihi h7null", 196, 199);
    }

    @Test
    public void test439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test439");
        java.util.Optional<java.lang.String> strOptional1 = strman.Strman.tail("0010500104001050003200072");
        org.junit.Assert.assertNotNull(strOptional1);
    }

    @Test
    public void test440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test440");
        java.lang.String str1 = strman.Strman.slugify("1-");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "1" + "'", str1.equals("1"));
    }

    @Test
    public void test441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test441");
        java.lang.String str1 = strman.Strman.dasherize("203");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "203" + "'", str1.equals("203"));
    }

    @Test
    public void test442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test442");
        java.lang.String str1 = strman.Strman.collapseWhitespace("33727333727333727333");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "33727333727333727333" + "'", str1.equals("33727333727333727333"));
    }

    @Test
    public void test443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test443");
        boolean boolean4 = strman.Strman.endsWith("hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hifalse);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test444");
        java.lang.String[] strArray3 = strman.Strman.words
        java.lang.String str4 = strman.Strman.prepend("ihi-h", strArray3);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + strihi-h" + "'", str4.equalsihi-h"));
    }

    @Test
    public void test445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test445");
        java.lang.String str3 = strman.Strman.removeLeft("0030003000310030003400300030003100300035006e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c0031003100300031003100370031003000380031003000380035003700350035003000300030003000300030003000300030003100370039004c004c0055004e003700370039004c004c0055004e003900370039004c004c0055004e006c00370039004c004c0055004e006c00370039004c004c0055004e007500370039004c004c0055004e006e00370039004c004c0055004etrue);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "0030003000310030003400300030003100300035006e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c0031003100300031003100370031003000380031003000380035003700350035003000300030003000300030003000300030003100370039004c004c0055004e003700370039004c004c0055004e003900370039004c004c0055004e006c00370039004c004c0055004e006c00370039004c004c0055004e007500370039004c004c0055004e006e00370039004c004c0055004estr3.equals("0030003000310030003400300030003100300035006e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c0031003100300031003100370031003000380031003000380035003700350035003000300030003000300030003000300030003100370039004c004c0055004e003700370039004c004c0055004e003900370039004c004c0055004e006c00370039004c004c0055004e006c00370039004c004c0055004e007500370039004c004c0055004e006e00370039004c004c0055004e
    }

    @Test
    public void test446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test446");
        java.lang.String str1 = strman.Strman.toKebabCase("0030003000300035003100300030003000350031003000300030003500350030003000300035003000300030003000350035003000300030003500310030003000300035003100300030003000350031003000300030003500350030003000300035003000300030003000350035003000300030003500310030003000300035003100300030003000350031003000300030003500350030003000300035003000300030003000350035003000300030003500310030003000300035003100300030003000350031");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "0030003000300035003100300030003000350031003000300030003500350030003000300035003000300030003000350035003000300030003500310030003000300035003100300030003000350031003000300030003500350030003000300035003000300030003000350035003000300030003500310030003000300035003100300030003000350031003000300030003500350030003000300035003000300030003000350035003000300030003500310030003000300035003100300030003000350031" + "'", str1.equals("0030003000300035003100300030003000350031003000300030003500350030003000300035003000300030003000350035003000300030003500310030003000300035003100300030003000350031003000300030003500350030003000300035003000300030003000350035003000300030003500310030003000300035003100300030003000350031003000300030003500350030003000300035003000300030003000350035003000300030003500310030003000300035003100300030003000350031"));
    }

    @Test
    public void test447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test447");
        java.lang.String[] strArray3 = strman.Strman.split("hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!5", "402");
        java.lang.String str4 = strman.Strman.format("!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ihllun", strArray3);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ihllun" + "'", str4.equals("!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ihllun"));
    }

    @Test
    public void test448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test448");
        java.lang.String str3 = strman.Strman.encode("33727333727333727333Null000780008500076000760005700055001100007800085000760007600057000550011700078000850007600076000570005500108000780008500076000760005700055001080007800085000760007600057000550005700078000850007600076000570005500055000780008500076000760005700055", (int) '#', 6432);
        org.junit.Assert.assertTrue("'" + strstr3.equals
    }

    @Test
    public void test449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test449");
        java.lang.String str2 = strman.Strman.removeLeft("001040010500110001170010800108000570005500078001100011700108", "HihiNULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97");
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "001040010500110001170010800108000570005500078001100011700108" + "'", str2.equals("001040010500110001170010800108000570005500078001100011700108"));
    }

    @Test
    public void test450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test450");
        try {
            java.lang.String str3 = strman.Strman.decode("nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullullnullnullnullnullnullnull", (int) (byte) -1, 230);
            org.junit.Assert.fail("Expected exception of type java.util.regex.PatternSyntaxException; message: Illegal repetition near index 6\r\n(?<=\\G.{-1})\r\n      ^");
        } catch (java.util.regex.PatternSyntaxException e) {
        }
    }

    @Test
    public void test451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test451");
        java.lang.String str3 = strman.Strman.removeRighttrue);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "0052005700490049004800490049005500490048005600490048005600530055005300530049004900480049004900550049004800560049004800560053005500530053005700530049004900480049004900480049004900550049004800560049004800560053005500530053005700530049004900550049004900480049004900550049004800560049004800560053005500530053005700530049004800560049004900480049004900550049004800560049004800560053005500530053005700530049004800560049004900480049004900550049004800560049004800560053005500530053005300550049004900480049004900550049004800560049004800560053005500530053005300530049004900480049004900550049004800560049004800560053005500530053010401050095010401050048004800480048004800480048004800480049004800480049004800480048004800480048004800480048004800480048004900490048004900480048004900570055009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501100117010801080057005501040105004800480051005500480048005100570048004800540099004800480054009900480048005500530048004800540101004800480051005500480048005100550048004800510057004800480054009900480048005400990048004800550053004800480054010100480048005100570048004800510055004800480051005700480048005400990048004800540099004800480055005300480048005401010048004800520099004800480051005500480048005100570048004800540099004800480054009900480048005500530048004800540101004800480052009900480048005100550048004800510057004800480054009900480048005400990048004800550053004800480054010100480048005300530048004800510055004800480051005700480048005400990048004800540099004800480055005300480048005401010048004800520101004800480051005500480048005100570048004800540099004800480054009900480048005500530048004800540101" + "'", str3.equals
    }

    @Test
    public void test452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test452");
        java.lang.String str2 = strman.Strman.repeat("Null97", 1040);
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97" + "'", str2.equals("Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97Null97"));
    }

    @Test
    public void test453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test453");
        java.util.Optional<java.lang.String> strOptional1 = strman.Strman.trimStartih79llun!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih");
        org.junit.Assert.assertNotNull(strOptional1);
    }

    @Test
    public void test454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test454");
        java.lang.String[] strArray4 = strman.Strman.split("00072001050010400105", "0011000085000760007600057000550007800078000850007697");
        boolean boolean6 = strman.Strman.containsAll("Mda2ztawnzuwmdzjmda2yzawmzkwmdm300078001170010800108000570005500110001100011700108", strArray4, false);
        java.lang.String str7 = strman.Strman.prependArraystrArray4);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + strstr7.equals
    }

    @Test
    public void test455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test455");
        long long2 = strman.Strman.countSubstr("0005100051000550005000055000510005100051000550005000055000510005100051000550005000055000510005100051", "NzlsbHVuNzc5bGx1bjk3OWxsdW5MNzlsbHVuTDc5bGx1blU3OWxsdW5ONzlsbHVu");
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
    }

    @Test
    public void test456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test456");
        java.lang.String str3 = strman.Strman.safeTruncateekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Tl Vmtdk30000000001001000000000000110100197", 607, "IHI97HHI97HI48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101n-u-l-l97-n-n-u-lhi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-null97nnul-hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!null97-nnul");
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "IHI97HHI97HI48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101n-u-l-l97-n-n-u-lhi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-null97nnul-hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!null97-nnul" + "'", str3.equals("IHI97HHI97HI48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101n-u-l-l97-n-n-u-lhi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-null97nnul-hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!null97-nnul"));
    }

    @Test
    public void test457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test457");
        java.lang.String str1 = strman.Strman.humanize("nzlsb-hvu-nzc5b-gx1bjk3-owxsd-w5-mnzlsb-hvu-tdc5b-gx1bl-u3-owxsd-w5-onzlsb-hvu");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "Nzlsb hvu nzc5b gx1bjk3 owxsd w5 mnzlsb hvu tdc5b gx1bl u3 owxsd w5 onzlsb hvu" + "'", str1.equals("Nzlsb hvu nzc5b gx1bjk3 owxsd w5 mnzlsb hvu tdc5b gx1bl u3 owxsd w5 onzlsb hvu"));
    }

    @Test
    public void test458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test458");
        java.lang.String str3 = strman.Strman.leftPad("HI-HI48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101IHIh", "0000000001001000000000000110100197", 330);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "HI-HI48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101IHIh" + "'", str3.equals("HI-HI48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101IHIh"));
    }

    @Test
    public void test459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test459");
        java.lang.String str1 = strman.Strman.collapseWhitespace("lunn79lluNih79lluNiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiH");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "lunn79lluNih79lluNiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiH" + "'", str1.equals("lunn79lluNih79lluNiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiH"));
    }

    @Test
    public void test460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test460");
        java.lang.String str1 = strman.Strman.collapseWhitespace("Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Tl Vmtdk
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Tl Vmtdkstr1.equals("Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Tl Vmtdk
    }

    @Test
    public void test461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test461");
        java.lang.String[] strArray2 = strman.Strman.split("1097nullnull97nnulhi
        java.lang.String[] strArray3 = strman.Strman.removeEmptyStrings(strArray2);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(strArray3);
    }

    @Test
    public void test462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test462");
        java.lang.String str3 = strman.Strman.surround("nullhi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e", "Awhpx2g=", "nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull&UnderBar;nullMDAxMTAxMTAwMDAwMDAwMDEwMTAxMTEwMDAwMDAwMDAwMTExMDExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDAxMDAxMTEwMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAxMDEwMTExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDEwMDEwMTEwMDAwMDAwMDAwMDAxMDExMDAwMDAwMDAwMTAxMTAxMDAwMDAwMDAwMDEwMDEwMTEwMDAwMDAwMDAwMDAxMDExMDAwMDAwMDAwaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaS1oihi\\-hhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!");
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "Awhpx2g=nullhi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006enullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull&UnderBar;nullMDAxMTAxMTAwMDAwMDAwMDEwMTAxMTEwMDAwMDAwMDAwMTExMDExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDAxMDAxMTEwMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAxMDEwMTExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDEwMDEwMTEwMDAwMDAwMDAwMDAxMDExMDAwMDAwMDAwMTAxMTAxMDAwMDAwMDAwMDEwMDEwMTEwMDAwMDAwMDAwMDAxMDExMDAwMDAwMDAwaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaS1oihi\\-hhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!" + "'", str3.equals("Awhpx2g=nullhi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006enullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull&UnderBar;nullMDAxMTAxMTAwMDAwMDAwMDEwMTAxMTEwMDAwMDAwMDAwMTExMDExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDAxMDAxMTEwMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAxMDEwMTExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDEwMDEwMTEwMDAwMDAwMDAwMDAxMDExMDAwMDAwMDAwMTAxMTAxMDAwMDAwMDAwMDEwMDEwMTEwMDAwMDAwMDAwMDAxMDExMDAwMDAwMDAwaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaS1oihi\\-hhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!"));
    }

    @Test
    public void test463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test463");
        java.lang.String str1 = strman.Strman.removeNonWords("006E0075006C006C00390037006E0075006C006C00390037006E0075006C006C00390037006E0075006C006C00390037006E0075006C006C00390037006E0075006C006C00390037006E0075006C006C00390037006E0075006C006C00390037006E0075006C006C00390037006E0075006C006C00390037nULL");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "006E0075006C006C00390037006E0075006C006C00390037006E0075006C006C00390037006E0075006C006C00390037006E0075006C006C00390037006E0075006C006C00390037006E0075006C006C00390037006E0075006C006C00390037006E0075006C006C00390037006E0075006C006C00390037nULL" + "'", str1.equals("006E0075006C006C00390037006E0075006C006C00390037006E0075006C006C00390037006E0075006C006C00390037006E0075006C006C00390037006E0075006C006C00390037006E0075006C006C00390037006E0075006C006C00390037006E0075006C006C00390037006E0075006C006C00390037nULL"));
    }

    @Test
    public void test464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test464");
        java.lang.String[] strArray3 = strman.Strman.lines("Hihihihinull97nnull97unull97lnull97lnull979null977null979710");
        java.lang.String str4 = strman.Strman.append("Mda2 ztaw nz uw mdzj mda2 yz aw mzkw mdm3nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull", strArray3);
        boolean boolean6 = strman.Strman.containsAll("Nnullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037hihiullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull", strArray3, false);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Mda2 ztaw nz uw mdzj mda2 yz aw mzkw mdm3nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullHihihihinull97nnull97unull97lnull97lnull979null977null979710" + "'", str4.equals("Mda2 ztaw nz uw mdzj mda2 yz aw mzkw mdm3nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullHihihihinull97nnull97unull97lnull97lnull979null977null979710"));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test465");
        java.lang.String str1 = strman.Strman.dasherize("NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL979710");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "n-u-l-l97n-n-u-l-l97u-n-u-l-l97l-n-u-l-l97l-n-u-l-l979-n-u-l-l977-n-u-l-l979710" + "'", str1.equals("n-u-l-l97n-n-u-l-l97u-n-u-l-l97l-n-u-l-l97l-n-u-l-l979-n-u-l-l977-n-u-l-l979710"));
    }

    @Test
    public void test466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test466");
        java.lang.String[] strArray3 = strman.Strman.chars("null");
        java.lang.String str4 = strman.Strman.format("null97nnul", strArray3);
        java.lang.String str6 = strman.Strman.join(strArray3, "00108001170011000078000550005700108001080011700110");
        boolean boolean7 = strman.Strman.containsAll("Hi!hi!NULL97", strArray3);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "null97nnul" + "'", str4.equals("null97nnul"));
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "n00108001170011000078000550005700108001080011700110u00108001170011000078000550005700108001080011700110l00108001170011000078000550005700108001080011700110l" + "'", str6.equals("n00108001170011000078000550005700108001080011700110u00108001170011000078000550005700108001080011700110l00108001170011000078000550005700108001080011700110l"));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test467");
        java.lang.String str3 = strman.Strman.truncate("Tlvmtdk3", 0, "lunn-79llun!ih79llun!ih!ih!ih!001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000ihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihiH00390037ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih-lunn79llun-ih79llun-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ihl-u-n-n-79l-l-u-n001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000 ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih006e0075006c006c00390037");
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "" + "'", str3.equals(""));
    }

    @Test
    public void test468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test468");
        java.lang.String[] strArray4 = new java.lang.String[] { "hihi" };
        java.util.List<java.lang.String> strList5 = strman.Strman.zip(strArray4);
        java.lang.String[] strArray6 = strman.Strman.removeEmptyStrings(strArray4);
        java.lang.String str7 = strman.Strman.prependstrArray4);
        boolean boolean9 = strman.Strman.containsAll("HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!NULL971null97null97Nnull97Unull97Lnull97Lnull979null977null97", strArray4, false);
        java.lang.String str10 = strman.Strman.appendArray("006E0075006C006C00390037006E0075006C006C00390037006E0075006C006C00390037006E0075006C006C00390037006E0075006C006C00390037006E0075006C006C00390037006E0075006C006C00390037006E0075006C006C00390037006E0075006C006C00390037006E0075006C006C00390037nULL", strArray4);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + str7 + "' != '" + "hihistr7.equals("hihi
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + str10 + "' != '" + "006E0075006C006C00390037006E0075006C006C00390037006E0075006C006C00390037006E0075006C006C00390037006E0075006C006C00390037006E0075006C006C00390037006E0075006C006C00390037006E0075006C006C00390037006E0075006C006C00390037006E0075006C006C00390037nULLhihi" + "'", str10.equals("006E0075006C006C00390037006E0075006C006C00390037006E0075006C006C00390037006E0075006C006C00390037006E0075006C006C00390037006E0075006C006C00390037006E0075006C006C00390037006E0075006C006C00390037006E0075006C006C00390037006E0075006C006C00390037nULLhihi"));
    }

    @Test
    public void test469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test469");
        java.lang.String[] strArray3 = strman.Strman.between("0000000000110111000000000011100100000000011011000000000001101100000000000111010100000000011011100000000000110111000000000011011100000000001110010000000001101100000000000110110000000000011101010000000001101110000000000011100100000000001101110000000000111001000000000110110000000000011011000000000001110101000000000110111000000000011011000000000000110111000000000011100100000000011011000000000001101100000000000111010100000000011011100000000001101100000000000011011100000000001110010000000001101100000000000110110000000000011101010000000001101110000000000111010100000000001101110000000000111001000000000110110000000000011011000000000001110101000000000110111000000000011011100000000000110111000000000011100100000000011011000000000001101100000000000111010100000000011011100000000000110111000000000011100100000000011011000000000001101100000000000111010100000000010011100000000000110001000000000011001000000000001100000000000000110000000000000011100100000000001101000000000000110000000000000011000000000000001110000000000000110100000000000011000000000000001100000000000000110001000000000011001000000000001100000000000000110000000000000011100100000000001101000000000000110000000000000011000000000000001110000000000000110100000000000011000000000000001100000000000000110001000000000011001000000000001100000000000000110000000000000011100100000000001101000000000000110000000000000011000000000000001110000000000000110100000000000011000000000000001100000000000000110001000000000011001000000000001100000000000000110000", "!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!", "nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull");
        org.junit.Assert.assertNotNull(strArray3);
    }

    @Test
    public void test470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test470");
        java.lang.String[] strArray4 = strman.Strman.split("1101171081085755000000000110100100000000011010000000000001101001000000000110100000000000011010010000000001101000000000000110100100000000011010000000000001101001000000000110100000000000011010010000000001101000000000000110100100000000011010000000000001101001000000000110100000000000011010010000000001101000000000000110100100000000011010000000000001101001000000000110100000000000011010010000000001101000000000000110100100000000011010000000000001101001000000000110100000000000011010010000000001101000000000000110100100000000011010000000000001101001000000000110100000000000011010010000000001101000000000000110100100000000011010000000000001101001000000000110100000000000011010010000000001101000000000000110100100000000011010000000000001101001000000000110100000000000011010010000000001101000000000000110100100000000011010000000000001101001000000000110100000000000011010010000000001101000000000000110100100000000011010000000000001101001000000000110100000000000011010010000000001101000000000000110100100000000011010000000000001101001000000000110100000000000011010010000000001101000000000000110100100000000011010000000000001101001000000000110100000000000011010010000000001101000000000000110100100000000011010000000000001101001000000000110100000000000011010010000000001101000000000000110100100000000011010000000000001101001000000000110100000000000011010010000000001101000000000000110100100000000011010000000000001101001000000000110100000000000011010010000000001101000000000000110100100000000011010000000000001101001000000000110100000000000011010010000000001101000000000000110100100000000011010000000000001101001000000000110100000000000011010010000000001101000000000000110100100000000011010000000000001101001000000000110100000000000011010010000000001101000000000000110100100000000011010000000000001101001000000000110100000000000011010010000000001101000000000000110100100000000011010000000000001101001000000000110100000000000011010010000000001101000000000000110100100000000011010000000000001101001000000000110100000000000011010010000000001101000000000000110100100000000011010000000000001101001000000000110100000000000011010010000000001101000000000000110100100000000011010000000000001101001000000000110100000000000011010010000000001101000000000000110100100000000011010000000000001101001000000000110100000000000011010010000000001101000000000000110100100000000011010000000000001101001000000000110100000000000011010010000000001101000000000000110100100000000011010000000000001101001000000000110100000000000011010010000000001101000000000000110100100000000011010000000000001101001000000000110100000000000011010010000000001101000000000000110100100000000011010000000000001101001000000000110100000000000011010010000000001101000", "00000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100001040010500110001170010800108000570005500078001100011700108Hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!");
        java.util.Optional<java.lang.String> strOptional5 = strman.Strman.trimEnd("hi!hi!-n-u-l-l97", strArray4);
        java.lang.String str6 = strman.Strman.prepend("Ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 nq==", strArray4);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(strOptional5);
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "1101171081085755000000000110100100000000011010000000000001101001000000000110100000000000011010010000000001101000000000000110100100000000011010000000000001101001000000000110100000000000011010010000000001101000000000000110100100000000011010000000000001101001000000000110100000000000011010010000000001101000000000000110100100000000011010000000000001101001000000000110100000000000011010010000000001101000000000000110100100000000011010000000000001101001000000000110100000000000011010010000000001101000000000000110100100000000011010000000000001101001000000000110100000000000011010010000000001101000000000000110100100000000011010000000000001101001000000000110100000000000011010010000000001101000000000000110100100000000011010000000000001101001000000000110100000000000011010010000000001101000000000000110100100000000011010000000000001101001000000000110100000000000011010010000000001101000000000000110100100000000011010000000000001101001000000000110100000000000011010010000000001101000000000000110100100000000011010000000000001101001000000000110100000000000011010010000000001101000000000000110100100000000011010000000000001101001000000000110100000000000011010010000000001101000000000000110100100000000011010000000000001101001000000000110100000000000011010010000000001101000000000000110100100000000011010000000000001101001000000000110100000000000011010010000000001101000000000000110100100000000011010000000000001101001000000000110100000000000011010010000000001101000000000000110100100000000011010000000000001101001000000000110100000000000011010010000000001101000000000000110100100000000011010000000000001101001000000000110100000000000011010010000000001101000000000000110100100000000011010000000000001101001000000000110100000000000011010010000000001101000000000000110100100000000011010000000000001101001000000000110100000000000011010010000000001101000000000000110100100000000011010000000000001101001000000000110100000000000011010010000000001101000000000000110100100000000011010000000000001101001000000000110100000000000011010010000000001101000000000000110100100000000011010000000000001101001000000000110100000000000011010010000000001101000000000000110100100000000011010000000000001101001000000000110100000000000011010010000000001101000000000000110100100000000011010000000000001101001000000000110100000000000011010010000000001101000000000000110100100000000011010000000000001101001000000000110100000000000011010010000000001101000000000000110100100000000011010000000000001101001000000000110100000000000011010010000000001101000000000000110100100000000011010000000000001101001000000000110100000000000011010010000000001101000000000000110100100000000011010000000000001101001000000000110100000000000011010010000000001101000Ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 nq==" + "'", str6.equalstu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 nq=="));
    }

    @Test
    public void test471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test471");
        java.lang.String str3 = strman.Strman.truncate("4848494852484849485348484853494848494855484849484848484949544848494857484848565448484851504848494856484848565248484851504848494852484849485548484948494848485651484848515048484948524848494855484849484948484856514848485150484849485248484948554848494849484848565148484851504848494852484849485548484948494848485651484848515048484948524848494855484849484948484856514848485150484849485248484948554848494849484848565148484851504848494852484849485548484948494848485651484848515048484948524848494855484849484948484856514848485150484849485248484948554848494849484848565148484851504848494852484849485548484948494848485651484848515048484948524848494855484849484948484856514848485150484849485248484948554848494849484848565148484851504848494852484849485548484948494848485651484848515048484948524848494855484849484948484856514848485150484849485248484948554848494849484848565148484851504848494852484849485548484948494848485651484848515048484948524848494855484849484948484856514848485150484849485248484948554848494849484848565148484851504848494852484849485548484948494848485651484848515048484948524848494855484849484948484856514848485150484849485248484948554848494849484848565148484851504848494852484849485548484948494848485651484848515048484948524848494855484849484948484856514848485150484849485248484948554848494849484848565148484851504848494852484849485548484948494848485651484848515048484948524848494855484849484948484856514848485150484849485248484948554848494849484848565148484851504848494852484849485548484948494848485651484848515048484948524848494855484849484948484856514848485150484849485248484948554848494849484848565148484851504848494852484849485548484948494848485651484848515048484948524848494855484849484948484856514848485150484849485248484948554848494849484848565148484851504848494852484849485548484948494848485651484848515048484948524848494855484849484948484856514848485150484849485248484948554848494849484848565148484851504848494852484849485548484948494848485651484848515048484948524848494855484849484948484856514848485150484849485248484948554848494849484848565148484851504848494852484849485548484948494848485651484848515048484948524848494855484849484948484856514848485150484849485248484948554848494849484848565148484851504848494852484849485548484948494848485651484848515048484948524848494855484849484948484856514848485150484849485248484948554848494849484848565148484851504848494852484849485548484948494848485651484848515048484948524848494855484849484948484856514848485150484849485248484948554848494849484848565148484851504848494852484849485548484948494848485651484848515048484948524848494855484849484948484856514848485150484849485248484948554848494849484848565148484851504848494852484849485548484948494848485651484848515048484948524848494855484849484948484856514848485150484849485248484948554848494849484848565148484851504848494852484849485548484948494848485651484848515048484948524848494855484849484948484856514848485150484849485248484948554848494849484848565148484851504848494852484849485548484948494848485651484848515048484948524848494855484849484948484856514848485150484849485248484948554848494849484848565148484851504848494852484849485548484948494848485651484848515048484948524848494855484849484948484856514848485150484849485248484948554848494849484848565148484851504848494852484849485548484948494848485651484848515048484948524848494855484849484948484856514848485150484849485248484948554848494849484848565148484851504848494852484849485548484948494848485651484848515048484948524848494855484849484948484856514848485150484849485248484948554848494849484848565148484851504848494852484849485548484948494848485651484848515048484948524848494855484849484948484856514848485150484849485248484948554848494849484848565148484851504848494852484849485548484948494848485651484848515048484948524848494855484849484948484856514848485150484849485248484948554848494849484848565148484851504848494852484849485548484948494848485651484848515048484948524848494855484849484948484856514848485150484849485248484948554848494849484848565148484851504848494852484849485548484948494848485651484848515048484948524848494855484849484948484856514848485150484849485248484948554848494849484848565148484851504848494852484849485548484948494848485651484848515048484948524848494855484849484948484856514848485150484849485248484948554848494849484848565148484851504848494852484849485548484948494848485651484848515048484948524848494855484849484948484856514848485150484849485248484948554848494849484848565148484851504848494852484849485548484948494848485651484848515048484948524848494855484849484948484856514848485150484849485248484948554848494849484848565148484851504848494852484849485548484948494848485651484848515048484948524848494855484849484948484856514848485150484849485248484948554848494849484848565148484851504848494852484849485548484948494848485651484848515048484948524848494855484849484948484856514848485150484849485248484948554848494849484848565148484851504848494852484849485548484948494848485651484848515048484948524848494855484849484948484856514848485150484849485248484948554848494849484848565148484851504848494852484849485548484948494848485651", 402, "");
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "484849485248484948534848485349484849485548484948484848494954484849485748484856544848485150484849485648484856524848485150484849485248484948554848494849484848565148484851504848494852484849485548484948494848485651484848515048484948524848494855484849484948484856514848485150484849485248484948554848494849484848565148484851504848494852484849485548484948494848485651484848515048484948524848494855484849484948" + "'", str3.equals("484849485248484948534848485349484849485548484948484848494954484849485748484856544848485150484849485648484856524848485150484849485248484948554848494849484848565148484851504848494852484849485548484948494848485651484848515048484948524848494855484849484948484856514848485150484849485248484948554848494849484848565148484851504848494852484849485548484948494848485651484848515048484948524848494855484849484948"));
    }

    @Test
    public void test472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test472");
        java.lang.String str1 = strman.Strman.formatNumber((long) 656);
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "656" + "'", str1.equals("656"));
    }

    @Test
    public void test473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test473");
        java.util.Map<java.lang.Character, java.lang.Long> charMap1 = strman.Strman.charsCount
        org.junit.Assert.assertNotNull(charMap1);
    }

    @Test
    public void test474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test474");
        java.lang.String str1 = strman.Strman.transliterate("Null97Nnull97Unull97Lnull97Lnull979Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Tl Vmtdk3null977null97NULL97Nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "Null97Nnull97Unull97Lnull97Lnull979Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Tl Vmtdk3null977null97NULL97Nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull" + "'", str1.equals("Null97Nnull97Unull97Lnull97Lnull979Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Tl Vmtdk3null977null97NULL97Nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull"));
    }

    @Test
    public void test475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test475");
        java.lang.String[] strArray5 = strman.Strman.between("hi-hinull97nnul", "000780008500076000760005700055001100007800085000760007600057000550011700078000850007600076000570005500108000780008500076000760005700055001080007800085000760007600057000550005700078000850007600076000570005500055000780008500076000760005700055", "MzU=");
        java.lang.String str7 = strman.Strman.join(strArray5, "30");
        java.lang.String str8 = strman.Strman.prependArray("hi-hinull97nnul", strArray5);
        boolean boolean10 = strman.Strman.containsAll("48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101nullnull97nnul", strArray5, true);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + str7 + "' != '" + "" + "'", str7.equals(""));
        org.junit.Assert.assertTrue("'" + str8 + "' != '" + "hi-hinull97nnul" + "'", str8.equals("hi-hinull97nnul"));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test476");
        java.util.Optional<java.lang.String> strOptional1 = strman.Strman.headhihiHI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-NULL97HI-00370039006C006C0075006E003700370039006C006C0075006E003900370039006C006C0075006E004C00370039006C006C0075006E004C00370039006C006C0075006E005500370039006C006C0075006E004E00370039006C006C0075006E");
        org.junit.Assert.assertNotNull(strOptional1);
    }

    @Test
    public void test477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test477");
        int int1 = strman.Strman.length("79llun!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ihH ihI");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 311 + "'", int1 == 311);
    }

    @Test
    public void test478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test478");
        java.lang.String str2 = strman.Strman.last("Null97nhinullhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101nul1097null971097nULL97NNULNullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullhiHi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101!ih", 740);
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "48541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101nul1097null971097nULL97NNULNullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullhiHi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101!ih" + "'", str2.equals("48541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101nul1097null971097nULL97NNULNullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullhiHi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101!ih"));
    }

    @Test
    public void test479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test479");
        try {
            java.util.Optional<java.lang.String> strOptional2 = strman.Strman.first("HihiNULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL979710Nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull97Nnull97Unull97Lnull97Lnull979null977null97null97", 309);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 309");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        }
    }

    @Test
    public void test480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test480");
        java.lang.String str1 = strman.Strman.transliterate
        org.junit.Assert.assertTrue("'" + strstr1.equals("000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033"));
    }

    @Test
    public void test481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test481");
        java.lang.String[] strArray2 = strman.Strman.words("000000005500000000570000000076000000007600000000850000000078000000005500000000550000000057000000007600000000760000000085000000007800000000570000000055000000005700000000760000000076000000008500000000780000000108000000005500000000570000000076000000007600000000850000000078000000010800000000550000000057000000007600000000760000000085000000007800000001170000000055000000005700000000760000000076000000008500000000780000000110000000005500000000570000000076000000007600000000850000000078hihiymx_w_t_v_r_f_n_v_z_u_r_xh_p_vl_v4_t_v_rs_vk1_u_r_t_v_w_v_e_v4_t1_z_ve_e1_ub_f_z_n_v_e_u1_vl_r_fe_e9_w_v_xh_n_v_gx_w_t_v_r_f_n_v_z_u_r_xh_p_vl_v4_t_v_rs_vk1_u_r_t_v_w_v_e_v4_t1_z_ve_e1_ub_f_z_n_v_e_u1_vl_r_fe_e9_w_v_xh_n_v_gx_w_t_v_r_f_n_v_z_u_r_xh_p_vl_v4_t_v_rs_vk1_u_r_t_v_w_v_e_v4_t1_z_ve_e1_ub_f_z_n_v_e_u1_vl_r_fe_e9_w_v_xh_n_v_gx_w_t_v_r_f_n_v_z_u_r_xh_p_vl_v4_t_v_rs_vk1_u_r_t_v_w_v_e_v4_t1_z_ve_e1_ub_f_z_n_v_e_u1_vl_r_fe_e9_w_v_xh_n_v_gx_w_t_v_r_f_n_v_z_u_r_xh_p_vl_v4_t_v_rs_vk1_u_r_t_v_w_v_e_v4_t1_z_ve_e1_ub_f_z_n_v_e_u1_vl_r_fe_e9_w_v_xh_n_v_gx_w_t_v_r_f_n_v_z_u_r_xh_p_vl_v4_t_t_aw_m_d_aw_m_d_aw_n_t_uw_m_d_aw_m_d_aw_m_d_u3_m_d_aw_m_d_aw_m_d_a3_nj_aw_m_d_aw_m_d_aw_nz_yw_m_d_aw_m_d_aw_m_dg1_m_d_aw_m_d_aw_m_d_a3_o_d_aw_m_d_aw_m_d_aw_n_t_uw_m_d_aw_m_d_aw_m_d_u1_m_d_aw_m_d_aw_m_d_a1_nz_aw_m_d_aw_m_d_aw_nz_yw_m_d_aw_m_d_aw_m_dc2_m_d_aw_m_d_aw_m_d_a4_n_t_aw_m_d_aw_m_d_aw_nzgw_m_d_aw_m_d_aw_m_d_u3_m_d_aw_m_d_aw_m_d_a1_n_t_aw_m_d_aw_m_d_aw_n_tcw_m_d_aw_m_d_aw_m_dc2_m_d_aw_m_d_aw_m_d_a3_nj_aw_m_d_aw_m_d_aw_o_d_uw_m_d_aw_m_d_aw_m_dc4_m_d_aw_m_d_aw_m_d_ew_o_d_aw_m_d_aw_m_d_aw_n_t_uw_m_d_aw_m_d_aw_m_d_u3_m_d_aw_m_d_aw_m_d_a3_nj_aw_m_d_aw_m_d_aw_nz_yw_m_d_aw_m_d_aw_m_dg1_m_d_aw_m_d_aw_m_d_a3_o_d_aw_m_d_aw_m_d_ax_m_dgw_m_d_aw_m_d_aw_m_d_u1_m_d_aw_m_d_aw_m_d_a1_nz_aw_m_d_aw_m_d_aw_nz_yw_m_d_aw_m_d_aw_m_dc2_m_d_aw_m_d_aw_m_d_a4_n_t_aw_m_d_aw_m_d_aw_nzgw_m_d_aw_m_d_aw_m_t_e3_m_d_aw_m_d_aw_m_d_a1_n_t_aw_m_d_aw_m_d_aw_n_tcw_m_d_aw_m_d_aw_m_dc2_m_d_aw_m_d_aw_m_d_a3_nj_aw_m_d_aw_m_d_aw_o_d_uw_m_d_aw_m_d_aw_m_dc4_m_d_aw_m_d_aw_m_d_ex_m_d_aw_m_d_aw_m_d_aw_n_t_uw_m_d_aw_m_d_aw_m_d_u3_m_d_aw_m_d_aw_m_d_a3_nj_aw_m_d_aw_m_d_aw_nz_yw_m_d_aw_m_d_aw_m_dg1_m_d_aw_m_d_aw_m_d_a3_o_ghpa_gk=", "");
        org.junit.Assert.assertNotNull(strArray2);
    }

    @Test
    public void test482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test482");
        java.lang.String[] strArray3 = strman.Strman.split("001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000ihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi-h", "Hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!");
        boolean boolean5 = strman.Strman.containsAll("HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!", strArray3, true);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test483");
        try {
            java.lang.String str3 = strman.Strman.decode("mda2006e0075006c006c00390037ztaw006e0075006c006c00390037nz006e0075006c006c00390037uw006e0075006c006c00390037mdzj006e0075006c006c00390037mda2006e0075006c006c00390037yz006e0075006c006c00390037aw006e0075006c006c00390037mzkw006e0075006c006c00390037mdm30004800048000490004900048000480004800049000490005500048000480004900048000560004800048000490004800056000480004800048000530005500048000480004800053000530004800048000480005500056000480004800049000490004800048000480004900049000550004800048000490004800056", 1, 2851);
            org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException; message: radix 2851 greater than Character.MAX_RADIX");
        } catch (java.lang.NumberFormatException e) {
        }
    }

    @Test
    public void test484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test484");
        java.lang.String str1 = strman.Strman.lowerFirst("N u l l97hihi");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "n u l l97hihi" + "'", str1.equals("n u l l97hihi"));
    }

    @Test
    public void test485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test485");
        java.lang.String str1 = strman.Strman.underscored("00049000490004800049000490005500049000480005600049000480005600053000550005300053000780011700108001080005700055000780011000117001080010800057000550008500110001170010800108000570005500076001100011700108001080005700055000760011000117001080010800057000550005700110001170010800108000570005500055001100011700108001080005700055");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "00049000490004800049000490005500049000480005600049000480005600053000550005300053000780011700108001080005700055000780011000117001080010800057000550008500110001170010800108000570005500076001100011700108001080005700055000760011000117001080010800057000550005700110001170010800108000570005500055001100011700108001080005700055" + "'", str1.equals("00049000490004800049000490005500049000480005600049000480005600053000550005300053000780011700108001080005700055000780011000117001080010800057000550008500110001170010800108000570005500076001100011700108001080005700055000760011000117001080010800057000550005700110001170010800108000570005500055001100011700108001080005700055"));
    }

    @Test
    public void test486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test486");
        java.lang.String str1 = strman.Strman.humanize("ullnullnullnullnullnullnull_null97nnul1097null971097");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "Ullnullnullnullnullnullnull null97nnul1097null971097" + "'", str1.equals("Ullnullnullnullnullnullnull null97nnul1097null971097"));
    }

    @Test
    public void test487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test487");
        boolean boolean4 = strman.Strman.endsWith("nzlsb_hvu_nzc5b_gx1bjk3_owxsd_w5_mnzlsb_hvu_tdc5b_gx1bl_u3_owxsd_w5_onzlsb_hvu", "MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA0ZTAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwNTUwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDRjMDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA0YzAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwMzkwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3Nnullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037hihiullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull", 309, true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test488");
        java.lang.String str1 = strman.Strman.htmlDecode("hi!hinullhi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-null97hi\\-00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "null" + "'", str1.equals("null"));
    }

    @Test
    public void test489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test489");
        java.lang.String str1 = strman.Strman.underscored("006c0075006e004e00370039006c006c0075006e");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "006c0075006e004e00370039006c006c0075006e" + "'", str1.equals("006c0075006e004e00370039006c006c0075006e"));
    }

    @Test
    public void test490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test490");
        java.lang.String[] strArray2 = strman.Strman.split("", "NULL970000000001001000000000000110100197");
        org.junit.Assert.assertNotNull(strArray2);
    }

    @Test
    public void test491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test491");
        java.lang.String str1 = strman.Strman.collapseWhitespace("!HI!HI!HI!6nullih79llun!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "!HI!HI!HI!6nullih79llun!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ihstr1.equals("!HI!HI!HI!6nullih79llun!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih
    }

    @Test
    public void test492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test492");
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.util.List<java.lang.String> strList9 = strman.Strman.zip(strArray8);
        boolean boolean11 = strman.Strman.containsAny("", strArray8, true);
        boolean boolean13 = strman.Strman.containsAny("hi!hi!", strArray8, true);
        boolean boolean15 = strman.Strman.containsAll("10", strArray8, false);
        java.lang.String str17 = strman.Strman.join(strArray8, "hi!");
        java.lang.String str18 = strman.Strman.format("000000000110100000000000011010010000000000100001", strArray8);
        boolean boolean20 = strman.Strman.containsAny("lunN79llunnull97null97Nnull97Unull97Lnull97Lnull979null977null97", strArray8, false);
        boolean boolean21 = strman.Strman.containsAny("0004900108001170011000110000550005700108001080011700110", strArray8);
        java.lang.String str22 = strman.Strman.prepend("0000000000110000000000000011000000000000001100110000000000110000000000000011000000000000001100000000000000110011000000000011000000000000001100000000000000110000000000000011001100000000001100110000000000110000000000000011000000000000001100110000000000110011", strArray8);
        java.lang.String str23 = strman.Strman.prependArray("null97Nnull97Unull97Lnull97Lnull979null977nullstrArray8);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + str17 + "' != '" + "" + "'", str17.equals(""));
        org.junit.Assert.assertTrue("'" + str18 + "' != '" + "000000000110100000000000011010010000000000100001" + "'", str18.equals("000000000110100000000000011010010000000000100001"));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + str22 + "' != '" + "0000000000110000000000000011000000000000001100110000000000110000000000000011000000000000001100000000000000110011000000000011000000000000001100000000000000110000000000000011001100000000001100110000000000110000000000000011000000000000001100110000000000110011" + "'", str22.equals("0000000000110000000000000011000000000000001100110000000000110000000000000011000000000000001100000000000000110011000000000011000000000000001100000000000000110000000000000011001100000000001100110000000000110000000000000011000000000000001100110000000000110011"));
        org.junit.Assert.assertTrue("'" + str23 + "' != '" + "null97Nnull97Unull97Lnull97Lnull979null977nullstr23.equals("null97Nnull97Unull97Lnull97Lnull979null977null
    }

    @Test
    public void test493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test493");
        java.lang.String[] strArray4 = strman.Strman.words("000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97_nnull97_unull97_lnull97_lnull979null977null97_hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!");
        java.lang.String str5 = strman.Strman.append("1-7210533hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!", strArray4);
        java.util.Optional<java.lang.String> strOptional6 = strman.Strman.trimEnd("Ihi97hhi97hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101", strArray4);
        boolean boolean7 = strman.Strman.containsAll("000720010500033001040010500033nullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLhiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiNull97hi00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e", strArray4);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "1-7210533hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97_nnull97_unull97_lnull97_lnull979null977null97_hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!" + "'", str5.equals("1-7210533hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97_nnull97_unull97_lnull97_lnull979null977null97_hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!"));
        org.junit.Assert.assertNotNull(strOptional6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test494");
        java.lang.String str1 = strman.Strman.startCasenull97null97-nnull97-unull97-lnull97-lnull979null977null97-hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!-nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull");
        org.junit.Assert.assertTrue("'" + strnull97null97 Nnull97 Unull97 Lnull97 Lnull979null977null97 Hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi! Nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull" + "'", str1.equalsnull97null97 Nnull97 Unull97 Lnull97 Lnull979null977null97 Hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi! Nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull"));
    }

    @Test
    public void test495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test495");
        long long4 = strman.Strman.countSubstr("nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull", "1-", true, true);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
    }

    @Test
    public void test496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test496");
        java.lang.String str1 = strman.Strman.transliterate("5010000000000000000000000000000000000000000000000000401000000000000000000000000000000000000000000000000050100000000000000000000000000000000000000000000000002700000000000000000000000000000000000000000000000000230000000000000000000000000000000000000000000000000001100000000000000000000000000000000000000000000000007110000000000000000000000000000000000000000000000000801000000000000000000000000000000000000000000000000080100000000000000000000000000000000000000000000000007500000000000000000000000000000000000000000000000000550000000000000000000000000000000000000000000000000087000000000000000000000000000000000000000000000000002300000000000000000000000000000000000000000000000000011000000000000000000000000000000000000000000000000071100000000000000000000000000000000000000000000000008010000000000000000000000000000000000000000000000000801000000000000000000000000000000000000000000000000075000000000000000000000000000000000000000000000000005500000000000000000000000000000000000000000000000000580000000000000000000000000000000000000000000000000023000000000000000000000000000000000000000000000000000110000000000000000000000000000000000000000000000000711000000000000000000000000000000000000000000000000080100000000000000000000000000000000000000000000000008010000000000000000000000000000000000000000000000000750000000000000000000000000000000000000000000000000055000000000000000000000000000000000000000000000000006700000000000000000000000000000000000000000000000000230000000000000000000000000000000000000000000000000001100000000000000000000000000000000000000000000000007110000000000000000000000000000000000000000000000000801000000000000000000000000000000000000000000000000080100000000000000000000000000000000000000000000000007500000000000000000000000000000000000000000000000000550000000000000000000000000000000000000000000000000067000000000000000000000000000000000000000000000000002300000000000000000000000000000000000000000000000000011000000000000000000000000000000000000000000000000071100000000000000000000000000000000000000000000000008010000000000000000000000000000000000000000000000000801000000000000000000000000000000000000000000000000075000000000000000000000000000000000000000000000000005500000000000000000000000000000000000000000000000000750000000000000000000000000000000000000000000000000001100000000000000000000000000000000000000000000000007110000000000000000000000000000000000000000000000000801000000000000000000000000000000000000000000000000080100000000000000000000000000000000000000000000000007500000000000000000000000000000000000000000000000000550000000000000000000000000000000000000000000000000055000000000000000000000000000000000000000000000000005010000000000000000000000000000000000000000000000000401000000000000000000000000000000000000000000000000050100000000000000000000000000000000000000000000000004010000000000000000000000000000000000000000000000000011000000000000000000000000000000000000000000000000071100000000000000000000000000000000000000000000000008010000000000000000000000000000000000000000000000000801000000000000000000000000000000000000000000000000075000000000000000000000000000000000000000000000000005500000000000000000000000000000000000000000000000000");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "5010000000000000000000000000000000000000000000000000401000000000000000000000000000000000000000000000000050100000000000000000000000000000000000000000000000002700000000000000000000000000000000000000000000000000230000000000000000000000000000000000000000000000000001100000000000000000000000000000000000000000000000007110000000000000000000000000000000000000000000000000801000000000000000000000000000000000000000000000000080100000000000000000000000000000000000000000000000007500000000000000000000000000000000000000000000000000550000000000000000000000000000000000000000000000000087000000000000000000000000000000000000000000000000002300000000000000000000000000000000000000000000000000011000000000000000000000000000000000000000000000000071100000000000000000000000000000000000000000000000008010000000000000000000000000000000000000000000000000801000000000000000000000000000000000000000000000000075000000000000000000000000000000000000000000000000005500000000000000000000000000000000000000000000000000580000000000000000000000000000000000000000000000000023000000000000000000000000000000000000000000000000000110000000000000000000000000000000000000000000000000711000000000000000000000000000000000000000000000000080100000000000000000000000000000000000000000000000008010000000000000000000000000000000000000000000000000750000000000000000000000000000000000000000000000000055000000000000000000000000000000000000000000000000006700000000000000000000000000000000000000000000000000230000000000000000000000000000000000000000000000000001100000000000000000000000000000000000000000000000007110000000000000000000000000000000000000000000000000801000000000000000000000000000000000000000000000000080100000000000000000000000000000000000000000000000007500000000000000000000000000000000000000000000000000550000000000000000000000000000000000000000000000000067000000000000000000000000000000000000000000000000002300000000000000000000000000000000000000000000000000011000000000000000000000000000000000000000000000000071100000000000000000000000000000000000000000000000008010000000000000000000000000000000000000000000000000801000000000000000000000000000000000000000000000000075000000000000000000000000000000000000000000000000005500000000000000000000000000000000000000000000000000750000000000000000000000000000000000000000000000000001100000000000000000000000000000000000000000000000007110000000000000000000000000000000000000000000000000801000000000000000000000000000000000000000000000000080100000000000000000000000000000000000000000000000007500000000000000000000000000000000000000000000000000550000000000000000000000000000000000000000000000000055000000000000000000000000000000000000000000000000005010000000000000000000000000000000000000000000000000401000000000000000000000000000000000000000000000000050100000000000000000000000000000000000000000000000004010000000000000000000000000000000000000000000000000011000000000000000000000000000000000000000000000000071100000000000000000000000000000000000000000000000008010000000000000000000000000000000000000000000000000801000000000000000000000000000000000000000000000000075000000000000000000000000000000000000000000000000005500000000000000000000000000000000000000000000000000" + "'", str1.equals
    }

    @Test
    public void test497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test497");
        java.lang.String str1 = strman.Strman.slugify("aGludWxsaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAxMDEwMTExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMDAwMDAwMDAwMTAxMDExMTAwMDAwMDAwMDAxMTEwMTEwMDAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDEwMTAxMTEwMDAwMDAwMDAwMTExMDExMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAxMDEwMTExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMDAwMDAwMDAwMTAxMDExMTAwMDAwMDAwMDAxMTEwMTEwMDAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDEwMTAxMTEwMDAwMDAwMDAwMTExMDExMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAxMDEwMTExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMDAwMDAwMDAwMTAxMDExMTAwMDAwMDAwMDAxMTEwMTEwMDAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDEwMTAxMTEwMDAwMDAwMDAwMTExMDExMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAxMDEwMTExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMDAwMDAwMDAwMTAxMDExMTAwMDAwMDAwMDAxMTEwMTEwMDAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDEwMTAxMTEwMDAwMDAwMDAwMTExMDExMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAxMDEwMTExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMDAwMDAwMDAwMTAxMDExMTAwMDAwMDAwMDAxMTEwMTEwMDAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDEwMTAxMTEwMDAwMDAwMDAwMTExMDExMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAxMDEwMTExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMDAwMDAwMDAwMTAxMDExMTAwMDAwMDAwMDAxMTEwMTEwMDAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDEwMTAxMTEwMDAwMDAwMDAwMTExMDExMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAxMDEwMTExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMDAwMDAwMDAwMTAxMDExMTAwMDAwMDAwMDAxMTEwMTEwMDAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDEwMTAxMTEwMDAwMDAwMDAwMTExMDExMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAxMDEwMTExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMDAwMDAwMDAwMTAxMDExMTAwMDAwMDAwMDAxMTEwMTEwMDAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDEwMTAxMTEwMDAwMDAwMDAwMTExMDExMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAxMDEwMTExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMDAwMDAwMDAwMTAxMDExMTAwMDAwMDAwMDAxMTEwMTEwMDAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDEwMTAxMTEwMDAwMDAwMDAwMTExMDExMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAxMDEwMTExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMDAwMDAwMDAwMTAxMDExMTAwMDAwMDAwMDAxMTEwMTEwMDAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDEwMTAxMTEwMDAwMDAwMDAwMTExMDExMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAxMDEwMTExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMDAwMDAwMDAwMTAxMDExMTAwMDAwMDAwMDAxMTEwMTEwMDAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDEwMTAxMTEwMDAwMDAwMDAwMTExMDExMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAxMDEwMTExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMDAwMDAwMDAwMTAxMDExMTAwMDAwMDAwMDAxMTEwMTEwMDAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDEwMTAxMTEwMDAwMDAwMDAwMTExMDExMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAxMDEwMTExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMDAwMDAwMDAwMTAxMDExMTAwMDAwMDAwMDAxMTEwMTEwMDAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDEwMTAxMTEwMDAwMDAwMDAwMTExMDExMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAxMDEwMTExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMDAwMDAwMDAwMTAxMDExMTAwMDAwMDAwMDAxMTEwMTEwMDAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDEwMTAxMTEwMDAwMDAwMDAwMTExMDExMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAxMDEwMTExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMDAwMDAwMDAwMTAxMDExMTAwMDAwMDAwMDAxMTEwMTEwMDAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDEwMTAxMTEwMDAwMDAwMDAwMTExMDExMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAxMDEwMTExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMDAwMDAwMDAwMTAxMDExMTAwMDAwMDAwMDAxMTEwMTEwMDAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDEwMTAxMTEwMDAwMDAwMDAwMTExMDAxMDAwMDAwMDAwIWloNzlsbHVuIWloIWloIWloIWloIWloIWloIWloIWloIWloIWloIWloIWloIWloIWloIWloIWloIWloIWloIWloIWloIWloIWloIWloIWloIWloIWloIWloIWloIWloIWloIWloIWloIWloIWloIWloIWloIWloIWloIWloIWloIWloIWloIWloIWloIWloIWloIWloIWloIWloIWloIWloIWloIWloIWloIWloIWloIWloIWloIWloIWloIWloIWloIWloIWloIWloIWloIWloIWloIWloIWloIWloIWloIWloIWloIWloIWloIWloIWloIWloIWloIWloIWloIWloIWloIWloIWloIWloIWloIWloIWloIWloIWloIWloIWloIWloIWloIWloIWloIWloIWloaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGk0ODQ4NTE1NTQ4NDg1MTU3NDg0ODU0OTk0ODQ4NTQ5OTQ4NDg1NTUzNDg0ODU0MTAxNDg0ODUxNTU0ODQ4NTE1NTQ4NDg1MTU3NDg0ODU0OTk0ODQ4NTQ5OTQ4NDg1NTUzNDg0ODU0MTAxNDg0ODUxNTc0ODQ4NTE1NTQ4NDg1MTU3NDg0ODU0OTk0ODQ4NTQ5OTQ4NDg1NTUzNDg0ODU0MTAxNDg0ODUyOTk0ODQ4NTE1NTQ4NDg1MTU3NDg0ODU0OTk0ODQ4NTQ5OTQ4NDg1NTUzNDg0ODU0MTAxNDg0ODUyOTk0ODQ4NTE1NTQ4NDg1MTU3NDg0ODU0OTk0ODQ4NTQ5OTQ4NDg1NTUzNDg0ODU0MTAxNDg0ODUzNTM0ODQ4NTE1NTQ4NDg1MTU3NDg0ODU0OTk0ODQ4NTQ5OTQ4NDg1NTUzNDg0ODU0MTAxNDg0ODUyMTAxNDg0ODUxNTU0ODQ4NTE1NzQ4NDg1NDk5NDg0ODU0OTk0ODQ4NTU1MzQ4NDg1NDEwMQ==");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "agludwxsagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhmdaxmtaxmtawmdawmdawmdawmtewmtewmdawmdawmdaxmdewmtexmdawmdawmdawmdexmtaxmtawmdawmdawmdawmtewmtewmdawmdawmdawmdexmdexmdawmdawmdawmtaxmdexmtawmdawmdawmdaxmtewmtewmdawmdawmdawmdexmdexmdawmdawmdawmdaxmtaxmtawmdawmdawmdewmtaxmtewmdawmdawmdawmtexmdexmdawmdawmdawmdaxmtaxmtawmdawmdawmdawmtewmtewmdawmdawmdaxmdewmtexmdawmdawmdawmdexmtaxmtawmdawmdawmdawmtewmtewmdawmdawmdawmdexmdexmdawmdawmdawmtaxmdexmtawmdawmdawmdaxmtewmtewmdawmdawmdawmdexmdexmdawmdawmdawmdaxmtaxmtawmdawmdawmdewmtaxmtewmdawmdawmdawmtexmdexmdawmdawmdawmdaxmtaxmtawmdawmdawmdawmtewmtewmdawmdawmdaxmdewmtexmdawmdawmdawmdexmtaxmtawmdawmdawmdawmtewmtewmdawmdawmdawmdexmdexmdawmdawmdawmtaxmdexmtawmdawmdawmdaxmtewmtewmdawmdawmdawmdexmdexmdawmdawmdawmdaxmtaxmtawmdawmdawmdewmtaxmtewmdawmdawmdawmtexmdexmdawmdawmdawmdaxmtaxmtawmdawmdawmdawmtewmtewmdawmdawmdaxmdewmtexmdawmdawmdawmdexmtaxmtawmdawmdawmdawmtewmtewmdawmdawmdawmdexmdexmdawmdawmdawmtaxmdexmtawmdawmdawmdaxmtewmtewmdawmdawmdawmdexmdexmdawmdawmdawmdaxmtaxmtawmdawmdawmdewmtaxmtewmdawmdawmdawmtexmdexmdawmdawmdawmdaxmtaxmtawmdawmdawmdawmtewmtewmdawmdawmdaxmdewmtexmdawmdawmdawmdexmtaxmtawmdawmdawmdawmtewmtewmdawmdawmdawmdexmdexmdawmdawmdawmtaxmdexmtawmdawmdawmdaxmtewmtewmdawmdawmdawmdexmdexmdawmdawmdawmdaxmtaxmtawmdawmdawmdewmtaxmtewmdawmdawmdawmtexmdexmdawmdawmdawmdaxmtaxmtawmdawmdawmdawmtewmtewmdawmdawmdaxmdewmtexmdawmdawmdawmdexmtaxmtawmdawmdawmdawmtewmtewmdawmdawmdawmdexmdexmdawmdawmdawmtaxmdexmtawmdawmdawmdaxmtewmtewmdawmdawmdawmdexmdexmdawmdawmdawmdaxmtaxmtawmdawmdawmdewmtaxmtewmdawmdawmdawmtexmdexmdawmdawmdawmdaxmtaxmtawmdawmdawmdawmtewmtewmdawmdawmdaxmdewmtexmdawmdawmdawmdexmtaxmtawmdawmdawmdawmtewmtewmdawmdawmdawmdexmdexmdawmdawmdawmtaxmdexmtawmdawmdawmdaxmtewmtewmdawmdawmdawmdexmdexmdawmdawmdawmdaxmtaxmtawmdawmdawmdewmtaxmtewmdawmdawmdawmtexmdexmdawmdawmdawmdaxmtaxmtawmdawmdawmdawmtewmtewmdawmdawmdaxmdewmtexmdawmdawmdawmdexmtaxmtawmdawmdawmdawmtewmtewmdawmdawmdawmdexmdexmdawmdawmdawmtaxmdexmtawmdawmdawmdaxmtewmtewmdawmdawmdawmdexmdexmdawmdawmdawmdaxmtaxmtawmdawmdawmdewmtaxmtewmdawmdawmdawmtexmdexmdawmdawmdawmdaxmtaxmtawmdawmdawmdawmtewmtewmdawmdawmdaxmdewmtexmdawmdawmdawmdexmtaxmtawmdawmdawmdawmtewmtewmdawmdawmdawmdexmdexmdawmdawmdawmtaxmdexmtawmdawmdawmdaxmtewmtewmdawmdawmdawmdexmdexmdawmdawmdawmdaxmtaxmtawmdawmdawmdewmtaxmtewmdawmdawmdawmtexmdexmdawmdawmdawmdaxmtaxmtawmdawmdawmdawmtewmtewmdawmdawmdaxmdewmtexmdawmdawmdawmdexmtaxmtawmdawmdawmdawmtewmtewmdawmdawmdawmdexmdexmdawmdawmdawmtaxmdexmtawmdawmdawmdaxmtewmtewmdawmdawmdawmdexmdexmdawmdawmdawmdaxmtaxmtawmdawmdawmdewmtaxmtewmdawmdawmdawmtexmdexmdawmdawmdawmdaxmtaxmtawmdawmdawmdawmtewmtewmdawmdawmdaxmdewmtexmdawmdawmdawmdexmtaxmtawmdawmdawmdawmtewmtewmdawmdawmdawmdexmdexmdawmdawmdawmtaxmdexmtawmdawmdawmdaxmtewmtewmdawmdawmdawmdexmdexmdawmdawmdawmdaxmtaxmtawmdawmdawmdewmtaxmtewmdawmdawmdawmtexmdexmdawmdawmdawmdaxmtaxmtawmdawmdawmdawmtewmtewmdawmdawmdaxmdewmtexmdawmdawmdawmdexmtaxmtawmdawmdawmdawmtewmtewmdawmdawmdawmdexmdexmdawmdawmdawmtaxmdexmtawmdawmdawmdaxmtewmtewmdawmdawmdawmdexmdexmdawmdawmdawmdaxmtaxmtawmdawmdawmdewmtaxmtewmdawmdawmdawmtexmdexmdawmdawmdawmdaxmtaxmtawmdawmdawmdawmtewmtewmdawmdawmdaxmdewmtexmdawmdawmdawmdexmtaxmtawmdawmdawmdawmtewmtewmdawmdawmdawmdexmdexmdawmdawmdawmtaxmdexmtawmdawmdawmdaxmtewmtewmdawmdawmdawmdexmdexmdawmdawmdawmdaxmtaxmtawmdawmdawmdewmtaxmtewmdawmdawmdawmtexmdexmdawmdawmdawmdaxmtaxmtawmdawmdawmdawmtewmtewmdawmdawmdaxmdewmtexmdawmdawmdawmdexmtaxmtawmdawmdawmdawmtewmtewmdawmdawmdawmdexmdexmdawmdawmdawmtaxmdexmtawmdawmdawmdaxmtewmtewmdawmdawmdawmdexmdexmdawmdawmdawmdaxmtaxmtawmdawmdawmdewmtaxmtewmdawmdawmdawmtexmdexmdawmdawmdawmdaxmtaxmtawmdawmdawmdawmtewmtewmdawmdawmdaxmdewmtexmdawmdawmdawmdexmtaxmtawmdawmdawmdawmtewmtewmdawmdawmdawmdexmdexmdawmdawmdawmtaxmdexmtawmdawmdawmdaxmtewmtewmdawmdawmdawmdexmdexmdawmdawmdawmdaxmtaxmtawmdawmdawmdewmtaxmtewmdawmdawmdawmtexmdexmdawmdawmdawmdaxmtaxmtawmdawmdawmdawmtewmtewmdawmdawmdaxmdewmtexmdawmdawmdawmdexmtaxmtawmdawmdawmdawmtewmtewmdawmdawmdawmdexmdexmdawmdawmdawmtaxmdexmtawmdawmdawmdaxmtewmtewmdawmdawmdawmdexmdexmdawmdawmdawmdaxmtaxmtawmdawmdawmdewmtaxmtewmdawmdawmdawmtexmdaxmdawmdawmdawiwlonzlsbhvuiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagk0odq4nte1ntq4ndg1mtu3ndg0odu0otk0odq4ntq5otq4ndg1ntuzndg0odu0mtaxndg0oduxntu0odq4nte1ntq4ndg1mtu3ndg0odu0otk0odq4ntq5otq4ndg1ntuzndg0odu0mtaxndg0oduxntc0odq4nte1ntq4ndg1mtu3ndg0odu0otk0odq4ntq5otq4ndg1ntuzndg0odu0mtaxndg0oduyotk0odq4nte1ntq4ndg1mtu3ndg0odu0otk0odq4ntq5otq4ndg1ntuzndg0odu0mtaxndg0oduyotk0odq4nte1ntq4ndg1mtu3ndg0odu0otk0odq4ntq5otq4ndg1ntuzndg0odu0mtaxndg0oduzntm0odq4nte1ntq4ndg1mtu3ndg0odu0otk0odq4ntq5otq4ndg1ntuzndg0odu0mtaxndg0oduymtaxndg0oduxntu0odq4nte1nzq4ndg1ndk5ndg0odu0otk0odq4ntu1mzq4ndg1ndewmq" + "'", str1.equals("agludwxsagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhmdaxmtaxmtawmdawmdawmdawmtewmtewmdawmdawmdaxmdewmtexmdawmdawmdawmdexmtaxmtawmdawmdawmdawmtewmtewmdawmdawmdawmdexmdexmdawmdawmdawmtaxmdexmtawmdawmdawmdaxmtewmtewmdawmdawmdawmdexmdexmdawmdawmdawmdaxmtaxmtawmdawmdawmdewmtaxmtewmdawmdawmdawmtexmdexmdawmdawmdawmdaxmtaxmtawmdawmdawmdawmtewmtewmdawmdawmdaxmdewmtexmdawmdawmdawmdexmtaxmtawmdawmdawmdawmtewmtewmdawmdawmdawmdexmdexmdawmdawmdawmtaxmdexmtawmdawmdawmdaxmtewmtewmdawmdawmdawmdexmdexmdawmdawmdawmdaxmtaxmtawmdawmdawmdewmtaxmtewmdawmdawmdawmtexmdexmdawmdawmdawmdaxmtaxmtawmdawmdawmdawmtewmtewmdawmdawmdaxmdewmtexmdawmdawmdawmdexmtaxmtawmdawmdawmdawmtewmtewmdawmdawmdawmdexmdexmdawmdawmdawmtaxmdexmtawmdawmdawmdaxmtewmtewmdawmdawmdawmdexmdexmdawmdawmdawmdaxmtaxmtawmdawmdawmdewmtaxmtewmdawmdawmdawmtexmdexmdawmdawmdawmdaxmtaxmtawmdawmdawmdawmtewmtewmdawmdawmdaxmdewmtexmdawmdawmdawmdexmtaxmtawmdawmdawmdawmtewmtewmdawmdawmdawmdexmdexmdawmdawmdawmtaxmdexmtawmdawmdawmdaxmtewmtewmdawmdawmdawmdexmdexmdawmdawmdawmdaxmtaxmtawmdawmdawmdewmtaxmtewmdawmdawmdawmtexmdexmdawmdawmdawmdaxmtaxmtawmdawmdawmdawmtewmtewmdawmdawmdaxmdewmtexmdawmdawmdawmdexmtaxmtawmdawmdawmdawmtewmtewmdawmdawmdawmdexmdexmdawmdawmdawmtaxmdexmtawmdawmdawmdaxmtewmtewmdawmdawmdawmdexmdexmdawmdawmdawmdaxmtaxmtawmdawmdawmdewmtaxmtewmdawmdawmdawmtexmdexmdawmdawmdawmdaxmtaxmtawmdawmdawmdawmtewmtewmdawmdawmdaxmdewmtexmdawmdawmdawmdexmtaxmtawmdawmdawmdawmtewmtewmdawmdawmdawmdexmdexmdawmdawmdawmtaxmdexmtawmdawmdawmdaxmtewmtewmdawmdawmdawmdexmdexmdawmdawmdawmdaxmtaxmtawmdawmdawmdewmtaxmtewmdawmdawmdawmtexmdexmdawmdawmdawmdaxmtaxmtawmdawmdawmdawmtewmtewmdawmdawmdaxmdewmtexmdawmdawmdawmdexmtaxmtawmdawmdawmdawmtewmtewmdawmdawmdawmdexmdexmdawmdawmdawmtaxmdexmtawmdawmdawmdaxmtewmtewmdawmdawmdawmdexmdexmdawmdawmdawmdaxmtaxmtawmdawmdawmdewmtaxmtewmdawmdawmdawmtexmdexmdawmdawmdawmdaxmtaxmtawmdawmdawmdawmtewmtewmdawmdawmdaxmdewmtexmdawmdawmdawmdexmtaxmtawmdawmdawmdawmtewmtewmdawmdawmdawmdexmdexmdawmdawmdawmtaxmdexmtawmdawmdawmdaxmtewmtewmdawmdawmdawmdexmdexmdawmdawmdawmdaxmtaxmtawmdawmdawmdewmtaxmtewmdawmdawmdawmtexmdexmdawmdawmdawmdaxmtaxmtawmdawmdawmdawmtewmtewmdawmdawmdaxmdewmtexmdawmdawmdawmdexmtaxmtawmdawmdawmdawmtewmtewmdawmdawmdawmdexmdexmdawmdawmdawmtaxmdexmtawmdawmdawmdaxmtewmtewmdawmdawmdawmdexmdexmdawmdawmdawmdaxmtaxmtawmdawmdawmdewmtaxmtewmdawmdawmdawmtexmdexmdawmdawmdawmdaxmtaxmtawmdawmdawmdawmtewmtewmdawmdawmdaxmdewmtexmdawmdawmdawmdexmtaxmtawmdawmdawmdawmtewmtewmdawmdawmdawmdexmdexmdawmdawmdawmtaxmdexmtawmdawmdawmdaxmtewmtewmdawmdawmdawmdexmdexmdawmdawmdawmdaxmtaxmtawmdawmdawmdewmtaxmtewmdawmdawmdawmtexmdexmdawmdawmdawmdaxmtaxmtawmdawmdawmdawmtewmtewmdawmdawmdaxmdewmtexmdawmdawmdawmdexmtaxmtawmdawmdawmdawmtewmtewmdawmdawmdawmdexmdexmdawmdawmdawmtaxmdexmtawmdawmdawmdaxmtewmtewmdawmdawmdawmdexmdexmdawmdawmdawmdaxmtaxmtawmdawmdawmdewmtaxmtewmdawmdawmdawmtexmdexmdawmdawmdawmdaxmtaxmtawmdawmdawmdawmtewmtewmdawmdawmdaxmdewmtexmdawmdawmdawmdexmtaxmtawmdawmdawmdawmtewmtewmdawmdawmdawmdexmdexmdawmdawmdawmtaxmdexmtawmdawmdawmdaxmtewmtewmdawmdawmdawmdexmdexmdawmdawmdawmdaxmtaxmtawmdawmdawmdewmtaxmtewmdawmdawmdawmtexmdexmdawmdawmdawmdaxmtaxmtawmdawmdawmdawmtewmtewmdawmdawmdaxmdewmtexmdawmdawmdawmdexmtaxmtawmdawmdawmdawmtewmtewmdawmdawmdawmdexmdexmdawmdawmdawmtaxmdexmtawmdawmdawmdaxmtewmtewmdawmdawmdawmdexmdexmdawmdawmdawmdaxmtaxmtawmdawmdawmdewmtaxmtewmdawmdawmdawmtexmdexmdawmdawmdawmdaxmtaxmtawmdawmdawmdawmtewmtewmdawmdawmdaxmdewmtexmdawmdawmdawmdexmtaxmtawmdawmdawmdawmtewmtewmdawmdawmdawmdexmdexmdawmdawmdawmtaxmdexmtawmdawmdawmdaxmtewmtewmdawmdawmdawmdexmdexmdawmdawmdawmdaxmtaxmtawmdawmdawmdewmtaxmtewmdawmdawmdawmtexmdexmdawmdawmdawmdaxmtaxmtawmdawmdawmdawmtewmtewmdawmdawmdaxmdewmtexmdawmdawmdawmdexmtaxmtawmdawmdawmdawmtewmtewmdawmdawmdawmdexmdexmdawmdawmdawmtaxmdexmtawmdawmdawmdaxmtewmtewmdawmdawmdawmdexmdexmdawmdawmdawmdaxmtaxmtawmdawmdawmdewmtaxmtewmdawmdawmdawmtexmdexmdawmdawmdawmdaxmtaxmtawmdawmdawmdawmtewmtewmdawmdawmdaxmdewmtexmdawmdawmdawmdexmtaxmtawmdawmdawmdawmtewmtewmdawmdawmdawmdexmdexmdawmdawmdawmtaxmdexmtawmdawmdawmdaxmtewmtewmdawmdawmdawmdexmdexmdawmdawmdawmdaxmtaxmtawmdawmdawmdewmtaxmtewmdawmdawmdawmtexmdaxmdawmdawmdawiwlonzlsbhvuiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloiwloagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagkhagk0odq4nte1ntq4ndg1mtu3ndg0odu0otk0odq4ntq5otq4ndg1ntuzndg0odu0mtaxndg0oduxntu0odq4nte1ntq4ndg1mtu3ndg0odu0otk0odq4ntq5otq4ndg1ntuzndg0odu0mtaxndg0oduxntc0odq4nte1ntq4ndg1mtu3ndg0odu0otk0odq4ntq5otq4ndg1ntuzndg0odu0mtaxndg0oduyotk0odq4nte1ntq4ndg1mtu3ndg0odu0otk0odq4ntq5otq4ndg1ntuzndg0odu0mtaxndg0oduyotk0odq4nte1ntq4ndg1mtu3ndg0odu0otk0odq4ntq5otq4ndg1ntuzndg0odu0mtaxndg0oduzntm0odq4nte1ntq4ndg1mtu3ndg0odu0otk0odq4ntq5otq4ndg1ntuzndg0odu0mtaxndg0oduymtaxndg0oduxntu0odq4nte1nzq4ndg1ndk5ndg0odu0otk0odq4ntu1mzq4ndg1ndewmq"));
    }

    @Test
    public void test498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test498");
        java.lang.String str3 = strman.Strman.removeLeft("MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM300110001170010800108000570005500078001100011700108hi-hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101", "484849485248484948534848485349484849485548484948484848494954484849485748484856544848485150484849485648484856524848485150484849485248484948554848494849484848565148484851504848494852484849485548484948494848485651484848515048484948524848494855484849484948484856514848485150484849485248484948554848494849484848565148484851504848494852484849485548484948494848485651484848515048484948524848494855484849484948", true);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM300110001170010800108000570005500078001100011700108hi-hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101" + "'", str3.equals("MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM300110001170010800108000570005500078001100011700108hi-hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101"));
    }

    @Test
    public void test499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test499");
        java.lang.String str1 = strman.Strman.transliterate("N Ullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "N Ullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull" + "'", str1.equals("N Ullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull"));
    }

    @Test
    public void test500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test500");
        java.lang.String str1 = strman.Strman.htmlDecode("ihi97hhi97hi4848515548485157484854994848549948485553484854101484");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "null" + "'", str1.equals("null"));
    }
}

