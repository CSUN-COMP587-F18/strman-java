import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest8 {

    public static boolean debug = false;

    @Test
    public void test001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test001");
        java.lang.String str1 = strman.Strman.reverse("000000000100100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110111000000000011101010000000001101100000000000110110000000000001110010000000000110111000000000110100000000000011010010000000000100001");
        org.junit.Assert.assertTrue("'" + strstr1.equals
    }

    @Test
    public void test002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test002");
        java.lang.String str1 = strman.Strman.swapCase("00072001050010400105001050010400105000950010400104001050009500104001050005200056000520005600053000490005300053000520005600052000560005300049000530005500052000560005200056000530005200057000570005200056000520005600053000520005700057000520005600052000560005300053000530005100052000560005200056000530005200049000480004900052000560005200056000530004900053000530005200056000520005600053000490005300053000520005600052000560005300049000530005500052000560005200056000530005200057000570005200056000520005600053000520005700057000520005600052000560005300053000530005100052000560005200056000530005200049000480004900052000560005200056000530004900053000550005200056000520005600053000490005300053000520005600052000560005300049000530005500052000560005200056000530005200057000570005200056000520005600053000520005700057000520005600052000560005300053000530005100052000560005200056000530005200049000480004900052000560005200056000530005000057000570005200056000520005600053000490005300053000520005600052000560005300049000530005500052000560005200056000530005200057000570005200056000520005600053000520005700057000520005600052000560005300053000530005100052000560005200056000530005200049000480004900052000560005200056000530005000057000570005200056000520005600053000490005300053000520005600052000560005300049000530005500052000560005200056000530005200057000570005200056000520005600053000520005700057000520005600052000560005300053000530005100052000560005200056000530005200049000480004900052000560005200056000530005100053000510005200056000520005600053000490005300053000520005600052000560005300049000530005500052000560005200056000530005200057000570005200056000520005600053000520005700057000520005600052000560005300053000530005100052000560005200056000530005200049000480004900052000560005200056000530005000049000480004900052000560005200056000530004900053000530005200056000520005600053000490005300055000520005600052000560005300052000570005700052000560005200056000530005200057000570005200056000520005600053000530005300051000520005600052000560005300052000490004800049");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "00072001050010400105001050010400105000950010400104001050009500104001050005200056000520005600053000490005300053000520005600052000560005300049000530005500052000560005200056000530005200057000570005200056000520005600053000520005700057000520005600052000560005300053000530005100052000560005200056000530005200049000480004900052000560005200056000530004900053000530005200056000520005600053000490005300053000520005600052000560005300049000530005500052000560005200056000530005200057000570005200056000520005600053000520005700057000520005600052000560005300053000530005100052000560005200056000530005200049000480004900052000560005200056000530004900053000550005200056000520005600053000490005300053000520005600052000560005300049000530005500052000560005200056000530005200057000570005200056000520005600053000520005700057000520005600052000560005300053000530005100052000560005200056000530005200049000480004900052000560005200056000530005000057000570005200056000520005600053000490005300053000520005600052000560005300049000530005500052000560005200056000530005200057000570005200056000520005600053000520005700057000520005600052000560005300053000530005100052000560005200056000530005200049000480004900052000560005200056000530005000057000570005200056000520005600053000490005300053000520005600052000560005300049000530005500052000560005200056000530005200057000570005200056000520005600053000520005700057000520005600052000560005300053000530005100052000560005200056000530005200049000480004900052000560005200056000530005100053000510005200056000520005600053000490005300053000520005600052000560005300049000530005500052000560005200056000530005200057000570005200056000520005600053000520005700057000520005600052000560005300053000530005100052000560005200056000530005200049000480004900052000560005200056000530005000049000480004900052000560005200056000530004900053000530005200056000520005600053000490005300055000520005600052000560005300052000570005700052000560005200056000530005200057000570005200056000520005600053000530005300051000520005600052000560005300052000490004800049" + "'", str1.equals("00072001050010400105001050010400105000950010400104001050009500104001050005200056000520005600053000490005300053000520005600052000560005300049000530005500052000560005200056000530005200057000570005200056000520005600053000520005700057000520005600052000560005300053000530005100052000560005200056000530005200049000480004900052000560005200056000530004900053000530005200056000520005600053000490005300053000520005600052000560005300049000530005500052000560005200056000530005200057000570005200056000520005600053000520005700057000520005600052000560005300053000530005100052000560005200056000530005200049000480004900052000560005200056000530004900053000550005200056000520005600053000490005300053000520005600052000560005300049000530005500052000560005200056000530005200057000570005200056000520005600053000520005700057000520005600052000560005300053000530005100052000560005200056000530005200049000480004900052000560005200056000530005000057000570005200056000520005600053000490005300053000520005600052000560005300049000530005500052000560005200056000530005200057000570005200056000520005600053000520005700057000520005600052000560005300053000530005100052000560005200056000530005200049000480004900052000560005200056000530005000057000570005200056000520005600053000490005300053000520005600052000560005300049000530005500052000560005200056000530005200057000570005200056000520005600053000520005700057000520005600052000560005300053000530005100052000560005200056000530005200049000480004900052000560005200056000530005100053000510005200056000520005600053000490005300053000520005600052000560005300049000530005500052000560005200056000530005200057000570005200056000520005600053000520005700057000520005600052000560005300053000530005100052000560005200056000530005200049000480004900052000560005200056000530005000049000480004900052000560005200056000530004900053000530005200056000520005600053000490005300055000520005600052000560005300052000570005700052000560005200056000530005200057000570005200056000520005600053000530005300051000520005600052000560005300052000490004800049"));
    }

    @Test
    public void test003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test003");
        java.lang.String str1 = strman.Strman.binEncode
    }

    @Test
    public void test004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test004");
        java.lang.String str1 = strman.Strman.binEncode("n000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97Nnull97Unull97Lnull97Lnull979null977null97u000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97Nnull97Unull97Lnull97Lnull979null977null97l000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97Nnull97Unull97Lnull97Lnull979null977null97l
    }

    @Test
    public void test005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test005");
        java.util.Optional<java.lang.String> strOptional1 = strman.Strman.trimStart("MDAwNzIwMDEwNTAwMTA0MDAxMDUwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDExMDAwMTE3MDAxMDgwMDEwODAwMDU3MDAwNTUwMDEwNDAwMTA1MDAwMzM=");
        org.junit.Assert.assertNotNull(strOptional1);
    }

    @Test
    public void test006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test006");
        java.lang.String str1 = strman.Strman.toStudlyCase("hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "HiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiNull97hi00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e" + "'", str1.equals("HiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiNull97hi00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e"));
    }

    @Test
    public void test007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test007");
        boolean boolean2 = strman.Strman.isEnclosedBetween("n_u_l_l97hihi", "nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test008");
        java.lang.String str3 = strman.Strman.ensureRight("nULL97NNULhiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiNull97hiNull97nnulhiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiNull97hiNull97nnul", "", true);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "nULL97NNULhiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiNull97hiNull97nnulhiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiNull97hiNull97nnul" + "'", str3.equals("nULL97NNULhiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiNull97hiNull97nnulhiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiNull97hiNull97nnul"));
    }

    @Test
    public void test009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test009");
        java.lang.String str2 = strman.Strman.removeLeft("hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!00300030003100310030003000300031003100370030003000310030003800300030003100300038003000300030003500370030003000300035003500300030003000370038003000300031003100300030003000310031003700300030003100300038", "00072001050010400105001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001100011700108001080005700055001040010500033");
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!00300030003100310030003000300031003100370030003000310030003800300030003100300038003000300030003500370030003000300035003500300030003000370038003000300031003100300030003000310031003700300030003100300038" + "'", str2.equals("hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!00300030003100310030003000300031003100370030003000310030003800300030003100300038003000300030003500370030003000300035003500300030003000370038003000300031003100300030003000310031003700300030003100300038"));
    }

    @Test
    public void test010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test010");
        java.lang.String str1 = strman.Strman.binEncode("0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001050000000000hI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!");
        org.junit.Assert.assertTrue("'" + strstr1.equals
    }

    @Test
    public void test011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test011");
        long long2 = strman.Strman.countSubstr
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
    }

    @Test
    public void test012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test012");
        java.lang.String str3 = strman.Strman.safeTruncate("Hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e", 256, "!ih");
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "!ih" + "'", str3.equals("!ih"));
    }

    @Test
    public void test013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test013");
        java.lang.String str3 = strman.Strman.rightPad("ullnullnullnullnullnullnull_null97nnul1097null971097", "N000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97nnull97unull97lnull97lnull979null977null97u000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97nnull97unull97lnull97lnull979null977null97l000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97nnull97unull97lnull97lnull979null977null97l
    }

    @Test
    public void test014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test014");
        java.lang.String str3 = strman.Strman.ensureRight("null97hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!nnull97hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!unull97hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!lnull97hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!lnull979null977null97hihi", "nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull", false);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "null97hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!nnull97hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!unull97hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!lnull97hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!lnull979null977null97hihinullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull" + "'", str3.equals("null97hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!nnull97hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!unull97hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!lnull97hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!lnull979null977null97hihinullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull"));
    }

    @Test
    public void test015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test015");
        boolean boolean1 = strman.Strman.isLowerCase("n-u-l-l97-n-ullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
    }

    @Test
    public void test016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test016");
        boolean boolean2 = strman.Strman.endsWith("1null97null97_nnul_n_u_l_l97_n_n_u_l!ihhI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!", "null97hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!nnull97hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!unull97hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!lnull97hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!lnull979null977null97hihi");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test017");
        java.lang.String str1 = strman.Strman.dasherize");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "" + "'", str1.equals"));
    }

    @Test
    public void test018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test018");
        java.lang.String str1 = strman.Strman.rightTrim
        org.junit.Assert.assertTrue("'" + strstr1.equals
    }

    @Test
    public void test019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test019");
        java.lang.String str1 = strman.Strman.slugify("nULL97NNULNullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "null97nnulnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull" + "'", str1.equals("null97nnulnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull"));
    }

    @Test
    public void test020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test020");
        java.lang.String[] strArray1 = strman.Strman.words("hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!006e0075006c006c00390037null9779LLUN779LLUN979LLUNl79LLUNl79LLUNu79LLUNn79LLUN");
        org.junit.Assert.assertNotNull(strArray1);
    }

    @Test
    public void test021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test021");
        int int2 = strman.Strman.lastIndexOf("Null97 nnull97 unull97 lnull97 lnull979null977null97", "hinullhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
    }

    @Test
    public void test022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test022");
        java.lang.String str1 = strman.Strman.base64Encode("000000005500000000570000000076000000007600000000850000000078000000005500000000550000000057000000007600000000760000000085000000007800000000570000000055000000005700000000760000000076000000008500000000780000000108000000005500000000570000000076000000007600000000850000000078000000010800000000550000000057000000007600000000760000000085000000007800000001170000000055000000005700000000760000000076000000008500000000780000000110000000005500000000570000000076000000007600000000850000000078");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "MDAwMDAwMDA1NTAwMDAwMDAwNTcwMDAwMDAwMDc2MDAwMDAwMDA3NjAwMDAwMDAwODUwMDAwMDAwMDc4MDAwMDAwMDA1NTAwMDAwMDAwNTUwMDAwMDAwMDU3MDAwMDAwMDA3NjAwMDAwMDAwNzYwMDAwMDAwMDg1MDAwMDAwMDA3ODAwMDAwMDAwNTcwMDAwMDAwMDU1MDAwMDAwMDA1NzAwMDAwMDAwNzYwMDAwMDAwMDc2MDAwMDAwMDA4NTAwMDAwMDAwNzgwMDAwMDAwMTA4MDAwMDAwMDA1NTAwMDAwMDAwNTcwMDAwMDAwMDc2MDAwMDAwMDA3NjAwMDAwMDAwODUwMDAwMDAwMDc4MDAwMDAwMDEwODAwMDAwMDAwNTUwMDAwMDAwMDU3MDAwMDAwMDA3NjAwMDAwMDAwNzYwMDAwMDAwMDg1MDAwMDAwMDA3ODAwMDAwMDAxMTcwMDAwMDAwMDU1MDAwMDAwMDA1NzAwMDAwMDAwNzYwMDAwMDAwMDc2MDAwMDAwMDA4NTAwMDAwMDAwNzgwMDAwMDAwMTEwMDAwMDAwMDA1NTAwMDAwMDAwNTcwMDAwMDAwMDc2MDAwMDAwMDA3NjAwMDAwMDAwODUwMDAwMDAwMDc4" + "'", str1.equals("MDAwMDAwMDA1NTAwMDAwMDAwNTcwMDAwMDAwMDc2MDAwMDAwMDA3NjAwMDAwMDAwODUwMDAwMDAwMDc4MDAwMDAwMDA1NTAwMDAwMDAwNTUwMDAwMDAwMDU3MDAwMDAwMDA3NjAwMDAwMDAwNzYwMDAwMDAwMDg1MDAwMDAwMDA3ODAwMDAwMDAwNTcwMDAwMDAwMDU1MDAwMDAwMDA1NzAwMDAwMDAwNzYwMDAwMDAwMDc2MDAwMDAwMDA4NTAwMDAwMDAwNzgwMDAwMDAwMTA4MDAwMDAwMDA1NTAwMDAwMDAwNTcwMDAwMDAwMDc2MDAwMDAwMDA3NjAwMDAwMDAwODUwMDAwMDAwMDc4MDAwMDAwMDEwODAwMDAwMDAwNTUwMDAwMDAwMDU3MDAwMDAwMDA3NjAwMDAwMDAwNzYwMDAwMDAwMDg1MDAwMDAwMDA3ODAwMDAwMDAxMTcwMDAwMDAwMDU1MDAwMDAwMDA1NzAwMDAwMDAwNzYwMDAwMDAwMDc2MDAwMDAwMDA4NTAwMDAwMDAwNzgwMDAwMDAwMTEwMDAwMDAwMDA1NTAwMDAwMDAwNTcwMDAwMDAwMDc2MDAwMDAwMDA3NjAwMDAwMDAwODUwMDAwMDAwMDc4"));
    }

    @Test
    public void test023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test023");
        java.lang.String str1 = strman.Strman.htmlEncode("bl91X2xfbDk3aGloaQ==");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull&equals;&equals;" + "'", str1.equals("nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull&equals;&equals;"));
    }

    @Test
    public void test024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test024");
        java.util.Optional<java.lang.String> strOptional1 = strman.Strman.trimStart("!ihnullnull97Nnull97Unull97Lnull97Lnull979null977nuln_u_l_l97_n_ullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnulll97NULL9748485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101");
        org.junit.Assert.assertNotNull(strOptional1);
    }

    @Test
    public void test025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test025");
        int int1 = strman.Strman.length("000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97-nnull97-unull97-lnull97-lnull979null977null97");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 298 + "'", int1 == 298);
    }

    @Test
    public void test026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test026");
        try {
            java.lang.String str3 = strman.Strman.slice("N-ullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull", 2851, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2841");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        }
    }

    @Test
    public void test027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test027");
        java.lang.String str1 = strman.Strman.collapseWhitespace("
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "str1.equals("
    }

    @Test
    public void test028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test028");
        java.lang.String str1 = strman.Strman.toStudlyCase("10010110000000000001001000000000");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "10010110000000000001001000000000" + "'", str1.equals("10010110000000000001001000000000"));
    }

    @Test
    public void test029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test029");
        java.lang.String[] strArray1 = null;
        try {
            java.util.Optional<java.lang.String> strOptional2 = strman.Strman.trimStart("Null97Nnull97Unull97Lnull97Lnull979Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Tl Vmtdk3null977null97NULL97Nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull", strArray1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Input array 'strings' can't be null");
        } catch (java.lang.IllegalArgumentException e) {
        }
    }

    @Test
    public void test030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test030");
        java.lang.String str2 = strman.Strman.removeRight("Mw==", "a-whp-x2ghi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_null97hi00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006ehi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!");
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "Mw==" + "'", str2.equals("Mw=="));
    }

    @Test
    public void test031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test031");
        int int4 = strman.Strman.lastIndexOf("hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL979710", "1097", 298, true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
    }

    @Test
    public void test032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test032");
        java.lang.String[] strArray3 = strman.Strman.split("hi!hi!", "hi!");
        java.lang.String str5 = strman.Strman.join(strArray3, "hihi");
        java.lang.String[] strArray6 = strman.Strman.removeEmptyStrings(strArray3);
        java.lang.String str7 = strman.Strman.appendArray("N u l l97hihi", strArray3);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "" + "'", str5.equals(""));
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + str7 + "' != '" + "N u l l97hihi" + "'", str7.equals("N u l l97hihi"));
    }

    @Test
    public void test033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test033");
        java.lang.String[] strArray5 = strman.Strman.chars("null");
        java.lang.String str6 = strman.Strman.format("null97nnul", strArray5);
        java.lang.String str7 = strman.Strman.prepend("hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e", strArray5);
        java.lang.String str9 = strman.Strman.join(strArray5, "TnVsbDk3bm51bA==");
        boolean boolean11 = strman.Strman.containsAll("nullnullnullnullnullnullnullnullnullnull", strArray5, false);
        java.lang.String str12 = strman.Strman.prepend("hinullhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101", strArray5);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "null97nnul" + "'", str6.equals("null97nnul"));
        org.junit.Assert.assertTrue("'" + str7 + "' != '" + "nullhi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e" + "'", str7.equals("nullhi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e"));
        org.junit.Assert.assertTrue("'" + str9 + "' != '" + "nTnVsbDk3bm51bA==uTnVsbDk3bm51bA==lTnVsbDk3bm51bA==l" + "'", str9.equals("nTnVsbDk3bm51bA==uTnVsbDk3bm51bA==lTnVsbDk3bm51bA==l"));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "nullhinullhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101" + "'", str12.equals("nullhinullhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101"));
    }

    @Test
    public void test034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test034");
        java.lang.String[] strArray1 = null;
        java.lang.String str2 = strman.Strman.prependArray("33727333727333727333Null000780008500076000760005700055001100007800085000760007600057000550011700078000850007600076000570005500108000780008500076000760005700055001080007800085000760007600057000550005700078000850007600076000570005500055000780008500076000760005700055", strArray1);
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "33727333727333727333Null000780008500076000760005700055001100007800085000760007600057000550011700078000850007600076000570005500108000780008500076000760005700055001080007800085000760007600057000550005700078000850007600076000570005500055000780008500076000760005700055" + "'", str2.equals("33727333727333727333Null000780008500076000760005700055001100007800085000760007600057000550011700078000850007600076000570005500108000780008500076000760005700055001080007800085000760007600057000550005700078000850007600076000570005500055000780008500076000760005700055"));
    }

    @Test
    public void test035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test035");
        try {
            java.lang.String str3 = strman.Strman.slice("Nzlsb-hvu-nzc5b-gx1bjk3-owxsd-w5-mnzlsb-hvu-tdc5b-gx1bl-u3-owxsd-w5-onzlsb-hvu", 30, 612);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 612");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        }
    }

    @Test
    public void test036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test036");
        int int3 = strman.Strman.lastIndexOf("33727333727333727333nullfalse);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
    }

    @Test
    public void test037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test037");
        java.lang.String[] strArray1 = strman.Strman.chars("nullnull97nnulnull97null97null97Nnull97Unull97Lnull97Lnull979null977null97");
        org.junit.Assert.assertNotNull(strArray1);
    }

    @Test
    public void test038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test038");
        int int2 = strman.Strman.lastIndexOf("hiHinull97nnul", "hIHIHIHInull97Nnull97Unull97Lnull97Lnull979null977null979710");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
    }

    @Test
    public void test039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test039");
        java.lang.String[] strArray1 = strman.Strman.words("Nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull97Nnull97Unull97Lnull97Lnull979null977null97null97Mda2 ztaw nz uw mdzj mda2 yz aw mzkw mdm3nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull000000005500000000570000000076000000007600000000850000000078000000005500000000550000000057000000007600000000760000000085000000007800000000570000000055000000005700000000760000000076000000008500000000780000000108000000005500000000570000000076000000007600000000850000000078000000010800000000550000000057000000007600000000760000000085000000007800000001170000000055000000005700000000760000000076000000008500000000780000000110000000005500000000570000000076000000007600000000850000000078hihi");
        org.junit.Assert.assertNotNull(strArray1);
    }

    @Test
    public void test040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test040");
        java.lang.String str1 = strman.Strman.base64Encode
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "" + "'", str1.equals(""));
    }

    @Test
    public void test041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test041");
        java.lang.String str1 = strman.Strman.decEncode("=g2xphwA");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "0006100103000500012000112001040011900065" + "'", str1.equals("0006100103000500012000112001040011900065"));
    }

    @Test
    public void test042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test042");
        java.lang.String str3 = strman.Strman.leftPad("79llun779llun979llunl79llunl79llunu79llunn79llun79lluN1200940084001200940084001200940084001200", "hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!Hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!blVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100", 202);
    }

    @Test
    public void test043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test043");
        java.lang.String str3 = strman.Strman.leftPad("nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull&UnderBar;null", "nullhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!nullnull97nnulnull971lunn79llun", (int) (byte) 100);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull&UnderBar;null" + "'", str3.equals("nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull&UnderBar;null"));
    }

    @Test
    public void test044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test044");
        try {
            java.lang.String str3 = strman.Strman.truncatexMTAxMTAwMDAwMDAwMDEwMTAxMTEwMDAwMDAwMDAwMTExMDExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDAxMDAxMTEwMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAxMDEwMTExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDEwMDEwMTEwMDAwMDAwMDAwMDAxMDExMDAwMDAwMDAwMTAxMTAxMDAwMDAwMDAwMDEwMDEwMTEwMDAwMDAwMDAwMDAxMDExMDAwMDAwMDAwaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaS1oihiH");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -352");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        }
    }

    @Test
    public void test045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test045");
        int int4 = strman.Strman.indexOf("9ihi H7", "Nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull", 256, false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
    }

    @Test
    public void test046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test046");
        java.lang.String str1 = strman.Strman.reverse("llunhihi779llun979llunL79llunL79llunU79llunN79llun");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "null97Nnull97Unull97Lnull97Lnull979null977ihihnull" + "'", str1.equals("null97Nnull97Unull97Lnull97Lnull979null977ihihnull"));
    }

    @Test
    public void test047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test047");
        java.lang.String str1 = strman.Strman.leftTrim("004e0055004c004c00390037004e004e0055004c002100690068");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "004e0055004c004c00390037004e004e0055004c002100690068" + "'", str1.equals("004e0055004c004c00390037004e004e0055004c002100690068"));
    }

    @Test
    public void test048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test048");
        int int1 = strman.Strman.length("402");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 3 + "'", int1 == 3);
    }

    @Test
    public void test049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test049");
        java.lang.String str3 = strman.Strman.removeRight("006E0075006C006C00390037006E0075006C006C00390037006E0075006C006C00390037006E0075006C006C00390037006E0075006C006C00390037006E0075006C006C00390037006E0075006C006C00390037006E0075006C006C00390037006E0075006C006C00390037006E0075006C006C00390037nULL", "hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!", true);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "006E0075006C006C00390037006E0075006C006C00390037006E0075006C006C00390037006E0075006C006C00390037006E0075006C006C00390037006E0075006C006C00390037006E0075006C006C00390037006E0075006C006C00390037006E0075006C006C00390037006E0075006C006C00390037nULL" + "'", str3.equals("006E0075006C006C00390037006E0075006C006C00390037006E0075006C006C00390037006E0075006C006C00390037006E0075006C006C00390037006E0075006C006C00390037006E0075006C006C00390037006E0075006C006C00390037006E0075006C006C00390037006E0075006C006C00390037nULL"));
    }

    @Test
    public void test050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test050");
        java.lang.String str3 = strman.Strman.rightPad("hinullhihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000", "", (int) ' ');
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "hinullhihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000" + "'", str3.equals("hinullhihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000"));
    }

    @Test
    public void test051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test051");
        java.lang.String str2 = strman.Strman.repeat("NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!", 480);
    }

    @Test
    public void test052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test052");
        java.lang.String str1 = strman.Strman.capitalize("null97Nnul");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "Null97nnul" + "'", str1.equals("Null97nnul"));
    }

    @Test
    public void test053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test053");
        boolean boolean4 = strman.Strman.endsWith("1lunn79llun", "ullnullnullnullnullnullnull", 68, true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test054");
        java.lang.String str3 = strman.Strman.removeRight("Hihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100", "10145848435558484994584849945848475158484551584841012584841014584843555848499458484994584847515848455158484353584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484751584841014584843555848499458484994584847515848455158484551584841014584843555848499458484994584847515848455158484ihihh_ihI", true);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "Hihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100" + "'", str3.equals("Hihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100"));
    }

    @Test
    public void test055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test055");
        boolean boolean2 = strman.Strman.inequal("Hihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihinull97hihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihiNULL97NUllnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullHihihihiNULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL979710g2xphwA000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97Nnull97Unull97Lnull97Lnull979null977null97Hihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihinull97hiullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
    }

    @Test
    public void test056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test056");
        java.util.Optional<java.lang.String> strOptional1 = strman.Strman.tail("Hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!Mda2ztaWnZuWmdzJmda2yZaWmZKWmdm3mda2ztaWnZuWmdzJmda2yZaWmZKWmdm3mda2ztaWnZuWmdzJmda2yZaWmZKWmdm3mda2ztaWnZuWmdzJmda2yZaWmZKWmdm3mda2ztaWnZuWmdzJmda2yZaWmZKWmdm3mda2ztaWnZuWmdzJmda2yZaWmZKWmdm3mda2ztaWnZuWmdzJmda2yZaWmZKWmdm3mda2ztaWnZuWmdzJmda2yZaWmZKWmdm3mda2ztaWnZuWmdzJmda2yZaWmZKWmdm3mda2ztaWnZuWmdzJmda2yZaWmZKWmdm3tNvSBa==");
        org.junit.Assert.assertNotNull(strOptional1);
    }

    @Test
    public void test057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test057");
        java.lang.String str1 = strman.Strman.decEncode("000480004800048000480004900112000480004800048000480004900114000480004800048000480005100105000480004800048000480005100105000480004800048000480005100114000480004800048000480005100107000480004800048000480004900112000480004800048000480004900112000480004800048000480004900114000480004800048000480005100105000480004800048000480005100105000480004800048000480005100114000480004800048000480005100107000480004800048000480004900114000480004800048000480004900112000480004800048000480004900114000480004800048000480005100105000480004800048000480005100105000480004800048000480005100114000480004800048000480005100107000480004800048000480005100105000480004800048000480004900112000480004800048000480004900114000480004800048000480005100105000480004800048000480005100105000480004800048000480005100114000480004800048000480005100107000480004800048000480005100105000480004800048000480004900112000480004800048000480004900114000480004800048000480005100105000480004800048000480005100105000480004800048000480005100114000480004800048000480005100107000480004800048000480005100114000480004800048000480004900112000480004800048000480004900114000480004800048000480005100105000480004800048000480005100105000480004800048000480005100114000480004800048000480005100107000480004800048000480005100107000480004800048000480004900112000480004800048000480004900114000480004800048000480005100105000480004800048000480005100105000480004800048000480005100114000480004800048000480005100107000480004800048000480004900112000480004800048000480004900114000480004800048000480005100105000480004800048000480005100105000480004800048000480005100114000480004800048000480005100107000480004800048000480004900112000480004800048000480004900112000480004800048000480004900114000480004800048000480005100105000480004800048000480005100105000480004800048000480005100114000480004800048000480005100107000480004800048000480004900114000480004800048000480004900112000480004800048000480004900114000480004800048000480005100105000480004800048000480005100105000480004800048000480005100114000480004800048000480005100107000480004800048000480005100105000480004800048000480004900112000480004800048000480004900114000480004800048000480005100105000480004800048000480005100105000480004800048000480005100114000480004800048000480005100107000480004800048000480005100105000480004800048000480004900112000480004800048000480004900114000480004800048000480005100105000480004800048000480005100105000480004800048000480005100114000480004800048000480005100107000480004800048000480005100114000480004800048000480004900112000480004800048000480004900114000480004800048000480005100105000480004800048000480005100105000480004800048000480005100114000480004800048000480005100107000480004800048000480005100107000480004800048000480004900112000480004800048000480004900114000480004800048000480005100105000480004800048000480005100105000480004800048000480005100114000480004800048000480005100107");
    }

    @Test
    public void test058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test058");
        boolean boolean1 = strman.Strman.isLowerCase
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
    }

    @Test
    public void test059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test059");
        java.lang.String str1 = strman.Strman.capitalize("006e00680069006800690048006900480069007500680069006800690048006900480069006c00680069006800690048006900480069006c");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "006e00680069006800690048006900480069007500680069006800690048006900480069006c00680069006800690048006900480069006c" + "'", str1.equals("006e00680069006800690048006900480069007500680069006800690048006900480069006c00680069006800690048006900480069006c"));
    }

    @Test
    public void test060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test060");
        java.lang.String[] strArray4 = strman.Strman.between("000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100", "hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hihi!");
        boolean boolean6 = strman.Strman.containsAny("Hihihihinull97nnull97unull97lnull97lnull979null977null979710", strArray4, false);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test061");
        java.lang.String str3 = strman.Strman.truncate("0004800048000480004800048000480004800048000480004800049000490004800048000490004900048000480004800048000480004800048000480004800048000490004900048000490004800049", 96, "1097nullnull97nnulhi");
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "00048000480004800048000480004800048000480004800048000490004900048000480004901097nullnull97nnulhi" + "'", str3.equals("00048000480004800048000480004800048000480004800048000490004900048000480004901097nullnull97nnulhi"));
    }

    @Test
    public void test062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test062");
        java.lang.String str3 = strman.Strman.safeTruncate("001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IHhi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_null97hi00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006ehi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!==AbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnb", 6, "tnvsbdk3bm51ba");
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "tnvsbdk3bm51ba" + "'", str3.equals("tnvsbdk3bm51ba"));
    }

    @Test
    public void test063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test063");
        java.util.Optional<java.lang.String> strOptional2 = strman.Strman.at("001040010500110001170010800108000570005500078001100011700108Hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!", (int) '#');
        org.junit.Assert.assertNotNull(strOptional2);
    }

    @Test
    public void test064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test064");
        int int1 = strman.Strman.length");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8704 + "'", int1 == 8704);
    }

    @Test
    public void test065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test065");
        boolean boolean2 = strman.Strman.isEnclosedBetween("001040010500110001170010800108000570005500078001100011700108", "00530065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b006800200074006c00200076006d00740064006b00331lunn79llun00077001190006100061nullnull97nnul=g2xphwA000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97Nnull97Unull97Lnull97Lnull979null977null97Hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hihi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hiMw==");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test066");
        long long2 = strman.Strman.countSubstr("MDA2ODAwNjkwMDJkMDA2ODAwNjkwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzEwMDM1MDAzNTAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzMTAwMzUwMDM3MDAzNDAwMzgwMDM0MDAzODAwMzUwMDM0MDAzOTAwMzkwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzQwMDM5MDAzOTAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzNTAwMzUwMDMzMDAzNDAwMzgwMDM0MDAzODAwMzUwMDM0MDAzMTAwMzAwMDMxMDAzNDAwMzgwMDM0MDAzODAwMzUwMDMxMDAzNTAwMzUwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzEwMDM1MDAzNTAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzMTAwMzUwMDM3MDAzNDAwMzgwMDM0MDAzODAwMzUwMDM0MDAzOTAwMzkwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzQwMDM5MDAzOTAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzNTAwMzUwMDMzMDAzNDAwMzgwMDM0MDAzODAwMzUwMDM0MDAzMTAwMzAwMDMxMDAzNDAwMzgwMDM0MDAzODAwMzUwMDMxMDAzNTAwMzcwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzEwMDM1MDAzNTAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzMTAwMzUwMDM3MDAzNDAwMzgwMDM0MDAzODAwMzUwMDM0MDAzOTAwMzkwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzQwMDM5MDAzOTAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzNTAwMzUwMDMzMDAzNDAwMzgwMDM0MDAzODAwMzUwMDM0MDAzMTAwMzAwMDMxMDAzNDAwMzgwMDM0MDAzODAwMzUwMDMyMDAzOTAwMzkwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzEwMDM1MDAzNTAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzMTAwMzUwMDM3MDAzNDAwMzgwMDM0MDAzODAwMzUwMDM0MDAzOTAwMzkwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzQwMDM5MDAzOTAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzNTAwMzUwMDMzMDAzNDAwMzgwMDM0MDAzODAwMzUwMDM0MDAzMTAwMzAwMDMxMDAzNDAwMzgwMDM0MDAzODAwMzUwMDMyMDAzOTAwMzkwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzEwMDM1MDAzNTAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzMTAwMzUwMDM3MDAzNDAwMzgwMDM0MDAzODAwMzUwMDM0MDAzOTAwMzkwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzQwMDM5MDAzOTAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzNTAwMzUwMDMzMDAzNDAwMzgwMDM0MDAzODAwMzUwMDM0MDAzMTAwMzAwMDMxMDAzNDAwMzgwMDM0MDAzODAwMzUwMDMzMDAzNTAwMzMwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzEwMDM1MDAzNTAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzMTAwMzUwMDM3MDAzNDAwMzgwMDM0MDAzODAwMzUwMDM0MDAzOTAwMzkwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzQwMDM5MDAzOTAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzNTAwMzUwMDMzMDAzNDAwMzgwMDM0MDAzODAwMzUwMDM0MDAzMTAwMzAwMDMxMDAzNDAwMzgwMDM0MDAzODAwMzUwMDMyMDAzMTAwMzAwMDMxMDAzNDAwMzgwMDM0MDAzODAwMzUwMDMxMDAzNTAwMzUwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzEwMDM1MDAzNzAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzNDAwMzkwMDM5MDAzNDAwMzgwMDM0MDAzODAwMzUwMDM0MDAzOTAwMzkwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzUwMDM1MDAzMzAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzNDAwMzEwMDMwMDAzMTAwMzAwMDMwMDAzMDAwMzAwMDMwMDAzMDAwMzAwMDMwMDAzMDAwMzEwMDMwMDAzMDAwMzEwMDMwMDAzMDAwMzAwMDMwMDAzMDAwMzAwMDMwMDAzMDAwMzAwMDMwMDAzMDAwMzAwMDMxMDAzMTAwMzAwMDMxMDAzMDAwMzAwMDMx", "1null97null97 nnul n u l l97 n n u l!ih");
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
    }

    @Test
    public void test067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test067");
        java.lang.String str1 = strman.Strman.slugify("MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3TnVsbA==");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "mda2ztawnzuwmdzjmda2yzawmzkwmdm3mda2ztawnzuwmdzjmda2yzawmzkwmdm3mda2ztawnzuwmdzjmda2yzawmzkwmdm3mda2ztawnzuwmdzjmda2yzawmzkwmdm3mda2ztawnzuwmdzjmda2yzawmzkwmdm3mda2ztawnzuwmdzjmda2yzawmzkwmdm3mda2ztawnzuwmdzjmda2yzawmzkwmdm3mda2ztawnzuwmdzjmda2yzawmzkwmdm3mda2ztawnzuwmdzjmda2yzawmzkwmdm3mda2ztawnzuwmdzjmda2yzawmzkwmdm3tnvsba" + "'", str1.equals("mda2ztawnzuwmdzjmda2yzawmzkwmdm3mda2ztawnzuwmdzjmda2yzawmzkwmdm3mda2ztawnzuwmdzjmda2yzawmzkwmdm3mda2ztawnzuwmdzjmda2yzawmzkwmdm3mda2ztawnzuwmdzjmda2yzawmzkwmdm3mda2ztawnzuwmdzjmda2yzawmzkwmdm3mda2ztawnzuwmdzjmda2yzawmzkwmdm3mda2ztawnzuwmdzjmda2yzawmzkwmdm3mda2ztawnzuwmdzjmda2yzawmzkwmdm3mda2ztawnzuwmdzjmda2yzawmzkwmdm3tnvsba"));
    }

    @Test
    public void test068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test068");
        java.lang.String[] strArray3 = strman.Strman.words("1097nullnull97nnulhi006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037", "006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c");
        java.util.Optional<java.lang.String> strOptional4 = strman.Strman.trimEnd("", strArray3);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(strOptional4);
    }

    @Test
    public void test069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test069");
        boolean boolean2 = strman.Strman.isEnclosedBetween("HihihihiNULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL979710", "001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001100011700108001080005700055HiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiNull97hiNull97nnul");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test070");
        java.lang.String str3 = strman.Strman.leftPad("Ihi Hhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97", "006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037Null97", 64);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "Ihi Hhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97" + "'", str3.equals("Ihi Hhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97"));
    }

    @Test
    public void test071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test071");
        boolean boolean3 = strman.Strman.isEnclosedBetween("Null97nnul1097null971097nULL97NNULNullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullhi-hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101", "LLUNLLUN", "3kdtm_v_l_t_hke_s_hke_s_hke_s_hke_s_30");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test072");
        java.lang.String[] strArray3 = strman.Strman.lines("hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!");
        java.lang.String str4 = strman.Strman.prepend("null97", strArray3);
        java.lang.String str6 = strman.Strman.join(strArray3, "006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037Null");
        java.lang.String str8 = strman.Strman.join(strArray3, "Null97Nnull97Unull97Lnull97Lnull979null977null97");
        java.util.Optional<java.lang.String> strOptional9 = strman.Strman.trimEnd("hiHinull97nnulnull97null97nnull97unull97lnull97lnull979null977null97hihihiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiNull97hiNullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull", strArray3);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97" + "'", str4.equals("hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97"));
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!" + "'", str6.equals("hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!"));
        org.junit.Assert.assertTrue("'" + str8 + "' != '" + "hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!" + "'", str8.equals("hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!"));
        org.junit.Assert.assertNotNull(strOptional9);
    }

    @Test
    public void test073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test073");
        java.lang.String str2 = strman.Strman.removeRight("null000780008500076000760005700055001100007800085000760007600057000550011700078000850007600076000570005500108000780008500076000760005700055001080007800085000760007600057000550005700078000850007600076000570005500055000780008500076000760005700055hinullhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hiih79llun!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ihhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101", "");
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "null000780008500076000760005700055001100007800085000760007600057000550011700078000850007600076000570005500108000780008500076000760005700055001080007800085000760007600057000550005700078000850007600076000570005500055000780008500076000760005700055hinullhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hiih79llun!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ihhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101" + "'", str2.equals("null000780008500076000760005700055001100007800085000760007600057000550011700078000850007600076000570005500108000780008500076000760005700055001080007800085000760007600057000550005700078000850007600076000570005500055000780008500076000760005700055hinullhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111001000000000!ih79llun!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ihhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101"));
    }

    @Test
    public void test074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test074");
        java.lang.String str3 = strman.Strman.surround("MDAwOTgwMDEwODAwMDU3MDAwNDkwMDA4ODAwMDUwMDAxMjAwMDEwMjAwMDk4MDAwNjgwMDEwNzAwMDUxMDAwODgwMDA1MDAwMDUzMDAxMDIwMDEwMDAwMDg3MDAxMjAwMDExNTAwMDk4MDAxMTAwMDA4NjAwMTE1MDAwOTgwMDA3MTAwMDUzMDAwNDkwMDA5ODAwMDcxMDAxMjAwMDExNzAwMTAwMDAwODcwMDEyMDAwMTE1MDAwOTgwMDExMDAwMDg2MDAxMTUwMDA5ODAwMDcxMDAwNTMwMDA0OTAwMDk4MDAwNzEwMDEyMDAwMTE3MDAxMDAwMDA4NzAwMTIwMDAxMTUwMDA5ODAwMTEwMDAwODYwMDExNTAwMDk4MDAwNzEwMDA1MzAwMDQ5MDAwOTgwMDA3MTAwMTIwMDAxMTcwMDEwMDAwMDg3MDAxMjAwMDExNTAwMDk4MDAxMTAwMDA4NjAwMTE1MDAwOTgwMDA3MTAwMDUzMDAwNDkwMDA5ODAwMDcxMDAxMjAwMDExNzAwMTAwMDAwODcwMDEyMDAwMTE1MDAwOTgwMDExMDAwMDg2MDAxMTUwMDA5ODAwMDcxMDAwNTMwMDA0OTAwMDk4MDAwNzEwMDEyMDAwMTE3MDAxMDAwMDA4NzAwMTIwMDAxMTUwMDA5ODAwMTEwMDAwODYwMDExNTAwMDk4MDAwNzEwMDA1MzAwMDQ5MDAwOTgwMDA3MTAwMTIwMDAxMTcwMDEwMDAwMDg3MDAxMjAwMDExNTAwMDk4MDAxMTAwMDA4NjAwMTE1MDAwOTgwMDA3MTAwMDUzMDAwNDkwMDA5ODAwMDcxMDAxMjAwMDExNzAwMTAwMDAwODcwMDEyMDAwMTE1MDAwOTgwMDExMDAwMDg2MDAxMTUwMDA5ODAwMDcxMDAwNTMwMDA0OTAwMDk4MDAwNzEwMDEyMDAwMTE3MDAxMDAwMDA4NzAwMTIwMDAxMTUwMDA5ODAwMTEwMDAwODYwMDExNTAwMDk4MDAwNzEwMDA1MzAwMDQ5MDAwOTgwMDA3MTAwMTIwMDAxMTcwMDEwMDAwMDg3MDAxMjAwMDExNTAwMDk4MDAxMTAwMDA4NjAwMTE1MDAwOTgwMDA3MTAwMDUzMDAwNDkwMDA5ODAwMDcxMDAxMjAwMDExNzAwMTAwMDAwODcwMDEyMDAwMTE1MDAwOTgwMDExMDAwMDg2MDAxMTUwMDA5ODAwMDcxMDAwNTMwMDA0OTAwMDk4MDAwNzEwMDEyMDAwMTE3MDAxMDAwMDA4NzAwMTIwMDAxMTUwMDA5ODAwMTEwMDAwODYwMDExNTAwMDk4MDAwNzEwMDA1MzAwMDQ5MDAwOTgwMDA3MTAwMTIwMDAxMTcwMDEwMDAwMDg3MDAxMjAwMDExNTAwMDk4MDAxMTAwMDA4NjAwMTE1MDAwOTgwMDA3MTAwMDUzMDAwNDkwMDA5ODAwMDcxMDAxMjAwMDExNzAwMTAwMDAwODcwMDEyMDAwMTE1MDAwOTgwMDExMDAwMDg2MDAxMTUwMDA5ODAwMDcxMDAwNTMwMDA0OTAwMDk4MDAwNzEwMDEyMDAwMTE3MDAxMDAwMDA4NzAwMTIwMDAxMTUwMDA5ODAwMTEwMDAwODYwMDExNTAwMDk4MDAwNzEwMDA1MzAwMDQ5MDAwOTgwMDA3MTAwMTIwMDAxMTcwMDEwMDAwMDg3MDAxMjAwMDExNTAwMDk4MDAxMTAwMDA4NjAwMTE1MDAwOTgwMDA3MTAwMDUzMDAwNDkwMDA5ODAwMDcxMDAxMjAwMDExNzAwMDc2MDAwODgwMDA4NTAwMTE2MDAwOTgwMDA2NzAwMDQ5MDAxMTUwMDA3OTAwMDg0MDAwOTkwMDExNjAwMDk4MDAxMDUwMDA0OTAwMTE3MDAwNzYwMDA4ODAwMDg1MDAxMTYwMDA5ODAwMDY1MDAwNjEwMDA2MQ==", "", "ll97");
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "MDAwOTgwMDEwODAwMDU3MDAwNDkwMDA4ODAwMDUwMDAxMjAwMDEwMjAwMDk4MDAwNjgwMDEwNzAwMDUxMDAwODgwMDA1MDAwMDUzMDAxMDIwMDEwMDAwMDg3MDAxMjAwMDExNTAwMDk4MDAxMTAwMDA4NjAwMTE1MDAwOTgwMDA3MTAwMDUzMDAwNDkwMDA5ODAwMDcxMDAxMjAwMDExNzAwMTAwMDAwODcwMDEyMDAwMTE1MDAwOTgwMDExMDAwMDg2MDAxMTUwMDA5ODAwMDcxMDAwNTMwMDA0OTAwMDk4MDAwNzEwMDEyMDAwMTE3MDAxMDAwMDA4NzAwMTIwMDAxMTUwMDA5ODAwMTEwMDAwODYwMDExNTAwMDk4MDAwNzEwMDA1MzAwMDQ5MDAwOTgwMDA3MTAwMTIwMDAxMTcwMDEwMDAwMDg3MDAxMjAwMDExNTAwMDk4MDAxMTAwMDA4NjAwMTE1MDAwOTgwMDA3MTAwMDUzMDAwNDkwMDA5ODAwMDcxMDAxMjAwMDExNzAwMTAwMDAwODcwMDEyMDAwMTE1MDAwOTgwMDExMDAwMDg2MDAxMTUwMDA5ODAwMDcxMDAwNTMwMDA0OTAwMDk4MDAwNzEwMDEyMDAwMTE3MDAxMDAwMDA4NzAwMTIwMDAxMTUwMDA5ODAwMTEwMDAwODYwMDExNTAwMDk4MDAwNzEwMDA1MzAwMDQ5MDAwOTgwMDA3MTAwMTIwMDAxMTcwMDEwMDAwMDg3MDAxMjAwMDExNTAwMDk4MDAxMTAwMDA4NjAwMTE1MDAwOTgwMDA3MTAwMDUzMDAwNDkwMDA5ODAwMDcxMDAxMjAwMDExNzAwMTAwMDAwODcwMDEyMDAwMTE1MDAwOTgwMDExMDAwMDg2MDAxMTUwMDA5ODAwMDcxMDAwNTMwMDA0OTAwMDk4MDAwNzEwMDEyMDAwMTE3MDAxMDAwMDA4NzAwMTIwMDAxMTUwMDA5ODAwMTEwMDAwODYwMDExNTAwMDk4MDAwNzEwMDA1MzAwMDQ5MDAwOTgwMDA3MTAwMTIwMDAxMTcwMDEwMDAwMDg3MDAxMjAwMDExNTAwMDk4MDAxMTAwMDA4NjAwMTE1MDAwOTgwMDA3MTAwMDUzMDAwNDkwMDA5ODAwMDcxMDAxMjAwMDExNzAwMTAwMDAwODcwMDEyMDAwMTE1MDAwOTgwMDExMDAwMDg2MDAxMTUwMDA5ODAwMDcxMDAwNTMwMDA0OTAwMDk4MDAwNzEwMDEyMDAwMTE3MDAxMDAwMDA4NzAwMTIwMDAxMTUwMDA5ODAwMTEwMDAwODYwMDExNTAwMDk4MDAwNzEwMDA1MzAwMDQ5MDAwOTgwMDA3MTAwMTIwMDAxMTcwMDEwMDAwMDg3MDAxMjAwMDExNTAwMDk4MDAxMTAwMDA4NjAwMTE1MDAwOTgwMDA3MTAwMDUzMDAwNDkwMDA5ODAwMDcxMDAxMjAwMDExNzAwMTAwMDAwODcwMDEyMDAwMTE1MDAwOTgwMDExMDAwMDg2MDAxMTUwMDA5ODAwMDcxMDAwNTMwMDA0OTAwMDk4MDAwNzEwMDEyMDAwMTE3MDAxMDAwMDA4NzAwMTIwMDAxMTUwMDA5ODAwMTEwMDAwODYwMDExNTAwMDk4MDAwNzEwMDA1MzAwMDQ5MDAwOTgwMDA3MTAwMTIwMDAxMTcwMDEwMDAwMDg3MDAxMjAwMDExNTAwMDk4MDAxMTAwMDA4NjAwMTE1MDAwOTgwMDA3MTAwMDUzMDAwNDkwMDA5ODAwMDcxMDAxMjAwMDExNzAwMDc2MDAwODgwMDA4NTAwMTE2MDAwOTgwMDA2NzAwMDQ5MDAxMTUwMDA3OTAwMDg0MDAwOTkwMDExNjAwMDk4MDAxMDUwMDA0OTAwMTE3MDAwNzYwMDA4ODAwMDg1MDAxMTYwMDA5ODAwMDY1MDAwNjEwMDA2MQ==ll97" + "'", str3.equals("MDAwOTgwMDEwODAwMDU3MDAwNDkwMDA4ODAwMDUwMDAxMjAwMDEwMjAwMDk4MDAwNjgwMDEwNzAwMDUxMDAwODgwMDA1MDAwMDUzMDAxMDIwMDEwMDAwMDg3MDAxMjAwMDExNTAwMDk4MDAxMTAwMDA4NjAwMTE1MDAwOTgwMDA3MTAwMDUzMDAwNDkwMDA5ODAwMDcxMDAxMjAwMDExNzAwMTAwMDAwODcwMDEyMDAwMTE1MDAwOTgwMDExMDAwMDg2MDAxMTUwMDA5ODAwMDcxMDAwNTMwMDA0OTAwMDk4MDAwNzEwMDEyMDAwMTE3MDAxMDAwMDA4NzAwMTIwMDAxMTUwMDA5ODAwMTEwMDAwODYwMDExNTAwMDk4MDAwNzEwMDA1MzAwMDQ5MDAwOTgwMDA3MTAwMTIwMDAxMTcwMDEwMDAwMDg3MDAxMjAwMDExNTAwMDk4MDAxMTAwMDA4NjAwMTE1MDAwOTgwMDA3MTAwMDUzMDAwNDkwMDA5ODAwMDcxMDAxMjAwMDExNzAwMTAwMDAwODcwMDEyMDAwMTE1MDAwOTgwMDExMDAwMDg2MDAxMTUwMDA5ODAwMDcxMDAwNTMwMDA0OTAwMDk4MDAwNzEwMDEyMDAwMTE3MDAxMDAwMDA4NzAwMTIwMDAxMTUwMDA5ODAwMTEwMDAwODYwMDExNTAwMDk4MDAwNzEwMDA1MzAwMDQ5MDAwOTgwMDA3MTAwMTIwMDAxMTcwMDEwMDAwMDg3MDAxMjAwMDExNTAwMDk4MDAxMTAwMDA4NjAwMTE1MDAwOTgwMDA3MTAwMDUzMDAwNDkwMDA5ODAwMDcxMDAxMjAwMDExNzAwMTAwMDAwODcwMDEyMDAwMTE1MDAwOTgwMDExMDAwMDg2MDAxMTUwMDA5ODAwMDcxMDAwNTMwMDA0OTAwMDk4MDAwNzEwMDEyMDAwMTE3MDAxMDAwMDA4NzAwMTIwMDAxMTUwMDA5ODAwMTEwMDAwODYwMDExNTAwMDk4MDAwNzEwMDA1MzAwMDQ5MDAwOTgwMDA3MTAwMTIwMDAxMTcwMDEwMDAwMDg3MDAxMjAwMDExNTAwMDk4MDAxMTAwMDA4NjAwMTE1MDAwOTgwMDA3MTAwMDUzMDAwNDkwMDA5ODAwMDcxMDAxMjAwMDExNzAwMTAwMDAwODcwMDEyMDAwMTE1MDAwOTgwMDExMDAwMDg2MDAxMTUwMDA5ODAwMDcxMDAwNTMwMDA0OTAwMDk4MDAwNzEwMDEyMDAwMTE3MDAxMDAwMDA4NzAwMTIwMDAxMTUwMDA5ODAwMTEwMDAwODYwMDExNTAwMDk4MDAwNzEwMDA1MzAwMDQ5MDAwOTgwMDA3MTAwMTIwMDAxMTcwMDEwMDAwMDg3MDAxMjAwMDExNTAwMDk4MDAxMTAwMDA4NjAwMTE1MDAwOTgwMDA3MTAwMDUzMDAwNDkwMDA5ODAwMDcxMDAxMjAwMDExNzAwMTAwMDAwODcwMDEyMDAwMTE1MDAwOTgwMDExMDAwMDg2MDAxMTUwMDA5ODAwMDcxMDAwNTMwMDA0OTAwMDk4MDAwNzEwMDEyMDAwMTE3MDAxMDAwMDA4NzAwMTIwMDAxMTUwMDA5ODAwMTEwMDAwODYwMDExNTAwMDk4MDAwNzEwMDA1MzAwMDQ5MDAwOTgwMDA3MTAwMTIwMDAxMTcwMDEwMDAwMDg3MDAxMjAwMDExNTAwMDk4MDAxMTAwMDA4NjAwMTE1MDAwOTgwMDA3MTAwMDUzMDAwNDkwMDA5ODAwMDcxMDAxMjAwMDExNzAwMDc2MDAwODgwMDA4NTAwMTE2MDAwOTgwMDA2NzAwMDQ5MDAxMTUwMDA3OTAwMDg0MDAwOTkwMDExNjAwMDk4MDAxMDUwMDA0OTAwMTE3MDAwNzYwMDA4ODAwMDg1MDAxMTYwMDA5ODAwMDY1MDAwNjEwMDA2MQ==ll97"));
    }

    @Test
    public void test075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test075");
        boolean boolean3 = strman.Strman.endsWith("hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi", "nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull", true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test076");
        int int4 = strman.Strman.indexOfint) '4', true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
    }

    @Test
    public void test077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test077");
        java.lang.String str1 = strman.Strman.swapCase("hi!hi!97");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "HI!HI!97" + "'", str1.equals("HI!HI!97"));
    }

    @Test
    public void test078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test078");
        java.lang.String[] strArray1 = strman.Strman.lines("hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!9ihi H7");
        org.junit.Assert.assertNotNull(strArray1);
    }

    @Test
    public void test079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test079");
        java.lang.String str4 = strman.Strman.replace("MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM300110001170010800108000570005500078001100011700108hi-hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101", "i006e0075006c006c00390037004e006e0075006c006c003900370055006e0075006c006c00390037004c006e0075006c006c00390037004c006e0075006c006c003900370039006e0075006c006c003900370037006e0075006c006c00390037h006e0075006c006c00390037004e006e0075006c006c003900370055006e0075006c006c00390037004c006e0075006c006c00390037004c006e0075006c006c003900370039006e0075006c006c003900370037006e0075006c006c00390037i006e0075006c006c00390037004e006e0075006c006c003900370055006e0075006c006c00390037004c006e0075006c006c00390037004c006e0075006c006c003900370039006e0075006c006c003900370037006e0075006c006c00390037h006e0075006c006c00390037004e006e0075006c006c003900370055006e0075006c006c00390037004c006e0075006c006c00390037004c006e0075006c006c003900370039006e0075006c006c003900370037006e0075006c006c00390037h006e0075006c006c00390037004e006e0075006c006c003900370055006e0075006c006c00390037004c006e0075006c006c00390037004c006e0075006c006c003900370039006e0075006c006c003900370037006e0075006c006c00390037i006e0075006c006c00390037004e006e0075006c006c003900370055006e0075006c006c00390037004c006e0075006c006c00390037004c006e0075006c006c003900370039006e0075006c006c003900370037006e0075006c006c00390037h006e0075006c006c00390037004e006e0075006c006c003900370055006e0075006c006c00390037004c006e0075006c006c00390037004c006e0075006c006c003900370039006e0075006c006c003900370037006e0075006c006c00390037i48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih", "000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97_nnull97_unull97_lnull97_lnull979null977null97", false);
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM300110001170010800108000570005500078001100011700108hi-hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101" + "'", str4.equals("MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM300110001170010800108000570005500078001100011700108hi-hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101"));
    }

    @Test
    public void test080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test080");
        java.lang.String str3 = strman.Strman.insert("0000000001001000000000000110100100680069002d006800690034003800340038003500310035003500340038003400380035003100350037003400380034003800350034003900390034003800340038003500340039003900340038003400380035003500350033003400380034003800350034003100300031003400380034003800350031003500350034003800340038003500310035003500340038003400380035003100350037003400380034003800350034003900390034003800340038003500340039003900340038003400380035003500350033003400380034003800350034003100300031003400380034003800350031003500370034003800340038003500310035003500340038003400380035003100350037003400380034003800350034003900390034003800340038003500340039003900340038003400380035003500350033003400380034003800350034003100300031003400380034003800350032003900390034003800340038003500310035003500340038003400380035003100350037003400380034003800350034003900390034003800340038003500340039003900340038003400380035003500350033003400380034003800350034003100300031003400380034003800350032003900390034003800340038003500310035003500340038003400380035003100350037003400380034003800350034003900390034003800340038003500340039003900340038003400380035003500350033003400380034003800350034003100300031003400380034003800350033003500330034003800340038003500310035003500340038003400380035003100350037003400380034003800350034003900390034003800340038003500340039003900340038003400380035003500350033003400380034003800350034003100300031003400380034003800350032003100300031003400380034003800350031003500350034003800340038003500310035003700340038003400380035003400390039003400380034003800350034003900390034003800340038003500350035003300340038003400380035003400310030003100300030003000300030003000300030003000310030003000310030003000300030003000300030003000300030003000300031003100300031003000300031", "000480004800048000480004900112000480004800048000480004900114000480004800048000480005100105000480004800048000480005100105000480004800048000480005100114000480004800048000480005100107000480004800048000480004900112000480004800048000480004900112000480004800048000480004900114000480004800048000480005100105000480004800048000480005100105000480004800048000480005100114000480004800048000480005100107000480004800048000480004900114000480004800048000480004900112000480004800048000480004900114000480004800048000480005100105000480004800048000480005100105000480004800048000480005100114000480004800048000480005100107000480004800048000480005100105000480004800048000480004900112000480004800048000480004900114000480004800048000480005100105000480004800048000480005100105000480004800048000480005100114000480004800048000480005100107000480004800048000480005100105000480004800048000480004900112000480004800048000480004900114000480004800048000480005100105000480004800048000480005100105000480004800048000480005100114000480004800048000480005100107000480004800048000480005100114000480004800048000480004900112000480004800048000480004900114000480004800048000480005100105000480004800048000480005100105000480004800048000480005100114000480004800048000480005100107000480004800048000480005100107000480004800048000480004900112000480004800048000480004900114000480004800048000480005100105000480004800048000480005100105000480004800048000480005100114000480004800048000480005100107000480004800048000480004900112000480004800048000480004900114000480004800048000480005100105000480004800048000480005100105000480004800048000480005100114000480004800048000480005100107000480004800048000480004900112000480004800048000480004900112000480004800048000480004900114000480004800048000480005100105000480004800048000480005100105000480004800048000480005100114000480004800048000480005100107000480004800048000480004900114000480004800048000480004900112000480004800048000480004900114000480004800048000480005100105000480004800048000480005100105000480004800048000480005100114000480004800048000480005100107000480004800048000480005100105000480004800048000480004900112000480004800048000480004900114000480004800048000480005100105000480004800048000480005100105000480004800048000480005100114000480004800048000480005100107000480004800048000480005100105000480004800048000480004900112000480004800048000480004900114000480004800048000480005100105000480004800048000480005100105000480004800048000480005100114000480004800048000480005100107000480004800048000480005100114000480004800048000480004900112000480004800048000480004900114000480004800048000480005100105000480004800048000480005100105000480004800048000480005100114000480004800048000480005100107000480004800048000480005100107000480004800048000480004900112000480004800048000480004900114000480004800048000480005100105000480004800048000480005100105000480004800048000480005100114000480004800048000480005100107", 256);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "0000000001001000000000000110100100680069002dstr3.equals("0000000001001000000000000110100100680069002d
    }

    @Test
    public void test081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test081");
        java.lang.String[] strArray6 = strman.Strman.split("nullnull97nnul", "001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111001000000000!ih79llun!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih");
        java.lang.String str7 = strman.Strman.prependArray("97", strArray6);
        java.lang.String str8 = strman.Strman.appendArray("48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101", strArray6);
        java.lang.String str9 = strman.Strman.append("771228561", strArray6);
        java.util.List<java.lang.String> strList10 = strman.Strman.zip(strArray6);
        java.lang.String[] strArray11 = strman.Strman.removeEmptyStrings(strArray6);
        java.lang.String str12 = strman.Strman.prependArray("Nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull", strArray6);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + str7 + "' != '" + "nullnull97nnul97" + "'", str7.equals("nullnull97nnul97"));
        org.junit.Assert.assertTrue("'" + str8 + "' != '" + "48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101nullnull97nnul" + "'", str8.equals("48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101nullnull97nnul"));
        org.junit.Assert.assertTrue("'" + str9 + "' != '" + "771228561nullnull97nnul" + "'", str9.equals("771228561nullnull97nnul"));
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "nullnull97nnulNullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull" + "'", str12.equals("nullnull97nnulNullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull"));
    }

    @Test
    public void test082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test082");
        java.lang.String str1 = strman.Strman.slugify("nULL97");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "null97" + "'", str1.equals("null97"));
    }

    @Test
    public void test083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test083");
        java.lang.String str2 = strman.Strman.toDecamelize
        org.junit.Assert.assertTrue("'" + strstr2.equals
    }

    @Test
    public void test084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test084");
        java.lang.String str2 = strman.Strman.removeRight("hi-hinull97nnul", "aWhpX2g
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi-hinull97nnul" + "'", str2.equals("hi-hinull97nnul"));
    }

    @Test
    public void test085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test085");
        java.lang.String str1 = strman.Strman.swapCase("mDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA0ZTAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwNTUwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDRjMDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA0YzAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwMzkwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111001000000000Ih79llunIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhMw==Hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!null97Nnulnull000780008500076000760005700055001100007800085000760007600057000550011700078000850007600076000570005500108000780008500076000760005700055001080007800085000760007600057000550005700078000850007600076000570005500055000780008500076000760005700055");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "Mda2ztaWnZuWmdzJmda2yZaWmZKWmdm3mda0ztaWnMuWmdC1mda2yZaWnMmWmdm5mdaZnZaWntuWmdzLmda3ntaWnMmWmdzJmdaZotaWmZCWmdrJmda2ztaWnZuWmdzJmda2yZaWmZKWmdm3mda0yZaWnMuWmdC1mda2yZaWnMmWmdm5mdaZnZaWmZKWmdzLmda3ntaWnMmWmdzJmdaZotaWmZCWmdm3mda2ztaWnZuWmdzJmda2yZaWmZKWmdmiH79LLUNiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHmW==hI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!NULL97HI!NULL97nNULNULL000780008500076000760005700055001100007800085000760007600057000550011700078000850007600076000570005500108000780008500076000760005700055001080007800085000760007600057000550005700078000850007600076000570005500055000780008500076000760005700055" + "'", str1.equals("Mda2ztaWnZuWmdzJmda2yZaWmZKWmdm3mda0ztaWnMuWmdC1mda2yZaWnMmWmdm5mdaZnZaWntuWmdzLmda3ntaWnMmWmdzJmdaZotaWmZCWmdrJmda2ztaWnZuWmdzJmda2yZaWmZKWmdm3mda0yZaWnMuWmdC1mda2yZaWnMmWmdm5mdaZnZaWmZKWmdzLmda3ntaWnMmWmdzJmdaZotaWmZCWmdm3mda2ztaWnZuWmdzJmda2yZaWmZKWmdmiH79LLUNiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHmW==hI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!NULL97HI!NULL97nNULNULL000780008500076000760005700055001100007800085000760007600057000550011700078000850007600076000570005500108000780008500076000760005700055001080007800085000760007600057000550005700078000850007600076000570005500055000780008500076000760005700055"));
    }

    @Test
    public void test086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test086");
        java.lang.String str3 = strman.Strman.rightPad("MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA0ZTAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwNTUwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDRjMDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA0YzAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwMzkwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3Nnullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037hihiullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull", "mDA2ODAwNjkwMDJkMDA2ODAwNjkwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzEwMDM1MDAzNTAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzMTAwMzUwMDM3MDAzNDAwMzgwMDM0MDAzODAwMzUwMDM0MDAzOTAwMzkwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzQwMDM5MDAzOTAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzNTAwMzUwMDMzMDAzNDAwMzgwMDM0MDAzODAwMzUwMDM0MDAzMTAwMzAwMDMxMDAzNDAwMzgwMDM0MDAzODAwMzUwMDMxMDAzNTAwMzUwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzEwMDM1MDAzNTAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzMTAwMzUwMDM3MDAzNDAwMzgwMDM0MDAzODAwMzUwMDM0MDAzOTAwMzkwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzQwMDM5MDAzOTAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzNTAwMzUwMDMzMDAzNDAwMzgwMDM0MDAzODAwMzUwMDM0MDAzMTAwMzAwMDMxMDAzNDAwMzgwMDM0MDAzODAwMzUwMDMxMDAzNTAwMzcwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzEwMDM1MDAzNTAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzMTAwMzUwMDM3MDAzNDAwMzgwMDM0MDAzODAwMzUwMDM0MDAzOTAwMzkwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzQwMDM5MDAzOTAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzNTAwMzUwMDMzMDAzNDAwMzgwMDM0MDAzODAwMzUwMDM0MDAzMTAwMzAwMDMxMDAzNDAwMzgwMDM0MDAzODAwMzUwMDMyMDAzOTAwMzkwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzEwMDM1MDAzNTAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzMTAwMzUwMDM3MDAzNDAwMzgwMDM0MDAzODAwMzUwMDM0MDAzOTAwMzkwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzQwMDM5MDAzOTAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzNTAwMzUwMDMzMDAzNDAwMzgwMDM0MDAzODAwMzUwMDM0MDAzMTAwMzAwMDMxMDAzNDAwMzgwMDM0MDAzODAwMzUwMDMyMDAzOTAwMzkwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzEwMDM1MDAzNTAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzMTAwMzUwMDM3MDAzNDAwMzgwMDM0MDAzODAwMzUwMDM0MDAzOTAwMzkwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzQwMDM5MDAzOTAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzNTAwMzUwMDMzMDAzNDAwMzgwMDM0MDAzODAwMzUwMDM0MDAzMTAwMzAwMDMxMDAzNDAwMzgwMDM0MDAzODAwMzUwMDMzMDAzNTAwMzMwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzEwMDM1MDAzNTAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzMTAwMzUwMDM3MDAzNDAwMzgwMDM0MDAzODAwMzUwMDM0MDAzOTAwMzkwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzQwMDM5MDAzOTAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzNTAwMzUwMDMzMDAzNDAwMzgwMDM0MDAzODAwMzUwMDM0MDAzMTAwMzAwMDMxMDAzNDAwMzgwMDM0MDAzODAwMzUwMDMyMDAzMTAwMzAwMDMxMDAzNDAwMzgwMDM0MDAzODAwMzUwMDMxMDAzNTAwMzUwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzEwMDM1MDAzNzAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzNDAwMzkwMDM5MDAzNDAwMzgwMDM0MDAzODAwMzUwMDM0MDAzOTAwMzkwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzUwMDM1MDAzMzAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzNDAwMzEwMDMwMDAzMTAwMzAwMDMwMDAzMDAwMzAwMDMwMDAzMDAwMzAwMDMwMDAzMDAwMzEwMDMwMDAzMDAwMzEwMDMwMDAzMDAwMzAwMDMwMDAzMDAwMzAwMDMwMDAzMDAwMzAwMDMwMDAzMDAwMzAwMDMxMDAzMTAwMzAwMDMxMDAzMDAwMzAwMDMx", 505);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA0ZTAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwNTUwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDRjMDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA0YzAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwMzkwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3Nnullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037hihiullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull" + "'", str3.equals("MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA0ZTAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwNTUwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDRjMDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA0YzAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwMzkwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3Nnullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037hihiullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull"));
    }

    @Test
    public void test087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test087");
        java.lang.String str3 = strman.Strman.encode(";lcxe&llunllun;lcxe&llunllun", (int) (short) 1, 0);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "591089912010138108108117110108108117110591089912010138108108117110108108117110" + "'", str3.equals("591089912010138108108117110108108117110591089912010138108108117110108108117110"));
    }

    @Test
    public void test088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test088");
        java.lang.String[] strArray3 = strman.Strman.wordsn-ullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull");
        java.util.List<java.lang.String> strList4 = strman.Strman.zip(strArray3);
        boolean boolean6 = strman.Strman.containsAny("sEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhTlVMTDk3", strArray3, false);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(strList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test089");
        int int1 = strman.Strman.length("HiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiNull97hiNull97nnul");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
    }

    @Test
    public void test090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test090");
        java.lang.String str1 = strman.Strman.toSnakeCase("n-u-l-l97-n-n-u-lhi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-null97nnulhi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-null97nnul");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "n_u_l_l97_n_n_u_lhi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_null97hi_null97nnulhi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_null97hi_null97nnul" + "'", str1.equals("n_u_l_l97_n_n_u_lhi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_null97hi_null97nnulhi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_null97hi_null97nnul"));
    }

    @Test
    public void test091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test091");
        java.lang.String str2 = strman.Strman.repeat("771228561null97", (int) (byte) 100);
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97" + "'", str2.equals("771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97771228561null97"));
    }

    @Test
    public void test092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test092");
        java.lang.String str1 = strman.Strman.formatNumber((long) (byte) 1);
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "1" + "'", str1.equals("1"));
    }

    @Test
    public void test093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test093");
        long long4 = strman.Strman.countSubstr("Hibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mnull978484855544848484848484848565348484848484848485556104105104105hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hida2 ztaw nz uw mdzj mda2 yz aw mzkw mdm3nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnulHihihihiNULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL979710", true, true);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
    }

    @Test
    public void test094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test094");
        java.lang.String str1 = strman.Strman.swapCase("003000300030003000300030003000300030003100370039004c004c0055004e003700370039004c004c0055004e003900370039004c004c0055004e006c00370039004c004c0055004e006c00370039004c004c0055004e007500370039004c004c0055004e006e00370039004c004c0055004e
        org.junit.Assert.assertTrue("'" + strstr1.equals
    }

    @Test
    public void test095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test095");
        java.lang.String str1 = strman.Strman.humanize("0030003000310030003400300030003100300035006e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c0031003100300031003100370031003000380031003000380035003700350035003000300030003000300030003000300030003100370039004c004c0055004e003700370039004c004c0055004e003900370039004c004c0055004e006c00370039004c004c0055004e006c00370039004c004c0055004e007500370039004c004c0055004e006e00370039004c004c0055004e
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "0030003000310030003400300030003100300035006e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c0031003100300031003100370031003000380031003000380035003700350035003000300030003000300030003000300030003100370039004c004c0055004e003700370039004c004c0055004e003900370039004c004c0055004e006c00370039004c004c0055004e006c00370039004c004c0055004e007500370039004c004c0055004e006e00370039004c004c0055004estr1.equals("0030003000310030003400300030003100300035006e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c0031003100300031003100370031003000380031003000380035003700350035003000300030003000300030003000300030003100370039004c004c0055004e003700370039004c004c0055004e003900370039004c004c0055004e006c00370039004c004c0055004e006c00370039004c004c0055004e007500370039004c004c0055004e006e00370039004c004c0055004e00310030003100300030003000300030003000300030003000300030003000310031003000310030003000310030003000300030003000300030003000300030003100300031003100300031003000300030003000300030003000300030003100310030003100300030003000300030003000300030003000300030003000310031003000310030003000310030003000300030003000300030003000300031003100300031003100310030003000300030003000300030003000300030003100310031003000310030003100300030003000300030003000300030003000310031003000310031003000300030003000300030003000300030003000300031003100300031003100300030003000300030003000300030003000300030003000310031003100300030003100300030003000300030003000300030003000300031003100300031003100310030003000300030003000300030003000300031003100300031003100310030003000300030003000300030003000300030003100310030003100310031003000300030003000300030003000300030003000310031003100300031003000310030003000300030003000300030003000300031003100300031003100300030"));
    }

    @Test
    public void test096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test096");
        java.lang.String str1 = strman.Strman.toKebabCase("!");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "!" + "'", str1.equals("!"));
    }

    @Test
    public void test097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test097");
        int int4 = strman.Strman.indexOf("0001101001000000000110100000000000011010010000000001011111000000000110100000000000011010000000000001101001000000000010110100000000011010000000000001101001000000000011010000000000001110000000000000", "79LLUN779LLUN979LLUNl79LLUNl79LLUNu79LLUNn79LLUN", 2088, true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
    }

    @Test
    public void test098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test098");
        long long4 = strman.Strman.countSubstr("!", "000720010500033001040010500033", true, false);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
    }

    @Test
    public void test099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test099");
        java.lang.String str3 = strman.Strman.safeTruncate("n-u-l-l97-n-n-u-lhi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-null97nnulhi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-null97nnulHihiihi_hhi_hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101", (int) (short) 100, "hiHi");
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "hiHi" + "'", str3.equals("hiHi"));
    }

    @Test
    public void test100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test100");
        java.util.Optional<java.lang.String> strOptional1 = strman.Strman.head("hi_hi0000000001001000000000000110100197_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_null97hi00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e");
        org.junit.Assert.assertNotNull(strOptional1);
    }

    @Test
    public void test101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test101");
        java.lang.String[] strArray3 = strman.Strman.lines("109700078001170010800108000570005500110001100011700108");
        java.util.Optional<java.lang.String> strOptional4 = strman.Strman.trimStart("hihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi_h", strArray3);
        java.lang.String str5 = strman.Strman.format("33727333727333727333null000780008500076000760005700055001100007800085000760007600057000550011700078000850007600076000570005500108000780008500076000760005700055001080007800085000760007600057000550005700078000850007600076000570005500055000780008500076000760005700055", strArray3);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(strOptional4);
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "33727333727333727333null000780008500076000760005700055001100007800085000760007600057000550011700078000850007600076000570005500108000780008500076000760005700055001080007800085000760007600057000550005700078000850007600076000570005500055000780008500076000760005700055" + "'", str5.equals("33727333727333727333null000780008500076000760005700055001100007800085000760007600057000550011700078000850007600076000570005500108000780008500076000760005700055001080007800085000760007600057000550005700078000850007600076000570005500055000780008500076000760005700055"));
    }

    @Test
    public void test102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test102");
        java.lang.String str2 = strman.Strman.repeat("hiHinull97nnulnull97null97nnull97unull97lnull97lnull979null977null97hihihiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiNull97hiNullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull", 4342);
    }

    @Test
    public void test103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test103");
        java.lang.String str1 = strman.Strman.escapeRegExp("79llun779llun979llunL79llunL79llunU79llunN79lluN");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "79llun779llun979llunL79llunL79llunU79llunN79lluN" + "'", str1.equals("79llun779llun979llunL79llunL79llunU79llunN79lluN"));
    }

    @Test
    public void test104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test104");
        java.lang.String[] strArray2 = strman.Strman.chop("860096001200c4005500e400e40073009300c400c4005500e400hi!LUNN79LLUNlunN79llun79llun1", 655);
        org.junit.Assert.assertNotNull(strArray2);
    }

    @Test
    public void test105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test105");
        java.lang.String[] strArray2 = strman.Strman.split("00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e006c00370039006c006c0075006e006c00370039006c006c0075006e007500370039006c006c0075006e006e00370039006c006c0075006e00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e006c00370039006c006c0075006e006c00370039006c006c0075006e007500370039006c006c0075006e006e00370039006c006c0075006e0031003100300031003100370031003000380031003000380035003700350035006e0075006c006c00390037006e006e0075006c006c003900370075006e0075006c006c00390037006c006e0075006c006c00390037006c006e0075006c006c003900370039006e0075006c006c003900370037006e0075006c006c00390037", "hi!");
        org.junit.Assert.assertNotNull(strArray2);
    }

    @Test
    public void test106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test106");
        java.lang.String str1 = strman.Strman.upperFirst("ihi97hhi97hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "Ihi97hhi97hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101" + "'", str1.equals("Ihi97hhi97hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101"));
    }

    @Test
    public void test107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test107");
        java.lang.String str2 = strman.Strman.ensureLeft("n_u_l_l97n_n_u_l_l97u_n_u_l_l97l_n_u_l_l97l_n_u_l_l979_n_u_l_l977_n_u_l_l97", "000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97nnull97unull97lnull97lnull979null977null97");
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97nnull97unull97lnull97lnull979null977null97n_u_l_l97n_n_u_l_l97u_n_u_l_l97l_n_u_l_l97l_n_u_l_l979_n_u_l_l977_n_u_l_l97" + "'", str2.equals("000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97nnull97unull97lnull97lnull979null977null97n_u_l_l97n_n_u_l_l97u_n_u_l_l97l_n_u_l_l97l_n_u_l_l979_n_u_l_l977_n_u_l_l97"));
    }

    @Test
    public void test108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test108");
        java.lang.String str3 = strman.Strman.removeRight("0004800048000480005200053000480004800049000490005500048000480004800052000530004800048000490004800056NULL97NNUL!ih", "N u l l97hihi", false);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "0004800048000480005200053000480004800049000490005500048000480004800052000530004800048000490004800056NULL97NNUL!ih" + "'", str3.equals("0004800048000480005200053000480004800049000490005500048000480004800052000530004800048000490004800056NULL97NNUL!ih"));
    }

    @Test
    public void test109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test109");
        java.lang.String str1 = strman.Strman.escapeRegExp("nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull&UnderBar;nullMDAxMTAxMTAwMDAwMDAwMDEwMTAxMTEwMDAwMDAwMDAwMTExMDExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDAxMDAxMTEwMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAxMDEwMTExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDEwMDEwMTEwMDAwMDAwMDAwMDAxMDExMDAwMDAwMDAwMTAxMTAxMDAwMDAwMDAwMDEwMDEwMTEwMDAwMDAwMDAwMDAxMDExMDAwMDAwMDAwaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaS1oihi-hhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull&UnderBar;nullMDAxMTAxMTAwMDAwMDAwMDEwMTAxMTEwMDAwMDAwMDAwMTExMDExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDAxMDAxMTEwMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAxMDEwMTExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDEwMDEwMTEwMDAwMDAwMDAwMDAxMDExMDAwMDAwMDAwMTAxMTAxMDAwMDAwMDAwMDEwMDEwMTEwMDAwMDAwMDAwMDAxMDExMDAwMDAwMDAwaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaS1oihi\\-hhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!" + "'", str1.equals("nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull&UnderBar;nullMDAxMTAxMTAwMDAwMDAwMDEwMTAxMTEwMDAwMDAwMDAwMTExMDExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDAxMDAxMTEwMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAxMDEwMTExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDEwMDEwMTEwMDAwMDAwMDAwMDAxMDExMDAwMDAwMDAwMTAxMTAxMDAwMDAwMDAwMDEwMDEwMTEwMDAwMDAwMDAwMDAxMDExMDAwMDAwMDAwaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaS1oihi\\-hhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!"));
    }

    @Test
    public void test110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test110");
        java.lang.String str1 = strman.Strman.toSnakeCase("!ihnullhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "!ihnullhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!" + "'", str1.equals("!ihnullhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!"));
    }

    @Test
    public void test111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test111");
        java.lang.String str1 = strman.Strman.underscored("Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Tl Vmtdk3");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_tl_vmtdk3" + "'", str1.equals("sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_tl_vmtdk3"));
    }

    @Test
    public void test112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test112");
        java.lang.String str1 = strman.Strman.swapCase("null97hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!nnull97hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!unull97hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!lnull97hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!lnull979null977null97hihinullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "NULL97HIHIHI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!NULL97HI!NNULL97HIHIHI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!NULL97HI!UNULL97HIHIHI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!NULL97HI!LNULL97HIHIHI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!NULL97HI!LNULL979NULL977NULL97HIHINULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULL" + "'", str1.equals
    }

    @Test
    public void test113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test113");
        java.lang.String str3 = strman.Strman.surround("NULL97N UllnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullHihihihiNULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL979710", "hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-null97nnul", "otk0odq4ntq5otq4ndg1ntuz Ndg0odu0mtax Ndg0odux Ntu0odq4nte1ntq4ndg1mtu3ndg0odu0otk0odq4ntq5otq4ndg1ntuz Ndg0odu0mtax Ndg0odux Ntc0odq4nte1ntq4ndg1mtu3");
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-null97nnulNULL97N UllnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullHihihihiNULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL979710otk0odq4ntq5otq4ndg1ntuz Ndg0odu0mtax Ndg0odux Ntu0odq4nte1ntq4ndg1mtu3ndg0odu0otk0odq4ntq5otq4ndg1ntuz Ndg0odu0mtax Ndg0odux Ntc0odq4nte1ntq4ndg1mtu3" + "'", str3.equals("hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-null97nnulNULL97N UllnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullHihihihiNULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL979710otk0odq4ntq5otq4ndg1ntuz Ndg0odu0mtax Ndg0odux Ntu0odq4nte1ntq4ndg1mtu3ndg0odu0otk0odq4ntq5otq4ndg1ntuz Ndg0odu0mtax Ndg0odux Ntc0odq4nte1ntq4ndg1mtu3"));
    }

    @Test
    public void test114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test114");
        java.lang.String str3 = strman.Strman.rightPad("nullnull97nnulnull97null97null97Nnull97Unull97Lnull97Lnull979null977null97", "Nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull", (-1));
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "nullnull97nnulnull97null97null97Nnull97Unull97Lnull97Lnull979null977null97" + "'", str3.equals("nullnull97nnulnull97null97null97Nnull97Unull97Lnull97Lnull979null977null97"));
    }

    @Test
    public void test115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test115");
        java.util.Map<java.lang.Character, java.lang.Long> charMap1 = strman.Strman.charsCount("000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97 Nnull97 Unull97 Lnull97 Lnull979null977null97");
        org.junit.Assert.assertNotNull(charMap1);
    }

    @Test
    public void test116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test116");
        java.lang.String str1 = strman.Strman.toSnakeCase("MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=" + "'", str1.equals("mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u="));
    }

    @Test
    public void test117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test117");
        java.lang.String str3 = strman.Strman.ensureRight("000780011700108001080005700055000780011000117001080010800057000550008500110001170010800108000570005500076001100011700108001080005700055000760011000117001080010800057000550005700110001170010800108000570005500055001100011700108001080005700055", "000000000110100000000000011010010000000000100001", false);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "000780011700108001080005700055000780011000117001080010800057000550008500110001170010800108000570005500076001100011700108001080005700055000760011000117001080010800057000550005700110001170010800108000570005500055001100011700108001080005700055000000000110100000000000011010010000000000100001" + "'", str3.equals("000780011700108001080005700055000780011000117001080010800057000550008500110001170010800108000570005500076001100011700108001080005700055000760011000117001080010800057000550005700110001170010800108000570005500055001100011700108001080005700055000000000110100000000000011010010000000000100001"));
    }

    @Test
    public void test118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test118");
        boolean boolean4 = strman.Strman.endsWithihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi HHi-hinull97nnul", 50, true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test119");
        java.lang.String[] strArray5 = strman.Strman.split("hi!hi!", "hi!");
        java.lang.String str7 = strman.Strman.join(strArray5, "hihi");
        java.lang.String[] strArray8 = strman.Strman.removeEmptyStrings(strArray5);
        java.util.List<java.lang.String> strList9 = strman.Strman.zip(strArray8);
        java.lang.String[] strArray10 = strman.Strman.removeEmptyStrings(strArray8);
        boolean boolean11 = strman.Strman.containsAny("!HI!HI!HI!", strArray8);
        boolean boolean12 = strman.Strman.containsAll("", strArray8);
        java.lang.String str13 = strman.Strman.append("000720010500033001040010500033nullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULL", strArray8);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + str7 + "' != '" + "" + "'", str7.equals(""));
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + str13 + "' != '" + "000720010500033001040010500033nullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULL" + "'", str13.equals("000720010500033001040010500033nullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULL"));
    }

    @Test
    public void test120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test120");
        java.lang.String str1 = strman.Strman.upperFirst("10010110000000000001001000000000");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "10010110000000000001001000000000" + "'", str1.equals("10010110000000000001001000000000"));
    }

    @Test
    public void test121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test121");
        boolean boolean3 = strman.Strman.endsWith("hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-5", "ihi_hhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97null97nULL97", false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test122");
        java.util.Optional<java.lang.String> strOptional2 = strman.Strman.atint) '4');
        org.junit.Assert.assertNotNull(strOptional2);
    }

    @Test
    public void test123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test123");
        java.lang.String str1 = strman.Strman.transliterate("ihi_hhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "ihi_hhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97" + "'", str1.equals("ihi_hhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97"));
    }

    @Test
    public void test124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test124");
        boolean boolean2 = strman.Strman.endsWith("hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_null97hi00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e", "1-");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test125");
        int int4 = strman.Strman.indexOf("nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullullnullnullnullnullnullnull", "nULL97NNULNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULL", 203, true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
    }

    @Test
    public void test126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test126");
        java.lang.String[] strArray4 = strman.Strman.between("null97", "", "1097");
        boolean boolean5 = strman.Strman.containsAll("7", strArray4);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test127");
        java.lang.String str3 = strman.Strman.encode("nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull", (-1), 7656);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108" + "'", str3.equals
    }

    @Test
    public void test128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test128");
        long long4 = strman.Strman.countSubstr("MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA0ZTAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwNTUwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDRjMDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA0YzAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwMzkwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111001000000000-ih79llun-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ihMw==Hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!null97Nnulnull000780008500076000760005700055001100007800085000760007600057000550011700078000850007600076000570005500108000780008500076000760005700055001080007800085000760007600057000550005700078000850007600076000570005500055000780008500076000760005700055NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL979710", "hihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi", true, false);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
    }

    @Test
    public void test129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test129");
        int int1 = strman.Strman.length("hiHinull97nnulnull97null97nnull97unull97lnull97lnull979null977null97hihihiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiNull97hiNullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 5416 + "'", int1 == 5416);
    }

    @Test
    public void test130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test130");
        int int4 = strman.Strman.lastIndexOf("TlVMTDk3hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!", "006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037Null", 330, false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
    }

    @Test
    public void test131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test131");
        java.lang.String str1 = strman.Strman.toKebabCasenull97null97Nnull97Unull97Lnull97Lnull979null977null97Hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!Nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull");
        org.junit.Assert.assertTrue("'" + strnull97null97-nnull97-unull97-lnull97-lnull979null977null97-hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!-nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull" + "'", str1.equalsnull97null97-nnull97-unull97-lnull97-lnull979null977null97-hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!-nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull"));
    }

    @Test
    public void test132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test132");
        try {
            java.lang.String str3 = strman.Strman.slice("hiHi", 4, 7);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 7");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        }
    }

    @Test
    public void test133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test133");
        java.lang.String str1 = strman.Strman.leftTrim("HI_HI");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "HI_HI" + "'", str1.equals("HI_HI"));
    }

    @Test
    public void test134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test134");
        long long2 = strman.Strman.countSubstr("sEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhTlVMTDk3000780011700108001080005700055000780011000117001080010800057000550008500110001170010800108000570005500076001100011700108001080005700055000760011000117001080010800057000550005700110001170010800108000570005500055001100011700108001080005700055", "006e0075006c006c00390037hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!4800048000480005500056000480004800049000490004800048000480004900049000550004800048000490004800056Nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull");
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
    }

    @Test
    public void test135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test135");
        boolean boolean1 = strman.Strman.isBlank("ullnullnullnullnullnullnull_null97nnul1097null971097");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
    }

    @Test
    public void test136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test136");
        boolean boolean1 = strman.Strman.isString((java.lang.Object) "006e0075006c006c00390037004e006e0075006c006c003900370055006e0075006c006c00390037004c006e0075006c006c00390037004c006e0075006c006c003900370039006e0075006c006c003900370037006e0075006c006c00390037");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
    }

    @Test
    public void test137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test137");
        java.lang.String str3 = strman.Strman.surround("Hi!hi!hi!hi!NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL979710", "hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e!", "006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037-null97006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037-null97006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037-null97006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037-null97006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037-null97006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037-null97006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037-null97006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037-null97006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037-null97006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037-null97");
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e!Hi!hi!hi!hi!NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL979710006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037-null97006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037-null97006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037-null97006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037-null97006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037-null97006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037-null97006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037-null97006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037-null97006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037-null97006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037-null97" + "'", str3.equals("hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e!Hi!hi!hi!hi!NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL979710006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037-null97006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037-null97006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037-null97006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037-null97006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037-null97006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037-null97006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037-null97006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037-null97006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037-null97006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037-null97"));
    }

    @Test
    public void test138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test138");
        try {
            java.lang.String str3 = strman.Strman.slice("null97hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!nnull97hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!unull97hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!lnull97hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!lnull979null977null97n_u_l_l97_n_ullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull", 612, 540);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -72");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        }
    }

    @Test
    public void test139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test139");
        java.util.Optional<java.lang.String> strOptional1 = strman.Strman.head("hi!hi
        org.junit.Assert.assertNotNull(strOptional1);
    }

    @Test
    public void test140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test140");
        boolean boolean2 = strman.Strman.unequal("ihnull006900680069005f006800680069002d0068006900340038003400380035003100350035003400380034003800350031003500370034003800340038003500340039003900340038003400380035003400390039003400380034003800350035003500330034003800340038003500340031003000310034003800340038003500310035003500340038003400380035003100350035003400380034003800350031003500370034003800340038003500340039003900340038003400380035003400390039003400380034003800350035003500330034003800340038003500340031003000310034003800340038003500310035003700340038003400380035003100350035003400380034003800350031003500370034003800340038003500340039003900340038003400380035003400390039003400380034003800350035003500330034003800340038003500340031003000310034003800340038003500320039003900340038003400380035003100350035003400380034003800350031003500370034003800340038003500340039003900340038003400380035003400390039003400380034003800350035003500330034003800340038003500340031003000310034003800340038003500320039003900340038003400380035003100350035003400380034003800350031003500370034003800340038003500340039003900340038003400380035003400390039003400380034003800350035003500330034003800340038003500340031003000310034003800340038003500330035003300340038003400380035003100350035003400380034003800350031003500370034003800340038003500340039003900340038003400380035003400390039003400380034003800350035003500330034003800340038003500340031003000310034003800340038003500320031003000310034003800340038003500310035003500340038003400380035003100350037003400380034003800350034003900390034003800340038003500340039003900340038003400380035003500350033003400380034003800350034003100300031hihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi006900680069005f006800680069002dhihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi006900680069005f006800680069002dhihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi", "n-u-l-l97-n-n-u-lhi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-null97nnulHi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!null97Nnul");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
    }

    @Test
    public void test141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test141");
        java.lang.String str3 = strman.Strman.truncate("4911011710810857551101171081085755951101101171081085755951171101171081085755951081101171081085755951081101171081085755571101171081085755551101171081085755Hihihihinull97nnull97unull97lnull97lnull979null977null979710", 2851, "00104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300110001170010800108000570005579llun779llun979llunl79llunl79llunu79llunn79llun79llun779llun979llunl79llunl79llunu79llunn79llunnull");
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "4911011710810857551101171081085755951101101171081085755951171101171081085755951081101171081085755951081101171081085755571101171081085755551101171081085755Hihihihinull97nnull97unull97lnull97lnull979null977null979710" + "'", str3.equals("4911011710810857551101171081085755951101101171081085755951171101171081085755951081101171081085755951081101171081085755571101171081085755551101171081085755Hihihihinull97nnull97unull97lnull97lnull979null977null979710"));
    }

    @Test
    public void test142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test142");
        java.lang.String str3 = strman.Strman.removeLeft("nullnull97nnulNullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull", "NULL97NNUL!ih", true);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "nullnull97nnulNullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull" + "'", str3.equals("nullnull97nnulNullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull"));
    }

    @Test
    public void test143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test143");
        java.util.Optional<java.lang.String> strOptional1 = strman.Strman.tail("00000000011010010000000001101000000000000110100100000000001011010000000001101000");
        boolean boolean2 = strman.Strman.isString((java.lang.Object) strOptional1);
        org.junit.Assert.assertNotNull(strOptional1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test144");
        java.lang.String str1 = strman.Strman.capitalize("0021004800490021004800490021004800490021Null97null97nnull97unull97lnull97lnull979null977null97");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "0021004800490021004800490021004800490021null97null97nnull97unull97lnull97lnull979null977null97" + "'", str1.equals("0021004800490021004800490021004800490021null97null97nnull97unull97lnull97lnull979null977null97"));
    }

    @Test
    public void test145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test145");
        java.lang.String str1 = strman.Strman.removeNonWords("000000005500000000570000000076000000007600000000850000000078000000005500000000550000000057000000007600000000760000000085000000007800000000570000000055000000005700000000760000000076000000008500000000780000000108000000005500000000570000000076000000007600000000850000000078000000010800000000550000000057000000007600000000760000000085000000007800000001170000000055000000005700000000760000000076000000008500000000780000000110000000005500000000570000000076000000007600000000850000000078hihi");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "000000005500000000570000000076000000007600000000850000000078000000005500000000550000000057000000007600000000760000000085000000007800000000570000000055000000005700000000760000000076000000008500000000780000000108000000005500000000570000000076000000007600000000850000000078000000010800000000550000000057000000007600000000760000000085000000007800000001170000000055000000005700000000760000000076000000008500000000780000000110000000005500000000570000000076000000007600000000850000000078hihi" + "'", str1.equals("000000005500000000570000000076000000007600000000850000000078000000005500000000550000000057000000007600000000760000000085000000007800000000570000000055000000005700000000760000000076000000008500000000780000000108000000005500000000570000000076000000007600000000850000000078000000010800000000550000000057000000007600000000760000000085000000007800000001170000000055000000005700000000760000000076000000008500000000780000000110000000005500000000570000000076000000007600000000850000000078hihi"));
    }

    @Test
    public void test146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test146");
        java.util.Optional<java.lang.String> strOptional1 = strman.Strman.head("006900680069005f006800680069002d
        org.junit.Assert.assertNotNull(strOptional1);
    }

    @Test
    public void test147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test147");
        java.lang.String[] strArray3 = strman.Strman.chop("!ih", 6416);
        boolean boolean4 = strman.Strman.containsAll("hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-5", strArray3);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test148");
        java.lang.String str3 = strman.Strman.safeTruncate("null97hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!nnull97hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!unull97hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!lnull97hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!lnull979null977null97hihinullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull", 740, "48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101nullnull97nnul");
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101nullnull97nnul" + "'", str3.equals("48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101nullnull97nnul"));
    }

    @Test
    public void test149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test149");
        java.lang.String str1 = strman.Strman.decEncode("null000780008500076000760005700055001100007800085000760007600057000550011700078000850007600076000570005500108000780008500076000760005700055001080007800085000760007600057000550005700078000850007600076000570005500055000780008500076000760005700055hinullhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hiih79llun!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ihhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101");
    }

    @Test
    public void test150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test150");
        java.util.Optional<java.lang.String> strOptional1 = strman.Strman.trimEnd("004d004400410032005a005400410077004e007a00550077004d0044005a006a004d0044004100320059007a00410077004d007a006b0077004d0044004d0033004d004400410030005a005400410077004e006d00550077004d004400630031004d0044004100320059007a00410077004e006d004d0077004d0044004d0035004d00440041007a004e007a00410077004e005400550077004d0044005a006c004d004400410033004e005400410077004e006d004d0077004d0044005a006a004d00440041007a004f005400410077004d007a00630077004d00440052006a004d004400410032005a005400410077004e007a00550077004d0044005a006a004d0044004100320059007a00410077004d007a006b0077004d0044004d0033004d0044004100300059007a00410077004e006d00550077004d004400630031004d0044004100320059007a00410077004e006d004d0077004d0044004d0035004d00440041007a004e007a00410077004d007a006b0077004d0044005a006c004d004400410033004e005400410077004e006d004d0077004d0044005a006a004d00440041007a004f005400410077004d007a00630077004d0044004d0033004d004400410032005a005400410077004e007a00550077004d0044005a006a004d0044004100320059007a00410077004d007a006b0077004d0044004d0033");
        org.junit.Assert.assertNotNull(strOptional1);
    }

    @Test
    public void test151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test151");
        java.util.Optional<java.lang.String> strOptional1 = strman.Strman.trimEnd("hnullnullinullnullhnullnullinullnullhnullnullinullnullhnullnullinullnullhnullnullinullnullhnullnullinullnullhnullnullinullnullhnullnullinullnullhnullnullinullnullhnullnullinullnullhnullnullinullnullhnullnullinullnullhnullnullinullnullhnullnullinullnullhnullnullinullnullhnullnullinullnullhnullnullinullnullhnullnullinullnullhnullnullinullnullhnullnullinullnullhnullnullinullnullhnullnullinullnullhnullnullinullnullhnullnullinullnullhnullnullinullnullhnullnullinullnullhnullnullinullnullhnullnullinullnullhnullnullinullnullhnullnullinullnullhnullnullinullnullhnullnullinullnullhnullnullinullnullhnullnullinullnullhnullnullinullnullhnullnullinullnullhnullnullinullnullhnullnullinullnullhnullnullinullnullhnullnullinullnullhnullnullinullnullhnullnullinullnullhnullnullinullnullhnullnullinullnullhnullnullinullnullhnullnullinullnullhnullnullinullnullhnullnullinullnullhnullnullinullnullhnullnullinullnullhnullnullinullnullhnullnullinullnullhnullnullinullnullhnullnullinullnullhnullnullinullnullhnullnullinullnullhnullnullinullnullhnullnullinullnullhnullnullinullnullhnullnullinullnullhnullnullinullnullhnullnullinullnullhnullnullinullnullhnullnullinullnullhnullnullinullnullhnullnullinullnullhnullnullinullnullhnullnullinullnullhnullnullinullnullhnullnullinullnullhnullnullinullnullhnullnullinullnullhnullnullinullnullhnullnullinullnullhnullnullinullnullhnullnullinullnullhnullnullinullnullhnullnullinullnullhnullnullinullnullhnullnullinullnullhnullnullinullnullhnullnullinullnullhnullnullinullnullhnullnullinullnullhnullnullinullnullhnullnullinullnullhnullnullinullnullhnullnullinullnullhnullnullinullnullhnullnullinullnullhnullnullinullnullhnullnullinullnullhnullnullinullnullhnullnullinullnullhnullnullinullnullhnullnullinullnullhnullnullinullnullhnullnullinullnullhnullnullinullnullhnullnullinullnullnnullnullunullnulllnullnulll97nullnullhnullnulli00370039006nullnullc006nullnullc0075006nullnulle003700370039006nullnullc006nullnullc0075006nullnulle003900370039006nullnullc006nullnullc0075006nullnulle004nullnullc00370039006nullnullc006nullnullc0075006nullnulle004nullnullc00370039006nullnullc006nullnullc0075006nullnulle005500370039006nullnullc006nullnullc0075006nullnulle004nullnulle00370039006nullnullc006nullnullc0075006nullnullennullnullunullnulllnullnulll97nullnullnnullnullullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull");
        org.junit.Assert.assertNotNull(strOptional1);
    }

    @Test
    public void test152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test152");
        java.lang.String str1 = strman.Strman.lowerFirst("Null97nhinullhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101nul1097null971097nULL97NNULNullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullhi\\-hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "null97nhinullhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101nul1097null971097nULL97NNULNullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullhi\\-hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101" + "'", str1.equals("null97nhinullhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101nul1097null971097nULL97NNULNullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullhi\\-hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101"));
    }

    @Test
    public void test153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test153");
        java.lang.String str3 = strman.Strman.encode("MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDAwNzIwMDEwNTAwMTA0MDAxMDUwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDExMDAwMTE3MDAxMDgwMDEwODAwMDU3MDAwNTUwMDEwNDAwMTA1MDAwMzM=", 256, 1);
    }

    @Test
    public void test154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test154");
        java.lang.String str1 = strman.Strman.toSnakeCase("hi\\-hi");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "hi\\_hi" + "'", str1.equals("hi\\_hi"));
    }

    @Test
    public void test155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test155");
        java.util.Map<java.lang.Character, java.lang.Long> charMap1 = strman.Strman.charsCount("lunN79llunnull97null97Nnull97Unull97Lnull97Lnull979null977null97");
        org.junit.Assert.assertNotNull(charMap1);
    }

    @Test
    public void test156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test156");
        java.lang.String str1 = strman.Strman.upperFirst("Null97Nnull97Unull97Lnull97Lnull979null977null97");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "Null97Nnull97Unull97Lnull97Lnull979null977null97" + "'", str1.equals("Null97Nnull97Unull97Lnull97Lnull979null977null97"));
    }

    @Test
    public void test157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test157");
        boolean boolean2 = strman.Strman.unequal("Hihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100", "m_d_a2_z_t_aw_nz_uw_m_d_zj_m_d_a2_yz_aw_mzkw_m_d_m3_m_d_a0_z_t_aw_nm_uw_m_dc1_m_d_a2_yz_aw_nm_mw_m_d_m5_m_d_az_nz_aw_n_t_uw_m_d_zl_m_d_a3_n_t_aw_nm_mw_m_d_zj_m_d_az_o_t_aw_mzcw_m_d_rj_m_d_a2_z_t_aw_nz_uw_m_d_zj_m_d_a2_yz_aw_mzkw_m_d_m3_m_d_a0_yz_aw_nm_uw_m_dc1_m_d_a2_yz_aw_nm_mw_m_d_m5_m_d_az_nz_aw_mzkw_m_d_zl_m_d_a3_n_t_aw_nm_mw_m_d_zj_m_d_az_o_t_aw_mzcw_m_d_m3_m_d_a2_z_t_aw_nz_uw_m_d_zj_m_d_a2_yz_aw_mzkw_m_d_m3");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
    }

    @Test
    public void test158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test158");
        java.lang.String[] strArray2 = strman.Strman.split("MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA0ZTAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwNTUwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDRjMDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA0YzAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwMzkwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111001000000000-ih79llun-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ihMw==Hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!null97Nnulnull000780008500076000760005700055001100007800085000760007600057000550011700078000850007600076000570005500108000780008500076000760005700055001080007800085000760007600057000550005700078000850007600076000570005500055000780008500076000760005700055", "004e0055004c004c00390037006e004e0055004c004c003900370075004e0055004c004c00390037006c004e0055004c004c00390037006c004e0055004c004c003900370039004e0055004c004c003900370037004e0055004c004c00390037006800690068006900480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d00480049002d004e0055004c004c0039003700480049002d
        org.junit.Assert.assertNotNull(strArray2);
    }

    @Test
    public void test159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test159");
        try {
            java.lang.String str3 = strman.Strman.slice("SekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhTlVmtdk3", 440, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -440");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        }
    }

    @Test
    public void test160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test160");
        java.lang.String[] strArray3 = strman.Strman.between("00mda2 ztaw nz uw mdzj mda2 yz aw mzkw mdm3nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull000000005500000000570000000076000000007600000000850000000078000000005500000000550000000057000000007600000000760000000085000000007800000000570000000055000000005700000000760000000076000000008500000000780000000108000000005500000000570000000076000000007600000000850000000078000000010800000000550000000057000000007600000000760000000085000000007800000001170000000055000000005700000000760000000076000000008500000000780000000110000000005500000000570000000076000000007600000000850000000078hihiull");
        boolean boolean4 = strman.Strman.isString((java.lang.Object) "Null");
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
    }

    @Test
    public void test161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test161");
        boolean boolean1 = strman.Strman.isString((java.lang.Object) "Null97Nnull97Unull97Lnull97Lnull979null977null97NULL97");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
    }

    @Test
    public void test162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test162");
        java.util.Optional<java.lang.String> strOptional1 = strman.Strman.trimEnd("hinullhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000");
        org.junit.Assert.assertNotNull(strOptional1);
    }

    @Test
    public void test163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test163");
        java.lang.String str3 = strman.Strman.ensureLeft("iullnullnullnullnullnullnull03000300034003800300030003000340039003000300030003400390030003000300034003800300030003000340039003000300030003400380030003000300034003900300030003100310030003000300031003100370030003000310030003800300030003100300038003000300030003500370030003000300035003500300030003100310030003000300031003100300030003000310031003700300030003100300038hullnullnullnullnullnullnull03000300034003800300030003000340039003000300030003400390030003000300034003800300030003000340039003000300030003400380030003000300034003900300030003100310030003000300031003100370030003000310030003800300030003100300038003000300030003500370030003000300035003500300030003100310030003000300031003100300030003000310031003700300030003100300038iullnullnullnullnullnullnull03000300034003800300030003000340039003000300030003400390030003000300034003800300030003000340039003000300030003400380030003000300034003900300030003100310030003000300031003100370030003000310030003800300030003100300038003000300030003500370030003000300035003500300030003100310030003000300031003100300030003000310031003700300030003100300038hullnullnullnullnullnullnull03000300034003800300030003000340039003000300030003400390030003000300034003800300030003000340039003000300030003400380030003000300034003900300030003100310030003000300031003100370030003000310030003800300030003100300038003000300030003500370030003000300035003500300030003100310030003000300031003100300030003000310031003700300030003100300038hullnullnullnullnullnullnull03000300034003800300030003000340039003000300030003400390030003000300034003800300030003000340039003000300030003400380030003000300034003900300030003100310030003000300031003100370030003000310030003800300030003100300038003000300030003500370030003000300035003500300030003100310030003000300031003100300030003000310031003700300030003100300038i0030003000300034003800300030003000340038003000300030003400380030003000300034003800300030003000340038003000300030003400380030003000300034003800300030003000340038003000300030003400380030003000300034003800300030003000340039003000300030003400390030003000300034003800300030003000340038003000300030003400390030003000300034003900300030003000340038003000300030003400380030003000300034003800300030003000340038003000300030003400380030003000300034003800300030003000340038003000300030003400380030003000300034003800300ullnullnullnullnullnullnull03000300034003800300030003000340039003000300030003400390030003000300034003800300030003000340039003000300030003400380030003000300034003900300030003100310030003000300031003100370030003000310030003800300030003100300038003000300030003500370030003000300035003500300030003100310030003000300031003100300030003000310031003700300030003100300038hullnullnullnullnullnullnull03000300034003800300030003000340039003000300030003400390030003000300034003800300030003000340039003000300030003400380030003000300034003900300030003100310030003000300031003100370030003000310030003800300030003100300038003000300030003500370030003000300035003500300030003100310030003000300031003100300030003000310031003700300030003100300038i484851554848515748485499484854994848555348485410148485155484851554848515748485499484854994848555348485410148485157484851554848515748485499484854994848555348485410148485299484851554848515748485499484854994848555348485410148485299484851554848515748485499484854994848555348485410148485353484851554848515748485499484854994848555348485410148485210148485155484851574848549948485499484855534848541019ihiullnullnullnullnullnullnull03000300034003800300030003000340039003000300030003400390030003000300034003800300030003000340039003000300030003400380030003000300034003900300030003100310030003000300031003100370030003000310030003800300030003100300038003000300030003500370030003000300035003500300030003100310030003000300031003100300030003000310031003700300030003100300038h7null", "null33727333727333727333", false);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "null33727333727333727333iullnullnullnullnullnullnull03000300034003800300030003000340039003000300030003400390030003000300034003800300030003000340039003000300030003400380030003000300034003900300030003100310030003000300031003100370030003000310030003800300030003100300038003000300030003500370030003000300035003500300030003100310030003000300031003100300030003000310031003700300030003100300038hullnullnullnullnullnullnull03000300034003800300030003000340039003000300030003400390030003000300034003800300030003000340039003000300030003400380030003000300034003900300030003100310030003000300031003100370030003000310030003800300030003100300038003000300030003500370030003000300035003500300030003100310030003000300031003100300030003000310031003700300030003100300038iullnullnullnullnullnullnull03000300034003800300030003000340039003000300030003400390030003000300034003800300030003000340039003000300030003400380030003000300034003900300030003100310030003000300031003100370030003000310030003800300030003100300038003000300030003500370030003000300035003500300030003100310030003000300031003100300030003000310031003700300030003100300038hullnullnullnullnullnullnull03000300034003800300030003000340039003000300030003400390030003000300034003800300030003000340039003000300030003400380030003000300034003900300030003100310030003000300031003100370030003000310030003800300030003100300038003000300030003500370030003000300035003500300030003100310030003000300031003100300030003000310031003700300030003100300038hullnullnullnullnullnullnull03000300034003800300030003000340039003000300030003400390030003000300034003800300030003000340039003000300030003400380030003000300034003900300030003100310030003000300031003100370030003000310030003800300030003100300038003000300030003500370030003000300035003500300030003100310030003000300031003100300030003000310031003700300030003100300038iullnullnullnullnullnullnull03000300034003800300030003000340039003000300030003400390030003000300034003800300030003000340039003000300030003400380030003000300034003900300030003100310030003000300031003100370030003000310030003800300030003100300038003000300030003500370030003000300035003500300030003100310030003000300031003100300030003000310031003700300030003100300038hullnullnullnullnullnullnull03000300034003800300030003000340039003000300030003400390030003000300034003800300030003000340039003000300030003400380030003000300034003900300030003100310030003000300031003100370030003000310030003800300030003100300038003000300030003500370030003000300035003500300030003100310030003000300031003100300030003000310031003700300030003100300038i484851554848515748485499484854994848555348485410148485155484851554848515748485499484854994848555348485410148485157484851554848515748485499484854994848555348485410148485299484851554848515748485499484854994848555348485410148485299484851554848515748485499484854994848555348485410148485353484851554848515748485499484854994848555348485410148485210148485155484851574848549948485499484855534848541019ihiullnullnullnullnullnullnull03000300034003800300030003000340039003000300030003400390030003000300034003800300030003000340039003000300030003400380030003000300034003900300030003100310030003000300031003100370030003000310030003800300030003100300038003000300030003500370030003000300035003500300030003100310030003000300031003100300030003000310031003700300030003100300038h7null" + "'", str3.equals("null33727333727333727333iullnullnullnullnullnullnull03000300034003800300030003000340039003000300030003400390030003000300034003800300030003000340039003000300030003400380030003000300034003900300030003100310030003000300031003100370030003000310030003800300030003100300038003000300030003500370030003000300035003500300030003100310030003000300031003100300030003000310031003700300030003100300038hullnullnullnullnullnullnull03000300034003800300030003000340039003000300030003400390030003000300034003800300030003000340039003000300030003400380030003000300034003900300030003100310030003000300031003100370030003000310030003800300030003100300038003000300030003500370030003000300035003500300030003100310030003000300031003100300030003000310031003700300030003100300038iullnullnullnullnullnullnull03000300034003800300030003000340039003000300030003400390030003000300034003800300030003000340039003000300030003400380030003000300034003900300030003100310030003000300031003100370030003000310030003800300030003100300038003000300030003500370030003000300035003500300030003100310030003000300031003100300030003000310031003700300030003100300038h0030003000300034003800300030003000340038003000300030003400380030003000300034003800300030003000340038003000300030003400380030003000300034003800300030003000340038003000300030003400380030003000300034003800300030003000340039003000300030003400390030003000300034003800300030003000340038003000300030003400390030003000300034003900300030003000340038003000300030003400380030003000300034003800300030003000340038003000300030003400380030003000300034003800300030003000340038003000300030003400380030003000300034003800300ullnullnullnullnullnullnull03000300034003800300030003000340039003000300030003400390030003000300034003800300030003000340039003000300030003400380030003000300034003900300030003100310030003000300031003100370030003000310030003800300030003100300038003000300030003500370030003000300035003500300030003100310030003000300031003100300030003000310031003700300030003100300038hullnullnullnullnullnullnull03000300034003800300030003000340039003000300030003400390030003000300034003800300030003000340039003000300030003400380030003000300034003900300030003100310030003000300031003100370030003000310030003800300030003100300038003000300030003500370030003000300035003500300030003100310030003000300031003100300030003000310031003700300030003100300038iullnullnullnullnullnullnull03000300034003800300030003000340039003000300030003400390030003000300034003800300030003000340039003000300030003400380030003000300034003900300030003100310030003000300031003100370030003000310030003800300030003100300038003000300030003500370030003000300035003500300030003100310030003000300031003100300030003000310031003700300030003100300038hullnullnullnullnullnullnull03000300034003800300030003000340039003000300030003400390030003000300034003800300030003000340039003000300030003400380030003000300034003900300030003100310030003000300031003100370030003000310030003800300030003100300038003000300030003500370030003000300035003500300030003100310030003000300031003100300030003000310031003700300030003100300038i484851554848515748485499484854994848555348485410148485155484851554848515748485499484854994848555348485410148485157484851554848515748485499484854994848555348485410148485299484851554848515748485499484854994848555348485410148485299484851554848515748485499484854994848555348485410148485353484851554848515748485499484854994848555348485410148485210148485155484851574848549948485499484855534848541019ihiullnullnullnullnullnullnull03000300034003800300030003000340039003000300030003400390030003000300034003800300030003000340039003000300030003400380030003000300034003900300030003100310030003000300031003100370030003000310030003800300030003100300038003000300030003500370030003000300035003500300030003100310030003000300031003100300030003000310031003700300030003100300038h7null"));
    }

    @Test
    public void test164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test164");
        boolean boolean1 = strman.Strman.isLowerCase("1097");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
    }

    @Test
    public void test165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test165");
        java.lang.String[] strArray3 = strman.Strman.between("hinullhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hiih79llun!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ihhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101", "nULL97NNULhiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiNull97hiNull97nnulhiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiNull97hiNull97nnul", "001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000ihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi_h1null97null97_nnul_n_u_l_l97_n_n_u_lih");
        org.junit.Assert.assertNotNull(strArray3);
    }

    @Test
    public void test166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test166");
        java.lang.String str1 = strman.Strman.reverse("Lunn79llun");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "null97nnuL" + "'", str1.equals("null97nnuL"));
    }

    @Test
    public void test167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test167");
        java.lang.String str3 = strman.Strman.leftPad("000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97 Nnull97 Unull97 Lnull97 Lnull979null977null97 Hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!", "nnullhi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006eunullhi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006elnullhi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006el", 2176);
    }

    @Test
    public void test168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test168");
        java.util.Optional<java.lang.String> strOptional1 = strman.Strman.trimStart("771228561nullnull97nnul001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97");
        org.junit.Assert.assertNotNull(strOptional1);
    }

    @Test
    public void test169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test169");
        java.lang.String str1 = strman.Strman.htmlDecode("0005100051000550005000055000510005100051000550005000055000510005100051000550005000055000510005100051");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "null" + "'", str1.equals("null"));
    }

    @Test
    public void test170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test170");
        java.lang.String str1 = strman.Strman.slugify("nullnull97nnul=g2xphwA000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97Nnull97Unull97Lnull97Lnull979null977null97Hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hihi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hiMw==");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "nullnull97nnul-g2xphwa000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97nnull97unull97lnull97lnull979null977null97hihihi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hihi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-himw" + "'", str1.equals("nullnull97nnul-g2xphwa000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97nnull97unull97lnull97lnull979null977null97hihihi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hihi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-himw"));
    }

    @Test
    public void test171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test171");
        java.lang.String[] strArray4 = strman.Strman.words("Nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull97Nnull97Unull97Lnull97Lnull979null977null97hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97", "hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!");
        java.util.Optional<java.lang.String> strOptional5 = strman.Strman.trimEnd("MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA0ZTAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwNTUwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDRjMDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA0YzAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwMzkwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111001000000000-ih79llun-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih", strArray4);
        java.lang.String[] strArray6 = strman.Strman.removeEmptyStrings(strArray4);
        java.lang.String str7 = strman.Strman.appendArray("MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA0ZTAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwNTUwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDRjMDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA0YzAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwMzkwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3Nnullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037hihiullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull", strArray6);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(strOptional5);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + str7 + "' != '" + "MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA0ZTAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwNTUwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDRjMDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA0YzAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwMzkwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3Nnullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037hihiullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullNullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull97Nnull97Unull97Lnull97Lnull979null977null97null97" + "'", str7.equals("MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA0ZTAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwNTUwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDRjMDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA0YzAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwMzkwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3Nnullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037hihiullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullNullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull97Nnull97Unull97Lnull97Lnull979null977null97null97"));
    }

    @Test
    public void test172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test172");
        java.lang.String str4 = strman.Strman.replace("001040010500110001170010800108000570005500078001100011700108Hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi", "Mda2ztaWnZuWmdzJmda2yZaWmZKWmdm3mda0ztaWnMuWmdC1mda2yZaWnMmWmdm5mdaZnZaWntuWmdzLmda3ntaWnMmWmdzJmdaZotaWmZCWmdrJmda2ztaWnZuWmdzJmda2yZaWmZKWmdm3mda0yZaWnMuWmdC1mda2yZaWnMmWmdm5mdaZnZaWmZKWmdzLmda3ntaWnMmWmdzJmdaZotaWmZCWmdm3mda2ztaWnZuWmdzJmda2yZaWmZKWmdmiH79LLUNiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHmW==hI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!NULL97HI!NULL97nNULNULL000780008500076000760005700055001100007800085000760007600057000550011700078000850007600076000570005500108000780008500076000760005700055001080007800085000760007600057000550005700078000850007600076000570005500055000780008500076000760005700055", "IHI h", true);
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "001040010500110001170010800108000570005500078001100011700108Hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi" + "'", str4.equals("001040010500110001170010800108000570005500078001100011700108Hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi"));
    }

    @Test
    public void test173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test173");
        java.lang.String str1 = strman.Strman.transliterate("lunN79llunnull97null97Nnull97Unull97Lnull97Lnull979null977null97nULL97NNULNullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull1097nullnull97nnulhi006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull97nnulnull97null97nnulnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullhi-hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "lunN79llunnull97null97Nnull97Unull97Lnull97Lnull979null977null97nULL97NNULNullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull1097nullnull97nnulhi006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull97nnulnull97null97nnulnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullhi-hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101" + "'", str1.equals("lunN79llunnull97null97Nnull97Unull97Lnull97Lnull979null977null97nULL97NNULNullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull1097nullnull97nnulhi006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull97nnulnull97null97nnulnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullhi-hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101"));
    }

    @Test
    public void test174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test174");
        java.lang.String str3 = strman.Strman.removeRight("", "hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_null97hi00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006ehi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!==AbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbhi-hinull97nnul", false);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "" + "'", str3.equals(""));
    }

    @Test
    public void test175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test175");
        boolean boolean1 = strman.Strman.isUpperCase("771228561");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
    }

    @Test
    public void test176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test176");
        boolean boolean3 = strman.Strman.endsWith("771228561nullnull97nnul001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97!IHNULLNULL97nNULL97uNULL97lNULL97lNULL979NULL977NULN_U_L_L97_N_ULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLL97nulltrue);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test177");
        java.lang.String str3 = strman.Strman.leftPad("hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e", "Mda2 ztaw nz uw mdzj mda2 yz aw mzkw mdm3nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullMDAxMTAxMTAwMDAwMDAwMDEwMTAxMTEwMDAwMDAwMDAwMTExMDExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDAxMDAxMTEwMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAxMDEwMTExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDEwMDEwMTEwMDAwMDAwMDAwMDAxMDExMDAwMDAwMDAwMTAxMTAxMDAwMDAwMDAwMDEwMDEwMTEwMDAwMDAwMDAwMDAxMDExMDAwMDAwMDAwaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaS1o", 7656);
    }

    @Test
    public void test178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test178");
        boolean boolean1 = strman.Strman.isBlank("bnVsbG5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTA==");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
    }

    @Test
    public void test179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test179");
        java.lang.String[] strArray2 = strman.Strman.split("i006e0075006c006c00390037004e006e0075006c006c003900370055006e0075006c006c00390037004c006e0075006c006c00390037004c006e0075006c006c003900370039006e0075006c006c003900370037006e0075006c006c00390037h006e0075006c006c00390037004e006e0075006c006c003900370055006e0075006c006c00390037004c006e0075006c006c00390037004c006e0075006c006c003900370039006e0075006c006c003900370037006e0075006c006c00390037i006e0075006c006c00390037004e006e0075006c006c003900370055006e0075006c006c00390037004c006e0075006c006c00390037004c006e0075006c006c003900370039006e0075006c006c003900370037006e0075006c006c00390037h006e0075006c006c00390037004e006e0075006c006c003900370055006e0075006c006c00390037004c006e0075006c006c00390037004c006e0075006c006c003900370039006e0075006c006c003900370037006e0075006c006c00390037h006e0075006c006c00390037004e006e0075006c006c003900370055006e0075006c006c00390037004c006e0075006c006c00390037004c006e0075006c006c003900370039006e0075006c006c003900370037006e0075006c006c00390037i006e0075006c006c00390037004e006e0075006c006c003900370055006e0075006c006c00390037004c006e0075006c006c00390037004c006e0075006c006c003900370039006e0075006c006c003900370037006e0075006c006c00390037h006e0075006c006c00390037004e006e0075006c006c003900370055006e0075006c006c00390037004c006e0075006c006c00390037004c006e0075006c006c003900370039006e0075006c006c003900370037006e0075006c006c00390037i48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101", "Hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!Hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!blVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100");
        org.junit.Assert.assertNotNull(strArray2);
    }

    @Test
    public void test180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test180");
        java.lang.String str3 = strman.Strman.insert("IHI97HHI97HI48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101n-u-l-l97-n-n-u-lhi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-null97nnul-hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!null97-nnul", "nULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULL", 480);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "IHI97HHI97HI48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101n-u-l-l97-n-n-u-lhi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hinULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULL-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-null97nnul-hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!null97-nnul" + "'", str3.equals("IHI97HHI97HI48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101n-u-l-l97-n-n-u-lhi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hinULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULL-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-null97nnul-hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!null97-nnul"));
    }

    @Test
    public void test181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test181");
        java.lang.String str3 = strman.Strman.surround("0000000000110000000000000011000000000000001100110000000000110000000000000011000000000000001100000000000000110011000000000011000000000000001100000000000000110000000000000011001100000000001100110000000000110000000000000011000000000000001100110000000000110011", "N u l l97 n n u lhi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi null97hi null97nnul hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!null97 nnul", "hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97_hi!00370039006_c006_c0075006_e003700370039006_c006_c0075006_e003900370039006_c006_c0075006_e004_c00370039006_c006_c0075006_e004_c00370039006_c006_c0075006_e005500370039006_c006_c0075006_e004_e00370039006_c006_c0075006_e");
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "N u l l97 n n u lhi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi null97hi null97nnul hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!null97 nnul0000000000110000000000000011000000000000001100110000000000110000000000000011000000000000001100000000000000110011000000000011000000000000001100000000000000110000000000000011001100000000001100110000000000110000000000000011000000000000001100110000000000110011hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97_hi!00370039006_c006_c0075006_e003700370039006_c006_c0075006_e003900370039006_c006_c0075006_e004_c00370039006_c006_c0075006_e004_c00370039006_c006_c0075006_e005500370039006_c006_c0075006_e004_e00370039006_c006_c0075006_e" + "'", str3.equals("N u l l97 n n u lhi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi null97hi null97nnul hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!null97 nnul0000000000110000000000000011000000000000001100110000000000110000000000000011000000000000001100000000000000110011000000000011000000000000001100000000000000110000000000000011001100000000001100110000000000110000000000000011000000000000001100110000000000110011hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97_hi!00370039006_c006_c0075006_e003700370039006_c006_c0075006_e003900370039006_c006_c0075006_e004_c00370039006_c006_c0075006_e004_c00370039006_c006_c0075006_e005500370039006_c006_c0075006_e004_e00370039006_c006_c0075006_e"));
    }

    @Test
    public void test182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test182");
        java.lang.String str3 = strman.Strman.removeRight("4911011710810857551101171081085755951101101171081085755951171101171081085755951081101171081085755951081101171081085755571101171081085755551101171081085755hi_hi0000000001001000000000000110100197_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_null97hi00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e", "aGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhbnVsbDk3aGkhMDAwMDAwMDAwMTAwMTExMDAwMDAwMDAwMDExMTAxMDEwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMTAwMDAwMDAwMDAxMTEwMTAxMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTEwMDAwMDAwMDAwMTExMDEwMTAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTExMDAwMDAwMDAwMDExMTAxMDEwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMTAwMDAwMDAwMDAxMTEwMTAxMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTEwMDAwMDAwMDAwMTExMDEwMTAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTExMDAwMDAwMDAwMDExMTAxMDEwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMTAwMDAwMDAwMDAxMTEwMTAxMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTEwMDAwMDAwMDAwMTExMDEwMTAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTExMDAwMDAwMDAwMDExMTAxMDEwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMTAwMDAwMDAwMDAxMTEwMTAxMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTEwMDAwMDAwMDAwMTExMDEwMTAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTExMDAwMDAwMDAwMDExMTAxMDEwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMTAwMDAwMDAwMDAxMTEwMTAxMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTEwMDAwMDAwMDAwMTExMDEwMTAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTExMDAwMDAwMDAwMDExMTAxMDEwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMTAwMDAwMDAwMDAxMTEwMTAxMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTEwMDAwMDAwMDAwMTExMDEwMTAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTExMDAwMDAwMDAwMDExMTAxMDEwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMTAwMDAwMDAwMDAxMTEwMTAxMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTEwMDAwMDAwMDAwMTExMDEwMTAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTExMDAwMDAwMDAwMDExMTAxMDEwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMTAwMDAwMDAwMDAxMTEwMTAxMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTEwMDAwMDAwMDAwMTExMDEwMTAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTExMDAwMDAwMDAwMDExMTAxMDEwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMTAwMDAwMDAwMDAxMTEwMTAxMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTEwMDAwMDAwMDAwMTExMDEwMTAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTExMDAwMDAwMDAwMDExMTAxMDEwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMTAwMDAwMDAwMDAxMTEwMTAxMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTEwMDAwMDAwMDAwMTExMDEwMTAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTExMDAwMDAwMDAwMDExMTAxMDEwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMTAwMDAwMDAwMDAxMTEwMTAxMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTEwMDAwMDAwMDAwMTExMDEwMTAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTExMDAwMDAwMDAwMDExMTAxMDEwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMTAwMDAwMDAwMDAxMTEwMTAxMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTEwMDAwMDAwMDAwMTExMDEwMTAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTExMDAwMDAwMDAwMDExMTAxMDEwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMTAwMDAwMDAwMDAxMTEwMTAxMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTEwMDAwMDAwMDAwMTExMDEwMTAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTExMDAwMDAwMDAwMDExMTAxMDEwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMTAwMDAwMDAwMDAxMTEwMTAxMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTEwMDAwMDAwMDAwMTExMDEwMTAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTExMDAwMDAwMDAwMDExMTAxMDEwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMTAwMDAwMDAwMDAxMTEwMTAxMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTEwMDAwMDAwMDAwMTExMDEwMTAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTExMDAwMDAwMDAwMDExMTAxMDEwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMTAwMDAwMDAwMDAxMTEwMTAxMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTEwMDAwMDAwMDAwMTExMDEwMTAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTAwNzIxMDUzM2hpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIQ==", false);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "4911011710810857551101171081085755951101101171081085755951171101171081085755951081101171081085755951081101171081085755571101171081085755551101171081085755hi_hi0000000001001000000000000110100197_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_null97hi00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e" + "'", str3.equals("4911011710810857551101171081085755951101101171081085755951171101171081085755951081101171081085755951081101171081085755571101171081085755551101171081085755hi_hi0000000001001000000000000110100197_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_null97hi00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e"));
    }

    @Test
    public void test183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test183");
        java.lang.String[] strArray1 = strman.Strman.chars("000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97_nnull97_unull97_lnull97_lnull979null977null97");
        org.junit.Assert.assertNotNull(strArray1);
    }

    @Test
    public void test184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test184");
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.util.List<java.lang.String> strList6 = strman.Strman.zip(strArray5);
        boolean boolean8 = strman.Strman.containsAny("", strArray5, true);
        boolean boolean10 = strman.Strman.containsAny("hi!hi!", strArray5, true);
        java.lang.String str11 = strman.Strman.prepend("NULL97", strArray5);
        java.lang.String str12 = strman.Strman.appendArray("006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037Null97", strArray5);
        java.lang.String str13 = strman.Strman.format("256", strArray5);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + str11 + "' != '" + "NULL97" + "'", str11.equals("NULL97"));
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037Null97" + "'", str12.equals("006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037Null97"));
        org.junit.Assert.assertTrue("'" + str13 + "' != '" + "256" + "'", str13.equals("256"));
    }

    @Test
    public void test185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test185");
        java.lang.String str2 = strman.Strman.toDecamelize("null97nnul1097null971097null97nnulnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullhi-hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101", "00370039006c006c0075006e0068006900680069003700370039006c006c0075006e003900370039006c006c0075006e002d006c00370039006c006c0075006e002d006c00370039006c006c0075006e002d007500370039006c006c0075006e002d006e00370039006c006c0075006e002d0068006900680069");
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "null97nnul1097null971097null97nnulnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullhi00370039006c006c0075006e0068006900680069003700370039006c006c0075006e003900370039006c006c0075006e002d006c00370039006c006c0075006e002d006c00370039006c006c0075006e002d007500370039006c006c0075006e002d006e00370039006c006c0075006e002d0068006900680069hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101" + "'", str2.equals("null97nnul1097null971097null97nnulnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullhi00370039006c006c0075006e0068006900680069003700370039006c006c0075006e003900370039006c006c0075006e002d006c00370039006c006c0075006e002d006c00370039006c006c0075006e002d007500370039006c006c0075006e002d006e00370039006c006c0075006e002d0068006900680069hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101"));
    }

    @Test
    public void test186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test186");
        java.lang.String[] strArray4 = strman.Strman.words("", "null");
        java.util.Optional<java.lang.String> strOptional5 = strman.Strman.trimStart("", strArray4);
        java.lang.String[] strArray6 = strman.Strman.removeEmptyStrings(strArray4);
        java.lang.String str7 = strman.Strman.append("Hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!Mda2ztaWnZuWmdzJmda2yZaWmZKWmdm3mda2ztaWnZuWmdzJmda2yZaWmZKWmdm3mda2ztaWnZuWmdzJmda2yZaWmZKWmdm3mda2ztaWnZuWmdzJmda2yZaWmZKWmdm3mda2ztaWnZuWmdzJmda2yZaWmZKWmdm3mda2ztaWnZuWmdzJmda2yZaWmZKWmdm3mda2ztaWnZuWmdzJmda2yZaWmZKWmdm3mda2ztaWnZuWmdzJmda2yZaWmZKWmdm3mda2ztaWnZuWmdzJmda2yZaWmZKWmdm3mda2ztaWnZuWmdzJmda2yZaWmZKWmdm3tNvSBa==", strArray6);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(strOptional5);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + str7 + "' != '" + "Hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!Mda2ztaWnZuWmdzJmda2yZaWmZKWmdm3mda2ztaWnZuWmdzJmda2yZaWmZKWmdm3mda2ztaWnZuWmdzJmda2yZaWmZKWmdm3mda2ztaWnZuWmdzJmda2yZaWmZKWmdm3mda2ztaWnZuWmdzJmda2yZaWmZKWmdm3mda2ztaWnZuWmdzJmda2yZaWmZKWmdm3mda2ztaWnZuWmdzJmda2yZaWmZKWmdm3mda2ztaWnZuWmdzJmda2yZaWmZKWmdm3mda2ztaWnZuWmdzJmda2yZaWmZKWmdm3mda2ztaWnZuWmdzJmda2yZaWmZKWmdm3tNvSBa==" + "'", str7.equals("Hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!Mda2ztaWnZuWmdzJmda2yZaWmZKWmdm3mda2ztaWnZuWmdzJmda2yZaWmZKWmdm3mda2ztaWnZuWmdzJmda2yZaWmZKWmdm3mda2ztaWnZuWmdzJmda2yZaWmZKWmdm3mda2ztaWnZuWmdzJmda2yZaWmZKWmdm3mda2ztaWnZuWmdzJmda2yZaWmZKWmdm3mda2ztaWnZuWmdzJmda2yZaWmZKWmdm3mda2ztaWnZuWmdzJmda2yZaWmZKWmdm3mda2ztaWnZuWmdzJmda2yZaWmZKWmdm3mda2ztaWnZuWmdzJmda2yZaWmZKWmdm3tNvSBa=="));
    }

    @Test
    public void test187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test187");
        java.lang.String str3 = strman.Strman.removeRight("hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97", "006f0074006b0030006f006400710034006e007400710035006f007400710034006e006400670031006e00740075007a0020004e006400670030006f006400750030006d0074006100780020004e006400670030006f0064007500780020004e007400750030006f006400710034006e007400650031006e007400710034006e006400670031006d007400750033006e006400670030006f006400750030006f0074006b0030006f006400710034006e007400710035006f007400710034006e006400670031006e00740075007a0020004e006400670030006f006400750030006d0074006100780020004e006400670030006f0064007500780020004e007400630030006f006400710034006e007400650031006e007400710034006e006400670031006d007400750033", true);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97" + "'", str3.equals("hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97"));
    }

    @Test
    public void test188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test188");
        int int2 = strman.Strman.lastIndexOf("NULL971null97null97Nnull97Unull97Lnull97Lnull979null977null97", "hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!006e0075006c006c00390037null97");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
    }

    @Test
    public void test189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test189");
        java.lang.String str1 = strman.Strman.lowerFirst("4911011710810857551101171081085755781101171087885767657557878857633105104");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "4911011710810857551101171081085755781101171087885767657557878857633105104" + "'", str1.equals("4911011710810857551101171081085755781101171087885767657557878857633105104"));
    }

    @Test
    public void test190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test190");
        java.lang.String str2 = strman.Strman.ensureRight("null97nnul1097null971097null97nnulnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullhi00370039006c006c0075006e0068006900680069003700370039006c006c0075006e003900370039006c006c0075006e002d006c00370039006c006c0075006e002d006c00370039006c006c0075006e002d007500370039006c006c0075006e002d006e00370039006c006c0075006e002d0068006900680069hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101", "00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e");
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "null97nnul1097null971097null97nnulnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullhi00370039006c006c0075006e0068006900680069003700370039006c006c0075006e003900370039006c006c0075006e002d006c00370039006c006c0075006e002d006c00370039006c006c0075006e002d007500370039006c006c0075006e002d006e00370039006c006c0075006e002d0068006900680069hi4848515548485157484854994848549948485553484854101484851554848515548485157484854994848549948485553484854101484851574848515548485157484854994848549948485553484854101484852994848515548485157484854994848549948485553484854101484852994848515548485157484854994848549948485553484854101484853534848515548485157484854994848549948485553484854101484852101484851554848515748485499484854994848555348485410100370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e" + "'", str2.equals("null97nnul1097null971097null97nnulnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullhi00370039006c006c0075006e0068006900680069003700370039006c006c0075006e003900370039006c006c0075006e002d006c00370039006c006c0075006e002d006c00370039006c006c0075006e002d007500370039006c006c0075006e002d006e00370039006c006c0075006e002d0068006900680069hi4848515548485157484854994848549948485553484854101484851554848515548485157484854994848549948485553484854101484851574848515548485157484854994848549948485553484854101484852994848515548485157484854994848549948485553484854101484852994848515548485157484854994848549948485553484854101484853534848515548485157484854994848549948485553484854101484852101484851554848515748485499484854994848555348485410100370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e"));
    }

    @Test
    public void test191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test191");
        java.lang.String str1 = strman.Strman.transliterate("006e0075006c006c00390037hihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "006e0075006c006c00390037hihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100" + "'", str1.equals("006e0075006c006c00390037hihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100"));
    }

    @Test
    public void test192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test192");
        boolean boolean1 = strman.Strman.isBlank("000780008500076000760005700055001100007800085000760007600057000550011700078000850007600076000570005500108000780008500076000760005700055001080007800085000760007600057000550005700078000850007600076000570005500055000780008500076000760005700055");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
    }

    @Test
    public void test193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test193");
        java.lang.String str1 = strman.Strman.binEncode("006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037-null97006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037-null97006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037-null97006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037-null97006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037-null97006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037-null97006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037-null97006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037-null97006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037-null97006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037-null97");
    }

    @Test
    public void test194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test194");
        java.lang.String str1 = strman.Strman.collapseWhitespace("550007500067000670005800087000550005500075000670006700058000870007500055000750006700067000580008700080100550007500067000670005800087000801005500075000670006700058000870007110055000750006700067000580008700001100550007500067000670005800087000llun");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "550007500067000670005800087000550005500075000670006700058000870007500055000750006700067000580008700080100550007500067000670005800087000801005500075000670006700058000870007110055000750006700067000580008700001100550007500067000670005800087000llun" + "'", str1.equals("550007500067000670005800087000550005500075000670006700058000870007500055000750006700067000580008700080100550007500067000670005800087000801005500075000670006700058000870007110055000750006700067000580008700001100550007500067000670005800087000llun"));
    }

    @Test
    public void test195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test195");
        java.lang.String str1 = strman.Strman.leftTrim("Mda2 ztaw nz uw mdzj mda2 yz aw mzkw mdm3nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullHihihihinull97nnull97unull97lnull97lnull979null977null979710");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "Mda2 ztaw nz uw mdzj mda2 yz aw mzkw mdm3nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullHihihihinull97nnull97unull97lnull97lnull979null977null979710" + "'", str1.equals("Mda2 ztaw nz uw mdzj mda2 yz aw mzkw mdm3nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullHihihihinull97nnull97unull97lnull97lnull979null977null979710"));
    }

    @Test
    public void test196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test196");
        java.lang.String str3 = strman.Strman.encode("", 6432, 10);
    }

    @Test
    public void test197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test197");
        int int3 = strman.Strman.lastIndexOf("000000000110111000000000010111110000000001110101000000000101111100000000011011000000000001011111000000000110110000000000001110010000000000110111000000000110111000000000010111110000000001101110000000000101111100000000011101010000000001011111000000000110110000000000010111110000000001101100000000000011100100000000001101110000000001110101000000000101111100000000011011100000000001011111000000000111010100000000010111110000000001101100000000000101111100000000011011000000000000111001000000000011011100000000011011000000000001011111000000000110111000000000010111110000000001110101000000000101111100000000011011000000000001011111000000000110110000000000001110010000000000110111000000000110110000000000010111110000000001101110000000000101111100000000011101010000000001011111000000000110110000000000010111110000000001101100000000000011100100000000001101110000000000111001000000000101111100000000011011100000000001011111000000000111010100000000010111110000000001101100000000000101111100000000011011000000000000111001000000000011011100000000001101110000000001011111000000000110111000000000010111110000000001110101000000000101111100000000011011000000000001011111000000000110110000000000001110010000000000110111", "3", false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
    }

    @Test
    public void test198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test198");
        java.lang.String str1 = strman.Strman.leftTrim("ullnullnullnullnullnullnullNull97nnul1097null971097");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "ullnullnullnullnullnullnullNull97nnul1097null971097" + "'", str1.equals("ullnullnullnullnullnullnullNull97nnul1097null971097"));
    }

    @Test
    public void test199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test199");
        java.lang.String str1 = strman.Strman.leftTrim("1700108");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "1700108" + "'", str1.equals("1700108"));
    }

    @Test
    public void test200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test200");
        int int4 = strman.Strman.lastIndexOfmda2006e0075006c006c00390037ztaw006e0075006c006c00390037nz006e0075006c006c00390037uw006e0075006c006c00390037mdzj006e0075006c006c00390037mda2006e0075006c006c00390037yz006e0075006c006c00390037aw006e0075006c006c00390037mzkw006e0075006c006c00390037mdm30004800048000490004900048000480004800049000490005500048000480004900048000560004800048000490004800056000480004800048000530005500048000480004800053000530004800048000480005500056000480004800049000490004800048000480004900049000550004800048000490004800056", (int) (byte) 0, false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
    }

    @Test
    public void test201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test201");
        java.lang.String str1 = strman.Strman.removeSpaces("HI-HI48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "HI-HI48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101" + "'", str1.equals("HI-HI48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101"));
    }

    @Test
    public void test202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test202");
        java.lang.String str2 = strman.Strman.removeLeft
        org.junit.Assert.assertTrue("'" + strstr2.equals
    }

    @Test
    public void test203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test203");
        java.lang.String[] strArray6 = strman.Strman.split("nullnull97nnulih79llun!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih");
        java.lang.String str7 = strman.Strman.prependArray("97", strArray6);
        java.lang.String str8 = strman.Strman.appendArray("48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101", strArray6);
        java.lang.String str9 = strman.Strman.append("771228561", strArray6);
        java.util.List<java.lang.String> strList10 = strman.Strman.zip(strArray6);
        java.lang.String[] strArray11 = strman.Strman.removeEmptyStrings(strArray6);
        java.lang.String str12 = strman.Strman.prependArraystrArray6);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + str7 + "' != '" + "nullnull97nnul97" + "'", str7.equals("nullnull97nnul97"));
        org.junit.Assert.assertTrue("'" + str8 + "' != '" + "48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101nullnull97nnul" + "'", str8.equals("48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101nullnull97nnul"));
        org.junit.Assert.assertTrue("'" + str9 + "' != '" + "771228561nullnull97nnul" + "'", str9.equals("771228561nullnull97nnul"));
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "nullnull97nnul0000000000110001000000000011000000000000001100010000000000110100000000000011010100000000001110000000000000110100000000000011100000000000001101000000000000110011000000000011010100000000001101010000000000110101000000000011100000000000001101000000000000111000000000000011010000000000001110010000000000111001000000000011010000000000001101010000000000111000000000000011010000000000001110000000000000110100000000000011100100000000001110010000000000110100000000000011010100000000001110000000000000110100000000000011100000000000001101000000000000110111000000000011010100000000001100010000000000110101000000000011100000000000001101000000000000111000000000000011010000000000001101010000000000110101000000000011000100000000001101010000000000111000000000000011010000000000001110000000000000110100000000000011000100000000001100000000000000110001000000000011001000000000001101010000000000111000000000000011010000000000001110000000000000110100000000000011000100000000001100000000000000110001000000000011010000000000001101010000000000111000000000000011010000000000001110000000000000110100000000000011001100000000001101010000000000110101000000000011010100000000001110000000000000110100000000000011100000000000001101000000000000111001000000000011100100000000001101000000000000110101000000000011100000000000001101000000000000111000000000000011010000000000001110010000000000111001000000000011010000000000001101010000000000111000000000000011010000000000001110000000000000110100000000000011011100000000001101010000000000110001000000000011010100000000001110000000000000110100000000000011100000000000001101000000000000110101000000000011010100000000001100010000000000110101000000000011100000000000001101000000000000111000000000000011010000000000001100110000000000110101000000000011001100000000001101010000000000111000000000000011010000000000001110000000000000110100000000000011000100000000001100000000000000110001000000000011010000000000001101010000000000111000000000000011010000000000001110000000000000110100000000000011001100000000001101010000000000110101000000000011010100000000001110000000000000110100000000000011100000000000001101000000000000111001000000000011100100000000001101000000000000110101000000000011100000000000001101000000000000111000000000000011010000000000001110010000000000111001000000000011010000000000001101010000000000111000000000000011010000000000001110000000000000110100000000000011011100000000001101010000000000110001000000000011010100000000001110000000000000110100000000000011100000000000001101000000000000110101000000000011010100000000001100010000000000110101000000000011100000000000001101000000000000111000000000000011010000000000001110010000000000111001000000000011001000000000001101010000000000111000000000000011010000000000001110000000000000110100000000000011000100000000001100000000000000110001000000000011010000000000001101010000000000111000000000000011010000000000001110000000000000110100000000000011001100000000001101010000000000110101000000000011010100000000001110000000000000110100000000000011100000000000001101000000000000111001000000000011100100000000001101000000000000110101000000000011100000000000001101000000000000111000000000000011010000000000001110010000000000111001000000000011010000000000001101010000000000111000000000000011010000000000001110000000000000110100000000000011011100000000001101010000000000110001000000000011010100000000001110000000000000110100000000000011100000000000001101000000000000110101000000000011010100000000001100010000000000110101000000000011100000000000001101000000000000111000000000000011010000000000001110010000000000111001000000000011001000000000001101010000000000111000000000000011010000000000001110000000000000110100000000000011000100000000001100000000000000110001000000000011010000000000001101010000000000111000000000000011010000000000001110000000000000110100000000000011001100000000001101010000000000110101000000000011010100000000001110000000000000110100000000000011100000000000001101000000000000111001000000000011100100000000001101000000000000110101000000000011100000000000001101000000000000111000000000000011010000000000001110010000000000111001000000000011010000000000001101010000000000111000000000000011010000000000001110000000000000110100000000000011011100000000001101010000000000110001000000000011010100000000001110000000000000110100000000000011100000000000001101000000000000110101000000000011010100000000001100010000000000110101000000000011100000000000001101000000000000111000000000000011010000000000001101110000000000110101000000000011000100000000001101010000000000111000000000000011010000000000001110000000000000110100000000000011000100000000001100000000000000110001000000000011010000000000001101010000000000111000000000000011010000000000001110000000000000110100000000000011001100000000001101010000000000110101000000000011010100000000001110000000000000110100000000000011100000000000001101000000000000111001000000000011100100000000001101000000000000110101000000000011100000000000001101000000000000111000000000000011010000000000001110010000000000111001000000000011010000000000001101010000000000111000000000000011010000000000001110000000000000110100000000000011011100000000001101010000000000110001000000000011010100000000001110000000000000110100000000000011100000000000001101000000000000110101000000000011010100000000001100010000000000110101000000000011100000000000001101000000000000111000000000000011010000000000001101010000000000110101000000000011000100000000001101010000000000111000000000000011010000000000001110000000000000110100000000000011000100000000001100000000000000110001000000000011010000000000001101010000000000111000000000000011010000000000001110000000000000110100000000000011001100000000001101010000000000110101000000000011010100000000001110000000000000110100000000000011100000000000001101000000000000111001000000000011100100000000001101000000000000110101000000000011100000000000001101000000000000111000000000000011010000000000001110010000000000111001000000000011010000000000001101010000000000111000000000000011010000000000001110000000000000110100000000000011011100000000001101010000000000110001000000000011010100000000001110000000000000110100000000000011100000000000001101000000000000110101000000000011010100000000001100010000000000110101000000000011100000000000001101000000000000111000000000000011010000000000011010010000000001101000000000000010110100000000011010010000000001101000000000000110100000000000001011010000000001101001000000000110100000000000001011010000000001101001" + "'", str12.equals("nullnull97nnul
    }

    @Test
    public void test204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test204");
        java.util.Optional<java.lang.String> strOptional1 = strman.Strman.trimEnd("1null97null97 nnul n u l l97 n n u l!ih!HI!HI!HI!6");
        org.junit.Assert.assertNotNull(strOptional1);
    }

    @Test
    public void test205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test205");
        java.lang.String str1 = strman.Strman.upperFirst("Sgloa Wloa V9oa Glfa Gk0odq4nte1ntq4ndg1mtu3ndg0odu0otk0odq4ntq5otq4ndg1ntuz Ndg0odu0mtax Ndg0odux Ntu0odq4nte1ntq4ndg1mtu3ndg0odu0otk0odq4ntq5otq4ndg1ntuz Ndg0odu0mtax Ndg0odux Ntc0odq4nte1ntq4ndg1mtu3ndg0odu0otk0odq4ntq5otq4ndg1ntuz Ndg0odu0mtax Ndg0oduy Otk0odq4nte1ntq4ndg1mtu3ndg0odu0otk0odq4ntq5otq4ndg1ntuz Ndg0odu0mtax Ndg0oduy Otk0odq4nte1ntq4ndg1mtu3ndg0odu0otk0odq4ntq5otq4ndg1ntuz Ndg0odu0mtax Ndg0oduz Ntm0odq4nte1ntq4ndg1mtu3ndg0odu0otk0odq4ntq5otq4ndg1ntuz Ndg0odu0mtax Ndg0oduy Mtax Ndg0odux Ntu0odq4nte1nz Q4ndg1ndk5ndg0odu0otk0odq4ntu1mz Q4ndg1ndew Mq==hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hihihi");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "Sgloa Wloa V9oa Glfa Gk0odq4nte1ntq4ndg1mtu3ndg0odu0otk0odq4ntq5otq4ndg1ntuz Ndg0odu0mtax Ndg0odux Ntu0odq4nte1ntq4ndg1mtu3ndg0odu0otk0odq4ntq5otq4ndg1ntuz Ndg0odu0mtax Ndg0odux Ntc0odq4nte1ntq4ndg1mtu3ndg0odu0otk0odq4ntq5otq4ndg1ntuz Ndg0odu0mtax Ndg0oduy Otk0odq4nte1ntq4ndg1mtu3ndg0odu0otk0odq4ntq5otq4ndg1ntuz Ndg0odu0mtax Ndg0oduy Otk0odq4nte1ntq4ndg1mtu3ndg0odu0otk0odq4ntq5otq4ndg1ntuz Ndg0odu0mtax Ndg0oduz Ntm0odq4nte1ntq4ndg1mtu3ndg0odu0otk0odq4ntq5otq4ndg1ntuz Ndg0odu0mtax Ndg0oduy Mtax Ndg0odux Ntu0odq4nte1nz Q4ndg1ndk5ndg0odu0otk0odq4ntu1mz Q4ndg1ndew Mq==hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hihihi" + "'", str1.equals("Sgloa Wloa V9oa Glfa Gk0odq4nte1ntq4ndg1mtu3ndg0odu0otk0odq4ntq5otq4ndg1ntuz Ndg0odu0mtax Ndg0odux Ntu0odq4nte1ntq4ndg1mtu3ndg0odu0otk0odq4ntq5otq4ndg1ntuz Ndg0odu0mtax Ndg0odux Ntc0odq4nte1ntq4ndg1mtu3ndg0odu0otk0odq4ntq5otq4ndg1ntuz Ndg0odu0mtax Ndg0oduy Otk0odq4nte1ntq4ndg1mtu3ndg0odu0otk0odq4ntq5otq4ndg1ntuz Ndg0odu0mtax Ndg0oduy Otk0odq4nte1ntq4ndg1mtu3ndg0odu0otk0odq4ntq5otq4ndg1ntuz Ndg0odu0mtax Ndg0oduz Ntm0odq4nte1ntq4ndg1mtu3ndg0odu0otk0odq4ntq5otq4ndg1ntuz Ndg0odu0mtax Ndg0oduy Mtax Ndg0odux Ntu0odq4nte1nz Q4ndg1ndk5ndg0odu0otk0odq4ntu1mz Q4ndg1ndew Mq==hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hihihi"));
    }

    @Test
    public void test206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test206");
        java.lang.String str3 = strman.Strman.safeTruncate("HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!NULL97HI!00370039006C006C0075006E003700370039006C006C0075006E003900370039006C006C0075006E004C00370039006C006C0075006E004C00370039006C006C0075006E005500370039006C006C0075006E004E00370039006C006C0075006E", 0, "001040ll97");
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "" + "'", str3.equals(""));
    }

    @Test
    public void test207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test207");
        java.util.Optional<java.lang.String> strOptional2 = strman.Strman.at("1101171081085755Null97Nnull97Unull97Lnull97Lnull979null977null97", 2176);
        org.junit.Assert.assertNotNull(strOptional2);
    }

    @Test
    public void test208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test208");
        java.lang.String[] strArray4 = strman.Strman.words("Nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull97Nnull97Unull97Lnull97Lnull979null977null97hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97", "");
        java.lang.String str5 = strman.Strman.format("ullnullnullnullnullnullnull", strArray4);
        java.lang.String str6 = strman.Strman.prependArray("0000000001101001000000000110100000000000011010010000000001001000", strArray4);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "ullnullnullnullnullnullnull" + "'", str5.equals("ullnullnullnullnullnullnull"));
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull97Nnull97Unull97Lnull97Lnull979null977null97hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null970000000001101001000000000110100000000000011010010000000001001000" + "'", str6.equals("Nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull97Nnull97Unull97Lnull97Lnull979null977null97hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null970000000001101001000000000110100000000000011010010000000001001000"));
    }

    @Test
    public void test209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test209");
        java.lang.String[] strArray4 = new java.lang.String[] {};
        java.util.List<java.lang.String> strList5 = strman.Strman.zip(strArray4);
        boolean boolean7 = strman.Strman.containsAny("", strArray4, true);
        boolean boolean9 = strman.Strman.containsAny("hi!hi!", strArray4, true);
        boolean boolean11 = strman.Strman.containsAll("10", strArray4, false);
        java.lang.String str13 = strman.Strman.join(strArray4, "hi!");
        java.lang.String[] strArray14 = strman.Strman.removeEmptyStrings(strArray4);
        java.lang.String str15 = strman.Strman.append("001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000ihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihiH00390037", strArray14);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + str13 + "' != '" + "" + "'", str13.equals(""));
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + str15 + "' != '" + "001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000ihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihiH00390037" + "'", str15.equals("001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000ihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihiH00390037"));
    }

    @Test
    public void test210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test210");
        int int4 = strman.Strman.lastIndexOf("==AbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnb", "000720010500092000320010400105", 30, false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
    }

    @Test
    public void test211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test211");
        try {
            java.lang.String str3 = strman.Strman.slice("hihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi_h", (int) '4', 8704);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 8704");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        }
    }

    @Test
    public void test212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test212");
        java.lang.String[] strArray5 = strman.Strman.lines("hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!");
        java.lang.String str6 = strman.Strman.prepend("null97", strArray5);
        java.util.List<java.lang.String> strList7 = strman.Strman.zip(strArray5);
        boolean boolean9 = strman.Strman.containsAll("Hi!hi!", strArray5, true);
        java.lang.String[] strArray10 = strman.Strman.removeEmptyStrings(strArray5);
        java.lang.String str11 = strman.Strman.appendArray("7210533", strArray5);
        java.util.Optional<java.lang.String> strOptional12 = strman.Strman.trimEnd("", strArray5);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97" + "'", str6.equals("hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97"));
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + str11 + "' != '" + "7210533hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!" + "'", str11.equals("7210533hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!"));
        org.junit.Assert.assertNotNull(strOptional12);
    }

    @Test
    public void test213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test213");
        boolean boolean1 = strman.Strman.isLowerCase("hihiHI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-NULL97HI-00370039006C006C0075006E003700370039006C006C0075006E003900370039006C006C0075006E004C00370039006C006C0075006E004C00370039006C006C0075006E005500370039006C006C0075006E004E00370039006C006C0075006EHiHi0000000001001000000000000110100197HiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiNull97hi00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
    }

    @Test
    public void test214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test214");
        java.lang.String str1 = strman.Strman.swapCase("hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!0033");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!0033" + "'", str1.equals("HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!0033"));
    }

    @Test
    public void test215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test215");
        boolean boolean3 = strman.Strman.contains("000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97 Nnull97 Unull97 Lnull97 Lnull979null977null97 Hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!", "9ihinullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullh7", false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test216");
        java.lang.String str1 = strman.Strman.removeSpaces("00110000850007600076000570005500078000780008500076");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "00110000850007600076000570005500078000780008500076" + "'", str1.equals("00110000850007600076000570005500078000780008500076"));
    }

    @Test
    public void test217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test217");
        java.lang.String str3 = strman.Strman.insert("lunn-79llun!ih79llun!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih-lunn79llun-ih79llun-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ihl-u-n-n-79l-l-u-n001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000 ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih006e0075006c006c00390037", "001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000ihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihiH00390037", 30);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "lunn-79llun!ih79llun!ih!ih!ih!001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000ihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihiH00390037ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih-lunn79llun-ih79llun-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ihl-u-n-n-79l-l-u-n001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000 ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih006e0075006c006c00390037" + "'", str3.equals("lunn-79llun!ih79llun!ih!ih!ih!001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000ihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihiH00390037ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih-lunn79llun-ih79llun-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ihl-u-n-n-79l-l-u-n001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000 ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih006e0075006c006c00390037"));
    }

    @Test
    public void test218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test218");
        boolean boolean1 = strman.Strman.isBlank("00530065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b006800200074006c00200076006d00740064006b00331lunn79llun00077001190006100061nullnull97nnul=g2xphwA000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97Nnull97Unull97Lnull97Lnull979null977null97Hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hihi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hiMw==");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
    }

    @Test
    public void test219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test219");
        java.lang.String str1 = strman.Strman.htmlEncode("Hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "nullnullnullnullnullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnullnullnullnullnull" + "'", str1.equals("nullnullnullnullnullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnullnullnullnullnull"));
    }

    @Test
    public void test220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test220");
        boolean boolean2 = strman.Strman.endsWith("hihiHI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-nULL97NNULHI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-NULL97HI-00370039006C006C0075006E003700370039006C006C0075006E003900370039006C006C0075006E004C00370039006C006C0075006E004C00370039006C006C0075006E005500370039006C006C0075006E004E00370039006C006C0075006E", "0004800048000480005200053000480004800049000490005500048000480004800052000530004800048000490004800056NULL97NNUL!ihnzlsb_hvu_nzc5b_gx1bjk3_owxsd_w5_mnzlsb_hvu_tdc5b_gx1bl_u3_owxsd_w5_onzlsb_hvu");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test221");
        java.lang.String str3 = strman.Strman.safeTruncate("MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMDQ5MDAwNDgwMDA0ODAwMDQ4MDAwNDkwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ5MDAwNDkwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDkwMDA0OTAwMDQ4MDAwNDgwMDA0ODAwMDQ5MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMDQ5MDAwNDgwMDA0ODAwMDQ4MDAwNDkwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ5MDAwNDkwMDA0ODAwMDQ5MDAwNDkwMDA0OTAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDkwMDA0OTAwMDQ4MDAwNDgwMDA0ODAwMDQ5MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMDQ5MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ5MDAwNDkwMDA0OTAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDkwMDA0OTAwMDQ4MDAwNDgwMDA0ODAwMDQ5MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMDQ5MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ5MDAwNDkwMDA0OTAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDkwMDA0OTAwMDQ4MDAwNDkwMDA0ODAwMDQ5MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMDQ5MDAwNDgwMDA0OTAwMDQ5MDAwNDkwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ5MDAwNDkwMDA0ODAwMDQ5MDAwNDgwMDA0OTAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDkwMDA0OTAwMDQ4MDAwNDkwMDA0ODAwMDQ5MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDkwMDA0ODAwMDQ4MDAwNDkwMDA0OTAwMDQ5MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMDQ5MDAwNDkwMDA0ODAwMDQ5MDAwNDgwMDA0OTAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ5MDAwNDkwMDA0ODAwMDQ5MDAwNDkwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDkwMDA0OTAwMDQ4MDAwNDkwMDA0OTAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ5MDAwNDkwMDA0OTAwMDQ4MDAwNDgwMDA0OTAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDkwMDA0OTAwMDQ4MDAwNDkwMDA0OTAwMDQ5MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDkwMDA0ODAwMDQ4MDAwNDkwMDA0OTAwMDQ5MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMDQ5MDAwNDgwMDA0OTAwMDQ5MDAwNDkwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ5MDAwNDkwMDA0OTAwMDQ4MDAwNDkwMDA0ODAwMDQ5MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDkwMDA0OTAwMDQ4MDAwNDkwMDA0OTAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMDQ5MDAwNDgwMDA0OTAwMDQ5MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDkwMDA0OTAwMDQ5MDAwNDgwMDA0ODAwMDQ5MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMDQ5MDAwNDgwMDA0OTAwMDQ5MDAwNDkwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMDQ4MDAwNDkwMDA0ODAwMDQ5MDAwNDgwMDA0OTAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ5MDAwNDkwMDA0ODAwMDQ5MDAwNDkwMDA0OTAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDkwMDA0OTAwMDQ5MDAwNDgwMDA0OTAwMDQ4MDAwNDkwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMDQ5MDAwNDgwMDA0OTAwMDQ5MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ5MDAwNDkwMDA0ODAwMDQ5MDAwNDkwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMDQ5MDAwNDkwMDA0ODAwMDQ4MDAwNDkwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ5MDAwNDkwMDA0ODAwMDQ5MDAwNDkwMDA0OTAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ5MDAwNDgwMDA0ODAwMDQ5MDAwNDkwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDkwMDA0OTAwMDQ4MDAwNDkwMDA0OTAwMDQ5MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMDQ5MDAwNDkwMDA0ODAwMDQ5MDAwNDgwMDA0OTAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ5MDAwNDkwMDA0ODAwMDQ5MDAwNDkwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDkwMDA0OTAwMDQ4MDAwNDkwMDA0OTAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ5MDAwNDkwMDA0OTAwMDQ4MDAwNDgwMDA0OTAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDkwMDA0OTAwMDQ4MDAwNDkwMDA0OTAwMDQ5MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDkwMDA0ODAwMDQ4MDAwNDkwMDA0OTAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMDQ5MDAwNDgwMDA0OTAwMDQ5MDAwNDkwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ5MDAwNDkwMDA0OTAwMDQ4MDAwNDkwMDA0ODAwMDQ5MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDkwMDA0OTAwMDQ4MDAwNDkwMDA0OTAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMDQ5MDAwNDgwMDA0OTAwMDQ5MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDkwMDA0OTAwMDQ5MDAwNDgwMDA0ODAwMDQ5MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMDQ5MDAwNDgwMDA0OTAwMDQ5MDAwNDkwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ5MDAwNDkwMDA0OTAwMDQ4MDAwNDgwMDA0OTAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ5MDAwNDkwMDA0ODAwMDQ5MDAwNDkwMDA0OTAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDkwMDA0OTAwMDQ5MDAwNDgwMDA0OTAwMDQ4MDAwNDkwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMDQ5MDAwNDgwMDA0OTAwMDQ5MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ5MDAwNDkwMDA0ODAwMDQ5MDAwNDkwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMDQ5MDAwNDkwMDA0ODAwMDQ4MDAwNDkwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ5MDAwNDkwMDA0ODAwMDQ5MDAwNDkwMDA0OTAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDkwMDA0OTAwMDQ4MDAwNDkwMDA0OTAwMDQ5MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDkwMDA0OTAwMDQ4MDAwNDkwMDA0OTAwMDQ5MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMDQ5MDAwNDkwMDA0ODAwMDQ5MDAwNDgwMDA0OTAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ5MDAwNDkwMDA0ODAwMDQ5MDAwNDkwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDkwMDA0OTAwMDQ4MDAwNDkwMDA0OTAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ5MDAwNDkwMDA0OTAwMDQ4MDAwNDgwMDA0OTAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDkwMDA0OTAwMDQ4MDAwNDkwMDA0OTAwMDQ5MDAwNzgwMDA4NTAwMDc2MDAwNzYwMDA1NzAwMDU1MDAwNzgwMDAzMjAwMDg1MDAxMDgwMDEwODAwMTEwMDAxMTcwMDEwODAwMTA4MDAxMTAwMDExNzAwMTA4MDAxMDgwMDExMDAwMTE3MDAxMDgwMDEwODAwMTEwMDAxMTcwMDEwODAwMTA4MDAxMTAwMDExNzAwMTA4MDAxMDgwMDExMDAwMTE3MDAxMDgwMDEwODAwMTEwMDAxMTcwMDEwODAwMTA4MDAxMTAwMDExNzAwMTA4MDAxMDgwMDExMDAwMTE3MDAxMDgwMDEwODAwMTEwMDAxMTcwMDEwODAwMTA4MDAxMTAwMDExNzAwMTA4MDAxMDgwMDExMDAwMTE3MDAxMDgwMDEwODAwMTEwMDAxMTcwMDEwODAwMTA4MDAxMTAwMDExNzAwMTA4MDAxMDgwMDExMDAwMTE3MDAxMDgwMDEwODAwMTEwMDAxMTcwMDEwODAwMTA4MDAxMTAwMDExNzAwMTA4MDAxMDgwMDExMDAwMTE3MDAxMDgwMDEwODAwMTEwMDAxMTcwMDEwODAwMTA4MDAxMTAwMDExNzAwMTA4MDAxMDgwMDExMDAwMTE3MDAxMDgwMDEwODAwMTEwMDAxMTcwMDEwODAwMTA4MDAxMTAwMDExNzAwMTA4MDAxMDgwMDExMDAwMTE3MDAxMDgwMDEwODAwMTEwMDAxMTcwMDEwODAwMTA4MDAxMTAwMDExNzAwMTA4MDAxMDgwMDExMDAwMTE3MDAxMDgwMDEwODAwMTEwMDAxMTcwMDEwODAwMTA4MDAxMTAwMDExNzAwMTA4MDAxMDgwMDExMDAwMTE3MDAxMDgwMDEwODAwMTEwMDAxMTcwMDEwODAwMTA4MDAxMTAwMDExNzAwMTA4MDAxMDgwMDExMDAwMTE3MDAxMDgwMDEwODAwMTEwMDAxMTcwMDEwODAwMTA4MDAxMTAwMDExNzAwMTA4MDAxMDgwMDExMDAwMTE3MDAxMDgwMDEwODAwMTEwMDAxMTcwMDEwODAwMTA4MDAxMTAwMDExNzAwMTA4MDAxMDgwMDExMDAwMTE3MDAxMDgwMDEwODAwMTEwMDAxMTcwMDEwODAwMTA4MDAxMTAwMDExNzAwMTA4MDAxMDgwMDExMDAwMTE3MDAxMDgwMDEwODAwMTEwMDAxMTcwMDEwODAwMTA4MDAxMTAwMDExNzAwMTA4MDAxMDgwMDExMDAwMTE3MDAxMDgwMDEwODAwMTEwMDAxMTcwMDEwODAwMTA4MDAxMTAwMDExNzAwMTA4MDAxMDg=", 4342, "hi");
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "hi" + "'", str3.equals("hi"));
    }

    @Test
    public void test222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test222");
        java.util.Map<java.lang.Character, java.lang.Long> charMap1 = strman.Strman.charsCount("hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-5");
        org.junit.Assert.assertNotNull(charMap1);
    }

    @Test
    public void test223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test223");
        java.lang.String[] strArray6 = strman.Strman.chars("null");
        boolean boolean7 = strman.Strman.containsAny("null97Nnull97Unull97Lnull97Lnull979null977null97", strArray6);
        java.lang.String str8 = strman.Strman.prepend("nULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULL", strArray6);
        boolean boolean9 = strman.Strman.containsAll("hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!000000000100111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100", strArray6);
        java.lang.String str10 = strman.Strman.format("0031006c0075006e006e00370039006c006c0075006e", strArray6);
        boolean boolean11 = strman.Strman.containsAny("1097000780011700108001080005700055001100011000117001080000000001001000000000000110100100680069002dstrArray6);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + str8 + "' != '" + "nullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULL" + "'", str8.equals("nullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULL"));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + str10 + "' != '" + "0031006c0075006e006e00370039006c006c0075006e" + "'", str10.equals("0031006c0075006e006e00370039006c006c0075006e"));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test224");
        java.lang.String str1 = strman.Strman.capitalize("0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001050000000000hI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001050000000000hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!" + "'", str1.equals("0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001050000000000hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!"));
    }

    @Test
    public void test225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test225");
        long long4 = strman.Strman.countSubstr("001", "MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA0ZTAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwNTUwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDRjMDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA0YzAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwMzkwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3Nnullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037hihiullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull", false, true);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
    }

    @Test
    public void test226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test226");
        java.lang.String str1 = strman.Strman.reverse("n-ullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "llunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllu-n" + "'", str1.equals("llunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllu-n"));
    }

    @Test
    public void test227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test227");
        java.lang.String[] strArray2 = strman.Strman.split("nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull&UnderBar;nullMDAxMTAxMTAwMDAwMDAwMDEwMTAxMTEwMDAwMDAwMDAwMTExMDExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDAxMDAxMTEwMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAxMDEwMTExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDEwMDEwMTEwMDAwMDAwMDAwMDAxMDExMDAwMDAwMDAwMTAxMTAxMDAwMDAwMDAwMDEwMDEwMTEwMDAwMDAwMDAwMDAxMDExMDAwMDAwMDAwaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaS1oihi-hhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!00000000001100110000000000110101Ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1nq==", "nullnull97nnul
        org.junit.Assert.assertNotNull(strArray2);
    }

    @Test
    public void test228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test228");
        java.lang.String str3 = strman.Strman.removeLeftfalse);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "" + "'", str3.equals(""));
    }

    @Test
    public void test229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test229");
        java.lang.String[] strArray3 = strman.Strman.between("TnVsbDk3aGloaWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIW51bGw5N2hpIW5udWxsOTdoaWhpaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhbnVsbDk3aGkhdW51bGw5N2hpaGloaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFudWxsOTdoaSFsbnVsbDk3aGloaWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIW51bGw5N2hpIWxudWxsOTc5bnVsbDk3N251bGw5Nw==MDAxMTAxMTAwMDAwMDAwMDEwMTAxMTEwMDAwMDAwMDAwMTExMDExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDAxMDAxMTEwMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAxMDEwMTExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDEwMDEwMTEwMDAwMDAwMDAwMDAxMDExMDAwMDAwMDAwMTAxMTAxMDAwMDAwMDAwMDEwMDEwMTEwMDAwMDAwMDAwMDAxMDExMDAwMDAwMDAwaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaS1o", "n000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97Nnull97Unull97Lnull97Lnull979null977null97u000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97Nnull97Unull97Lnull97Lnull979null977null97l000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97Nnull97Unull97Lnull97Lnull979null977null97lull97Nnull97Unull97Lnull97Lnull979null977null97NULL97Nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull");
        org.junit.Assert.assertNotNull(strArray3);
    }

    @Test
    public void test230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test230");
        java.lang.String[] strArray2 = strman.Strman.lines("NULL97");
        java.util.List<java.lang.String> strList3 = strman.Strman.zip(strArray2);
        java.lang.String[] strArray4 = strman.Strman.removeEmptyStrings(strArray2);
        java.lang.String str5 = strman.Strman.format("nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull", strArray4);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(strList3);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull" + "'", str5.equals("nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull"));
    }

    @Test
    public void test231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test231");
        java.lang.String str1 = strman.Strman.startCase("00390037");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "00390037" + "'", str1.equals("00390037"));
    }

    @Test
    public void test232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test232");
        java.lang.String str1 = strman.Strman.base64Encode("Null97Nnull97Unull97Lnull97Lnull979null977null97NULL97");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "TnVsbDk3Tm51bGw5N1VudWxsOTdMbnVsbDk3TG51bGw5NzludWxsOTc3bnVsbDk3TlVMTDk3" + "'", str1.equals("TnVsbDk3Tm51bGw5N1VudWxsOTdMbnVsbDk3TG51bGw5NzludWxsOTc3bnVsbDk3TlVMTDk3"));
    }

    @Test
    public void test233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test233");
        java.lang.String str1 = strman.Strman.startCase("10010110000000000001001000000000");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "10010110000000000001001000000000" + "'", str1.equals("10010110000000000001001000000000"));
    }

    @Test
    public void test234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test234");
        java.lang.String str1 = strman.Strman.toCamelCase("79LLUN779LLUN979LLUNl79LLUNl79LLUNu79LLUNn79LLUN79LLUN779LLUN979LLUNl79LLUNl79LLUNu79LLUNn79LLUN1101171081085755Null97Nnull97Unull97Lnull97Lnull979null977null97");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "79LLUN779LLUN979LLUNl79LLUNl79LLUNu79LLUNn79LLUN79LLUN779LLUN979LLUNl79LLUNl79LLUNu79LLUNn79LLUN1101171081085755Null97Nnull97Unull97Lnull97Lnull979null977null97" + "'", str1.equals("79LLUN779LLUN979LLUNl79LLUNl79LLUNu79LLUNn79LLUN79LLUN779LLUN979LLUNl79LLUNl79LLUNu79LLUNn79LLUN1101171081085755Null97Nnull97Unull97Lnull97Lnull979null977null97"));
    }

    @Test
    public void test235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test235");
        java.lang.String str1 = strman.Strman.humanize("ihnull006900680069005f006800680069002dhihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi006900680069005f006800680069002dhihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi006900680069005f006800680069002dhihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "Ihnull006900680069005f006800680069002dhihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi006900680069005f006800680069002dhihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi006900680069005f006800680069002dhihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi" + "'", str1.equals("Ihnull006900680069005f006800680069002dhihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi006900680069005f006800680069002dhihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi006900680069005f006800680069002dhihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi"));
    }

    @Test
    public void test236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test236");
        java.util.Map<java.lang.Character, java.lang.Long> charMap1 = strman.Strman.charsCount("97=g2xphwA000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97Nnull97Unull97Lnull97Lnull979null977null97Hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!");
        org.junit.Assert.assertNotNull(charMap1);
    }

    @Test
    public void test237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test237");
        java.lang.String str3 = strman.Strman.ensureRight("Null97nhinullhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101nul1097null971097nULL97NNULNullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullhiHi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101", "000720010500033001040010500033nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull", false);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "Null97nhinullhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101nul1097null971097nULL97NNULNullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullhiHi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101000720010500033001040010500033nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull" + "'", str3.equals("Null97nhinullhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101nul1097null971097nULL97NNULNullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullhiHi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101000720010500033001040010500033nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull"));
    }

    @Test
    public void test238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test238");
        java.lang.String str1 = strman.Strman.removeSpaces("nzlsb_hvu_nzc5b_gx1bjk3_owxsd_w5_mnzlsb_hvu_tdc5b_gx1bl_u3_owxsd_w5_onzlsb_hvu");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "nzlsb_hvu_nzc5b_gx1bjk3_owxsd_w5_mnzlsb_hvu_tdc5b_gx1bl_u3_owxsd_w5_onzlsb_hvu" + "'", str1.equals("nzlsb_hvu_nzc5b_gx1bjk3_owxsd_w5_mnzlsb_hvu_tdc5b_gx1bl_u3_owxsd_w5_onzlsb_hvu"));
    }

    @Test
    public void test239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test239");
        java.lang.String str1 = strman.Strman.base64Encode("null97hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!nnull97hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!unull97hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!lnull97hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!lnull979null977null97n-u-l-l97-n-ullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull97nnul1097null971097null97nnulnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullhi-hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "bnVsbDk3aGloaWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIW51bGw5N2hpIW5udWxsOTdoaWhpaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhbnVsbDk3aGkhdW51bGw5N2hpaGloaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFudWxsOTdoaSFsbnVsbDk3aGloaWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIW51bGw5N2hpIWxudWxsOTc5bnVsbDk3N251bGw5N24tdS1sLWw5Ny1uLXVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGw5N25udWwxMDk3bnVsbDk3MTA5N251bGw5N25udWxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxoaS1oaTQ4NDg1MTU1NDg0ODUxNTc0ODQ4NTQ5OTQ4NDg1NDk5NDg0ODU1NTM0ODQ4NTQxMDE0ODQ4NTE1NTQ4NDg1MTU1NDg0ODUxNTc0ODQ4NTQ5OTQ4NDg1NDk5NDg0ODU1NTM0ODQ4NTQxMDE0ODQ4NTE1NzQ4NDg1MTU1NDg0ODUxNTc0ODQ4NTQ5OTQ4NDg1NDk5NDg0ODU1NTM0ODQ4NTQxMDE0ODQ4NTI5OTQ4NDg1MTU1NDg0ODUxNTc0ODQ4NTQ5OTQ4NDg1NDk5NDg0ODU1NTM0ODQ4NTQxMDE0ODQ4NTI5OTQ4NDg1MTU1NDg0ODUxNTc0ODQ4NTQ5OTQ4NDg1NDk5NDg0ODU1NTM0ODQ4NTQxMDE0ODQ4NTM1MzQ4NDg1MTU1NDg0ODUxNTc0ODQ4NTQ5OTQ4NDg1NDk5NDg0ODU1NTM0ODQ4NTQxMDE0ODQ4NTIxMDE0ODQ4NTE1NTQ4NDg1MTU3NDg0ODU0OTk0ODQ4NTQ5OTQ4NDg1NTUzNDg0ODU0MTAx" + "'", str1.equals("bnVsbDk3aGloaWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIW51bGw5N2hpIW5udWxsOTdoaWhpaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhbnVsbDk3aGkhdW51bGw5N2hpaGloaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFudWxsOTdoaSFsbnVsbDk3aGloaWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIW51bGw5N2hpIWxudWxsOTc5bnVsbDk3N251bGw5N24tdS1sLWw5Ny1uLXVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGw5N25udWwxMDk3bnVsbDk3MTA5N251bGw5N25udWxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxoaS1oaTQ4NDg1MTU1NDg0ODUxNTc0ODQ4NTQ5OTQ4NDg1NDk5NDg0ODU1NTM0ODQ4NTQxMDE0ODQ4NTE1NTQ4NDg1MTU1NDg0ODUxNTc0ODQ4NTQ5OTQ4NDg1NDk5NDg0ODU1NTM0ODQ4NTQxMDE0ODQ4NTE1NzQ4NDg1MTU1NDg0ODUxNTc0ODQ4NTQ5OTQ4NDg1NDk5NDg0ODU1NTM0ODQ4NTQxMDE0ODQ4NTI5OTQ4NDg1MTU1NDg0ODUxNTc0ODQ4NTQ5OTQ4NDg1NDk5NDg0ODU1NTM0ODQ4NTQxMDE0ODQ4NTI5OTQ4NDg1MTU1NDg0ODUxNTc0ODQ4NTQ5OTQ4NDg1NDk5NDg0ODU1NTM0ODQ4NTQxMDE0ODQ4NTM1MzQ4NDg1MTU1NDg0ODUxNTc0ODQ4NTQ5OTQ4NDg1NDk5NDg0ODU1NTM0ODQ4NTQxMDE0ODQ4NTIxMDE0ODQ4NTE1NTQ4NDg1MTU3NDg0ODU0OTk0ODQ4NTQ5OTQ4NDg1NTUzNDg0ODU0MTAx"));
    }

    @Test
    public void test240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test240");
        try {
            java.lang.String str3 = strman.Strman.slice("MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA0ZTAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwNTUwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDRjMDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA0YzAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwMzkwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111001000000000-ih79llun-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih", 740, 2);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -738");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        }
    }

    @Test
    public void test241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test241");
        java.util.Optional<java.lang.String> strOptional1 = strman.Strman.trimEnd("00110001170010800108000570005500078001100011700108");
        boolean boolean2 = strman.Strman.isString((java.lang.Object) "00110001170010800108000570005500078001100011700108");
        org.junit.Assert.assertNotNull(strOptional1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
    }

    @Test
    public void test242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test242");
        java.lang.String[] strArray3 = strman.Strman.split("TlVMTDk3", "79llun779llun979llunL79llunL79llunU79llunN79llun");
        java.lang.String str4 = strman.Strman.prependArray("1null97null97_nnul_n_u_l_l97_n_n_u_l!ih000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97_nnull97_unull97_lnull97_lnull979null977null97", strArray3);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "TlVMTDk31null97null97_nnul_n_u_l_l97_n_n_u_l!ih000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97_nnull97_unull97_lnull97_lnull979null977null97" + "'", str4.equals("TlVMTDk31null97null97_nnul_n_u_l_l97_n_n_u_l!ih000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97_nnull97_unull97_lnull97_lnull979null977null97"));
    }

    @Test
    public void test243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test243");
        int int4 = strman.Strman.lastIndexOf("00001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000ihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi-hn-u-l-l97-n-n-u-lN u l l97 n n u lhi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi null97hi null97nnul hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!null97 nnul hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi null97 hi 00370039006 c006 c0075006 e003700370039006 c006 c0075006 e003900370039006 c006 c0075006 e004 c00370039006 c006 c0075006 e004 c00370039006 c006 c0075006 e005500370039006 c006 c0075006 e004 e00370039006 c006 c0075006 e7210533hi!hi!hi!hi!hi!hi!hi!hi!hi!hn ullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnulli!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hihi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi null97hi00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006ehi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!", (int) (byte) 1, false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
    }

    @Test
    public void test244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test244");
        try {
            java.lang.String str3 = strman.Strman.slice("Awhpx2g=", (int) (short) 10, 64);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 64");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        }
    }

    @Test
    public void test245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test245");
        int int2 = strman.Strman.lastIndexOf("iullnullnullnullnullnullnull03000300034003800300030003000340039003000300030003400390030003000300034003800300030003000340039003000300030003400380030003000300034003900300030003100310030003000300031003100370030003000310030003800300030003100300038003000300030003500370030003000300035003500300030003100310030003000300031003100300030003000310031003700300030003100300038hullnullnullnullnullnullnull03000300034003800300030003000340039003000300030003400390030003000300034003800300030003000340039003000300030003400380030003000300034003900300030003100310030003000300031003100370030003000310030003800300030003100300038003000300030003500370030003000300035003500300030003100310030003000300031003100300030003000310031003700300030003100300038iullnullnullnullnullnullnull03000300034003800300030003000340039003000300030003400390030003000300034003800300030003000340039003000300030003400380030003000300034003900300030003100310030003000300031003100370030003000310030003800300030003100300038003000300030003500370030003000300035003500300030003100310030003000300031003100300030003000310031003700300030003100300038h0030003000300034003800300030003000340038003000300030003400380030003000300034003800300030003000340038003000300030003400380030003000300034003800300030003000340038003000300030003400380030003000300034003800300030003000340039003000300030003400390030003000300034003800300030003000340038003000300030003400390030003000300034003900300030003000340038003000300030003400380030003000300034003800300030003000340038003000300030003400380030003000300034003800300030003000340038003000300030003400380030003000300034003800300ullnullnullnullnullnullnull03000300034003800300030003000340039003000300030003400390030003000300034003800300030003000340039003000300030003400380030003000300034003900300030003100310030003000300031003100370030003000310030003800300030003100300038003000300030003500370030003000300035003500300030003100310030003000300031003100300030003000310031003700300030003100300038h0030003000300034003800300030003000340038003000300030003400380030003000300034003800300030003000340038003000300030003400380030003000300034003800300030003000340038003000300030003400380030003000300034003800300030003000340039003000300030003400390030003000300034003800300030003000340038003000300030003400390030003000300034003900300030003000340038003000300030003400380030003000300034003800300030003000340038003000300030003400380030003000300034003800300030003000340038003000300030003400380030003000300034003800300ullnullnullnullnullnullnull03000300034003800300030003000340039003000300030003400390030003000300034003800300030003000340039003000300030003400380030003000300034003900300030003100310030003000300031003100370030003000310030003800300030003100300038003000300030003500370030003000300035003500300030003100310030003000300031003100300030003000310031003700300030003100300038iullnullnullnullnullnullnull03000300034003800300030003000340039003000300030003400390030003000300034003800300030003000340039003000300030003400380030003000300034003900300030003100310030003000300031003100370030003000310030003800300030003100300038003000300030003500370030003000300035003500300030003100310030003000300031003100300030003000310031003700300030003100300038hullnullnullnullnullnullnull03000300034003800300030003000340039003000300030003400390030003000300034003800300030003000340039003000300030003400380030003000300034003900300030003100310030003000300031003100370030003000310030003800300030003100300038003000300030003500370030003000300035003500300030003100310030003000300031003100300030003000310031003700300030003100300038i484851554848515748485499484854994848555348485410148485155484851554848515748485499484854994848555348485410148485157484851554848515748485499484854994848555348485410148485299484851554848515748485499484854994848555348485410148485299484851554848515748485499484854994848555348485410148485353484851554848515748485499484854994848555348485410148485210148485155484851574848549948485499484855534848541019ihi0030003000300034003800300030003000340038003000300030003400380030003000300034003800300030003000340038003000300030003400380030003000300034003800300030003000340038003000300030003400380030003000300034003800300030003000340039003000300030003400390030003000300034003800300030003000340038003000300030003400390030003000300034003900300030003000340038003000300030003400380030003000300034003800300030003000340038003000300030003400380030003000300034003800300030003000340038003000300030003400380030003000300034003800300ullnullnullnullnullnullnull03000300034003800300030003000340039003000300030003400390030003000300034003800300030003000340039003000300030003400380030003000300034003900300030003100310030003000300031003100370030003000310030003800300030003100300038003000300030003500370030003000300035003500300030003100310030003000300031003100300030003000310031003700300030003100300038h7null", "004d004400410032005a005400410077004e007a00550077004d0044005a006a004d0044004100320059007a00410077004d007a006b0077004d0044004d0033004d004400410030005a005400410077004e006d00550077004d004400630031004d0044004100320059007a00410077004e006d004d0077004d0044004d0035004d00440041007a004e007a00410077004e005400550077004d0044005a006c004d004400410033004e005400410077004e006d004d0077004d0044005a006a004d00440041007a004f005400410077004d007a00630077004d00440052006a004d004400410032005a005400410077004e007a00550077004d0044005a006a004d0044004100320059007a00410077004d007a006b0077004d0044004d0033004d0044004100300059007a00410077004e006d00550077004d004400630031004d0044004100320059007a00410077004e006d004d0077004d0044004d0035004d00440041007a004e007a00410077004d007a006b0077004d0044005a006c004d004400410033004e005400410077004e006d004d0077004d0044005a006a004d00440041007a004f005400410077004d007a00630077004d0044004d0033004d004400410032005a005400410077004e007a00550077004d0044005a006a004d0044004100320059007a00410077004d007a006b0077004d0044004d0033");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
    }

    @Test
    public void test246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test246");
        java.lang.String str1 = strman.Strman.collapseWhitespace("0033");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "0033" + "'", str1.equals("0033"));
    }

    @Test
    public void test247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test247");
        java.lang.String[] strArray3 = strman.Strman.words("Nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull97Nnull97Unull97Lnull97Lnull979null977null97hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97", "hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!");
        java.lang.String str4 = strman.Strman.append("lunN79llunnull97null97Nnull97Unull97Lnull97Lnull979null977null97", strArray3);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "lunN79llunnull97null97Nnull97Unull97Lnull97Lnull979null977null97Nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull97Nnull97Unull97Lnull97Lnull979null977null97null97" + "'", str4.equals("lunN79llunnull97null97Nnull97Unull97Lnull97Lnull979null977null97Nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull97Nnull97Unull97Lnull97Lnull979null977null97null97"));
    }

    @Test
    public void test248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test248");
        boolean boolean3 = strman.Strman.contains("1101171081085755", "bnVsbG5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTA==", false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test249");
        java.lang.String str2 = strman.Strman.ensureLeft("3kdtm_v_l_t_hke_s_hke_s_hke_s_hke_s_30", "n-u-l-l97-n-n-u-lhi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-null97nnulhi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-null97nnul");
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "n-u-l-l97-n-n-u-lhi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-null97nnulhi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-null97nnul3kdtm_v_l_t_hke_s_hke_s_hke_s_hke_s_30" + "'", str2.equals("n-u-l-l97-n-n-u-lhi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-null97nnulhi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-null97nnul3kdtm_v_l_t_hke_s_hke_s_hke_s_hke_s_30"));
    }

    @Test
    public void test250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test250");
        boolean boolean3 = strman.Strman.contains("mda2ztaWnZuWmdzJmda2yZaWmZKWmdm3mda0ztaWnMuWmdC1mda2yZaWnMmWmdm5mdaZnZaWntuWmdzLmda3ntaWnMmWmdzJmdaZotaWmZCWmdrJmda2ztaWnZuWmdzJmda2yZaWmZKWmdm3mda0yZaWnMuWmdC1mda2yZaWnMmWmdm5mdaZnZaWmZKWmdzLmda3ntaWnMmWmdzJmdaZotaWmZCWmdm3mda2ztaWnZuWmdzJmda2yZaWmZKWmdm3nNULLNULLNULLNULLNULLNULLNULLNULLNULLNULL006E0075006C006C0039003700390037HIHIULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULL", "Sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh sekh tl vmtdk3", false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test251");
        java.lang.String str1 = strman.Strman.dasherize("771228561");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "771228561" + "'", str1.equals("771228561"));
    }

    @Test
    public void test252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test252");
        boolean boolean2 = strman.Strman.inequal("hiih79llun-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ihhi4848515548485157484854994848549948485553484854101484851554848515548485157484854994848549948485553484854101484851574848515548485157484854994848549948485553484854101484852994848515548485157484854994848549948485553484854101484852994848515548485157484854994848549948485553484854101484853534848515548485157484854994848549948485553484854101484852101484851554848515748485499484854994848555348485410100000000010010000000000001101001", "sEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhTlVMTDk3000780011700108001080005700055000780011000117001080010800057000550008500110001170010800108000570005500076001100011700108001080005700055000760011000117001080010800057000550005700110001170010800108000570005500055001100011700108001080005700055");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
    }

    @Test
    public void test253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test253");
        java.lang.String[] strArray1 = strman.Strman.words("1101171081085755000000000110100100000000011010000000000001101001000000000110100000000000011010010000000001101000000000000110100100000000011010000000000001101001000000000110100000000000011010010000000001101000000000000110100100000000011010000000000001101001000000000110100000000000011010010000000001101000000000000110100100000000011010000000000001101001000000000110100000000000011010010000000001101000000000000110100100000000011010000000000001101001000000000110100000000000011010010000000001101000000000000110100100000000011010000000000001101001000000000110100000000000011010010000000001101000000000000110100100000000011010000000000001101001000000000110100000000000011010010000000001101000000000000110100100000000011010000000000001101001000000000110100000000000011010010000000001101000000000000110100100000000011010000000000001101001000000000110100000000000011010010000000001101000000000000110100100000000011010000000000001101001000000000110100000000000011010010000000001101000000000000110100100000000011010000000000001101001000000000110100000000000011010010000000001101000000000000110100100000000011010000000000001101001000000000110100000000000011010010000000001101000000000000110100100000000011010000000000001101001000000000110100000000000011010010000000001101000000000000110100100000000011010000000000001101001000000000110100000000000011010010000000001101000000000000110100100000000011010000000000001101001000000000110100000000000011010010000000001101000000000000110100100000000011010000000000001101001000000000110100000000000011010010000000001101000000000000110100100000000011010000000000001101001000000000110100000000000011010010000000001101000000000000110100100000000011010000000000001101001000000000110100000000000011010010000000001101000000000000110100100000000011010000000000001101001000000000110100000000000011010010000000001101000000000000110100100000000011010000000000001101001000000000110100000000000011010010000000001101000000000000110100100000000011010000000000001101001000000000110100000000000011010010000000001101000000000000110100100000000011010000000000001101001000000000110100000000000011010010000000001101000000000000110100100000000011010000000000001101001000000000110100000000000011010010000000001101000000000000110100100000000011010000000000001101001000000000110100000000000011010010000000001101000000000000110100100000000011010000000000001101001000000000110100000000000011010010000000001101000000000000110100100000000011010000000000001101001000000000110100000000000011010010000000001101000000000000110100100000000011010000000000001101001000000000110100000000000011010010000000001101000000000000110100100000000011010000000000001101001000000000110100000000000011010010000000001101000");
        org.junit.Assert.assertNotNull(strArray1);
    }

    @Test
    public void test254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test254");
        int int2 = strman.Strman.lastIndexOf("48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101Nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull", "SEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhTlVMTDk330");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
    }

    @Test
    public void test255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test255");
        java.lang.String str1 = strman.Strman.underscored("10145848435558484994584849945848475158484551584841012584841014584843555848499458484994584847515848455158484353584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484751584841014584843555848499458484994584847515848455158484551584841014584843555848499458484994584847515848455158484ih-ihllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunlunn79llun790179llun7901lunn79llun");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "10145848435558484994584849945848475158484551584841012584841014584843555848499458484994584847515848455158484353584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484751584841014584843555848499458484994584847515848455158484551584841014584843555848499458484994584847515848455158484ih_ihllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunlunn79llun790179llun7901lunn79llun" + "'", str1.equals("10145848435558484994584849945848475158484551584841012584841014584843555848499458484994584847515848455158484353584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484751584841014584843555848499458484994584847515848455158484551584841014584843555848499458484994584847515848455158484ih_ihllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunlunn79llun790179llun7901lunn79llun"));
    }

    @Test
    public void test256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test256");
        java.lang.String[] strArray2 = strman.Strman.lines("hi!hi!");
        java.lang.String[] strArray3 = strman.Strman.removeEmptyStrings(strArray2);
        java.lang.String str4 = strman.Strman.formatstrArray2);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + strstr4.equals
    }

    @Test
    public void test257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test257");
        java.lang.String str2 = strman.Strman.removeRight("Null97nnul1097null9710971lunn79llun", "null97hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!nnull97hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!unull97hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!lnull97hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!lnull979null977null97");
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "Null97nnul1097null9710971lunn79llun" + "'", str2.equals("Null97nnul1097null9710971lunn79llun"));
    }

    @Test
    public void test258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test258");
        java.lang.String[] strArray6 = new java.lang.String[] {};
        java.util.List<java.lang.String> strList7 = strman.Strman.zip(strArray6);
        boolean boolean9 = strman.Strman.containsAny("", strArray6, true);
        boolean boolean11 = strman.Strman.containsAny("hi!hi!", strArray6, true);
        boolean boolean13 = strman.Strman.containsAll("10", strArray6, false);
        boolean boolean14 = strman.Strman.containsAll("Null97Nnull97Unull97Lnull97Lnull979null977null97", strArray6);
        java.lang.String str15 = strman.Strman.formatstrArray6);
        boolean boolean17 = strman.Strman.containsAll("Ihi H", strArray6, true);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + str15 + "' != '" + "003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003000340030003000310030003500300030003000330033003000300031003100300030003000310031003700300030003100300038003000300031003000380030003000300035003700300030003000350035" + "'", str15.equals
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    }

    @Test
    public void test259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test259");
        boolean boolean4 = strman.Strman.endsWith("null97hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!nnull97hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!unull97hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!lnull97hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!lnull979null977null97n-u-l-l97-n-ullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull", "lunN79llunnull97null97Nnull97Unull97Lnull97Lnull979null977null97Nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull97Nnull97Unull97Lnull97Lnull979null977null97null97", (int) (short) 100, true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test260");
        java.lang.String[] strArray5 = new java.lang.String[] { "hihi" };
        java.util.List<java.lang.String> strList6 = strman.Strman.zip(strArray5);
        java.lang.String[] strArray7 = strman.Strman.removeEmptyStrings(strArray5);
        java.lang.String str8 = strman.Strman.prependstrArray5);
        java.lang.String str9 = strman.Strman.prepend("HiHi", strArray5);
        java.util.Optional<java.lang.String> strOptional10 = strman.Strman.trimEnd("0030003000330033", strArray5);
        java.lang.String[] strArray11 = strman.Strman.removeEmptyStrings(strArray5);
        java.lang.String str12 = strman.Strman.prependArray("550007500067000670005800087000550005500075000670006700058000870007500055000750006700067000580008700080100550007500067000670005800087000801005500075000670006700058000870007110055000750006700067000580008700001100550007500067000670005800087000llun10145848435558484994584849945848475158484551584841012584841014584843555848499458484994584847515848455158484353584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484751584841014584843555848499458484994584847515848455158484551584841014584843555848499458484994584847515848455158484ih-ihllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunlunn79llun790179llun7901lunn79llun", strArray5);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + str8 + "' != '" + "hihistr8.equals("hihi
        org.junit.Assert.assertTrue("'" + str9 + "' != '" + "hihiHiHi" + "'", str9.equals("hihiHiHi"));
        org.junit.Assert.assertNotNull(strOptional10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "hihi550007500067000670005800087000550005500075000670006700058000870007500055000750006700067000580008700080100550007500067000670005800087000801005500075000670006700058000870007110055000750006700067000580008700001100550007500067000670005800087000llun10145848435558484994584849945848475158484551584841012584841014584843555848499458484994584847515848455158484353584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484751584841014584843555848499458484994584847515848455158484551584841014584843555848499458484994584847515848455158484ih-ihllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunlunn79llun790179llun7901lunn79llun" + "'", str12.equals("hihi550007500067000670005800087000550005500075000670006700058000870007500055000750006700067000580008700080100550007500067000670005800087000801005500075000670006700058000870007110055000750006700067000580008700001100550007500067000670005800087000llun10145848435558484994584849945848475158484551584841012584841014584843555848499458484994584847515848455158484353584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484751584841014584843555848499458484994584847515848455158484551584841014584843555848499458484994584847515848455158484ih-ihllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunlunn79llun790179llun7901lunn79llun"));
    }

    @Test
    public void test261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test261");
        java.lang.String str1 = strman.Strman.escapeRegExp("SEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhTlVMTDk330");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "SEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhTlVMTDk330" + "'", str1.equals("SEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhTlVMTDk330"));
    }

    @Test
    public void test262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test262");
        java.lang.String str1 = strman.Strman.humanize("0001101001000000000110100000000000011010010000000001011111000000000110100000000000011010000000000001101001000000000010110100000000011010000000000001101001000000000011010000000000001110000000000000");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "0001101001000000000110100000000000011010010000000001011111000000000110100000000000011010000000000001101001000000000010110100000000011010000000000001101001000000000011010000000000001110000000000000" + "'", str1.equals("0001101001000000000110100000000000011010010000000001011111000000000110100000000000011010000000000001101001000000000010110100000000011010000000000001101001000000000011010000000000001110000000000000"));
    }

    @Test
    public void test263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test263");
        java.lang.String str1 = strman.Strman.dasherize("5500075000Hihillun10145848435558484994584849945848475158484551584841012584841014584843555848499458484994584847515848455158484353584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484751584841014584843555848499458484994584847515848455158484551584841014584843555848499458484994584847515848455158484ih-ihllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunlunn79llun790179llun7901lunn79llun");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "5500075000-hihillun10145848435558484994584849945848475158484551584841012584841014584843555848499458484994584847515848455158484353584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484751584841014584843555848499458484994584847515848455158484551584841014584843555848499458484994584847515848455158484ih-ihllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunlunn79llun790179llun7901lunn79llun" + "'", str1.equals("5500075000-hihillun10145848435558484994584849945848475158484551584841012584841014584843555848499458484994584847515848455158484353584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484751584841014584843555848499458484994584847515848455158484551584841014584843555848499458484994584847515848455158484ih-ihllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunlunn79llun790179llun7901lunn79llun"));
    }

    @Test
    public void test264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test264");
        boolean boolean1 = strman.Strman.isBlank("hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!1097null97");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
    }

    @Test
    public void test265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test265");
        boolean boolean4 = strman.Strman.endsWith("hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_null97hi00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006ehi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!==_abs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnb", "mda2006e0075006c006c00390037ztaw006e0075006c006c00390037nz006e0075006c006c00390037uw006e0075006c006c00390037mdzj006e0075006c006c00390037mda2006e0075006c006c00390037yz006e0075006c006c00390037aw006e0075006c006c00390037mzkw006e0075006c006c00390037mdmhihi", 480, false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test266");
        boolean boolean2 = strman.Strman.isEnclosedBetween("00530065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b006800200074006c00200076006d00740064006b00331lunn79llun00077001190006100061nullnull97nnul=g2xphwA000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97Nnull97Unull97Lnull97Lnull979null977null97Hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hihi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hiMw
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test267");
        java.lang.String str2 = strman.Strman.removeLeft("hi!hi!null", "nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnullnullnullnullnull");
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!hi!null" + "'", str2.equals("hi!hi!null"));
    }

    @Test
    public void test268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test268");
        int int3 = strman.Strman.lastIndexOf("0048006900480069", "0000000000110000000000000011000000000000001100110000000000110000000000000011000000000000001100000000000000110011000000000011000000000000001100000000000000110000000000000011001100000000001100110000000000110000000000000011000000000000001100110000000000110011", false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
    }

    @Test
    public void test269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test269");
        java.lang.String str1 = strman.Strman.swapCase("110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108");
        org.junit.Assert.assertTrue("'" + strstr1.equals
    }

    @Test
    public void test270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test270");
        java.lang.String str3 = strman.Strman.encode("!HI!HI!HI!", (int) (byte) -1, 7);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "45132133451321334513213345" + "'", str3.equals("45132133451321334513213345"));
    }

    @Test
    public void test271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test271");
        int int4 = strman.Strman.indexOf("006E0075006C006C00390037HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!", "n-ullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull", (int) (byte) 10, true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
    }

    @Test
    public void test272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test272");
        java.util.Optional<java.lang.String> strOptional1 = strman.Strman.tail("HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!");
        org.junit.Assert.assertNotNull(strOptional1);
    }

    @Test
    public void test273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test273");
        java.lang.String[] strArray3 = strman.Strman.chop("NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97", 10);
        try {
            java.util.Optional<java.lang.String> strOptional4 = strman.Strman.trimEndstrArray3);
            org.junit.Assert.fail("Expected exception of type java.util.regex.PatternSyntaxException; message: Illegal/unsupported escape sequence near index 12\r\n[NULL97nNUL\\L97uNULL97\\lNULL97lNU\\LL979NULL9\\77NULL97]+$\r\n            ^");
        } catch (java.util.regex.PatternSyntaxException e) {
        }
        org.junit.Assert.assertNotNull(strArray3);
    }

    @Test
    public void test274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test274");
        java.lang.String str3 = strman.Strman.surround("0000000001001000000000000110100100680069002dnullhi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e", "4911011710810857551101171081085755781101171087885767657557878857633105104");
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "nullhi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e0000000001001000000000000110100100680069002dstr3.equals("nullhi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e0000000001001000000000000110100100680069002d
    }

    @Test
    public void test275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test275");
        java.lang.String str1 = strman.Strman.base64Encode("mw-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-null97nnul");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "bXctaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktbnVsbDk3aGktbnVsbDk3bm51bA==" + "'", str1.equals("bXctaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktbnVsbDk3aGktbnVsbDk3bm51bA=="));
    }

    @Test
    public void test276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test276");
        java.lang.String str1 = strman.Strman.upperFirst("97=g2xphwA000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97Nnull97Unull97Lnull97Lnull979null977null97Hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "97=g2xphwA000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97Nnull97Unull97Lnull97Lnull979null977null97Hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!" + "'", str1.equals("97=g2xphwA000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97Nnull97Unull97Lnull97Lnull979null977null97Hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!"));
    }

    @Test
    public void test277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test277");
        java.lang.String str3 = strman.Strman.truncate("1null97null97 nnul n u l l97 n n u l!ih!HI!HI!HI!6", 505, "ihi-hhi-hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101");
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "1null97null97 nnul n u l l97 n n u l!ih!HI!HI!HI!6" + "'", str3.equals("1null97null97 nnul n u l l97 n n u l!ih!HI!HI!HI!6"));
    }

    @Test
    public void test278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test278");
        boolean boolean2 = strman.Strman.unequal("480", "NULL97NNUL");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
    }

    @Test
    public void test279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test279");
        java.lang.String str4 = strman.Strman.replace("10145848435558484994584849945848475158484551584841012584841014584843555848499458484994584847515848455158484353584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484751584841014584843555848499458484994584847515848455158484551584841014584843555848499458484994584847515848455158484ihihh_ihI", "0052005700490049004800490049005500490048005600490048005600530055005300530049004900480049004900550049004800560049004800560053005500530053005700530049004900480049004900480049004900550049004800560049004800560053005500530053005700530049004900550049004900480049004900550049004800560049004800560053005500530053005700530049004800560049004900480049004900550049004800560049004800560053005500530053005700530049004800560049004900480049004900550049004800560049004800560053005500530053005300550049004900480049004900550049004800560049004800560053005500530053005300530049004900480049004900550049004800560049004800560053005500530053010401050095010401050048004800480048004800480048004800480049004800480049004800480048004800480048004800480048004800480048004900490048004900480048004900570055009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501040105009501100117010801080057005501040105004800480051005500480048005100570048004800540099004800480054009900480048005500530048004800540101004800480051005500480048005100550048004800510057004800480054009900480048005400990048004800550053004800480054010100480048005100570048004800510055004800480051005700480048005400990048004800540099004800480055005300480048005401010048004800520099004800480051005500480048005100570048004800540099004800480054009900480048005500530048004800540101004800480052009900480048005100550048004800510057004800480054009900480048005400990048004800550053004800480054010100480048005300530048004800510055004800480051005700480048005400990048004800540099004800480055005300480048005401010048004800520101004800480051005500480048005100570048004800540099004800480054009900480048005500530048004800540101", "7710097503212211697119321101223211711932109100122106321091009750321211223297119321091221071193210910010951110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108484848484848484853534848484848484848535548484848484848485554484848484848484855544848484848484848565348484848484848485556484848484848484853534848484848484848535348484848484848485355484848484848484855544848484848484848555448484848484848485653484848484848484855564848484848484848535548484848484848485353484848484848484853554848484848484848555448484848484848485554484848484848484856534848484848484848555648484848484848494856484848484848484853534848484848484848535548484848484848485554484848484848484855544848484848484848565348484848484848485556484848484848484948564848484848484848535348484848484848485355484848484848484855544848484848484848555448484848484848485653484848484848484855564848484848484849495548484848484848485353484848484848484853554848484848484848555448484848484848485554484848484848484856534848484848484848555648484848484848494948484848484848484853534848484848484848535548484848484848485554484848484848484855544848484848484848565348484848484848485556104105104105Null97Nnull97Unull97Lnull97Lnull979Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Tl Vmtdk3null977null97NULL97Nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull", false);
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "10145848435558484994584849945848475158484551584841012584841014584843555848499458484994584847515848455158484353584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484751584841014584843555848499458484994584847515848455158484551584841014584843555848499458484994584847515848455158484ihihh_ihI" + "'", str4.equals("10145848435558484994584849945848475158484551584841012584841014584843555848499458484994584847515848455158484353584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484751584841014584843555848499458484994584847515848455158484551584841014584843555848499458484994584847515848455158484ihihh_ihI"));
    }

    @Test
    public void test280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test280");
        java.lang.String str3 = strman.Strman.insert("ih", "hIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMNULL97", 7);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "ih" + "'", str3.equals("ih"));
    }

    @Test
    public void test281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test281");
        java.lang.String[] strArray1 = strman.Strman.chars("001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000ihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi-h");
        org.junit.Assert.assertNotNull(strArray1);
    }

    @Test
    public void test282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test282");
        java.lang.String[] strArray1 = strman.Strman.words("n_ullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull");
        org.junit.Assert.assertNotNull(strArray1);
    }

    @Test
    public void test283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test283");
        java.lang.String str1 = strman.Strman.transliterate("0021004800490021004800490021004800490021Null97null97nnull97unull97lnull97lnull979null977null97");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "0021004800490021004800490021004800490021Null97null97nnull97unull97lnull97lnull979null977null97" + "'", str1.equals("0021004800490021004800490021004800490021Null97null97nnull97unull97lnull97lnull979null977null97"));
    }

    @Test
    public void test284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test284");
        java.util.Optional<java.lang.String> strOptional2 = strman.Strman.at("nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull97nnul1097null971097null97nnulnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullhi-hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101", 8704);
        org.junit.Assert.assertNotNull(strOptional2);
    }

    @Test
    public void test285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test285");
        java.lang.String str1 = strman.Strman.leftTrim("7210533");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "7210533" + "'", str1.equals("7210533"));
    }

    @Test
    public void test286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test286");
        java.lang.String str1 = strman.Strman.escapeRegExp("000000000000000000000000000000000000000000000000000000000007800000000000000000000000000000000000000000000000000000000001170000000000000000000000000000000000000000000000000000000000108000000000000000000000000000000000000000000000000000000000010800000000000000000000000000000000000000000000000000000000000570000000000000000000000000000000000000000000000000000000000055");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "000000000000000000000000000000000000000000000000000000000007800000000000000000000000000000000000000000000000000000000001170000000000000000000000000000000000000000000000000000000000108000000000000000000000000000000000000000000000000000000000010800000000000000000000000000000000000000000000000000000000000570000000000000000000000000000000000000000000000000000000000055" + "'", str1.equals("000000000000000000000000000000000000000000000000000000000007800000000000000000000000000000000000000000000000000000000001170000000000000000000000000000000000000000000000000000000000108000000000000000000000000000000000000000000000000000000000010800000000000000000000000000000000000000000000000000000000000570000000000000000000000000000000000000000000000000000000000055"));
    }

    @Test
    public void test287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test287");
        long long2 = strman.Strman.countSubstr("1-", "null97nnul1097null971097null97nnulnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullhi00370039006c006c0075006e0068006900680069003700370039006c006c0075006e003900370039006c006c0075006e002d006c00370039006c006c0075006e002d006c00370039006c006c0075006e002d007500370039006c006c0075006e002d006e00370039006c006c0075006e002d0068006900680069hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101");
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
    }

    @Test
    public void test288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test288");
        boolean boolean1 = strman.Strman.isUpperCase("!ihnullnull97Nnull97Unull97Lnull97Lnull979null977nuln_u_l_l97_n_ullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnulll97NULL974848515548485157484854994848549948485553484854101484851554848515548485157484854994848549948485553484854101484851574848515548485157484854994848549948485553484854101484852994848515548485157484854994848549948485553484854101484852994848515548485157484854994848549948485553484854101484853534848515548485157484854994848549948485553484854101484852101484851554848515748485499484854994848555348485410100000000011010000000000001101001000000000010110100000000011010000000000001101001000000000011010000000000001110000000000000110100000000000011100000000000001101010000000000110001000000000011010100000000001101010000000000110100000000000011100000000000001101000000000000111000000000000011010100000000001100010000000000110101000000000011011100000000001101000000000000111000000000000011010000000000001110000000000000110101000000000011010000000000001110010000000000111001000000000011010000000000001110000000000000110100000000000011100000000000001101010000000000110100000000000011100100000000001110010000000000110100000000000011100000000000001101000000000000111000000000000011010100000000001101010000000000110101000000000011001100000000001101000000000000111000000000000011010000000000001110000000000000110101000000000011010000000000001100010000000000110000000000000011000100000000001101000000000000111000000000000011010000000000001110000000000000110101000000000011000100000000001101010000000000110101000000000011010000000000001110000000000000110100000000000011100000000000001101010000000000110001000000000011010100000000001101010000000000110100000000000011100000000000001101000000000000111000000000000011010100000000001100010000000000110101000000000011011100000000001101000000000000111000000000000011010000000000001110000000000000110101000000000011010000000000001110010000000000111001000000000011010000000000001110000000000000110100000000000011100000000000001101010000000000110100000000000011100100000000001110010000000000110100000000000011100000000000001101000000000000111000000000000011010100000000001101010000000000110101000000000011001100000000001101000000000000111000000000000011010000000000001110000000000000110101000000000011010000000000001100010000000000110000000000000011000100000000001101000000000000111000000000000011010000000000001110000000000000110101000000000011000100000000001101010000000000110111000000000011010000000000001110000000000000110100000000000011100000000000001101010000000000110001000000000011010100000000001101010000000000110100000000000011100000000000001101000000000000111000000000000011010100000000001100010000000000110101000000000011011100000000001101000000000000111000000000000011010000000000001110000000000000110101000000000011010000000000001110010000000000111001000000000011010000000000001110000000000000110100000000000011100000000000001101010000000000110100000000000011100100000000001110010000000000110100000000000011100000000000001101000000000000111000000000000011010100000000001101010000000000110101000000000011001100000000001101000000000000111000000000000011010000000000001110000000000000110101000000000011010000000000001100010000000000110000000000000011000100000000001101000000000000111000000000000011010000000000001110000000000000110101000000000011001000000000001110010000000000111001000000000011010000000000001110000000000000110100000000000011100000000000001101010000000000110001000000000011010100000000001101010000000000110100000000000011100000000000001101000000000000111000000000000011010100000000001100010000000000110101000000000011011100000000001101000000000000111000000000000011010000000000001110000000000000110101000000000011010000000000001110010000000000111001000000000011010000000000001110000000000000110100000000000011100000000000001101010000000000110100000000000011100100000000001110010000000000110100000000000011100000000000001101000000000000111000000000000011010100000000001101010000000000110101000000000011001100000000001101000000000000111000000000000011010000000000001110000000000000110101000000000011010000000000001100010000000000110000000000000011000100000000001101000000000000111000000000000011010000000000001110000000000000110101000000000011001000000000001110010000000000111001000000000011010000000000001110000000000000110100000000000011100000000000001101010000000000110001000000000011010100000000001101010000000000110100000000000011100000000000001101000000000000111000000000000011010100000000001100010000000000110101000000000011011100000000001101000000000000111000000000000011010000000000001110000000000000110101000000000011010000000000001110010000000000111001000000000011010000000000001110000000000000110100000000000011100000000000001101010000000000110100000000000011100100000000001110010000000000110100000000000011100000000000001101000000000000111000000000000011010100000000001101010000000000110101000000000011001100000000001101000000000000111000000000000011010000000000001110000000000000110101000000000011010000000000001100010000000000110000000000000011000100000000001101000000000000111000000000000011010000000000001110000000000000110101000000000011001100000000001101010000000000110011000000000011010000000000001110000000000000110100000000000011100000000000001101010000000000110001000000000011010100000000001101010000000000110100000000000011100000000000001101000000000000111000000000000011010100000000001100010000000000110101000000000011011100000000001101000000000000111000000000000011010000000000001110000000000000110101000000000011010000000000001110010000000000111001000000000011010000000000001110000000000000110100000000000011100000000000001101010000000000110100000000000011100100000000001110010000000000110100000000000011100000000000001101000000000000111000000000000011010100000000001101010000000000110101000000000011001100000000001101000000000000111000000000000011010000000000001110000000000000110101000000000011010000000000001100010000000000110000000000000011000100000000001101000000000000111000000000000011010000000000001110000000000000110101000000000011001000000000001100010000000000110000000000000011000100000000001101000000000000111000000000000011010000000000001110000000000000110101000000000011000100000000001101010000000000110101000000000011010000000000001110000000000000110100000000000011100000000000001101010000000000110001000000000011010100000000001101110000000000110100000000000011100000000000001101000000000000111000000000000011010100000000001101000000000000111001000000000011100100000000001101000000000000111000000000000011010000000000001110000000000000110101000000000011010000000000001110010000000000111001000000000011010000000000001110000000000000110100000000000011100000000000001101010000000000110101000000000011010100000000001100110000000000110100000000000011100000000000001101000000000000111000000000000011010100000000001101000000000000110001000000000011000000000000001100010000000001101001000000000110100000000000011010010000000001001000");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
    }

    @Test
    public void test289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test289");
        java.util.Optional<java.lang.String> strOptional1 = strman.Strman.trimStart("nullnullhihi");
        org.junit.Assert.assertNotNull(strOptional1);
    }

    @Test
    public void test290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test290");
        java.lang.String str1 = strman.Strman.removeSpaces("");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "" + "'", str1.equals(""));
    }

    @Test
    public void test291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test291");
        java.util.Map<java.lang.Character, java.lang.Long> charMap1 = strman.Strman.charsCount("Hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e");
        org.junit.Assert.assertNotNull(charMap1);
    }

    @Test
    public void test292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test292");
        java.lang.String str1 = strman.Strman.startCase("Nullnull97nnul=g2xphw A000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97nnull97unull97lnull97lnull979null977null97hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hihi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Mw==");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "Nullnull97nnul=g2xphw A000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97nnull97unull97lnull97lnull979null977null97hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hihi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Mw==" + "'", str1.equals("Nullnull97nnul=g2xphw A000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97nnull97unull97lnull97lnull979null977null97hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hihi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Hi Mw=="));
    }

    @Test
    public void test293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test293");
        java.lang.String[] strArray3 = strman.Strman.between("97-n-n-u-l", "480", "Null97nhinullhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101nul1097null971097nULL97NNULNullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullhi-hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101");
        org.junit.Assert.assertNotNull(strArray3);
    }

    @Test
    public void test294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test294");
        java.util.Optional<java.lang.String> strOptional2 = strman.Strman.at("000550005700076000760008500078000550005500057000760007600085000780005700055000570007600076000850007800108000550005700076000760008500078001080005500057000760007600085000780011700055000570007600076000850007800110000550005700076000760008500078000550005700076000760008500078000550005500057000760007600085000780005700055000570007600076000850007800108000550005700076000760008500078001080005500057000760007600085000780011700055000570007600076000850007800110000550005700076000760008500078", 68);
        org.junit.Assert.assertNotNull(strOptional2);
    }

    @Test
    public void test295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test295");
        try {
            java.lang.String str3 = strman.Strman.truncate("000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97nnull97unull97lnull97lnull979null977null97n_u_l_l97n_n_u_l_l97u_n_u_l_l97l_n_u_l_l97l_n_u_l_l979_n_u_l_l977_n_u_l_l97", 256, "Mda2ztaWnZuWmdzJmda2yZaWmZKWmdm3mda0ztaWnMuWmdC1mda2yZaWnMmWmdm5mdaZnZaWntuWmdzLmda3ntaWnMmWmdzJmdaZotaWmZCWmdrJmda2ztaWnZuWmdzJmda2yZaWmZKWmdm3mda0yZaWnMuWmdC1mda2yZaWnMmWmdm5mdaZnZaWmZKWmdzLmda3ntaWnMmWmdzJmdaZotaWmZCWmdm3mda2ztaWnZuWmdzJmda2yZaWmZKWmdmiH79LLUNiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHmW==hI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!NULL97HI!NULL97nNULNULL000780008500076000760005700055001100007800085000760007600057000550011700078000850007600076000570005500108000780008500076000760005700055001080007800085000760007600057000550005700078000850007600076000570005500055000780008500076000760005700055");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -3847");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        }
    }

    @Test
    public void test296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test296");
        java.lang.String str1 = strman.Strman.toCamelCase("nnullhi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006eunullhi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006elnullhi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006el");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "nnullhiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiNull97hi00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006eunullhiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiNull97hi00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006elnullhiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiNull97hi00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006el" + "'", str1.equals("nnullhiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiNull97hi00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006eunullhiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiNull97hi00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006elnullhiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiNull97hi00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006el"));
    }

    @Test
    public void test297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test297");
        java.lang.String str1 = strman.Strman.upperFirst("30");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "30" + "'", str1.equals("30"));
    }

    @Test
    public void test298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test298");
        boolean boolean1 = strman.Strman.isUpperCase("hi-hihi-hihi-hihi-hihi-hihi-hihi-hihi-hihi-hihi-hi");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
    }

    @Test
    public void test299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test299");
        try {
            java.lang.String str3 = strman.Strman.decode("1-NULL97", 4944, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException; message: radix 0 less than Character.MIN_RADIX");
        } catch (java.lang.NumberFormatException e) {
        }
    }

    @Test
    public void test300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test300");
        java.util.Map<java.lang.Character, java.lang.Long> charMap1 = strman.Strman.charsCount("LLUNLLUN");
        org.junit.Assert.assertNotNull(charMap1);
    }

    @Test
    public void test301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test301");
        boolean boolean4 = strman.Strman.endsWith("nullnullnullnullnullnullnullnullnullnull", "0004800048000490004900048000480004800049000490005500048000480004900048000560004800048000490004800056000480004800048000530005500048000480004800053000530004800048000480005500056000480004800049000490004800048000480004900049000550004800048000490004800056", 4944, false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test302");
        java.lang.String str2 = strman.Strman.ensureRight("!-h-i!-h-i!-h-i!", "00001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000ihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi-h
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "!-h-i!-h-i!-h-i!00001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000ihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi-hstr2.equals("!-h-i!-h-i!-h-i!00001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000ihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi-h
    }

    @Test
    public void test303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test303");
        java.lang.String str1 = strman.Strman.humanize("00530065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b006800200074006c00200076006d00740064006b00331lunn79llun");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "00530065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b006800200074006c00200076006d00740064006b00331lunn79llun" + "'", str1.equals("00530065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b006800200074006c00200076006d00740064006b00331lunn79llun"));
    }

    @Test
    public void test304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test304");
        boolean boolean2 = strman.Strman.unequal("nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnullnullnullnullnull", "n_u_l_l97_n_ullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
    }

    @Test
    public void test305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test305");
        boolean boolean1 = strman.Strman.isLowerCase("006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
    }

    @Test
    public void test306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test306");
        java.lang.String str1 = strman.Strman.dasherize("hiih79llun-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ihhi4848515548485157484854994848549948485553484854101484851554848515548485157484854994848549948485553484854101484851574848515548485157484854994848549948485553484854101484852994848515548485157484854994848549948485553484854101484852994848515548485157484854994848549948485553484854101484853534848515548485157484854994848549948485553484854101484852101484851554848515748485499484854994848555348485410100000000010010000000000001101001");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "hiih79llun-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ihhi4848515548485157484854994848549948485553484854101484851554848515548485157484854994848549948485553484854101484851574848515548485157484854994848549948485553484854101484852994848515548485157484854994848549948485553484854101484852994848515548485157484854994848549948485553484854101484853534848515548485157484854994848549948485553484854101484852101484851554848515748485499484854994848555348485410100000000010010000000000001101001" + "'", str1.equals("hiih79llun-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ihhi4848515548485157484854994848549948485553484854101484851554848515548485157484854994848549948485553484854101484851574848515548485157484854994848549948485553484854101484852994848515548485157484854994848549948485553484854101484852994848515548485157484854994848549948485553484854101484853534848515548485157484854994848549948485553484854101484852101484851554848515748485499484854994848555348485410100000000010010000000000001101001"));
    }

    @Test
    public void test307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test307");
        boolean boolean3 = strman.Strman.endsWith("", "hi_hi0000000001001000000000000110100197_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_null97hi00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e", false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test308");
        java.lang.String str2 = strman.Strman.last("001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih", 6416);
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih" + "'", str2.equals("001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih"));
    }

    @Test
    public void test309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test309");
        java.lang.String str3 = strman.Strman.surround("48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101ni3kdtmV lT hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeShi-h");
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "0007200105001040010500104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300110001170010800108000570005500104001050003348485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101nULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLi3kdtmV lT hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeShi-h" + "'", str3.equals("0007200105001040010500104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300110001170010800108000570005500104001050003348485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101nULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLi3kdtmV lT hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeShi-h"));
    }

    @Test
    public void test310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test310");
        java.lang.String str3 = strman.Strman.ensureRight("hihiihi_hhi_hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101", "n_u_l_l97_n_n_u_lhi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_null97hi_null97nnulhi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_null97hi_null97nnul", false);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "hihiihi_hhi_hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101n_u_l_l97_n_n_u_lhi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_null97hi_null97nnulhi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_null97hi_null97nnul" + "'", str3.equals("hihiihi_hhi_hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101n_u_l_l97_n_n_u_lhi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_null97hi_null97nnulhi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_null97hi_null97nnul"));
    }

    @Test
    public void test311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test311");
        boolean boolean1 = strman.Strman.isUpperCase("Null97nnulnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
    }

    @Test
    public void test312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test312");
        java.lang.String[] strArray2 = strman.Strman.chop("NzlsbHVuNzc5bGx1bjk3OWxsdW5MNzlsbHVuTDc5bGx1blU3OWxsdW5ONzlsbHVu", (int) (byte) 0);
        org.junit.Assert.assertNotNull(strArray2);
    }

    @Test
    public void test313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test313");
        boolean boolean3 = strman.Strman.isEnclosedBetween("000780011700108001080005700055000780011000117001080010800057000550008500110001170010800108000570005500076001100011700108001080005700055000760011000117001080010800057000550005700110001170010800108000570005500055001100011700108001080005700055hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hin_u_l_l97_n_ullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnulln-u-l-l97-n-n-u-l");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test314");
        try {
            java.lang.String str3 = strman.Strman.slice("!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH", 96, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -97");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        }
    }

    @Test
    public void test315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test315");
        java.lang.String str3 = strman.Strman.removeLeft("", "bl91X2xfbDk3X25fdWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxuLXUtbC1sOTctbi1uLXUtbA==", true);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "" + "'", str3.equals(""));
    }

    @Test
    public void test316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test316");
        java.lang.String str1 = strman.Strman.toStudlyCase
        org.junit.Assert.assertTrue("'" + strstr1.equals
    }

    @Test
    public void test317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test317");
        try {
            java.lang.String str3 = strman.Strman.decode("1null97null97_nnul_n_u_l_l97_n_n_u_l!ih000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97_nnull97_unull97_lnull97_lnull979null977null97", 8327, 740);
            org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException; message: radix 740 greater than Character.MAX_RADIX");
        } catch (java.lang.NumberFormatException e) {
        }
    }

    @Test
    public void test318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test318");
        java.lang.String str2 = strman.Strman.ensureRight("Hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97", "1-NULL97");
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "Hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null971-NULL97" + "'", str2.equals("Hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null971-NULL97"));
    }

    @Test
    public void test319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test319");
        java.lang.String str1 = strman.Strman.toSnakeCase("TlVMTDk31null97null97_nnul_n_u_l_l97_n_n_u_l!ih000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97_nnull97_unull97_lnull97_lnull979null977null97");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "tl_v_m_t_dk31null97null97_nnul_n_u_l_l97_n_n_u_l!ih000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97_nnull97_unull97_lnull97_lnull979null977null97" + "'", str1.equals("tl_v_m_t_dk31null97null97_nnul_n_u_l_l97_n_n_u_l!ih000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97_nnull97_unull97_lnull97_lnull979null977null97"));
    }

    @Test
    public void test320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test320");
        java.lang.String str3 = strman.Strman.ensureRight("hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!", "hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!9ihi H7", false);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!9ihi H7" + "'", str3.equals("hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!9ihi H7"));
    }

    @Test
    public void test321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test321");
        java.lang.String[] strArray3 = strman.Strman.chars("null");
        java.lang.String str4 = strman.Strman.prepend("hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!", strArray3);
        java.lang.String str6 = strman.Strman.join(strArray3, "hihiHiHi");
        boolean boolean7 = strman.Strman.containsAny("79llun779llun979llunl79llunl79llunu79llunn79llun79llun779llun979llunl79llunl79llunu79llunn79llun1101171081085755null97nnull97unull97lnull97lnull979null977null97", strArray3);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "nullhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!" + "'", str4.equals("nullhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!"));
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "nhihiHiHiuhihiHiHilhihiHiHil" + "'", str6.equals("nhihiHiHiuhihiHiHilhihiHiHil"));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test322");
        java.lang.String str1 = strman.Strman.hexEncode
    }

    @Test
    public void test323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test323");
        java.lang.String str2 = strman.Strman.removeRight("35", "48485151");
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "35" + "'", str2.equals("35"));
    }

    @Test
    public void test324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test324");
        java.lang.String str1 = strman.Strman.htmlEncode("0nullnull97nnul97");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull" + "'", str1.equals("nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull"));
    }

    @Test
    public void test325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test325");
        java.lang.String str1 = strman.Strman.lowerFirst("Null97 nnull97 unull97 lnull97 lnull979null977null97 null97");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "null97 nnull97 unull97 lnull97 lnull979null977null97 null97" + "'", str1.equals("null97 nnull97 unull97 lnull97 lnull979null977null97 null97"));
    }

    @Test
    public void test326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test326");
        java.lang.String str2 = strman.Strman.toDecamelize("001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000 ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih ih", "33727333727333727333");
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "00110110000000001010111000000000011101100000000001110110000000001110110000000000100111000000000000110110000000000011011000000000101011100000000001110110000000001001011000000000000101100000000010110100000000001001011000000000000101100000000033727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih" + "'", str2.equals("00110110000000001010111000000000011101100000000001110110000000001110110000000000100111000000000000110110000000000011011000000000101011100000000001110110000000001001011000000000000101100000000010110100000000001001011000000000000101100000000033727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih33727333727333727333ih"));
    }

    @Test
    public void test327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test327");
        boolean boolean1 = strman.Strman.isUpperCase("00048000480004800048000480004800048000480004800048000490004900048000480004800049000480004800048000480004800048000480004800048000480004900049000480004800048000480004800048000480004800048000480004800048000480004800049000490004800048000480004900048000480004800048000480004800048000480004800048000490004900048000480004800049000480004800048000480004800048000480004800048000480004900049000480004900049000490004800048000480004800048000480004800048000480004800049000490004800048000480004900048000480004800048000480004800048000480004800048000490004900048000480004800048000480004800048000480004800048000480004800048000480004900049000490004800048000480004800048000480004800048000480004800048000480004800049000490004800048000480004900048000480004800048000480004800048000480004800048000490004900048000480004800048000480004800048000480004800048000480004800048000480004900049000490004800048000480004800048000480004800048000480004800048000480004800049000490004800049000480004900048000480004800048000480004800048000480004800048000490004900048000490004900049000480004800048000480004800048000480004800048000480004900049000480004900048000490004800048000480004800048000480004800048000480004800049000490004800049000480004900048000480004800048000480004800048000480004800049000480004800049000490004900048000480004800048000480004800048000480004800048000490004900049000480004900048000490004800048000480004800048000480004800048000480004900049000480004900049000480004800048000480004800048000480004800048000480004800049000490004800049000490004800048000480004800048000480004800048000480004800048000480004900049000490004800048000490004800048000480004800048000480004800048000480004800049000490004800049000490004900048000480004800048000480004800048000480004800049000480004800049000490004900048000480004800048000480004800048000480004800048000490004900048000490004900049000480004800048000480004800048000480004800048000480004900049000490004800049000480004900048000480004800048000480004800048000480004800049000490004800049000490004800048000480004800048000480004800048000480004800048000490004900048000490004900048000480004800048000480004800048000480004800048000480004800049000490004900048000480004900048000480004800048000480004800048000480004800048000490004900048000490004900049000480004800048000480004800048000480004800048000490004800049000480004900048000490004800048000480004800048000480004800048000480004900049000480004900049000490004800048000480004800048000480004800048000480004800049000490004900048000490004800049000480004800048000480004800048000480004800048000490004900048000490004900048000480004800048000480004800048000480004800048000480004900049000480004900049000480004800048000480004800048000480004800048000480004800048000490004900049000480004800049000480004800048000480004800048000480004800048000480004900049000480004900049000490004800048000480004800048000480004800048000480004900048000480004900049000480004800048000480004800048000480004800048000480004800049000490004800049000490004900048000480004800048000480004800048000480004800048000490004900049000480004900048000490004800048000480004800048000480004800048000480004900049000480004900049000480004800048000480004800048000480004800048000480004800049000490004800049000490004800048000480004800048000480004800048000480004800048000480004900049000490004800048000490004800048000480004800048000480004800048000480004800049000490004800049000490004900048000480004800048000480004800048000480004800049000480004800049000490004800048000480004800048000480004800048000480004800048000490004900048000490004900049000480004800048000480004800048000480004800048000480004900049000490004800049000480004900048000480004800048000480004800048000480004800049000490004800049000490004800048000480004800048000480004800048000480004800048000490004900048000490004900048000480004800048000480004800048000480004800048000480004800049000490004900048000480004900048000480004800048000480004800048000480004800048000490004900048000490004900049000480004800048000480004800048000480004800048000480004900049000490004800048000490004800048000480004800048000480004800048000480004900049000480004900049000490004800048000480004800048000480004800048000480004800049000490004900048000490004800049000480004800048000480004800048000480004800048000490004900048000490004900048000480004800048000480004800048000480004800048000480004900049000480004900049000480004800048000480004800048000480004800048000480004800048000490004900049000480004800049000480004800048000480004800048000480004800048000480004900049000480004900049000490004800048000480004800048000480004800048000480004800049000490004800049000490004900048000480004800048000480004800048000480004800049000490004800049000490004900048000480004800048000480004800048000480004800048000490004900049000480004900048000490004800048000480004800048000480004800048000480004900049000480004900049000480004800048000480004800048000480004800048000480004800049000490004800049000490004800048000480004800048000480004800048000480004800048000480004900049000490004800048000490004800048000480004800048000480004800048000480004800049000490004800049000490004900078000850007600076000570005500078000320008500108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
    }

    @Test
    public void test328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test328");
        boolean boolean2 = strman.Strman.contains("HiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiNull97hiNull97nnul", "Null97Nnull97Unull97Lnull97Lnull979null977null97");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test329");
        java.lang.String str1 = strman.Strman.htmlDecode("Null97Nnull97Unull97Lnull97Lnull979null977null97NULL97");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "null" + "'", str1.equals("null"));
    }

    @Test
    public void test330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test330");
        java.util.Optional<java.lang.String> strOptional1 = strman.Strman.tail("00530065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b0068002000730065006b006800200074006c00200076006d00740064006b0033");
        org.junit.Assert.assertNotNull(strOptional1);
    }

    @Test
    public void test331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test331");
        boolean boolean2 = strman.Strman.endsWith("hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!", "hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test332");
        java.lang.String[] strArray1 = strman.Strman.words("nULL97NNULhiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiNull97hiNull97nnulhiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiNull97hiNull97nnul");
        org.junit.Assert.assertNotNull(strArray1);
    }

    @Test
    public void test333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test333");
        java.lang.String str1 = strman.Strman.formatNumber((long) '4');
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "52" + "'", str1.equals("52"));
    }

    @Test
    public void test334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test334");
        int int2 = strman.Strman.lastIndexOf("Null97 nnull97 unull97 lnull97 lnull979null977null97", "NULL97NNUL!ih");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
    }

    @Test
    public void test335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test335");
        java.lang.String str1 = strman.Strman.toSnakeCase("nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull" + "'", str1.equals("nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull"));
    }

    @Test
    public void test336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test336");
        try {
            java.lang.String str3 = strman.Strman.slice("n-u-l-l97-n-n-u-lhi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-null97nnul-hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!null97-nnul", (int) ' ', 0);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -32");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        }
    }

    @Test
    public void test337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test337");
        java.lang.String str3 = strman.Strman.leftPadnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull", 196);
        org.junit.Assert.assertTrue("'" + strstr3.equals
    }

    @Test
    public void test338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test338");
        try {
            java.lang.String str3 = strman.Strman.decode("!ihnullnull97Nnull97Unull97Lnull97Lnull979null977nuln_u_l_l97_n_ullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnulll97NULL974848515548485157484854994848549948485553484854101484851554848515548485157484854994848549948485553484854101484851574848515548485157484854994848549948485553484854101484852994848515548485157484854994848549948485553484854101484852994848515548485157484854994848549948485553484854101484853534848515548485157484854994848549948485553484854101484852101484851554848515748485499484854994848555348485410100000000011010000000000001101001000000000010110100000000011010000000000001101001000000000011010000000000001110000000000000110100000000000011100000000000001101010000000000110001000000000011010100000000001101010000000000110100000000000011100000000000001101000000000000111000000000000011010100000000001100010000000000110101000000000011011100000000001101000000000000111000000000000011010000000000001110000000000000110101000000000011010000000000001110010000000000111001000000000011010000000000001110000000000000110100000000000011100000000000001101010000000000110100000000000011100100000000001110010000000000110100000000000011100000000000001101000000000000111000000000000011010100000000001101010000000000110101000000000011001100000000001101000000000000111000000000000011010000000000001110000000000000110101000000000011010000000000001100010000000000110000000000000011000100000000001101000000000000111000000000000011010000000000001110000000000000110101000000000011000100000000001101010000000000110101000000000011010000000000001110000000000000110100000000000011100000000000001101010000000000110001000000000011010100000000001101010000000000110100000000000011100000000000001101000000000000111000000000000011010100000000001100010000000000110101000000000011011100000000001101000000000000111000000000000011010000000000001110000000000000110101000000000011010000000000001110010000000000111001000000000011010000000000001110000000000000110100000000000011100000000000001101010000000000110100000000000011100100000000001110010000000000110100000000000011100000000000001101000000000000111000000000000011010100000000001101010000000000110101000000000011001100000000001101000000000000111000000000000011010000000000001110000000000000110101000000000011010000000000001100010000000000110000000000000011000100000000001101000000000000111000000000000011010000000000001110000000000000110101000000000011000100000000001101010000000000110111000000000011010000000000001110000000000000110100000000000011100000000000001101010000000000110001000000000011010100000000001101010000000000110100000000000011100000000000001101000000000000111000000000000011010100000000001100010000000000110101000000000011011100000000001101000000000000111000000000000011010000000000001110000000000000110101000000000011010000000000001110010000000000111001000000000011010000000000001110000000000000110100000000000011100000000000001101010000000000110100000000000011100100000000001110010000000000110100000000000011100000000000001101000000000000111000000000000011010100000000001101010000000000110101000000000011001100000000001101000000000000111000000000000011010000000000001110000000000000110101000000000011010000000000001100010000000000110000000000000011000100000000001101000000000000111000000000000011010000000000001110000000000000110101000000000011001000000000001110010000000000111001000000000011010000000000001110000000000000110100000000000011100000000000001101010000000000110001000000000011010100000000001101010000000000110100000000000011100000000000001101000000000000111000000000000011010100000000001100010000000000110101000000000011011100000000001101000000000000111000000000000011010000000000001110000000000000110101000000000011010000000000001110010000000000111001000000000011010000000000001110000000000000110100000000000011100000000000001101010000000000110100000000000011100100000000001110010000000000110100000000000011100000000000001101000000000000111000000000000011010100000000001101010000000000110101000000000011001100000000001101000000000000111000000000000011010000000000001110000000000000110101000000000011010000000000001100010000000000110000000000000011000100000000001101000000000000111000000000000011010000000000001110000000000000110101000000000011001000000000001110010000000000111001000000000011010000000000001110000000000000110100000000000011100000000000001101010000000000110001000000000011010100000000001101010000000000110100000000000011100000000000001101000000000000111000000000000011010100000000001100010000000000110101000000000011011100000000001101000000000000111000000000000011010000000000001110000000000000110101000000000011010000000000001110010000000000111001000000000011010000000000001110000000000000110100000000000011100000000000001101010000000000110100000000000011100100000000001110010000000000110100000000000011100000000000001101000000000000111000000000000011010100000000001101010000000000110101000000000011001100000000001101000000000000111000000000000011010000000000001110000000000000110101000000000011010000000000001100010000000000110000000000000011000100000000001101000000000000111000000000000011010000000000001110000000000000110101000000000011001100000000001101010000000000110011000000000011010000000000001110000000000000110100000000000011100000000000001101010000000000110001000000000011010100000000001101010000000000110100000000000011100000000000001101000000000000111000000000000011010100000000001100010000000000110101000000000011011100000000001101000000000000111000000000000011010000000000001110000000000000110101000000000011010000000000001110010000000000111001000000000011010000000000001110000000000000110100000000000011100000000000001101010000000000110100000000000011100100000000001110010000000000110100000000000011100000000000001101000000000000111000000000000011010100000000001101010000000000110101000000000011001100000000001101000000000000111000000000000011010000000000001110000000000000110101000000000011010000000000001100010000000000110000000000000011000100000000001101000000000000111000000000000011010000000000001110000000000000110101000000000011001000000000001100010000000000110000000000000011000100000000001101000000000000111000000000000011010000000000001110000000000000110101000000000011000100000000001101010000000000110101000000000011010000000000001110000000000000110100000000000011100000000000001101010000000000110001000000000011010100000000001101110000000000110100000000000011100000000000001101000000000000111000000000000011010100000000001101000000000000111001000000000011100100000000001101000000000000111000000000000011010000000000001110000000000000110101000000000011010000000000001110010000000000111001000000000011010000000000001110000000000000110100000000000011100000000000001101010000000000110101000000000011010100000000001100110000000000110100000000000011100000000000001101000000000000111000000000000011010100000000001101000000000000110001000000000011000000000000001100010000000001101001000000000110100000000000011010010000000001001000", (int) (short) 1, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException; message: radix 1 less than Character.MIN_RADIX");
        } catch (java.lang.NumberFormatException e) {
        }
    }

    @Test
    public void test339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test339");
        java.lang.String str1 = strman.Strman.toSnakeCase("mw-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-null97nnul");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "mw_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_null97hi_null97nnul" + "'", str1.equals("mw_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_null97hi_null97nnul"));
    }

    @Test
    public void test340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test340");
        java.lang.String str3 = strman.Strman.leftPad("IhiH", "1null97null97_nnul_n_u_l_l97_n_n_u_l!ih000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97_nnull97_unull97_lnull97_lnull979null977null97", (int) 'a');
    }

    @Test
    public void test341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test341");
        java.lang.String str2 = strman.Strman.toDecamelize("IHI97HHI97HI48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101n-u-l-l97-n-n-u-lhi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hinULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULL-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-null97nnul-hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!null97-nnul", "000780011700108001080005700055000780011000117001080010800057000550008500110001170010800108000570005500076001100011700108001080005700055000760011000117001080010800057000550005700110001170010800108000570005500055001100011700108001080005700055");
    }

    @Test
    public void test342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test342");
        java.lang.String str1 = strman.Strman.htmlEncode("1null97null97 Nnul N U L L97 N N U L!ih");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull&excl;nullnull" + "'", str1.equals("nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull&excl;nullnull"));
    }

    @Test
    public void test343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test343");
        java.lang.String str4 = strman.Strman.replace("5!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih", "HI!HI!97", "ihi Hhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97", false);
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "5!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih" + "'", str4.equals("5!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih"));
    }

    @Test
    public void test344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test344");
        java.lang.String str3 = strman.Strman.rightPad("0021004800490021004800490021004800490021null97null97nnull97unull97lnull97lnull979null977null97", "i3kdtmV lT hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeShi-h", 160);
    }

    @Test
    public void test345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test345");
        java.lang.String str1 = strman.Strman.escapeRegExp("LLUNLLUN");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "LLUNLLUN" + "'", str1.equals("LLUNLLUN"));
    }

    @Test
    public void test346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test346");
        boolean boolean1 = strman.Strman.isUpperCase("000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
    }

    @Test
    public void test347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test347");
        java.lang.String str1 = strman.Strman.rightTrim("NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97" + "'", str1.equals("NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97"));
    }

    @Test
    public void test348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test348");
        java.lang.String str1 = strman.Strman.htmlEncode("Nullnull97nnul=g2xphwA000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97Nnull97Unull97Lnull97Lnull979null977null97Hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hihiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiMw==");
    }

    @Test
    public void test349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test349");
        java.lang.String str1 = strman.Strman.toCamelCase("1-7210533hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97_nnull97_unull97_lnull97_lnull979null977null97_hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "17210533hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97Nnull97Unull97Lnull97Lnull979null977null97Hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!" + "'", str1.equals("17210533hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97Nnull97Unull97Lnull97Lnull979null977null97Hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!"));
    }

    @Test
    public void test350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test350");
        java.lang.String str1 = strman.Strman.removeSpaces("bXctaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktbnVsbDk3aGktbnVsbDk3bm51bA==");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "bXctaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktbnVsbDk3aGktbnVsbDk3bm51bA==" + "'", str1.equals("bXctaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktbnVsbDk3aGktbnVsbDk3bm51bA=="));
    }

    @Test
    public void test351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test351");
        boolean boolean3 = strman.Strman.isEnclosedBetween("4800048000480005500056000480004800049000490004800048000480004900049000550004800048000490004800056", "Null000780008500076000760005700055001100007800085000760007600057000550011700078000850007600076000570005500108000780008500076000760005700055001080007800085000760007600057000550005700078000850007600076000570005500055000780008500076000760005700055", "hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!Hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!blVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test352");
        java.lang.String str2 = strman.Strman.repeati!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!", 10);
    }

    @Test
    public void test353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test353");
        java.lang.String str1 = strman.Strman.toCamelCase("MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "mDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3" + "'", str1.equals("mDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3"));
    }

    @Test
    public void test354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test354");
        java.util.Optional<java.lang.String> strOptional2 = strman.Strman.at("HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!", 6);
        org.junit.Assert.assertNotNull(strOptional2);
    }

    @Test
    public void test355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test355");
        java.lang.String str2 = strman.Strman.ensureLeft("0000000001101001000000000110100000000000011010010000000001001000Null000780008500076000760005700055001100007800085000760007600057000550011700078000850007600076000570005500108000780008500076000760005700055001080007800085000760007600057000550005700078000850007600076000570005500055000780008500076000760005700055", "hihiihi_hhi_hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101");
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hihiihi_hhi_hi484851554848515748485499484854994848555348485410148485155484851554848515748485499484854994848555348485410148485157484851554848515748485499484854994848555348485410148485299484851554848515748485499484854994848555348485410148485299484851554848515748485499484854994848555348485410148485353484851554848515748485499484854994848555348485410148485210148485155484851574848549948485499484855534848541010000000001101001000000000110100000000000011010010000000001001000Null000780008500076000760005700055001100007800085000760007600057000550011700078000850007600076000570005500108000780008500076000760005700055001080007800085000760007600057000550005700078000850007600076000570005500055000780008500076000760005700055" + "'", str2.equals("hihiihi_hhi_hi484851554848515748485499484854994848555348485410148485155484851554848515748485499484854994848555348485410148485157484851554848515748485499484854994848555348485410148485299484851554848515748485499484854994848555348485410148485299484851554848515748485499484854994848555348485410148485353484851554848515748485499484854994848555348485410148485210148485155484851574848549948485499484855534848541010000000001101001000000000110100000000000011010010000000001001000Null000780008500076000760005700055001100007800085000760007600057000550011700078000850007600076000570005500108000780008500076000760005700055001080007800085000760007600057000550005700078000850007600076000570005500055000780008500076000760005700055"));
    }

    @Test
    public void test356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test356");
        java.lang.String str1 = strman.Strman.collapseWhitespaceullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull97Nnull97Unull97Lnull97Lnull979null977null97hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97");
        org.junit.Assert.assertTrue("'" + strullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull97Nnull97Unull97Lnull97Lnull979null977null97hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97" + "'", str1.equalsullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull97Nnull97Unull97Lnull97Lnull979null977null97hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97"));
    }

    @Test
    public void test357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test357");
        boolean boolean3 = strman.Strman.endsWith("bl91X2xfbDk3X25fdWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxuLXUtbC1sOTctbi1uLXUtbA==", "4549", true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test358");
        java.lang.String str3 = strman.Strman.surroundhihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi_h", "hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_null97hi00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006ehi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!==AbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbhi-hinull97nnul");
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "hihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi_hhi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_null97hi00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006ehi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!==AbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbhi-hinull97nnul" + "'", str3.equals("hihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi_h003000300030003400380030003000300034003800300030003000340038003000300030003400380030003000300034003800300030003000340038003000300030003400380030003000300034003800300030003000340038003000300030003400380030003000300034003900300030003000340039003000300030003400380030003000300034003800300030003000340039003000300030003400390030003000300034003800300030003000340038003000300030003400380030003000300034003800300030003000340038003000300030003400380030003000300034003800300030003000340038003000300030003400380030003000300034003800300030003000340039003000300030003400390030003000300034003800300030003000340039003000300030003400380030003000300034003900300030003100310030003000300031003100370030003000310030003800300030003100300038003000300030003500370030003000300035003500300030003100310030003000300031003100300030003000310031003700300030003100300038hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_null97hi00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006ehi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!==AbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbhi-hinull97nnul"));
    }

    @Test
    public void test359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test359");
        java.lang.String str4 = strman.Strman.replace("hibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mnull97", "!ih", "NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NQ==", false);
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "hibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mnull97" + "'", str4.equals("hibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mnull97"));
    }

    @Test
    public void test360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test360");
        java.lang.String str3 = strman.Strman.removeLeft("0000000001101001000000000110100000000000011010010000000001001000Null000780008500076000760005700055001100007800085000760007600057000550011700078000850007600076000570005500108000780008500076000760005700055001080007800085000760007600057000550005700078000850007600076000570005500055000780008500076000760005700055", "n_u_l_l97_n_ullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull", false);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "0000000001101001000000000110100000000000011010010000000001001000Null000780008500076000760005700055001100007800085000760007600057000550011700078000850007600076000570005500108000780008500076000760005700055001080007800085000760007600057000550005700078000850007600076000570005500055000780008500076000760005700055" + "'", str3.equals("0000000001101001000000000110100000000000011010010000000001001000Null000780008500076000760005700055001100007800085000760007600057000550011700078000850007600076000570005500108000780008500076000760005700055001080007800085000760007600057000550005700078000850007600076000570005500055000780008500076000760005700055"));
    }

    @Test
    public void test361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test361");
        java.lang.String str1 = strman.Strman.collapseWhitespace("45132133451321334513213345");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "45132133451321334513213345" + "'", str1.equals("45132133451321334513213345"));
    }

    @Test
    public void test362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test362");
        java.lang.String str1 = strman.Strman.formatNumber((long) 7);
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "7" + "'", str1.equals("7"));
    }

    @Test
    public void test363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test363");
        java.lang.String[] strArray5 = strman.Strman.chars("null");
        boolean boolean6 = strman.Strman.containsAny("null97Nnull97Unull97Lnull97Lnull979null977null97", strArray5);
        java.lang.String str7 = strman.Strman.prepend("nULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULL", strArray5);
        boolean boolean8 = strman.Strman.containsAll("hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97histrArray5);
        java.lang.String str9 = strman.Strman.format("0031006c0075006e006e00370039006c006c0075006e", strArray5);
        java.util.List<java.lang.String> strList10 = strman.Strman.zip(strArray5);
        java.lang.Class<?> wildcardClass11 = strArray5.getClass();
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + str7 + "' != '" + "nullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULL" + "'", str7.equals("nullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULL"));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + str9 + "' != '" + "0031006c0075006e006e00370039006c006c0075006e" + "'", str9.equals("0031006c0075006e006e00370039006c006c0075006e"));
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test364");
        java.lang.String str3 = strman.Strman.encode("MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM300078001170010800108000570005500110001100011700108000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97Nnull97Unull97Lnull97Lnull979null977null97Hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!", (int) (short) 1, (int) (byte) 1);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "77686550908465119781228511977689010677686550891226511977122107119776877514848485556484849495548484948564848494856484848535548484853534848494948484849494848484949554848494856484848484848484848494948494848484848484848484848484949484948484948484848484848484848494849494849484848484848484848494948494848484848484848484848484949484948484948484848484848484849494849494948484848484848484848494949484948494848484848484848484949484949484848484848484848484849494849494848484848484848484848484949494848494848484848484848484849494849494948484848484848484849494849494948484848484848484848494948494949484848484848484848484949494849484948484848484848484849494849494848110117108108575511011710810857557811011710810857558511011710810857557611011710810857557611011710810857555711011710810857555511011710810857557210510410510410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533110117108108575510410533" + "'", str3.equals("77686550908465119781228511977689010677686550891226511977122107119776877514848485556484849495548484948564848494856484848535548484853534848494948484849494848484949554848494856484848484848484848494948494848484848484848484848484949484948484948484848484848484848494849494849484848484848484848494948494848484848484848484848484949484948484948484848484848484849494849494948484848484848484848494949484948494848484848484848484949484949484848484848484848484849494849494848484848484848484848484949494848494848484848484848484849494849494948484848484848484849494849494948484848484848484848494948494949484848484848484848484949494849484948484848484848484849494849494848110117108108575511011710810857557811011710810857558511011710810857557611011710810857557611011710810857555711011710810857555511011710810857557210510410510410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533110117108108575510410533"));
    }

    @Test
    public void test365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test365");
        java.lang.String str3 = strman.Strman.truncate("NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97hihi", (int) '4', "");
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97hihi" + "'", str3.equals("NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97hihi"));
    }

    @Test
    public void test366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test366");
        try {
            java.lang.String str3 = strman.Strman.decode
            org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException; message: radix 6432 greater than Character.MAX_RADIX");
        } catch (java.lang.NumberFormatException e) {
        }
    }

    @Test
    public void test367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test367");
        java.util.Optional<java.lang.String> strOptional2 = strman.Strman.at("nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull", 8327);
        org.junit.Assert.assertNotNull(strOptional2);
    }

    @Test
    public void test368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test368");
        java.lang.String str1 = strman.Strman.upperFirst("110117108108575500000000017900000000011010010000000001101000000000000110100100000000001011010000000001101000NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97l00000000011010010000000001101000000000000110100100000000001011010000000001101000NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97l00000000011010010000000001101000000000000110100100000000001011010000000001101000NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97u00000000011010010000000001101000000000000110100100000000001011010000000001101000NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97n77900000000011010010000000001101000000000000110100100000000001011010000000001101000NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97l00000000011010010000000001101000000000000110100100000000001011010000000001101000NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97l00000000011010010000000001101000000000000110100100000000001011010000000001101000NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97u00000000011010010000000001101000000000000110100100000000001011010000000001101000NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97n97900000000011010010000000001101000000000000110100100000000001011010000000001101000NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97l00000000011010010000000001101000000000000110100100000000001011010000000001101000NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97l00000000011010010000000001101000000000000110100100000000001011010000000001101000NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97u00000000011010010000000001101000000000000110100100000000001011010000000001101000NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97nl7900000000011010010000000001101000000000000110100100000000001011010000000001101000NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97l00000000011010010000000001101000000000000110100100000000001011010000000001101000NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97l00000000011010010000000001101000000000000110100100000000001011010000000001101000NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97u00000000011010010000000001101000000000000110100100000000001011010000000001101000NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97nl7900000000011010010000000001101000000000000110100100000000001011010000000001101000NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97l00000000011010010000000001101000000000000110100100000000001011010000000001101000NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97l00000000011010010000000001101000000000000110100100000000001011010000000001101000NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97u00000000011010010000000001101000000000000110100100000000001011010000000001101000NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97nu7900000000011010010000000001101000000000000110100100000000001011010000000001101000NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97l00000000011010010000000001101000000000000110100100000000001011010000000001101000NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97l00000000011010010000000001101000000000000110100100000000001011010000000001101000NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97u00000000011010010000000001101000000000000110100100000000001011010000000001101000NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97nn7900000000011010010000000001101000000000000110100100000000001011010000000001101000NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97l00000000011010010000000001101000000000000110100100000000001011010000000001101000NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97l00000000011010010000000001101000000000000110100100000000001011010000000001101000NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97u00000000011010010000000001101000000000000110100100000000001011010000000001101000NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97n10100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "110117108108575500000000017900000000011010010000000001101000000000000110100100000000001011010000000001101000NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97l00000000011010010000000001101000000000000110100100000000001011010000000001101000NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97l00000000011010010000000001101000000000000110100100000000001011010000000001101000NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97u00000000011010010000000001101000000000000110100100000000001011010000000001101000NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97n77900000000011010010000000001101000000000000110100100000000001011010000000001101000NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97l00000000011010010000000001101000000000000110100100000000001011010000000001101000NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97l00000000011010010000000001101000000000000110100100000000001011010000000001101000NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97u00000000011010010000000001101000000000000110100100000000001011010000000001101000NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97n97900000000011010010000000001101000000000000110100100000000001011010000000001101000NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97l00000000011010010000000001101000000000000110100100000000001011010000000001101000NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97l00000000011010010000000001101000000000000110100100000000001011010000000001101000NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97u00000000011010010000000001101000000000000110100100000000001011010000000001101000NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97nl7900000000011010010000000001101000000000000110100100000000001011010000000001101000NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97l00000000011010010000000001101000000000000110100100000000001011010000000001101000NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97l00000000011010010000000001101000000000000110100100000000001011010000000001101000NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97u00000000011010010000000001101000000000000110100100000000001011010000000001101000NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97nl7900000000011010010000000001101000000000000110100100000000001011010000000001101000NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97l00000000011010010000000001101000000000000110100100000000001011010000000001101000NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97l00000000011010010000000001101000000000000110100100000000001011010000000001101000NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97u00000000011010010000000001101000000000000110100100000000001011010000000001101000NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97nu7900000000011010010000000001101000000000000110100100000000001011010000000001101000NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97l00000000011010010000000001101000000000000110100100000000001011010000000001101000NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97l00000000011010010000000001101000000000000110100100000000001011010000000001101000NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97u00000000011010010000000001101000000000000110100100000000001011010000000001101000NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97nn7900000000011010010000000001101000000000000110100100000000001011010000000001101000NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97l00000000011010010000000001101000000000000110100100000000001011010000000001101000NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97l00000000011010010000000001101000000000000110100100000000001011010000000001101000NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97u00000000011010010000000001101000000000000110100100000000001011010000000001101000NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97n10100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100" + "'", str1.equals("110117108108575500000000017900000000011010010000000001101000000000000110100100000000001011010000000001101000NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97l00000000011010010000000001101000000000000110100100000000001011010000000001101000NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97l00000000011010010000000001101000000000000110100100000000001011010000000001101000NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97u00000000011010010000000001101000000000000110100100000000001011010000000001101000NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97n77900000000011010010000000001101000000000000110100100000000001011010000000001101000NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97l00000000011010010000000001101000000000000110100100000000001011010000000001101000NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97l00000000011010010000000001101000000000000110100100000000001011010000000001101000NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97u00000000011010010000000001101000000000000110100100000000001011010000000001101000NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97n97900000000011010010000000001101000000000000110100100000000001011010000000001101000NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97l00000000011010010000000001101000000000000110100100000000001011010000000001101000NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97l00000000011010010000000001101000000000000110100100000000001011010000000001101000NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97u00000000011010010000000001101000000000000110100100000000001011010000000001101000NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97nl7900000000011010010000000001101000000000000110100100000000001011010000000001101000NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97l00000000011010010000000001101000000000000110100100000000001011010000000001101000NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97l00000000011010010000000001101000000000000110100100000000001011010000000001101000NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97u00000000011010010000000001101000000000000110100100000000001011010000000001101000NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97nl7900000000011010010000000001101000000000000110100100000000001011010000000001101000NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97l00000000011010010000000001101000000000000110100100000000001011010000000001101000NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97l00000000011010010000000001101000000000000110100100000000001011010000000001101000NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97u00000000011010010000000001101000000000000110100100000000001011010000000001101000NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97nu7900000000011010010000000001101000000000000110100100000000001011010000000001101000NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97l00000000011010010000000001101000000000000110100100000000001011010000000001101000NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97l00000000011010010000000001101000000000000110100100000000001011010000000001101000NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97u00000000011010010000000001101000000000000110100100000000001011010000000001101000NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97nn7900000000011010010000000001101000000000000110100100000000001011010000000001101000NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97l00000000011010010000000001101000000000000110100100000000001011010000000001101000NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97l00000000011010010000000001101000000000000110100100000000001011010000000001101000NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97u00000000011010010000000001101000000000000110100100000000001011010000000001101000NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97n10100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100"));
    }

    @Test
    public void test369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test369");
        java.lang.String[] strArray2 = strman.Strman.wordse0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c00390037004e006e0075006c006c003900370055006e0075006c006c00390037004c006e0075006c006c00390037004c006e0075006c006c003900370039006e0075006c006c003900370037006e0075006c006ce0075006c006c00390037", "10145848435558484994584849945848475158484551584841012584841014584843555848499458484994584847515848455158484353584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484751584841014584843555848499458484994584847515848455158484551584841014584843555848499458484994584847515848455158484ih-ihh_ihI");
        java.lang.String str4 = strman.Strman.join(strArray2, "null97Nnul");
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + stre0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c00390037004e006e0075006c006c003900370055006e0075006c006c00390037004c006e0075006c006c00390037004c006e0075006c006c003900370039006e0075006c006c003900370037006e0075006c006ce0075006c006c00390037" + "'", str4.equalse0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c00390037004e006e0075006c006c003900370055006e0075006c006c00390037004c006e0075006c006c00390037004c006e0075006c006c003900370039006e0075006c006c003900370037006e0075006c006ce0075006c006c00390037"));
    }

    @Test
    public void test370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test370");
        java.lang.String[] strArray3 = strman.Strman.chars("null");
        java.lang.String str4 = strman.Strman.prepend("hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!", strArray3);
        java.lang.Class<?> wildcardClass5 = strArray3.getClass();
        java.lang.String str6 = strman.Strman.append("", strArray3);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "nullhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!" + "'", str4.equals("nullhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!"));
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "null" + "'", str6.equals("null"));
    }

    @Test
    public void test371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test371");
        try {
            java.lang.String str3 = strman.Strman.insert("Hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!blVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97Nnul", "nullnullnullnullnullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnullnullnullnullnull", (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        }
    }

    @Test
    public void test372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test372");
        java.lang.String str3 = strman.Strman.rightPad("hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!1097null97", "bl91X2xfbDk3aGloaQ==", 202);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!1097null97" + "'", str3.equals("hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!1097null97"));
    }

    @Test
    public void test373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test373");
        java.lang.String[] strArray3 = strman.Strman.chars("null");
        boolean boolean4 = strman.Strman.containsAny("null97Nnull97Unull97Lnull97Lnull979null977null97", strArray3);
        java.lang.String str5 = strman.Strman.format("null97null97Nnull97Unull97Lnull97Lnull979null977null97", strArray3);
        java.util.List<java.lang.String> strList6 = strman.Strman.zip(strArray3);
        java.lang.String str8 = strman.Strman.join(strArray3, "00001p00001r00003i00003i00003r00003k00001p00001p00001r00003i00003i00003r00003k00001r00001p00001r00003i00003i00003r00003k00003i00001p00001r00003i00003i00003r00003k00003i00001p00001r00003i00003i00003r00003k00003r00001p00001r00003i00003i00003r00003k00003k00001p00001r00003i00003i00003r00003k00001p00001r00003i00003i00003r00003k00001p00001p00001r00003i00003i00003r00003k00001r00001p00001r00003i00003i00003r00003k00003i00001p00001r00003i00003i00003r00003k00003i00001p00001r00003i00003i00003r00003k00003r00001p00001r00003i00003i00003r00003k00003k00001p00001r00003i00003i00003r00003k");
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "null97null97Nnull97Unull97Lnull97Lnull979null977null97" + "'", str5.equals("null97null97Nnull97Unull97Lnull97Lnull979null977null97"));
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertTrue("'" + str8 + "' != '" + "n00001p00001r00003i00003i00003r00003k00001p00001p00001r00003i00003i00003r00003k00001r00001p00001r00003i00003i00003r00003k00003i00001p00001r00003i00003i00003r00003k00003i00001p00001r00003i00003i00003r00003k00003r00001p00001r00003i00003i00003r00003k00003k00001p00001r00003i00003i00003r00003k00001p00001r00003i00003i00003r00003k00001p00001p00001r00003i00003i00003r00003k00001r00001p00001r00003i00003i00003r00003k00003i00001p00001r00003i00003i00003r00003k00003i00001p00001r00003i00003i00003r00003k00003r00001p00001r00003i00003i00003r00003k00003k00001p00001r00003i00003i00003r00003ku00001p00001r00003i00003i00003r00003k00001p00001p00001r00003i00003i00003r00003k00001r00001p00001r00003i00003i00003r00003k00003i00001p00001r00003i00003i00003r00003k00003i00001p00001r00003i00003i00003r00003k00003r00001p00001r00003i00003i00003r00003k00003k00001p00001r00003i00003i00003r00003k00001p00001r00003i00003i00003r00003k00001p00001p00001r00003i00003i00003r00003k00001r00001p00001r00003i00003i00003r00003k00003i00001p00001r00003i00003i00003r00003k00003i00001p00001r00003i00003i00003r00003k00003r00001p00001r00003i00003i00003r00003k00003k00001p00001r00003i00003i00003r00003kl00001p00001r00003i00003i00003r00003k00001p00001p00001r00003i00003i00003r00003k00001r00001p00001r00003i00003i00003r00003k00003i00001p00001r00003i00003i00003r00003k00003i00001p00001r00003i00003i00003r00003k00003r00001p00001r00003i00003i00003r00003k00003k00001p00001r00003i00003i00003r00003k00001p00001r00003i00003i00003r00003k00001p00001p00001r00003i00003i00003r00003k00001r00001p00001r00003i00003i00003r00003k00003i00001p00001r00003i00003i00003r00003k00003i00001p00001r00003i00003i00003r00003k00003r00001p00001r00003i00003i00003r00003k00003k00001p00001r00003i00003i00003r00003kl" + "'", str8.equals("n00001p00001r00003i00003i00003r00003k00001p00001p00001r00003i00003i00003r00003k00001r00001p00001r00003i00003i00003r00003k00003i00001p00001r00003i00003i00003r00003k00003i00001p00001r00003i00003i00003r00003k00003r00001p00001r00003i00003i00003r00003k00003k00001p00001r00003i00003i00003r00003k00001p00001r00003i00003i00003r00003k00001p00001p00001r00003i00003i00003r00003k00001r00001p00001r00003i00003i00003r00003k00003i00001p00001r00003i00003i00003r00003k00003i00001p00001r00003i00003i00003r00003k00003r00001p00001r00003i00003i00003r00003k00003k00001p00001r00003i00003i00003r00003ku00001p00001r00003i00003i00003r00003k00001p00001p00001r00003i00003i00003r00003k00001r00001p00001r00003i00003i00003r00003k00003i00001p00001r00003i00003i00003r00003k00003i00001p00001r00003i00003i00003r00003k00003r00001p00001r00003i00003i00003r00003k00003k00001p00001r00003i00003i00003r00003k00001p00001r00003i00003i00003r00003k00001p00001p00001r00003i00003i00003r00003k00001r00001p00001r00003i00003i00003r00003k00003i00001p00001r00003i00003i00003r00003k00003i00001p00001r00003i00003i00003r00003k00003r00001p00001r00003i00003i00003r00003k00003k00001p00001r00003i00003i00003r00003kl00001p00001r00003i00003i00003r00003k00001p00001p00001r00003i00003i00003r00003k00001r00001p00001r00003i00003i00003r00003k00003i00001p00001r00003i00003i00003r00003k00003i00001p00001r00003i00003i00003r00003k00003r00001p00001r00003i00003i00003r00003k00003k00001p00001r00003i00003i00003r00003k00001p00001r00003i00003i00003r00003k00001p00001p00001r00003i00003i00003r00003k00001r00001p00001r00003i00003i00003r00003k00003i00001p00001r00003i00003i00003r00003k00003i00001p00001r00003i00003i00003r00003k00003r00001p00001r00003i00003i00003r00003k00003k00001p00001r00003i00003i00003r00003kl"));
    }

    @Test
    public void test374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test374");
        java.lang.String str3 = strman.Strman.safeTruncate("ihi_hhi_hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101", 6432, "a-whp-x2ghi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_null97hi00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006ehi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!");
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "ihi_hhi_hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101" + "'", str3.equals("ihi_hhi_hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101"));
    }

    @Test
    public void test375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test375");
        java.lang.String str1 = strman.Strman.dasherize("lunn79lluNih79lluNiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiH");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "lunn79llu-nih79llu-ni-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-h" + "'", str1.equals("lunn79llu-nih79llu-ni-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-h"));
    }

    @Test
    public void test376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test376");
        java.lang.String str1 = strman.Strman.htmlEncode("7210533hi!hi!hi!hi!hi!hi!hi!hi!hi!hn-ullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnulli!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!Hihi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_null97hi00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006ehi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "nullnullnullnullnullnullnullnullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnullnullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;" + "'", str1.equals("nullnullnullnullnullnullnullnullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnullnullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;"));
    }

    @Test
    public void test377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test377");
        java.lang.String str1 = strman.Strman.humanize("!ih");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "!ih" + "'", str1.equals("!ih"));
    }

    @Test
    public void test378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test378");
        java.lang.String str2 = strman.Strman.repeat
    }

    @Test
    public void test379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test379");
        java.lang.String str3 = strman.Strman.truncate("", 203, "001");
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "" + "'", str3.equals(""));
    }

    @Test
    public void test380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test380");
        int int4 = strman.Strman.lastIndexOf("nullhi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-null97hi\\-00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e", "Hibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mnull9700370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006eIHI97HHI97HI48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101", 100, false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
    }

    @Test
    public void test381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test381");
        java.lang.String[] strArray3 = strman.Strman.words("hi_hinull97nnul", "Hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!");
        java.util.Optional<java.lang.String> strOptional4 = strman.Strman.trimStart("nullHI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!", strArray3);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(strOptional4);
    }

    @Test
    public void test382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test382");
        int int1 = strman.Strman.length("000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97Nnull97Unull97Lnull97Lnull979null977null97Hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 607 + "'", int1 == 607);
    }

    @Test
    public void test383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test383");
        boolean boolean4 = strman.Strman.endsWith("00000000011010010000000001101000000000000110100100000000001011010000000001101000", "4", (-1), false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test384");
        java.util.Optional<java.lang.String> strOptional1 = strman.Strman.trimStart("00390037null97nnul1097null971097");
        org.junit.Assert.assertNotNull(strOptional1);
    }

    @Test
    public void test385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test385");
        java.lang.String[] strArray3 = strman.Strman.chop("001", 4342);
        java.lang.String str4 = strman.Strman.append("10145848435558484994584849945848475158484551584841012584841014584843555848499458484994584847515848455158484353584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484751584841014584843555848499458484994584847515848455158484551584841014584843555848499458484994584847515848455158484ih-ihllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunlunn79llun790179llun7901lunn79llun", strArray3);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "10145848435558484994584849945848475158484551584841012584841014584843555848499458484994584847515848455158484353584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484751584841014584843555848499458484994584847515848455158484551584841014584843555848499458484994584847515848455158484ih-ihllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunlunn79llun790179llun7901lunn79llun001" + "'", str4.equals("10145848435558484994584849945848475158484551584841012584841014584843555848499458484994584847515848455158484353584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484751584841014584843555848499458484994584847515848455158484551584841014584843555848499458484994584847515848455158484ih-ihllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunlunn79llun790179llun7901lunn79llun001"));
    }

    @Test
    public void test386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test386");
        java.lang.String str1 = strman.Strman.binEncode("006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c00260055006e006400650072004200610072003b006e0075006c006c");
    }

    @Test
    public void test387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test387");
        java.lang.String str3 = strman.Strman.rightPad("hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97", "10145848435558484994584849945848475158484551584841012584841014584843555848499458484994584847515848455158484353584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484751584841014584843555848499458484994584847515848455158484551584841014584843555848499458484994584847515848455158484ih-ihllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunlunn79llun790179llun7901lunn79llun001", 68);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97" + "'", str3.equals("hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97"));
    }

    @Test
    public void test388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test388");
        java.lang.String str1 = strman.Strman.htmlDecode("mDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3TnVsbA==");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "null" + "'", str1.equals("null"));
    }

    @Test
    public void test389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test389");
        java.lang.String[] strArray4 = strman.Strman.words("000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97_nnull97_unull97_lnull97_lnull979null977null97", "48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101");
        java.lang.String str5 = strman.Strman.format("n-u-l-l97-n-n-u-l", strArray4);
        java.lang.String str6 = strman.Strman.prepend("hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e!", strArray4);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "n-u-l-l97-n-n-u-l" + "'", str5.equals("n-u-l-l97-n-n-u-l"));
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97_nnull97_unull97_lnull97_lnull979null977null97hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e!" + "'", str6.equals("000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97_nnull97_unull97_lnull97_lnull979null977null97hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e!"));
    }

    @Test
    public void test390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test390");
        java.lang.String str1 = strman.Strman.toSnakeCasehI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!7");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "90007800117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800057000550007800110001170010800108000570005500085001100011700108001080005700055000760011000117001080010800057000550007600110001170010800108000570005500057001100011700108001080005700055000550011000117001080010800057000550010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330011000117001080010800057000550000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001050000000000h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!7" + "'", str1.equalsh_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!_h_i!7"));
    }

    @Test
    public void test391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test391");
        java.lang.String str4 = strman.Strman.replace("000720010500033001040010500033nullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULL", "1null97null97 nnul n u l l97 n n u l!ih!HI!HI!HI!6", "n_u_l_l97n_n_u_l_l97u_n_u_l_l97l_n_u_l_l97l_n_u_l_l979_n_u_l_l977_n_u_l_l97", false);
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "000720010500033001040010500033nullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULL" + "'", str4.equals("000720010500033001040010500033nullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULL"));
    }

    @Test
    public void test392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test392");
        java.lang.String[] strArray3 = strman.Strman.words("000720010500033001040010500033nullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULL", "Mda2 ztaw nz uw mdzj mda2 yz aw mzkw mdm3nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull");
        java.lang.String str4 = strman.Strman.prependArray("1null97null97NnulNULL97NNUL!ih", strArray3);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "000720010500033001040010500033nullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULL1null97null97NnulNULL97NNUL!ih" + "'", str4.equals("000720010500033001040010500033nullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULL1null97null97NnulNULL97NNUL!ih"));
    }

    @Test
    public void test393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test393");
        try {
            java.lang.String str3 = strman.Strman.decode("n-u-l-l97-n-n-u-lhi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-null97nnul-hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!null97-nnul", 30, 96);
            org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException; message: radix 96 greater than Character.MAX_RADIX");
        } catch (java.lang.NumberFormatException e) {
        }
    }

    @Test
    public void test394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test394");
        boolean boolean1 = strman.Strman.isLowerCase("hIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMNULL97");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
    }

    @Test
    public void test395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test395");
        java.lang.String str1 = strman.Strman.base64Encode("90007800117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800057000550007800110001170010800108000570005500085001100011700108001080005700055000760011000117001080010800057000550007600110001170010800108000570005500057001100011700108001080005700055000550011000117001080010800057000550010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330010400105000330011000117001080010800057000550000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001050000000000hI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!7");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "OTAwMDc4MDAxMTcwMDEwODAwMTA4MDAxMTAwMDExNzAwMTA4MDAxMDgwMDExMDAwMTE3MDAxMDgwMDEwODAwMTEwMDAxMTcwMDEwODAwMTA4MDAxMTAwMDExNzAwMTA4MDAxMDgwMDExMDAwMTE3MDAxMDgwMDEwODAwMTEwMDAxMTcwMDEwODAwMTA4MDAxMTAwMDExNzAwMTA4MDAxMDgwMDExMDAwMTE3MDAxMDgwMDEwODAwMTEwMDAxMTcwMDEwODAwMTA4MDAxMTAwMDExNzAwMTA4MDAxMDgwMDExMDAwMTE3MDAxMDgwMDEwODAwMTEwMDAxMTcwMDEwODAwMTA4MDAxMTAwMDExNzAwMTA4MDAxMDgwMDExMDAwMTE3MDAxMDgwMDEwODAwMTEwMDAxMTcwMDEwODAwMTA4MDAxMTAwMDExNzAwMTA4MDAxMDgwMDExMDAwMTE3MDAxMDgwMDEwODAwMTEwMDAxMTcwMDEwODAwMTA4MDAxMTAwMDExNzAwMTA4MDAxMDgwMDExMDAwMTE3MDAxMDgwMDEwODAwMTEwMDAxMTcwMDEwODAwMTA4MDAxMTAwMDExNzAwMTA4MDAxMDgwMDExMDAwMTE3MDAxMDgwMDEwODAwMTEwMDAxMTcwMDEwODAwMTA4MDAxMTAwMDExNzAwMTA4MDAxMDgwMDExMDAwMTE3MDAxMDgwMDEwODAwMTEwMDAxMTcwMDEwODAwMTA4MDAxMTAwMDExNzAwMTA4MDAxMDgwMDExMDAwMTE3MDAxMDgwMDEwODAwMTEwMDAxMTcwMDEwODAwMTA4MDAxMTAwMDExNzAwMTA4MDAxMDgwMDExMDAwMTE3MDAxMDgwMDEwODAwMTEwMDAxMTcwMDEwODAwMTA4MDAxMTAwMDExNzAwMTA4MDAxMDgwMDExMDAwMTE3MDAxMDgwMDEwODAwMTEwMDAxMTcwMDEwODAwMTA4MDAxMTAwMDExNzAwMTA4MDAxMDgwMDExMDAwMTE3MDAxMDgwMDEwODAwMTEwMDAxMTcwMDEwODAwMTA4MDAxMTAwMDExNzAwMTA4MDAxMDgwMDExMDAwMTE3MDAxMDgwMDEwODAwMTEwMDAxMTcwMDEwODAwMTA4MDAxMTAwMDExNzAwMTA4MDAxMDgwMDExMDAwMTE3MDAxMDgwMDEwODAwMTEwMDAxMTcwMDEwODAwMTA4MDAxMTAwMDExNzAwMTA4MDAxMDgwMDExMDAwMTE3MDAxMDgwMDEwODAwMTEwMDAxMTcwMDEwODAwMTA4MDAwNTcwMDA1NTAwMDc4MDAxMTAwMDExNzAwMTA4MDAxMDgwMDA1NzAwMDU1MDAwODUwMDExMDAwMTE3MDAxMDgwMDEwODAwMDU3MDAwNTUwMDA3NjAwMTEwMDAxMTcwMDEwODAwMTA4MDAwNTcwMDA1NTAwMDc2MDAxMTAwMDExNzAwMTA4MDAxMDgwMDA1NzAwMDU1MDAwNTcwMDExMDAwMTE3MDAxMDgwMDEwODAwMDU3MDAwNTUwMDA1NTAwMTEwMDAxMTcwMDEwODAwMTA4MDAwNTcwMDA1NTAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTEwMDAxMTcwMDEwODAwMTA4MDAwNTcwMDA1NTAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMTA0MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDEwNTAwMDAwMDAwMDBoSSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSE3" + "'", str1.equals("OTAwMDc4MDAxMTcwMDEwODAwMTA4MDAxMTAwMDExNzAwMTA4MDAxMDgwMDExMDAwMTE3MDAxMDgwMDEwODAwMTEwMDAxMTcwMDEwODAwMTA4MDAxMTAwMDExNzAwMTA4MDAxMDgwMDExMDAwMTE3MDAxMDgwMDEwODAwMTEwMDAxMTcwMDEwODAwMTA4MDAxMTAwMDExNzAwMTA4MDAxMDgwMDExMDAwMTE3MDAxMDgwMDEwODAwMTEwMDAxMTcwMDEwODAwMTA4MDAxMTAwMDExNzAwMTA4MDAxMDgwMDExMDAwMTE3MDAxMDgwMDEwODAwMTEwMDAxMTcwMDEwODAwMTA4MDAxMTAwMDExNzAwMTA4MDAxMDgwMDExMDAwMTE3MDAxMDgwMDEwODAwMTEwMDAxMTcwMDEwODAwMTA4MDAxMTAwMDExNzAwMTA4MDAxMDgwMDExMDAwMTE3MDAxMDgwMDEwODAwMTEwMDAxMTcwMDEwODAwMTA4MDAxMTAwMDExNzAwMTA4MDAxMDgwMDExMDAwMTE3MDAxMDgwMDEwODAwMTEwMDAxMTcwMDEwODAwMTA4MDAxMTAwMDExNzAwMTA4MDAxMDgwMDExMDAwMTE3MDAxMDgwMDEwODAwMTEwMDAxMTcwMDEwODAwMTA4MDAxMTAwMDExNzAwMTA4MDAxMDgwMDExMDAwMTE3MDAxMDgwMDEwODAwMTEwMDAxMTcwMDEwODAwMTA4MDAxMTAwMDExNzAwMTA4MDAxMDgwMDExMDAwMTE3MDAxMDgwMDEwODAwMTEwMDAxMTcwMDEwODAwMTA4MDAxMTAwMDExNzAwMTA4MDAxMDgwMDExMDAwMTE3MDAxMDgwMDEwODAwMTEwMDAxMTcwMDEwODAwMTA4MDAxMTAwMDExNzAwMTA4MDAxMDgwMDExMDAwMTE3MDAxMDgwMDEwODAwMTEwMDAxMTcwMDEwODAwMTA4MDAxMTAwMDExNzAwMTA4MDAxMDgwMDExMDAwMTE3MDAxMDgwMDEwODAwMTEwMDAxMTcwMDEwODAwMTA4MDAxMTAwMDExNzAwMTA4MDAxMDgwMDExMDAwMTE3MDAxMDgwMDEwODAwMTEwMDAxMTcwMDEwODAwMTA4MDAxMTAwMDExNzAwMTA4MDAxMDgwMDExMDAwMTE3MDAxMDgwMDEwODAwMTEwMDAxMTcwMDEwODAwMTA4MDAxMTAwMDExNzAwMTA4MDAxMDgwMDExMDAwMTE3MDAxMDgwMDEwODAwMTEwMDAxMTcwMDEwODAwMTA4MDAwNTcwMDA1NTAwMDc4MDAxMTAwMDExNzAwMTA4MDAxMDgwMDA1NzAwMDU1MDAwODUwMDExMDAwMTE3MDAxMDgwMDEwODAwMDU3MDAwNTUwMDA3NjAwMTEwMDAxMTcwMDEwODAwMTA4MDAwNTcwMDA1NTAwMDc2MDAxMTAwMDExNzAwMTA4MDAxMDgwMDA1NzAwMDU1MDAwNTcwMDExMDAwMTE3MDAxMDgwMDEwODAwMDU3MDAwNTUwMDA1NTAwMTEwMDAxMTcwMDEwODAwMTA4MDAwNTcwMDA1NTAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTA0MDAxMDUwMDAzMzAwMTEwMDAxMTcwMDEwODAwMTA4MDAwNTcwMDA1NTAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMTA0MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDEwNTAwMDAwMDAwMDBoSSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSE3"));
    }

    @Test
    public void test396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test396");
        java.lang.String str2 = strman.Strman.removeRight("000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97nnull97unull97lnull97lnull979null977null97n_u_l_l97n_n_u_l_l97u_n_u_l_l97l_n_u_l_l97l_n_u_l_l979_n_u_l_l977_n_u_l_l97", "000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97_nnull97_unull97_lnull97_lnull979null977null97hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e!");
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97nnull97unull97lnull97lnull979null977null97n_u_l_l97n_n_u_l_l97u_n_u_l_l97l_n_u_l_l97l_n_u_l_l979_n_u_l_l977_n_u_l_l97" + "'", str2.equals("000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97nnull97unull97lnull97lnull979null977null97n_u_l_l97n_n_u_l_l97u_n_u_l_l97l_n_u_l_l97l_n_u_l_l979_n_u_l_l977_n_u_l_l97"));
    }

    @Test
    public void test397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test397");
        java.lang.String str2 = strman.Strman.toDecamelize("48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101Nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull", "Ihi_hhi-hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101");
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101Ihi_hhi-hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull" + "'", str2.equals("48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101Ihi_hhi-hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull"));
    }

    @Test
    public void test398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test398");
        java.util.Optional<java.lang.String> strOptional1 = strman.Strman.trimStartd0078005f0077005f0074005f0076005f0072005f0066005f006e005f0076005f007a005f0075005f0072005f00780068005f0070005f0076006c005f00760034005f0074005f0076005f00720073005f0076006b0031005f0075005f0072005f0074005f0076005f0077005f0076005f0065005f00760034005f00740031005f007a005f00760065005f00650031005f00750062005f0066005f007a005f006e005f0076005f0065005f00750031005f0076006c005f0072005f00660065005f00650039005f0077005f0076005f00780068005f006e005f0076005f00670078005f0077005f0074005f0076005f0072005f0066005f006e005f0076005f007a005f0075005f0072005f00780068005f0070005f0076006c005f00760034005f0074005f0076005f00720073005f0076006b0031005f0075005f0072005f0074005f0076005f0077005f0076005f0065005f00760034005f00740031005f007a005f00760065005f00650031005f00750062005f0066005f007a005f006e005f0076005f0065005f00750031005f0076006c005f0072005f00660065005f00650039005f0077005f0076005f00780068005f006e005f0076005f00670078005f0077005f0074005f0076005f0072005f0066005f006e005f0076005f007a005f0075005f0072005f00780068005f0070005f0076006c005f00760034005f0074005f0076005f00720073005f0076006b0031005f0075005f0072005f0074005f0076005f0077005f0076005f0065005f00760034005f00740031005f007a005f00760065005f00650031005f00750062005f0066005f007a005f006e005f0076005f0065005f00750031005f0076006c005f0072005f00660065005f00650039005f0077005f0076005f00780068005f006e005f0076005f00670078005f0077005f0074005f0076005f0072005f0066005f006e005f0076005f007a005f0075005f0072005f00780068005f0070005f0076006c005f00760034005f0074005f0076005f00720073005f0076006b0031005f0075005f0072005f0074005f0076005f0077005f0076005f0065005f00760034005f00740031005f007a005f00760065005f00650031005f00750062005f0066005f007a005f006e005f0076005f0065005f00750031005f0076006c005f0072005f00660065005f00650039005f0077005f0076005f00780068005f006e005f0076005f00670078005f0077005f0074005f0076005f0072005f0066005f006e005f0076005f007a005f0075005f0072005f00780068005f0070005f0076006c005f00760034005f0074005f0076005f00720073005f0076006b0031005f0075005f0072005f0074005f0076005f0077005f0076005f0065005f00760034005f00740031005f007a005f00760065005f00650031005f00750062005f0066005f007a005f006e005f0076005f0065005f00750031005f0076006c005f0072005f00660065005f00650039005f0077005f0076005f00780068005f006e005f0076005f00670078005f0077005f0074005f0076005f0072005f0066005f006e005f0076005f007a005f0075005f0072005f00780068005f0070005f0076006c005f00760034005f0074005f0074005f00610077005f006d005f0064005f00610077005f006d005f0064005f00610077005f006e005f0074005f00750077005f006d005f0064005f00610077005f006d005f0064005f00610077005f006d005f0064005f00750033005f006d005f0064005f00610077005f006d005f0064005f00610077005f006d005f0064005f00610033005f006e006a005f00610077005f006d005f0064005f00610077005f006d005f0064005f00610077005f006e007a005f00790077005f006d005f0064005f00610077005f006d005f0064005f00610077005f006d005f006400670031005f006d005f0064005f00610077005f006d005f0064005f00610077005f006d005f0064005f00610033005f006f005f0064005f00610077005f006d005f0064005f00610077005f006d005f0064005f00610077005f006e005f0074005f00750077005f006d005f0064005f00610077005f006d005f0064005f00610077005f006d005f0064005f00750031005f006d005f0064005f00610077005f006d005f0064005f00610077005f006d005f0064005f00610031005f006e007a005f00610077005f006d005f0064005f00610077005f006d005f0064005f00610077005f006e007a005f00790077005f006d005f0064005f00610077005f006d005f0064005f00610077005f006d005f006400630032005f006d005f0064005f00610077005f006d005f0064005f00610077005f006d005f0064005f00610034005f006e005f0074005f00610077005f006d005f0064005f00610077005f006d005f0064005f00610077005f006e007a00670077005f006d005f0064005f00610077005f006d005f0064005f00610077005f006d005f0064005f00750033005f006d005f0064005f00610077005f006d005f0064005f00610077005f006d005f0064005f00610031005f006e005f0074005f00610077005f006d005f0064005f00610077005f006d005f0064005f00610077005f006e005f007400630077005f006d005f0064005f00610077005f006d005f0064005f00610077005f006d005f006400630032005f006d005f0064005f00610077005f006d005f0064005f00610077005f006d005f0064005f00610033005f006e006a005f00610077005f006d005f0064005f00610077005f006d005f0064005f00610077005f006f005f0064005f00750077005f006d005f0064005f00610077005f006d005f0064005f00610077005f006d005f006400630034005f006d005f0064005f00610077005f006d005f0064005f00610077005f006d005f0064005f00650077005f006f005f0064005f00610077005f006d005f0064005f00610077005f006d005f0064005f00610077005f006e005f0074005f00750077005f006d005f0064005f00610077005f006d005f0064005f00610077005f006d005f0064005f00750033005f006d005f0064005f00610077005f006d005f0064005f00610077005f006d005f0064005f00610033005f006e006a005f00610077005f006d005f0064005f00610077005f006d005f0064005f00610077005f006e007a005f00790077005f006d005f0064005f00610077005f006d005f0064005f00610077005f006d005f006400670031005f006d005f0064005f00610077005f006d005f0064005f00610077005f006d005f0064005f00610033005f006f005f0064005f00610077005f006d005f0064005f00610077005f006d005f0064005f00610078005f006d005f006400670077005f006d005f0064005f00610077005f006d005f0064005f00610077005f006d005f0064005f00750031005f006d005f0064005f00610077005f006d005f0064005f00610077005f006d005f0064005f00610031005f006e007a005f00610077005f006d005f0064005f00610077005f006d005f0064005f00610077005f006e007a005f00790077005f006d005f0064005f00610077005f006d005f0064005f00610077005f006d005f006400630032005f006d005f0064005f00610077005f006d005f0064005f00610077005f006d005f0064005f00610034005f006e005f0074005f00610077005f006d005f0064005f00610077005f006d005f0064005f00610077005f006e007a00670077005f006d005f0064005f00610077005f006d005f0064005f00610077005f006d005f0074005f00650033005f006d005f0064005f00610077005f006d005f0064005f00610077005f006d005f0064005f00610031005f006e005f0074005f00610077005f006d005f0064005f00610077005f006d005f0064005f00610077005f006e005f007400630077005f006d005f0064005f00610077005f006d005f0064005f00610077005f006d005f006400630032005f006d005f0064005f00610077005f006d005f0064005f00610077005f006d005f0064005f00610033005f006e006a005f00610077005f006d005f0064005f00610077005f006d005f0064005f00610077005f006f005f0064005f00750077005f006d005f0064005f00610077005f006d005f0064005f00610077005f006d005f006400630034005f006d005f0064005f00610077005f006d005f0064005f00610077005f006d005f0064005f00650078005f006d005f0064005f00610077005f006d005f0064005f00610077005f006d005f0064005f00610077005f006e005f0074005f00750077005f006d005f0064005f00610077005f006d005f0064005f00610077005f006d005f0064005f00750033005f006d005f0064005f00610077005f006d005f0064005f00610077005f006d005f0064005f00610033005f006e006a005f00610077005f006d005f0064005f00610077005f006d005f0064005f00610077005f006e007a005f00790077005f006d005f0064005f00610077005f006d005f0064005f00610077005f006d005f006400670031005f006d005f0064005f00610077005f006d005f0064005f00610077005f006d005f0064005f00610033005f006f005f0067006800700061005f0067006b003d");
        org.junit.Assert.assertNotNull(strOptional1);
    }

    @Test
    public void test399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test399");
        java.lang.String str1 = strman.Strman.upperFirst("!ihnullhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "!ihnullhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!" + "'", str1.equals("!ihnullhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!"));
    }

    @Test
    public void test400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test400");
        java.lang.String[] strArray3 = strman.Strman.lines("hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!");
        java.lang.String str4 = strman.Strman.prepend("null97", strArray3);
        java.lang.String str6 = strman.Strman.join(strArray3, "006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037Null");
        java.lang.String[] strArray7 = strman.Strman.removeEmptyStrings(strArray3);
        boolean boolean9 = strman.Strman.containsAny("nullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037Hihinullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037Hihinullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037Hihinullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037Hihinullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037Hihinullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037Hihinullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037Hihinullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037Hihinullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037Hihinullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037Hihi", strArray3, true);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97" + "'", str4.equals("hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97"));
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!" + "'", str6.equals("hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!"));
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test401");
        int int4 = strman.Strman.lastIndexOf("Hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!blVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxM", "MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA0ZTAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwNTUwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDRjMDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA0YzAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwMzkwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3", (-1), false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
    }

    @Test
    public void test402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test402");
        java.lang.String str1 = strman.Strman.lowerFirst("mw-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-null97nnul");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "mw-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-null97nnul" + "'", str1.equals("mw-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-null97nnul"));
    }

    @Test
    public void test403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test403");
        long long4 = strman.Strman.countSubstrnULL97HIHIHI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!NULL97HI!NNULL97HIHIHI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!NULL97HI!UNULL97HIHIHI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!NULL97HI!LNULL97HIHIHI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!NULL97HI!LNULL979NULL977NULL97", false, true);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
    }

    @Test
    public void test404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test404");
        java.lang.String str1 = strman.Strman.underscored("000490004800057000550004800048000480005500056000480004800049000490005500048000480004900048000560004800048000490004800056000480004800048000530005500048000480004800053000530004800048000490004900048000480004800049000490004800048000480004900049000550004800048000490004800056");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "000490004800057000550004800048000480005500056000480004800049000490005500048000480004900048000560004800048000490004800056000480004800048000530005500048000480004800053000530004800048000490004900048000480004800049000490004800048000480004900049000550004800048000490004800056" + "'", str1.equals("000490004800057000550004800048000480005500056000480004800049000490005500048000480004900048000560004800048000490004800056000480004800048000530005500048000480004800053000530004800048000490004900048000480004800049000490004800048000480004900049000550004800048000490004800056"));
    }

    @Test
    public void test405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test405");
        java.lang.String[] strArray5 = strman.Strman.words("1", "");
        java.lang.String str6 = strman.Strman.prependArray("null97null97Nnull97Unull97Lnull97Lnull979null977null97", strArray5);
        java.lang.String str7 = strman.Strman.format("hi-hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101ihiH", strArray5);
        java.lang.Class<?> wildcardClass8 = strArray5.getClass();
        java.lang.String str9 = strman.Strman.prepend("nullhi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e0000000001001000000000000110100100680069002d0068006900340038003400380035003100350035003400380034003800350031003500370034003800340038003500340039003900340038003400380035003400390039003400380034003800350035003500330034003800340038003500340031003000310034003800048000480004800048000490011200048000480004800048000490011400048000480004800048000510010500048000480004800048000510010500048000480004800048000510011400048000480004800048000510010700048000480004800048000490011200048000480004800048000490011200048000480004800048000490011400048000480004800048000510010500048000480004800048000510010500048000480004800048000510011400048000480004800048000510010700048000480004800048000490011400048000480004800048000490011200048000480004800048000490011400048000480004800048000510010500048000480004800048000510010500048000480004800048000510011400048000480004800048000510010700048000480004800048000510010500048000480004800048000490011200048000480004800048000490011400048000480004800048000510010500048000480004800048000510010500048000480004800048000510011400048000480004800048000510010700048000480004800048000510010500048000480004800048000490011200048000480004800048000490011400048000480004800048000510010500048000480004800048000510010500048000480004800048000510011400048000480004800048000510010700048000480004800048000510011400048000480004800048000490011200048000480004800048000490011400048000480004800048000510010500048000480004800048000510010500048000480004800048000510011400048000480004800048000510010700048000480004800048000510010700048000480004800048000490011200048000480004800048000490011400048000480004800048000510010500048000480004800048000510010500048000480004800048000510011400048000480004800048000510010700048000480004800048000490011200048000480004800048000490011400048000480004800048000510010500048000480004800048000510010500048000480004800048000510011400048000480004800048000510010700048000480004800048000490011200048000480004800048000490011200048000480004800048000490011400048000480004800048000510010500048000480004800048000510010500048000480004800048000510011400048000480004800048000510010700048000480004800048000490011400048000480004800048000490011200048000480004800048000490011400048000480004800048000510010500048000480004800048000510010500048000480004800048000510011400048000480004800048000510010700048000480004800048000510010500048000480004800048000490011200048000480004800048000490011400048000480004800048000510010500048000480004800048000510010500048000480004800048000510011400048000480004800048000510010700048000480004800048000510010500048000480004800048000490011200048000480004800048000490011400048000480004800048000510010500048000480004800048000510010500048000480004800048000510011400048000480004800048000510010700048000480004800048000510011400048000480004800048000490011200048000480004800048000490011400048000480004800048000510010500048000480004800048000510010500048000480004800048000510011400048000480004800048000510010700048000480004800048000510010700048000480004800048000490011200048000480004800048000490011400048000480004800048000510010500048000480004800048000510010500048000480004800048000510011400048000480004800048000510010700340038003500310035003500340038003400380035003100350035003400380034003800350031003500370034003800340038003500340039003900340038003400380035003400390039003400380034003800350035003500330034003800340038003500340031003000310034003800340038003500310035003700340038003400380035003100350035003400380034003800350031003500370034003800340038003500340039003900340038003400380035003400390039003400380034003800350035003500330034003800340038003500340031003000310034003800340038003500320039003900340038003400380035003100350035003400380034003800350031003500370034003800340038003500340039003900340038003400380035003400390039003400380034003800350035003500330034003800340038003500340031003000310034003800340038003500320039003900340038003400380035003100350035003400380034003800350031003500370034003800340038003500340039003900340038003400380035003400390039003400380034003800350035003500330034003800340038003500340031003000310034003800340038003500330035003300340038003400380035003100350035003400380034003800350031003500370034003800340038003500340039003900340038003400380035003400390039003400380034003800350035003500330034003800340038003500340031003000310034003800340038003500320031003000310034003800340038003500310035003500340038003400380035003100350037003400380034003800350034003900390034003800340038003500340039003900340038003400380035003500350033003400380034003800350034003100300031003000300030003000300030003000300030003100300030003100300030003000300030003000300030003000300030003000310031003000310030003000314911011710810857551101171081085755781101171087885767657557878857633105104", strArray5);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "1null97null97Nnull97Unull97Lnull97Lnull979null977null97" + "'", str6.equals("1null97null97Nnull97Unull97Lnull97Lnull979null977null97"));
        org.junit.Assert.assertTrue("'" + str7 + "' != '" + "hi-hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101ihiH" + "'", str7.equals("hi-hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101ihiH"));
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + str9 + "' != '" + "1nullhi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e0000000001001000000000000110100100680069002dstr9.equals("1nullhi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e0000000001001000000000000110100100680069002d
    }

    @Test
    public void test406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test406");
        boolean boolean2 = strman.Strman.isEnclosedBetween("000780011700108001080005700055000780011000117001080010800057000550008500110001170010800108000570005500076001100011700108001080005700055000760011000117001080010800057000550005700110001170010800108000570005500055001100011700108001080005700055hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hinullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULL1null97null97NnulNULL97NNUL!ih");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test407");
        boolean boolean1 = strman.Strman.isUpperCasehihi");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
    }

    @Test
    public void test408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test408");
        int int1 = strman.Strman.length("n_u_l_l97_n_ullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1243 + "'", int1 == 1243);
    }

    @Test
    public void test409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test409");
        boolean boolean2 = strman.Strman.endsWith("nullhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!", "ihi_h");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test410");
        java.lang.String str1 = strman.Strman.toSnakeCase("hi-hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "hi_hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101" + "'", str1.equals("hi_hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101"));
    }

    @Test
    public void test411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test411");
        int int1 = strman.Strman.length("79llun779llun979llunL79llunL79llunU79llunN79llun79llun001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000ih");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 296 + "'", int1 == 296);
    }

    @Test
    public void test412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test412");
        java.lang.String[] strArray4 = new java.lang.String[] {};
        java.util.List<java.lang.String> strList5 = strman.Strman.zip(strArray4);
        boolean boolean7 = strman.Strman.containsAny("", strArray4, true);
        boolean boolean9 = strman.Strman.containsAny("hi!hi!", strArray4, true);
        boolean boolean11 = strman.Strman.containsAll("10", strArray4, false);
        boolean boolean12 = strman.Strman.containsAll("Null97Nnull97Unull97Lnull97Lnull979null977null97", strArray4);
        java.lang.Class<?> wildcardClass13 = strArray4.getClass();
        boolean boolean14 = strman.Strman.isString((java.lang.Object) wildcardClass13);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test413");
        java.lang.String[] strArray3 = strman.Strman.between("hihiHI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-NULL97HI-00370039006C006C0075006E003700370039006C006C0075006E003900370039006C006C0075006E004C00370039006C006C0075006E004C00370039006C006C0075006E005500370039006C006C0075006E004E00370039006C006C0075006E", "hiih79llun-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ihhi4848515548485157484854994848549948485553484854101484851554848515548485157484854994848549948485553484854101484851574848515548485157484854994848549948485553484854101484852994848515548485157484854994848549948485553484854101484852994848515548485157484854994848549948485553484854101484853534848515548485157484854994848549948485553484854101484852101484851554848515748485499484854994848555348485410100000000010010000000000001101001", "nullnullnullnullnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexcl");
        org.junit.Assert.assertNotNull(strArray3);
    }

    @Test
    public void test414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test414");
        java.lang.String str3 = strman.Strman.leftPad("", "hihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi_h", 7656);
    }

    @Test
    public void test415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test415");
        java.lang.String str1 = strman.Strman.rightTrim("nullHI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!4911011710810857551101171081085755951101101171081085755951171101171081085755951081101171081085755951081101171081085755571101171081085755551101171081085755");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "nullHI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!4911011710810857551101171081085755951101101171081085755951171101171081085755951081101171081085755951081101171081085755571101171081085755551101171081085755" + "'", str1.equals("nullHI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!4911011710810857551101171081085755951101101171081085755951171101171081085755951081101171081085755951081101171081085755571101171081085755551101171081085755"));
    }

    @Test
    public void test416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test416");
        java.lang.String str3 = strman.Strman.leftPad("10145848435558484994584849945848475158484551584841012584841014584843555848499458484994584847515848455158484353584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484751584841014584843555848499458484994584847515848455158484551584841014584843555848499458484994584847515848455158484ih-ihh-ih-i", "nIHI97HHI97HI48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101uIHI97HHI97HI48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101lIHI97HHI97HI48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101l", 404);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "nIHI97HHI97HI48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101uIHI97HHI97HI48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101lIHI97HHI97HI48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101l10145848435558484994584849945848475158484551584841012584841014584843555848499458484994584847515848455158484353584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484751584841014584843555848499458484994584847515848455158484551584841014584843555848499458484994584847515848455158484ih-ihh-ih-i" + "'", str3.equals("nIHI97HHI97HI48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101uIHI97HHI97HI48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101lIHI97HHI97HI48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101l10145848435558484994584849945848475158484551584841012584841014584843555848499458484994584847515848455158484353584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484751584841014584843555848499458484994584847515848455158484551584841014584843555848499458484994584847515848455158484ih-ihh-ih-i"));
    }

    @Test
    public void test417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test417");
        java.lang.String[] strArray2 = strman.Strman.lines("hi!hi!");
        boolean boolean3 = strman.Strman.containsAll("hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97", strArray2);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
    }

    @Test
    public void test418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test418");
        java.lang.String[] strArray1 = null;
        try {
            java.util.Optional<java.lang.String> strOptional2 = strman.Strman.trimEnd("79llun779llun979llunL79llunL79llunU79llunN79llun", strArray1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Input array 'strings' can't be null");
        } catch (java.lang.IllegalArgumentException e) {
        }
    }

    @Test
    public void test419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test419");
        java.lang.String str1 = strman.Strman.collapseWhitespace("nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull&UnderBar;nullMDAxMTAxMTAwMDAwMDAwMDEwMTAxMTEwMDAwMDAwMDAwMTExMDExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDAxMDAxMTEwMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAxMDEwMTExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDEwMDEwMTEwMDAwMDAwMDAwMDAxMDExMDAwMDAwMDAwMTAxMTAxMDAwMDAwMDAwMDEwMDEwMTEwMDAwMDAwMDAwMDAxMDExMDAwMDAwMDAwaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaS1oihi\\-hhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull&UnderBar;nullMDAxMTAxMTAwMDAwMDAwMDEwMTAxMTEwMDAwMDAwMDAwMTExMDExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDAxMDAxMTEwMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAxMDEwMTExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDEwMDEwMTEwMDAwMDAwMDAwMDAxMDExMDAwMDAwMDAwMTAxMTAxMDAwMDAwMDAwMDEwMDEwMTEwMDAwMDAwMDAwMDAxMDExMDAwMDAwMDAwaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaS1oihi\\-hhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!" + "'", str1.equals("nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull&UnderBar;nullMDAxMTAxMTAwMDAwMDAwMDEwMTAxMTEwMDAwMDAwMDAwMTExMDExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDAxMDAxMTEwMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAxMDEwMTExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDEwMDEwMTEwMDAwMDAwMDAwMDAxMDExMDAwMDAwMDAwMTAxMTAxMDAwMDAwMDAwMDEwMDEwMTEwMDAwMDAwMDAwMDAxMDExMDAwMDAwMDAwaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaS1oihi\\-hhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!"));
    }

    @Test
    public void test420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test420");
        java.lang.String str1 = strman.Strman.startCase("Sgloa Wloa V9oa Glfa Gk0odq4nte1ntq4ndg1mtu3ndg0odu0otk0odq4ntq5otq4ndg1ntuz Ndg0odu0mtax Ndg0odux Ntu0odq4nte1ntq4ndg1mtu3ndg0odu0otk0odq4ntq5otq4ndg1ntuz Ndg0odu0mtax Ndg0odux Ntc0odq4nte1ntq4ndg1mtu3ndg0odu0otk0odq4ntq5otq4ndg1ntuz Ndg0odu0mtax Ndg0oduy Otk0odq4nte1ntq4ndg1mtu3ndg0odu0otk0odq4ntq5otq4ndg1ntuz Ndg0odu0mtax Ndg0oduy Otk0odq4nte1ntq4ndg1mtu3ndg0odu0otk0odq4ntq5otq4ndg1ntuz Ndg0odu0mtax Ndg0oduz Ntm0odq4nte1ntq4ndg1mtu3ndg0odu0otk0odq4ntq5otq4ndg1ntuz Ndg0odu0mtax Ndg0oduy Mtax Ndg0odux Ntu0odq4nte1nz Q4ndg1ndk5ndg0odu0otk0odq4ntu1mz Q4ndg1ndew Mq==hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!000000000100111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000005500000000570000000076000000007600000000850000000078000000005500000000550000000057000000007600000000760000000085000000007800000000570000000055000000005700000000760000000076000000008500000000780000000108000000005500000000570000000076000000007600000000850000000078000000010800000000550000000057000000007600000000760000000085000000007800000001170000000055000000005700000000760000000076000000008500000000780000000110000000005500000000570000000076000000007600000000850000000078hihi");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "Sgloa Wloa V9oa Glfa Gk0odq4nte1ntq4ndg1mtu3ndg0odu0otk0odq4ntq5otq4ndg1ntuz Ndg0odu0mtax Ndg0odux Ntu0odq4nte1ntq4ndg1mtu3ndg0odu0otk0odq4ntq5otq4ndg1ntuz Ndg0odu0mtax Ndg0odux Ntc0odq4nte1ntq4ndg1mtu3ndg0odu0otk0odq4ntq5otq4ndg1ntuz Ndg0odu0mtax Ndg0oduy Otk0odq4nte1ntq4ndg1mtu3ndg0odu0otk0odq4ntq5otq4ndg1ntuz Ndg0odu0mtax Ndg0oduy Otk0odq4nte1ntq4ndg1mtu3ndg0odu0otk0odq4ntq5otq4ndg1ntuz Ndg0odu0mtax Ndg0oduz Ntm0odq4nte1ntq4ndg1mtu3ndg0odu0otk0odq4ntq5otq4ndg1ntuz Ndg0odu0mtax Ndg0oduy Mtax Ndg0odux Ntu0odq4nte1nz Q4ndg1ndk5ndg0odu0otk0odq4ntu1mz Q4ndg1ndew Mq==hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hihihi" + "'", str1.equals("Sgloa Wloa V9oa Glfa Gk0odq4nte1ntq4ndg1mtu3ndg0odu0otk0odq4ntq5otq4ndg1ntuz Ndg0odu0mtax Ndg0odux Ntu0odq4nte1ntq4ndg1mtu3ndg0odu0otk0odq4ntq5otq4ndg1ntuz Ndg0odu0mtax Ndg0odux Ntc0odq4nte1ntq4ndg1mtu3ndg0odu0otk0odq4ntq5otq4ndg1ntuz Ndg0odu0mtax Ndg0oduy Otk0odq4nte1ntq4ndg1mtu3ndg0odu0otk0odq4ntq5otq4ndg1ntuz Ndg0odu0mtax Ndg0oduy Otk0odq4nte1ntq4ndg1mtu3ndg0odu0otk0odq4ntq5otq4ndg1ntuz Ndg0odu0mtax Ndg0oduz Ntm0odq4nte1ntq4ndg1mtu3ndg0odu0otk0odq4ntq5otq4ndg1ntuz Ndg0odu0mtax Ndg0oduy Mtax Ndg0odux Ntu0odq4nte1nz Q4ndg1ndk5ndg0odu0otk0odq4ntu1mz Q4ndg1ndew Mq==hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!000000000100111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000005500000000570000000076000000007600000000850000000078000000005500000000550000000057000000007600000000760000000085000000007800000000570000000055000000005700000000760000000076000000008500000000780000000108000000005500000000570000000076000000007600000000850000000078000000010800000000550000000057000000007600000000760000000085000000007800000001170000000055000000005700000000760000000076000000008500000000780000000110000000005500000000570000000076000000007600000000850000000078hihi"));
    }

    @Test
    public void test421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test421");
        java.lang.String str3 = strman.Strman.rightPad("==abs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnb", "!-h-i!-h-i!-h-i!", 656);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "==abs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnb!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!" + "'", str3.equals("==abs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnb!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!"));
    }

    @Test
    public void test422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test422");
        boolean boolean2 = strman.Strman.unequal("", "Null97n uLLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULL");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
    }

    @Test
    public void test423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test423");
        boolean boolean1 = strman.Strman.isUpperCase("Mw==Hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!null97Nnul");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
    }

    @Test
    public void test424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test424");
        java.lang.String str1 = strman.Strman.upperFirst("hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "Hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100" + "'", str1.equals("Hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100"));
    }

    @Test
    public void test425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test425");
        boolean boolean1 = strman.Strman.isBlank("N u l l97 n n u lhi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi null97hi null97nnul hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!null97 nnulHI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-NULL97HI-00370039006C006C0075006E003700370039006C006C0075006E003900370039006C006C0075006E004C00370039006C006C0075006E004C00370039006C006C0075006E005500370039006C006C0075006E004E00370039006C006C0075006E7210533hi!hi!hi!hi!hi!hi!hi!hi!hi!hn-ullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnulli!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!Hihi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_null97hi00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006ehi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
    }

    @Test
    public void test426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test426");
        boolean boolean2 = strman.Strman.isEnclosedBetween("NULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULL", "97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97null97");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test427");
        java.lang.String str1 = strman.Strman.collapseWhitespace("YmxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TTAwMDAwMDAwNTUwMDAwMDAwMDU3MDAwMDAwMDA3NjAwMDAwMDAwNzYwMDAwMDAwMDg1MDAwMDAwMDA3ODAwMDAwMDAwNTUwMDAwMDAwMDU1MDAwMDAwMDA1NzAwMDAwMDAwNzYwMDAwMDAwMDc2MDAwMDAwMDA4NTAwMDAwMDAwNzgwMDAwMDAwMDU3MDAwMDAwMDA1NTAwMDAwMDAwNTcwMDAwMDAwMDc2MDAwMDAwMDA3NjAwMDAwMDAwODUwMDAwMDAwMDc4MDAwMDAwMDEwODAwMDAwMDAwNTUwMDAwMDAwMDU3MDAwMDAwMDA3NjAwMDAwMDAwNzYwMDAwMDAwMDg1MDAwMDAwMDA3ODAwMDAwMDAxMDgwMDAwMDAwMDU1MDAwMDAwMDA1NzAwMDAwMDAwNzYwMDAwMDAwMDc2MDAwMDAwMDA4NTAwMDAwMDAwNzgwMDAwMDAwMTE3MDAwMDAwMDA1NTAwMDAwMDAwNTcwMDAwMDAwMDc2MDAwMDAwMDA3NjAwMDAwMDAwODUwMDAwMDAwMDc4MDAwMDAwMDExMDAwMDAwMDAwNTUwMDAwMDAwMDU3MDAwMDAwMDA3NjAwMDAwMDAwNzYwMDAwMDAwMDg1MDAwMDAwMDA3OGhpaGk");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "YmxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TTAwMDAwMDAwNTUwMDAwMDAwMDU3MDAwMDAwMDA3NjAwMDAwMDAwNzYwMDAwMDAwMDg1MDAwMDAwMDA3ODAwMDAwMDAwNTUwMDAwMDAwMDU1MDAwMDAwMDA1NzAwMDAwMDAwNzYwMDAwMDAwMDc2MDAwMDAwMDA4NTAwMDAwMDAwNzgwMDAwMDAwMDU3MDAwMDAwMDA1NTAwMDAwMDAwNTcwMDAwMDAwMDc2MDAwMDAwMDA3NjAwMDAwMDAwODUwMDAwMDAwMDc4MDAwMDAwMDEwODAwMDAwMDAwNTUwMDAwMDAwMDU3MDAwMDAwMDA3NjAwMDAwMDAwNzYwMDAwMDAwMDg1MDAwMDAwMDA3ODAwMDAwMDAxMDgwMDAwMDAwMDU1MDAwMDAwMDA1NzAwMDAwMDAwNzYwMDAwMDAwMDc2MDAwMDAwMDA4NTAwMDAwMDAwNzgwMDAwMDAwMTE3MDAwMDAwMDA1NTAwMDAwMDAwNTcwMDAwMDAwMDc2MDAwMDAwMDA3NjAwMDAwMDAwODUwMDAwMDAwMDc4MDAwMDAwMDExMDAwMDAwMDAwNTUwMDAwMDAwMDU3MDAwMDAwMDA3NjAwMDAwMDAwNzYwMDAwMDAwMDg1MDAwMDAwMDA3OGhpaGk" + "'", str1.equals("YmxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TTAwMDAwMDAwNTUwMDAwMDAwMDU3MDAwMDAwMDA3NjAwMDAwMDAwNzYwMDAwMDAwMDg1MDAwMDAwMDA3ODAwMDAwMDAwNTUwMDAwMDAwMDU1MDAwMDAwMDA1NzAwMDAwMDAwNzYwMDAwMDAwMDc2MDAwMDAwMDA4NTAwMDAwMDAwNzgwMDAwMDAwMDU3MDAwMDAwMDA1NTAwMDAwMDAwNTcwMDAwMDAwMDc2MDAwMDAwMDA3NjAwMDAwMDAwODUwMDAwMDAwMDc4MDAwMDAwMDEwODAwMDAwMDAwNTUwMDAwMDAwMDU3MDAwMDAwMDA3NjAwMDAwMDAwNzYwMDAwMDAwMDg1MDAwMDAwMDA3ODAwMDAwMDAxMDgwMDAwMDAwMDU1MDAwMDAwMDA1NzAwMDAwMDAwNzYwMDAwMDAwMDc2MDAwMDAwMDA4NTAwMDAwMDAwNzgwMDAwMDAwMTE3MDAwMDAwMDA1NTAwMDAwMDAwNTcwMDAwMDAwMDc2MDAwMDAwMDA3NjAwMDAwMDAwODUwMDAwMDAwMDc4MDAwMDAwMDExMDAwMDAwMDAwNTUwMDAwMDAwMDU3MDAwMDAwMDA3NjAwMDAwMDAwNzYwMDAwMDAwMDg1MDAwMDAwMDA3OGhpaGk"));
    }

    @Test
    public void test428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test428");
        long long2 = strman.Strman.countSubstrnull97null97-nnull97-unull97-lnull97-lnull979null977null97-hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!-nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull", "null33727333727333727333");
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
    }

    @Test
    public void test429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test429");
        java.lang.String str2 = strman.Strman.removeLeft("00110000850007600076000570005500078000780008500076", "HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!NULL97HI!00370039006C006C0075006E003700370039006C006C0075006E003900370039006C006C0075006E004C00370039006C006C0075006E004C00370039006C006C0075006E005500370039006C006C0075006E004E00370039006C006C0075006E");
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "00110000850007600076000570005500078000780008500076" + "'", str2.equals("00110000850007600076000570005500078000780008500076"));
    }

    @Test
    public void test430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test430");
        java.lang.String str3 = strman.Strman.ensureRight("001040010500110001170010800108000570005500078001100011700108771228561", "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000078000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000780000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000008500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000076", false);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "001040010500110001170010800108000570005500078001100011700108771228561000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000078000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000780000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000008500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000076" + "'", str3.equals("001040010500110001170010800108000570005500078001100011700108771228561000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000078000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000780000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000008500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000076"));
    }

    @Test
    public void test431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test431");
        java.lang.String str3 = strman.Strman.removeRight("Nnullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037hihiullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ihfalse);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "Nnullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037hihiullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih" + "'", str3.equals("Nnullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037hihiullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih"));
    }

    @Test
    public void test432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test432");
        java.lang.String str2 = strman.Strman.ensureRight("Mda2 ztaw nz uw mdzj mda2 yz aw mzkw mdm3nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullMDAxMTAxMTAwMDAwMDAwMDEwMTAxMTEwMDAwMDAwMDAwMTExMDExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDAxMDAxMTEwMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAxMDEwMTExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDEwMDEwMTEwMDAwMDAwMDAwMDAxMDExMDAwMDAwMDAwMTAxMTAxMDAwMDAwMDAwMDEwMDEwMTEwMDAwMDAwMDAwMDAxMDExMDAwMDAwMDAwaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaS1o", "Hi!hi!null97=g2xphwa000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97nnull97unull97lnull97lnull979null977null97hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "Mda2 ztaw nz uw mdzj mda2 yz aw mzkw mdm3nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullMDAxMTAxMTAwMDAwMDAwMDEwMTAxMTEwMDAwMDAwMDAwMTExMDExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDAxMDAxMTEwMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAxMDEwMTExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDEwMDEwMTEwMDAwMDAwMDAwMDAxMDExMDAwMDAwMDAwMTAxMTAxMDAwMDAwMDAwMDEwMDEwMTEwMDAwMDAwMDAwMDAxMDExMDAwMDAwMDAwaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaS1oHi!hi!null97=g2xphwa000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97nnull97unull97lnull97lnull979null977null97hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97histr2.equals("Mda2 ztaw nz uw mdzj mda2 yz aw mzkw mdm3nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullMDAxMTAxMTAwMDAwMDAwMDEwMTAxMTEwMDAwMDAwMDAwMTExMDExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDAxMDAxMTEwMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAxMDEwMTExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDEwMDEwMTEwMDAwMDAwMDAwMDAxMDExMDAwMDAwMDAwMTAxMTAxMDAwMDAwMDAwMDEwMDEwMTEwMDAwMDAwMDAwMDAxMDExMDAwMDAwMDAwaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaS1oHi!hi!null97=g2xphwa000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97nnull97unull97lnull97lnull979null977null97hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi
    }

    @Test
    public void test433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test433");
        boolean boolean1 = strman.Strman.isUpperCase("006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
    }

    @Test
    public void test434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test434");
        java.lang.String str2 = strman.Strman.removeRight("iHIHHIHI48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101", "!ih");
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "iHIHHIHI48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101" + "'", str2.equals("iHIHHIHI48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101"));
    }

    @Test
    public void test435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test435");
        java.lang.String str3 = strman.Strman.surround("=g2xphwA", "", "001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!iH00390037");
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMDQ5MDAwNDgwMDA0ODAwMDQ4MDAwNDkwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ5MDAwNDkwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDkwMDA0OTAwMDQ4MDAwNDgwMDA0ODAwMDQ5MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMDQ5MDAwNDgwMDA0ODAwMDQ4MDAwNDkwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ5MDAwNDkwMDA0ODAwMDQ5MDAwNDkwMDA0OTAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDkwMDA0OTAwMDQ4MDAwNDgwMDA0ODAwMDQ5MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMDQ5MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ5MDAwNDkwMDA0OTAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDkwMDA0OTAwMDQ4MDAwNDgwMDA0ODAwMDQ5MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMDQ5MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ5MDAwNDkwMDA0OTAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDkwMDA0OTAwMDQ4MDAwNDkwMDA0ODAwMDQ5MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMDQ5MDAwNDgwMDA0OTAwMDQ5MDAwNDkwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ5MDAwNDkwMDA0ODAwMDQ5MDAwNDgwMDA0OTAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDkwMDA0OTAwMDQ4MDAwNDkwMDA0ODAwMDQ5MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDkwMDA0ODAwMDQ4MDAwNDkwMDA0OTAwMDQ5MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMDQ5MDAwNDkwMDA0ODAwMDQ5MDAwNDgwMDA0OTAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ5MDAwNDkwMDA0ODAwMDQ5MDAwNDkwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDkwMDA0OTAwMDQ4MDAwNDkwMDA0OTAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ5MDAwNDkwMDA0OTAwMDQ4MDAwNDgwMDA0OTAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDkwMDA0OTAwMDQ4MDAwNDkwMDA0OTAwMDQ5MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDkwMDA0ODAwMDQ4MDAwNDkwMDA0OTAwMDQ5MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMDQ5MDAwNDgwMDA0OTAwMDQ5MDAwNDkwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ5MDAwNDkwMDA0OTAwMDQ4MDAwNDkwMDA0ODAwMDQ5MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDkwMDA0OTAwMDQ4MDAwNDkwMDA0OTAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMDQ5MDAwNDgwMDA0OTAwMDQ5MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDkwMDA0OTAwMDQ5MDAwNDgwMDA0ODAwMDQ5MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMDQ5MDAwNDgwMDA0OTAwMDQ5MDAwNDkwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMDQ4MDAwNDkwMDA0ODAwMDQ5MDAwNDgwMDA0OTAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ5MDAwNDkwMDA0ODAwMDQ5MDAwNDkwMDA0OTAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDkwMDA0OTAwMDQ5MDAwNDgwMDA0OTAwMDQ4MDAwNDkwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMDQ5MDAwNDgwMDA0OTAwMDQ5MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ5MDAwNDkwMDA0ODAwMDQ5MDAwNDkwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMDQ5MDAwNDkwMDA0ODAwMDQ4MDAwNDkwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ5MDAwNDkwMDA0ODAwMDQ5MDAwNDkwMDA0OTAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ5MDAwNDgwMDA0ODAwMDQ5MDAwNDkwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDkwMDA0OTAwMDQ4MDAwNDkwMDA0OTAwMDQ5MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMDQ5MDAwNDkwMDA0ODAwMDQ5MDAwNDgwMDA0OTAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ5MDAwNDkwMDA0ODAwMDQ5MDAwNDkwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDkwMDA0OTAwMDQ4MDAwNDkwMDA0OTAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ5MDAwNDkwMDA0OTAwMDQ4MDAwNDgwMDA0OTAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDkwMDA0OTAwMDQ4MDAwNDkwMDA0OTAwMDQ5MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDkwMDA0ODAwMDQ4MDAwNDkwMDA0OTAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMDQ5MDAwNDgwMDA0OTAwMDQ5MDAwNDkwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ5MDAwNDkwMDA0OTAwMDQ4MDAwNDkwMDA0ODAwMDQ5MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDkwMDA0OTAwMDQ4MDAwNDkwMDA0OTAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMDQ5MDAwNDgwMDA0OTAwMDQ5MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDkwMDA0OTAwMDQ5MDAwNDgwMDA0ODAwMDQ5MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMDQ5MDAwNDgwMDA0OTAwMDQ5MDAwNDkwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ5MDAwNDkwMDA0OTAwMDQ4MDAwNDgwMDA0OTAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ5MDAwNDkwMDA0ODAwMDQ5MDAwNDkwMDA0OTAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDkwMDA0OTAwMDQ5MDAwNDgwMDA0OTAwMDQ4MDAwNDkwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMDQ5MDAwNDgwMDA0OTAwMDQ5MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ5MDAwNDkwMDA0ODAwMDQ5MDAwNDkwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMDQ5MDAwNDkwMDA0ODAwMDQ4MDAwNDkwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ5MDAwNDkwMDA0ODAwMDQ5MDAwNDkwMDA0OTAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDkwMDA0OTAwMDQ4MDAwNDkwMDA0OTAwMDQ5MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDkwMDA0OTAwMDQ4MDAwNDkwMDA0OTAwMDQ5MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMDQ5MDAwNDkwMDA0ODAwMDQ5MDAwNDgwMDA0OTAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ5MDAwNDkwMDA0ODAwMDQ5MDAwNDkwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDkwMDA0OTAwMDQ4MDAwNDkwMDA0OTAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ5MDAwNDkwMDA0OTAwMDQ4MDAwNDgwMDA0OTAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0ODAwMDQ4MDAwNDkwMDA0OTAwMDQ4MDAwNDkwMDA0OTAwMDQ5MDAwNzgwMDA4NTAwMDc2MDAwNzYwMDA1NzAwMDU1MDAwNzgwMDAzMjAwMDg1MDAxMDgwMDEwODAwMTEwMDAxMTcwMDEwODAwMTA4MDAxMTAwMDExNzAwMTA4MDAxMDgwMDExMDAwMTE3MDAxMDgwMDEwODAwMTEwMDAxMTcwMDEwODAwMTA4MDAxMTAwMDExNzAwMTA4MDAxMDgwMDExMDAwMTE3MDAxMDgwMDEwODAwMTEwMDAxMTcwMDEwODAwMTA4MDAxMTAwMDExNzAwMTA4MDAxMDgwMDExMDAwMTE3MDAxMDgwMDEwODAwMTEwMDAxMTcwMDEwODAwMTA4MDAxMTAwMDExNzAwMTA4MDAxMDgwMDExMDAwMTE3MDAxMDgwMDEwODAwMTEwMDAxMTcwMDEwODAwMTA4MDAxMTAwMDExNzAwMTA4MDAxMDgwMDExMDAwMTE3MDAxMDgwMDEwODAwMTEwMDAxMTcwMDEwODAwMTA4MDAxMTAwMDExNzAwMTA4MDAxMDgwMDExMDAwMTE3MDAxMDgwMDEwODAwMTEwMDAxMTcwMDEwODAwMTA4MDAxMTAwMDExNzAwMTA4MDAxMDgwMDExMDAwMTE3MDAxMDgwMDEwODAwMTEwMDAxMTcwMDEwODAwMTA4MDAxMTAwMDExNzAwMTA4MDAxMDgwMDExMDAwMTE3MDAxMDgwMDEwODAwMTEwMDAxMTcwMDEwODAwMTA4MDAxMTAwMDExNzAwMTA4MDAxMDgwMDExMDAwMTE3MDAxMDgwMDEwODAwMTEwMDAxMTcwMDEwODAwMTA4MDAxMTAwMDExNzAwMTA4MDAxMDgwMDExMDAwMTE3MDAxMDgwMDEwODAwMTEwMDAxMTcwMDEwODAwMTA4MDAxMTAwMDExNzAwMTA4MDAxMDgwMDExMDAwMTE3MDAxMDgwMDEwODAwMTEwMDAxMTcwMDEwODAwMTA4MDAxMTAwMDExNzAwMTA4MDAxMDgwMDExMDAwMTE3MDAxMDgwMDEwODAwMTEwMDAxMTcwMDEwODAwMTA4MDAxMTAwMDExNzAwMTA4MDAxMDgwMDExMDAwMTE3MDAxMDgwMDEwODAwMTEwMDAxMTcwMDEwODAwMTA4MDAxMTAwMDExNzAwMTA4MDAxMDgwMDExMDAwMTE3MDAxMDgwMDEwODAwMTEwMDAxMTcwMDEwODAwMTA4MDAxMTAwMDExNzAwMTA4MDAxMDgwMDExMDAwMTE3MDAxMDgwMDEwODAwMTEwMDAxMTcwMDEwODAwMTA4MDAxMTAwMDExNzAwMTA4MDAxMDg==g2xphwA001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!iH00390037" + "'", str3.equals("g2xphwA001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!iH00390037"));
    }

    @Test
    public void test436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test436");
        java.lang.String str3 = strman.Strman.leftPad("006f0074006b0030006f006400710034006e007400710035006f007400710034006e006400670031006e00740075007a0020004e006400670030006f006400750030006d0074006100780020004e006400670030006f0064007500780020004e007400750030006f006400710034006e007400650031006e007400710034006e006400670031006d007400750033006e006400670030006f006400750030006f0074006b0030006f006400710034006e007400710035006f007400710034006e006400670031006e00740075007a0020004e006400670030006f006400750030006d0074006100780020004e006400670030006f0064007500780020004e007400630030006f006400710034006e007400650031006e007400710034006e006400670031006d007400750033", "0021004800490021004800490021004800490021null97null97nnull97unull97lnull97lnull979null977null97", 6432);
    }

    @Test
    public void test437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test437");
        boolean boolean2 = strman.Strman.endsWithihihh_ihInullhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!nullnull97nnulnull971lunn79llun", "!ih");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test438");
        java.lang.String str3 = strman.Strman.removeRight("", "Null", true);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "" + "'", str3.equals(""));
    }

    @Test
    public void test439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test439");
        boolean boolean3 = strman.Strman.contains("00077000680006500050000900008400065001190007800122000850011900077000680009000106000770006800065000500008900122000650011900077001220010700119000770006800077000510004800048000480005500056000480004800049000490005500048000480004900048000560004800048000490004800056000480004800048000530005500048000480004800053000530004800048000490004900048000480004800049000490004800048000480004900049000550004800048000490004800056", "null97Nnul", false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test440");
        int int2 = strman.Strman.lastIndexOf("hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hii");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
    }

    @Test
    public void test441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test441");
        java.lang.String[] strArray1 = strman.Strman.words("5");
        org.junit.Assert.assertNotNull(strArray1);
    }

    @Test
    public void test442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test442");
        java.lang.String str1 = strman.Strman.transliterate("ihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi HHi-hinull97nnul");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "ihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi HHi-hinull97nnul" + "'", str1.equals("ihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi HHi-hinull97nnul"));
    }

    @Test
    public void test443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test443");
        java.lang.String str1 = strman.Strman.reverse("sEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhTlVMTDk3000780011700108001080005700055000780011000117001080010800057000550008500110001170010800108000570005500076001100011700108001080005700055000760011000117001080010800057000550005700110001170010800108000570005500055001100011700108001080005700055");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "5500075000801008010071100011005500055000750008010080100711000110075000550007500080100801007110001100670005500075000801008010071100011006700055000750008010080100711000110058000550007500080100801007110001100870005500075000801008010071100870003kDTMVlThkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEs" + "'", str1.equals("5500075000801008010071100011005500055000750008010080100711000110075000550007500080100801007110001100670005500075000801008010071100011006700055000750008010080100711000110058000550007500080100801007110001100870005500075000801008010071100870003kDTMVlThkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEs"));
    }

    @Test
    public void test444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test444");
        boolean boolean1 = strman.Strman.isString((java.lang.Object) "YmxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TTAwMDAwMDAwNTUwMDAwMDAwMDU3MDAwMDAwMDA3NjAwMDAwMDAwNzYwMDAwMDAwMDg1MDAwMDAwMDA3ODAwMDAwMDAwNTUwMDAwMDAwMDU1MDAwMDAwMDA1NzAwMDAwMDAwNzYwMDAwMDAwMDc2MDAwMDAwMDA4NTAwMDAwMDAwNzgwMDAwMDAwMDU3MDAwMDAwMDA1NTAwMDAwMDAwNTcwMDAwMDAwMDc2MDAwMDAwMDA3NjAwMDAwMDAwODUwMDAwMDAwMDc4MDAwMDAwMDEwODAwMDAwMDAwNTUwMDAwMDAwMDU3MDAwMDAwMDA3NjAwMDAwMDAwNzYwMDAwMDAwMDg1MDAwMDAwMDA3ODAwMDAwMDAxMDgwMDAwMDAwMDU1MDAwMDAwMDA1NzAwMDAwMDAwNzYwMDAwMDAwMDc2MDAwMDAwMDA4NTAwMDAwMDAwNzgwMDAwMDAwMTE3MDAwMDAwMDA1NTAwMDAwMDAwNTcwMDAwMDAwMDc2MDAwMDAwMDA3NjAwMDAwMDAwODUwMDAwMDAwMDc4MDAwMDAwMDExMDAwMDAwMDAwNTUwMDAwMDAwMDU3MDAwMDAwMDA3NjAwMDAwMDAwNzYwMDAwMDAwMDg1MDAwMDAwMDA3OGhpaGk");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
    }

    @Test
    public void test445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test445");
        java.lang.String[] strArray5 = strman.Strman.words("Nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull97Nnull97Unull97Lnull97Lnull979null977null97hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97", "hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!");
        java.util.Optional<java.lang.String> strOptional6 = strman.Strman.trimEnd("MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA0ZTAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwNTUwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDRjMDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA0YzAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwMzkwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111001000000000-ih79llun-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih", strArray5);
        java.lang.String str7 = strman.Strman.prependArray("Mda2 ztaw nz uw mdzj mda2 yz aw mzkw mdm3nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull000000005500000000570000000076000000007600000000850000000078000000005500000000550000000057000000007600000000760000000085000000007800000000570000000055000000005700000000760000000076000000008500000000780000000108000000005500000000570000000076000000007600000000850000000078000000010800000000550000000057000000007600000000760000000085000000007800000001170000000055000000005700000000760000000076000000008500000000780000000110000000005500000000570000000076000000007600000000850000000078hihi", strArray5);
        java.lang.String[] strArray8 = strman.Strman.removeEmptyStrings(strArray5);
        java.lang.String str9 = strman.Strman.append("HihiNULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL979710", strArray5);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strOptional6);
        org.junit.Assert.assertTrue("'" + str7 + "' != '" + "Nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull97Nnull97Unull97Lnull97Lnull979null977null97null97Mda2 ztaw nz uw mdzj mda2 yz aw mzkw mdm3nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull000000005500000000570000000076000000007600000000850000000078000000005500000000550000000057000000007600000000760000000085000000007800000000570000000055000000005700000000760000000076000000008500000000780000000108000000005500000000570000000076000000007600000000850000000078000000010800000000550000000057000000007600000000760000000085000000007800000001170000000055000000005700000000760000000076000000008500000000780000000110000000005500000000570000000076000000007600000000850000000078hihi" + "'", str7.equals("Nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull97Nnull97Unull97Lnull97Lnull979null977null97null97Mda2 ztaw nz uw mdzj mda2 yz aw mzkw mdm3nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull000000005500000000570000000076000000007600000000850000000078000000005500000000550000000057000000007600000000760000000085000000007800000000570000000055000000005700000000760000000076000000008500000000780000000108000000005500000000570000000076000000007600000000850000000078000000010800000000550000000057000000007600000000760000000085000000007800000001170000000055000000005700000000760000000076000000008500000000780000000110000000005500000000570000000076000000007600000000850000000078hihi"));
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + str9 + "' != '" + "HihiNULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL979710Nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull97Nnull97Unull97Lnull97Lnull979null977null97null97" + "'", str9.equals("HihiNULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL979710Nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull97Nnull97Unull97Lnull97Lnull979null977null97null97"));
    }

    @Test
    public void test446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test446");
        java.lang.String str1 = strman.Strman.hexEncode("4911011710810857551101171081085755951101101171081085755951171101171081085755951081101171081085755951081101171081085755571101171081085755551101171081085755hi_hi0000000001001000000000000110100197_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_null97hi00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e");
        org.junit.Assert.assertTrue("'" + strf006800690030003000300030003000300030003000300031003000300031003000300030003000300030003000300030003000300030003100310030003100300030003100390037005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f006e0075006c006c0039003700680069003000300033003700300030003300390030003000360063003000300036006300300030003700350030003000360065003000300033003700300030003300370030003000330039003000300036006300300030003600630030003000370035003000300036006500300030003300390030003000330037003000300033003900300030003600630030003000360063003000300037003500300030003600650030003000340063003000300033003700300030003300390030003000360063003000300036006300300030003700350030003000360065003000300034006300300030003300370030003000330039003000300036006300300030003600630030003000370035003000300036006500300030003500350030003000330037003000300033003900300030003600630030003000360063003000300037003500300030003600650030003000340065003000300033003700300030003300390030003000360063003000300036006300300030003700350030003000360065" + "'", str1.equalsf006800690030003000300030003000300030003000300031003000300031003000300030003000300030003000300030003000300030003100310030003100300030003100390037005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f006e0075006c006c0039003700680069003000300033003700300030003300390030003000360063003000300036006300300030003700350030003000360065003000300033003700300030003300370030003000330039003000300036006300300030003600630030003000370035003000300036006500300030003300390030003000330037003000300033003900300030003600630030003000360063003000300037003500300030003600650030003000340063003000300033003700300030003300390030003000360063003000300036006300300030003700350030003000360065003000300034006300300030003300370030003000330039003000300036006300300030003600630030003000370035003000300036006500300030003500350030003000330037003000300033003900300030003600630030003000360063003000300037003500300030003600650030003000340065003000300033003700300030003300390030003000360063003000300036006300300030003700350030003000360065"));
    }

    @Test
    public void test447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test447");
        boolean boolean3 = strman.Strman.endsWithnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull&UnderBar;nullMDAxMTAxMTAwMDAwMDAwMDEwMTAxMTEwMDAwMDAwMDAwMTExMDExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDAxMDAxMTEwMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAxMDEwMTExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDEwMDEwMTEwMDAwMDAwMDAwMDAxMDExMDAwMDAwMDAwMTAxMTAxMDAwMDAwMDAwMDEwMDEwMTEwMDAwMDAwMDAwMDAxMDExMDAwMDAwMDAwaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaS1oihi-hhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!00000000001100110000000000110101Ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1nq==", true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test448");
        java.lang.String[] strArray4 = strman.Strman.between("006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037Null", "004800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006800690021006e0075006c006cihi_hhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97null97nULL97");
        java.lang.String str5 = strman.Strman.prepend("!ihnull006900680069005f006800680069002dhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!006900680069005f006800680069002dhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!006900680069005f006800680069002dhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!", strArray4);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "!ihnull006900680069005f006800680069002dhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!006900680069005f006800680069002dhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!006900680069005f006800680069002dhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!" + "'", str5.equals("!ihnull006900680069005f006800680069002dhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!006900680069005f006800680069002dhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!006900680069005f006800680069002dhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!"));
    }

    @Test
    public void test449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test449");
        boolean boolean3 = strman.Strman.isEnclosedBetweenull97Nnull97Unull97Lnull97Lnull979null977null97", "HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!", "00000000011010000000000001101001000000000010110100000000011010000000000001101001000000000011010000000000001110000000000000110100000000000011100000000000001101010000000000110001000000000011010100000000001101010000000000110100000000000011100000000000001101000000000000111000000000000011010100000000001100010000000000110101000000000011011100000000001101000000000000111000000000000011010000000000001110000000000000110101000000000011010000000000001110010000000000111001000000000011010000000000001110000000000000110100000000000011100000000000001101010000000000110100000000000011100100000000001110010000000000110100000000000011100000000000001101000000000000111000000000000011010100000000001101010000000000110101000000000011001100000000001101000000000000111000000000000011010000000000001110000000000000110101000000000011010000000000001100010000000000110000000000000011000100000000001101000000000000111000000000000011010000000000001110000000000000110101000000000011000100000000001101010000000000110101000000000011010000000000001110000000000000110100000000000011100000000000001101010000000000110001000000000011010100000000001101010000000000110100000000000011100000000000001101000000000000111000000000000011010100000000001100010000000000110101000000000011011100000000001101000000000000111000000000000011010000000000001110000000000000110101000000000011010000000000001110010000000000111001000000000011010000000000001110000000000000110100000000000011100000000000001101010000000000110100000000000011100100000000001110010000000000110100000000000011100000000000001101000000000000111000000000000011010100000000001101010000000000110101000000000011001100000000001101000000000000111000000000000011010000000000001110000000000000110101000000000011010000000000001100010000000000110000000000000011000100000000001101000000000000111000000000000011010000000000001110000000000000110101000000000011000100000000001101010000000000110111000000000011010000000000001110000000000000110100000000000011100000000000001101010000000000110001000000000011010100000000001101010000000000110100000000000011100000000000001101000000000000111000000000000011010100000000001100010000000000110101000000000011011100000000001101000000000000111000000000000011010000000000001110000000000000110101000000000011010000000000001110010000000000111001000000000011010000000000001110000000000000110100000000000011100000000000001101010000000000110100000000000011100100000000001110010000000000110100000000000011100000000000001101000000000000111000000000000011010100000000001101010000000000110101000000000011001100000000001101000000000000111000000000000011010000000000001110000000000000110101000000000011010000000000001100010000000000110000000000000011000100000000001101000000000000111000000000000011010000000000001110000000000000110101000000000011001000000000001110010000000000111001000000000011010000000000001110000000000000110100000000000011100000000000001101010000000000110001000000000011010100000000001101010000000000110100000000000011100000000000001101000000000000111000000000000011010100000000001100010000000000110101000000000011011100000000001101000000000000111000000000000011010000000000001110000000000000110101000000000011010000000000001110010000000000111001000000000011010000000000001110000000000000110100000000000011100000000000001101010000000000110100000000000011100100000000001110010000000000110100000000000011100000000000001101000000000000111000000000000011010100000000001101010000000000110101000000000011001100000000001101000000000000111000000000000011010000000000001110000000000000110101000000000011010000000000001100010000000000110000000000000011000100000000001101000000000000111000000000000011010000000000001110000000000000110101000000000011001000000000001110010000000000111001000000000011010000000000001110000000000000110100000000000011100000000000001101010000000000110001000000000011010100000000001101010000000000110100000000000011100000000000001101000000000000111000000000000011010100000000001100010000000000110101000000000011011100000000001101000000000000111000000000000011010000000000001110000000000000110101000000000011010000000000001110010000000000111001000000000011010000000000001110000000000000110100000000000011100000000000001101010000000000110100000000000011100100000000001110010000000000110100000000000011100000000000001101000000000000111000000000000011010100000000001101010000000000110101000000000011001100000000001101000000000000111000000000000011010000000000001110000000000000110101000000000011010000000000001100010000000000110000000000000011000100000000001101000000000000111000000000000011010000000000001110000000000000110101000000000011001100000000001101010000000000110011000000000011010000000000001110000000000000110100000000000011100000000000001101010000000000110001000000000011010100000000001101010000000000110100000000000011100000000000001101000000000000111000000000000011010100000000001100010000000000110101000000000011011100000000001101000000000000111000000000000011010000000000001110000000000000110101000000000011010000000000001110010000000000111001000000000011010000000000001110000000000000110100000000000011100000000000001101010000000000110100000000000011100100000000001110010000000000110100000000000011100000000000001101000000000000111000000000000011010100000000001101010000000000110101000000000011001100000000001101000000000000111000000000000011010000000000001110000000000000110101000000000011010000000000001100010000000000110000000000000011000100000000001101000000000000111000000000000011010000000000001110000000000000110101000000000011001000000000001100010000000000110000000000000011000100000000001101000000000000111000000000000011010000000000001110000000000000110101000000000011000100000000001101010000000000110101000000000011010000000000001110000000000000110100000000000011100000000000001101010000000000110001000000000011010100000000001101110000000000110100000000000011100000000000001101000000000000111000000000000011010100000000001101000000000000111001000000000011100100000000001101000000000000111000000000000011010000000000001110000000000000110101000000000011010000000000001110010000000000111001000000000011010000000000001110000000000000110100000000000011100000000000001101010000000000110101000000000011010100000000001100110000000000110100000000000011100000000000001101000000000000111000000000000011010100000000001101000000000000110001000000000011000000000000001100010000000001101001000000000110100000000000011010010000000001001000");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test450");
        java.lang.String[] strArray6 = new java.lang.String[] {};
        java.util.List<java.lang.String> strList7 = strman.Strman.zip(strArray6);
        boolean boolean9 = strman.Strman.containsAny("", strArray6, true);
        boolean boolean11 = strman.Strman.containsAny("hi!hi!", strArray6, true);
        boolean boolean13 = strman.Strman.containsAll("10", strArray6, false);
        java.lang.String str15 = strman.Strman.join(strArray6, "hi!");
        java.lang.String str16 = strman.Strman.format("000000000110100000000000011010010000000000100001", strArray6);
        boolean boolean18 = strman.Strman.containsAny("lunN79llunnull97null97Nnull97Unull97Lnull97Lnull979null977null97", strArray6, false);
        java.lang.String str19 = strman.Strman.appendArray("lunN79llunnull97null97Nnull97Unull97Lnull97Lnull979null977null97", strArray6);
        java.lang.Class<?> wildcardClass20 = strArray6.getClass();
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + str15 + "' != '" + "" + "'", str15.equals(""));
        org.junit.Assert.assertTrue("'" + str16 + "' != '" + "000000000110100000000000011010010000000000100001" + "'", str16.equals("000000000110100000000000011010010000000000100001"));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + str19 + "' != '" + "lunN79llunnull97null97Nnull97Unull97Lnull97Lnull979null977null97" + "'", str19.equals("lunN79llunnull97null97Nnull97Unull97Lnull97Lnull979null977null97"));
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test451");
        java.lang.String str3 = strman.Strman.removeLeft("000000005500000000570000000076000000007600000000850000000078000000005500000000550000000057000000007600000000760000000085000000007800000000570000000055000000005700000000760000000076000000008500000000780000000108000000005500000000570000000076000000007600000000850000000078000000010800000000550000000057000000007600000000760000000085000000007800000001170000000055000000005700000000760000000076000000008500000000780000000110000000005500000000570000000076000000007600000000850000000078hihie0075006c006c00390037006800690021003000300033003700300030003300390030003000360063003000300036006300300030003700350030003000360065003000300033003700300030003300370030003000330039003000300036006300300030003600630030003000370035003000300036006500300030003300390030003000330037003000300033003900300030003600630030003000360063003000300037003500300030003600650030003000340063003000300033003700300030003300390030003000360063003000300036006300300030003700350030003000360065003000300034006300300030003300370030003000330039003000300036006300300030003600630030003000370035003000300036006500300030003500350030003000330037003000300033003900300030003600630030003000360063003000300037003500300030003600650030003000340065003000300033003700300030003300390030003000360063003000300036006300300030003700350030003000360065", "NULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULL", false);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "000000005500000000570000000076000000007600000000850000000078000000005500000000550000000057000000007600000000760000000085000000007800000000570000000055000000005700000000760000000076000000008500000000780000000108000000005500000000570000000076000000007600000000850000000078000000010800000000550000000057000000007600000000760000000085000000007800000001170000000055000000005700000000760000000076000000008500000000780000000110000000005500000000570000000076000000007600000000850000000078hihie0075006c006c00390037006800690021003000300033003700300030003300390030003000360063003000300036006300300030003700350030003000360065003000300033003700300030003300370030003000330039003000300036006300300030003600630030003000370035003000300036006500300030003300390030003000330037003000300033003900300030003600630030003000360063003000300037003500300030003600650030003000340063003000300033003700300030003300390030003000360063003000300036006300300030003700350030003000360065003000300034006300300030003300370030003000330039003000300036006300300030003600630030003000370035003000300036006500300030003500350030003000330037003000300033003900300030003600630030003000360063003000300037003500300030003600650030003000340065003000300033003700300030003300390030003000360063003000300036006300300030003700350030003000360065" + "'", str3.equals("000000005500000000570000000076000000007600000000850000000078000000005500000000550000000057000000007600000000760000000085000000007800000000570000000055000000005700000000760000000076000000008500000000780000000108000000005500000000570000000076000000007600000000850000000078000000010800000000550000000057000000007600000000760000000085000000007800000001170000000055000000005700000000760000000076000000008500000000780000000110000000005500000000570000000076000000007600000000850000000078hihie0075006c006c00390037006800690021003000300033003700300030003300390030003000360063003000300036006300300030003700350030003000360065003000300033003700300030003300370030003000330039003000300036006300300030003600630030003000370035003000300036006500300030003300390030003000330037003000300033003900300030003600630030003000360063003000300037003500300030003600650030003000340063003000300033003700300030003300390030003000360063003000300036006300300030003700350030003000360065003000300034006300300030003300370030003000330039003000300036006300300030003600630030003000370035003000300036006500300030003500350030003000330037003000300033003900300030003600630030003000360063003000300037003500300030003600650030003000340065003000300033003700300030003300390030003000360063003000300036006300300030003700350030003000360065"));
    }

    @Test
    public void test452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test452");
        java.lang.String str1 = strman.Strman.decEncode("!HI!HI!HI!6");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "0003300072000730003300072000730003300072000730003300054" + "'", str1.equals("0003300072000730003300072000730003300072000730003300054"));
    }

    @Test
    public void test453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test453");
        long long4 = strman.Strman.countSubstrnullnullnullnullnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexcl", false, true);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
    }

    @Test
    public void test454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test454");
        boolean boolean2 = strman.Strman.unequal
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
    }

    @Test
    public void test455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test455");
        java.lang.String str3 = strman.Strman.removeRight("0000000001001000000000000110100100680069002dhI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!", false);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "0000000001001000000000000110100100680069002dstr3.equals("0000000001001000000000000110100100680069002d
    }

    @Test
    public void test456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test456");
        boolean boolean2 = strman.Strman.isEnclosedBetween("LunN79llunnull97null97Nnull97Unull97Lnull97Lnull979null977null97", "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001050000000000hI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test457");
        java.lang.String str1 = strman.Strman.rightTrimnull97null97nnull97unull97lnull97lnull979null977null97hihihi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull");
        org.junit.Assert.assertTrue("'" + strnull97null97nnull97unull97lnull97lnull979null977null97hihihi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull" + "'", str1.equalsnull97null97nnull97unull97lnull97lnull979null977null97hihihi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull"));
    }

    @Test
    public void test458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test458");
        int int4 = strman.Strman.indexOf("10", "3kdtmV lT hkeS hkeS hkeS hkeS 30", (int) 'a', false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
    }

    @Test
    public void test459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test459");
        java.lang.String str1 = strman.Strman.upperFirst("MDAxMTAxMTAwMDAwMDAwMDEwMTAxMTEwMDAwMDAwMDAwMTExMDExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDAxMDAxMTEwMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAxMDEwMTExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDEwMDEwMTEwMDAwMDAwMDAwMDAxMDExMDAwMDAwMDAwMTAxMTAxMDAwMDAwMDAwMDEwMDEwMTEwMDAwMDAwMDAwMDAxMDExMDAwMDAwMDAwaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaS1oihiH");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "MDAxMTAxMTAwMDAwMDAwMDEwMTAxMTEwMDAwMDAwMDAwMTExMDExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDAxMDAxMTEwMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAxMDEwMTExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDEwMDEwMTEwMDAwMDAwMDAwMDAxMDExMDAwMDAwMDAwMTAxMTAxMDAwMDAwMDAwMDEwMDEwMTEwMDAwMDAwMDAwMDAxMDExMDAwMDAwMDAwaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaS1oihiH" + "'", str1.equals("MDAxMTAxMTAwMDAwMDAwMDEwMTAxMTEwMDAwMDAwMDAwMTExMDExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDAxMDAxMTEwMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAxMDEwMTExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDEwMDEwMTEwMDAwMDAwMDAwMDAxMDExMDAwMDAwMDAwMTAxMTAxMDAwMDAwMDAwMDEwMDEwMTEwMDAwMDAwMDAwMDAxMDExMDAwMDAwMDAwaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaS1oihiH"));
    }

    @Test
    public void test460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test460");
        java.util.Optional<java.lang.String> strOptional1 = strman.Strman.tail("nullhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!");
        org.junit.Assert.assertNotNull(strOptional1);
    }

    @Test
    public void test461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test461");
        boolean boolean1 = strman.Strman.isUpperCase("n-u-l-l97-n-n-u-lN u l l97 n n u lhi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi null97hi null97nnul hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!null97 nnul hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi null97 hi 00370039006 c006 c0075006 e003700370039006 c006 c0075006 e003900370039006 c006 c0075006 e004 c00370039006 c006 c0075006 e004 c00370039006 c006 c0075006 e005500370039006 c006 c0075006 e004 e00370039006 c006 c0075006 e7210533hi!hi!hi!hi!hi!hi!hi!hi!hi!hn ullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnulli!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hihi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi null97hi00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006ehi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
    }

    @Test
    public void test462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test462");
        java.lang.String str2 = strman.Strman.ensureRight("72734572735256525653495353525652565349535552565256535257575256525653525757525652565353535152565256535249484952565256534953535256525653495353525652565349535552565256535257575256525653525757525652565353535152565256535249484952565256534953555256525653495353525652565349535552565256535257575256525653525757525652565353535152565256535249484952565256535057575256525653495353525652565349535552565256535257575256525653525757525652565353535152565256535249484952565256535057575256525653495353525652565349535552565256535257575256525653525757525652565353535152565256535249484952565256535153515256525653495353525652565349535552565256535257575256525653525757525652565353535152565256535249484952565256535049484952565256534953535256525653495355525652565352575752565256535257575256525653535351525652565352494849", "null97Nnull97Unull97Lnull97Lnull979null977null97");
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "72734572735256525653495353525652565349535552565256535257575256525653525757525652565353535152565256535249484952565256534953535256525653495353525652565349535552565256535257575256525653525757525652565353535152565256535249484952565256534953555256525653495353525652565349535552565256535257575256525653525757525652565353535152565256535249484952565256535057575256525653495353525652565349535552565256535257575256525653525757525652565353535152565256535249484952565256535057575256525653495353525652565349535552565256535257575256525653525757525652565353535152565256535249484952565256535153515256525653495353525652565349535552565256535257575256525653525757525652565353535152565256535249484952565256535049484952565256534953535256525653495355525652565352575752565256535257575256525653535351525652565352494849null97Nnull97Unull97Lnull97Lnull979null977null97" + "'", str2.equals("72734572735256525653495353525652565349535552565256535257575256525653525757525652565353535152565256535249484952565256534953535256525653495353525652565349535552565256535257575256525653525757525652565353535152565256535249484952565256534953555256525653495353525652565349535552565256535257575256525653525757525652565353535152565256535249484952565256535057575256525653495353525652565349535552565256535257575256525653525757525652565353535152565256535249484952565256535057575256525653495353525652565349535552565256535257575256525653525757525652565353535152565256535249484952565256535153515256525653495353525652565349535552565256535257575256525653525757525652565353535152565256535249484952565256535049484952565256534953535256525653495355525652565352575752565256535257575256525653535351525652565352494849null97Nnull97Unull97Lnull97Lnull979null977null97"));
    }

    @Test
    public void test463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test463");
        java.util.Optional<java.lang.String> strOptional1 = strman.Strman.trimEnd("Mda2 ztaw nz uw mdzj mda2 yz aw mzkw mdm3");
        org.junit.Assert.assertNotNull(strOptional1);
    }

    @Test
    public void test464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test464");
        java.lang.String str2 = strman.Strman.ensureRight("00300030003100310030003000300031003100370030003000310030003800300030003100300038003000300030003500370030003000300035003500300030003000370038003000300031003100300030003000310031003700300030003100300038", "n-u-l-l97-n-ullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull");
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "00300030003100310030003000300031003100370030003000310030003800300030003100300038003000300030003500370030003000300035003500300030003000370038003000300031003100300030003000310031003700300030003100300038n-u-l-l97-n-ullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull" + "'", str2.equals("00300030003100310030003000300031003100370030003000310030003800300030003100300038003000300030003500370030003000300035003500300030003000370038003000300031003100300030003000310031003700300030003100300038n-u-l-l97-n-ullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull"));
    }

    @Test
    public void test465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test465");
        java.lang.String str3 = strman.Strman.removeLeft("9ihi h7null", "860096001200c4005500e400e40073009300c400c4005500e400hi!LUNN79LLUNlunN79llun79llun1", true);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "9ihi h7null" + "'", str3.equals("9ihi h7null"));
    }

    @Test
    public void test466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test466");
        java.lang.String str1 = strman.Strman.htmlDecode("hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!5");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "null" + "'", str1.equals("null"));
    }

    @Test
    public void test467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test467");
        java.lang.String str2 = strman.Strman.removeLeft("001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000ihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi-h", "79LLUN779LLUN979LLUNl79LLUNl79LLUNu79LLUNn79LLUN79LLUN779LLUN979LLUNl79LLUNl79LLUNu79LLUNn79LLUN1101171081085755Null97Nnull97Unull97Lnull97Lnull979null977null97");
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000ihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi-h" + "'", str2.equals("001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000ihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi-h"));
    }

    @Test
    public void test468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test468");
        java.lang.String str2 = strman.Strman.ensureRight("hi!hinullhi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-null97hi\\-00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e");
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!hinullhi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-null97hi\\-00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e" + "'", str2.equals("hi!hinullhi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-null97hi\\-00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e"));
    }

    @Test
    public void test469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test469");
        java.lang.String str2 = strman.Strman.ensureLeftllun779llun979llunl79llunl79llunu79llunn79llun79llun779llun979llunl79llunl79llunu79llunn79llunMda2 ztaw nz uw mdzj mda2 yz aw mzkw mdm3nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "300300301301300300300301301313300300301300320300300301300320300300300311313300300300311311300300300313320300300301301300300300301301313300300301300320000480004800049000490004800048000480004900049000550004800048000490004800056000480004800049000480005600048000480004800053000550004800048000480005300053000480004800048000550005600048000480004900049000480004800048000490004900055000480004800049000480005600104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300110001170010800108000570005579llun779llun979llunl79llunl79llunu79llunn79llun79llun779llun979llunl79llunl79llunu79llunn79llunMda2 ztaw nz uw mdzj mda2 yz aw mzkw mdm3nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullstr2.equalsllun779llun979llunl79llunl79llunu79llunn79llun79llun779llun979llunl79llunl79llunu79llunn79llunMda2 ztaw nz uw mdzj mda2 yz aw mzkw mdm3nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull
    }

    @Test
    public void test470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test470");
        java.lang.String[] strArray3 = strman.Strman.words("", "null");
        java.lang.Class<?> wildcardClass4 = strArray3.getClass();
        java.lang.String[] strArray5 = strman.Strman.removeEmptyStrings(strArray3);
        try {
            java.util.Optional<java.lang.String> strOptional6 = strman.Strman.trimEnd("lunN79llunnull97null97Nnull97Unull97Lnull97Lnull979null977null97Nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull97Nnull97Unull97Lnull97Lnull979null977null97null97", strArray5);
            org.junit.Assert.fail("Expected exception of type java.util.regex.PatternSyntaxException; message: Unclosed character class near index 3\r\n[]+$\r\n   ^");
        } catch (java.util.regex.PatternSyntaxException e) {
        }
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(strArray5);
    }

    @Test
    public void test471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test471");
        int int4 = strman.Strman.lastIndexOfnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull97nnulnull97null97nnulnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullhi-hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101", "110110117108108104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045110117108108057055104105045048048051055048048051057048048054099048048054099048048055053048048054101048048051055048048051055048048051057048048054099048048054099048048055053048048054101048048051057048048051055048048051057048048054099048048054099048048055053048048054101048048052099048048051055048048051057048048054099048048054099048048055053048048054101048048052099048048051055048048051057048048054099048048054099048048055053048048054101048048053053048048051055048048051057048048054099048048054099048048055053048048054101048048052101048048051055048048051057048048054099048048054099048048055053048048054101117110117108108104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045110117108108057055104105045048048051055048048051057048048054099048048054099048048055053048048054101048048051055048048051055048048051057048048054099048048054099048048055053048048054101048048051057048048051055048048051057048048054099048048054099048048055053048048054101048048052099048048051055048048051057048048054099048048054099048048055053048048054101048048052099048048051055048048051057048048054099048048054099048048055053048048054101048048053053048048051055048048051057048048054099048048054099048048055053048048054101048048052101048048051055048048051057048048054099048048054099048048055053048048054101108110117108108104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045104105045110117108108057055104105045048048051055048048051057048048054099048048054099048048055053048048054101048048051055048048051055048048051057048048054099048048054099048048055053048048054101048048051057048048051055048048051057048048054099048048054099048048055053048048054101048048052099048048051055048048051057048048054099048048054099048048055053048048054101048048052099048048051055048048051057048048054099048048054099048048055053048048054101048048053053048048051055048048051057048048054099048048054099048048055053048048054101048048052101048048051055048048051057048048054099048048054099048048055053048048054101108", 8327, true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
    }

    @Test
    public void test472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test472");
        java.lang.String str1 = strman.Strman.htmlEncode("5500075000801008010071100011005500055000750008010080100711000110075000550007500080100801007110001100670005500075000801008010071100011006700055000750008010080100711000110058000550007500080100801007110001100870005500075000801008010071100870003kDTMVlThkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEShkEs");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull" + "'", str1.equals("nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull"));
    }

    @Test
    public void test473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test473");
        java.lang.String str2 = strman.Strman.removeRight("", "null97hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!nnull97hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!unull97hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!lnull97hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!lnull979null977null97n_u_l_l97_n_ullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull");
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "" + "'", str2.equals(""));
    }

    @Test
    public void test474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test474");
        java.lang.String str1 = strman.Strman.removeSpaces("Ihi hhi hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "Ihihhihi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101" + "'", str1.equals("Ihihhihi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101"));
    }

    @Test
    public void test475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test475");
        java.lang.String str1 = strman.Strman.toKebabCase("nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull&_under_bar;null");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull&-under-bar;null" + "'", str1.equals("nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull&-under-bar;null"));
    }

    @Test
    public void test476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test476");
        java.lang.String str1 = strman.Strman.upperFirst("Null97nnul1097null971097nULL97NNULNullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullhi-hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101hihi");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "Null97nnul1097null971097nULL97NNULNullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullhi-hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101hihi" + "'", str1.equals("Null97nnul1097null971097nULL97NNULNullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullhi-hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101hihi"));
    }

    @Test
    public void test477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test477");
        java.lang.String str1 = strman.Strman.base64Encode("null97nnul1097null971097");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "bnVsbDk3bm51bDEwOTdudWxsOTcxMDk3" + "'", str1.equals("bnVsbDk3bm51bDEwOTdudWxsOTcxMDk3"));
    }

    @Test
    public void test478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test478");
        boolean boolean3 = strman.Strman.endsWith("aWhpX2hoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFudWxsOTdudWxsOTduVUxMOTc=", "006E0075006C006C00390037HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!", false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test479");
        java.lang.String str1 = strman.Strman.toSnakeCase("00110001170010800108000570005500078001100011700108");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "00110001170010800108000570005500078001100011700108" + "'", str1.equals("00110001170010800108000570005500078001100011700108"));
    }

    @Test
    public void test480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test480");
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.util.List<java.lang.String> strList9 = strman.Strman.zip(strArray8);
        boolean boolean11 = strman.Strman.containsAny("", strArray8, true);
        boolean boolean13 = strman.Strman.containsAny("hi!hi!", strArray8, true);
        boolean boolean15 = strman.Strman.containsAll("10", strArray8, false);
        java.lang.String str17 = strman.Strman.join(strArray8, "hi!");
        java.lang.String str18 = strman.Strman.format("000000000110100000000000011010010000000000100001", strArray8);
        boolean boolean20 = strman.Strman.containsAny("lunN79llunnull97null97Nnull97Unull97Lnull97Lnull979null977null97", strArray8, false);
        java.lang.String str21 = strman.Strman.appendArray("lunN79llunnull97null97Nnull97Unull97Lnull97Lnull979null977null97", strArray8);
        boolean boolean23 = strman.Strman.containsAny(";lcxe&llunllun;lcxe&llunllun", strArray8, false);
        boolean boolean25 = strman.Strman.containsAny("", strArray8, false);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + str17 + "' != '" + "" + "'", str17.equals(""));
        org.junit.Assert.assertTrue("'" + str18 + "' != '" + "000000000110100000000000011010010000000000100001" + "'", str18.equals("000000000110100000000000011010010000000000100001"));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + str21 + "' != '" + "lunN79llunnull97null97Nnull97Unull97Lnull97Lnull979null977null97" + "'", str21.equals("lunN79llunnull97null97Nnull97Unull97Lnull97Lnull979null977null97"));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test481");
        long long4 = strman.Strman.countSubstr("4911011710810857551101171081085755951101101171081085755951171101171081085755951081101171081085755951081101171081085755571101171081085755551101171081085755Hihihihinull97nnull97unull97lnull97lnull979null977null979710", "null97nnul1097null971097", true, true);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
    }

    @Test
    public void test482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test482");
        java.lang.String str3 = strman.Strman.insert("001", "nullnull97nnul", (int) (byte) 100);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "001" + "'", str3.equals("001"));
    }

    @Test
    public void test483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test483");
        java.util.Optional<java.lang.String> strOptional1 = strman.Strman.head("hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!");
        org.junit.Assert.assertNotNull(strOptional1);
    }

    @Test
    public void test484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test484");
        boolean boolean3 = strman.Strman.isEnclosedBetween("Ll97", "hinullhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101", "48485457484854564848545748485310248485456484854564848545748485010048485456484854574848515248485156484851524848515648485153484851494848515348485153484851524848515648485152484851564848515348485149484851534848515548485152484851564848515248485156484851534848515248485157484851574848515248485156484851524848515648485153484851524848515748485157484851524848515648485152484851564848515348485153484851534848515148485152484851564848515248485156484851534848515248485149484851484848514948485152484851564848515248485156484851534848514948485153484851534848515248485156484851524848515648485153484851494848515348485153484851524848515648485152484851564848515348485149484851534848515548485152484851564848515248485156484851534848515248485157484851574848515248485156484851524848515648485153484851524848515748485157484851524848515648485152484851564848515348485153484851534848515148485152484851564848515248485156484851534848515248485149484851484848514948485152484851564848515248485156484851534848514948485153484851554848515248485156484851524848515648485153484851494848515348485153484851524848515648485152484851564848515348485149484851534848515548485152484851564848515248485156484851534848515248485157484851574848515248485156484851524848515648485153484851524848515748485157484851524848515648485152484851564848515348485153484851534848515148485152484851564848515248485156484851534848515248485149484851484848514948485152484851564848515248485156484851534848515048485157484851574848515248485156484851524848515648485153484851494848515348485153484851524848515648485152484851564848515348485149484851534848515548485152484851564848515248485156484851534848515248485157484851574848515248485156484851524848515648485153484851524848515748485157484851524848515648485152484851564848515348485153484851534848515148485152484851564848515248485156484851534848515248485149484851484848514948485152484851564848515248485156484851534848515048485157484851574848515248485156484851524848515648485153484851494848515348485153484851524848515648485152484851564848515348485149484851534848515548485152484851564848515248485156484851534848515248485157484851574848515248485156484851524848515648485153484851524848515748485157484851524848515648485152484851564848515348485153484851534848515148485152484851564848515248485156484851534848515248485149484851484848514948485152484851564848515248485156484851534848515148485153484851514848515248485156484851524848515648485153484851494848515348485153484851524848515648485152484851564848515348485149484851534848515548485152484851564848515248485156484851534848515248485157484851574848515248485156484851524848515648485153484851524848515748485157484851524848515648485152484851564848515348485153484851534848515148485152484851564848515248485156484851534848515248485149484851484848514948485152484851564848515248485156484851534848515048485149484851484848514948485152484851564848515248485156484851534848514948485153484851534848515248485156484851524848515648485153484851494848515348485155484851524848515648485152484851564848515348485152484851574848515748485152484851564848515248485156484851534848515248485157484851574848515248485156484851524848515648485153484851534848515348485151484851524848515648485152484851564848515348485152484851494848514848485149104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533null97nnul1097null971097");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test485");
        java.lang.String[] strArray3 = strman.Strman.split("0000000001001000000000000110100100680069002d
        java.lang.String str4 = strman.Strman.appendArray("", strArray3);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "0000000001001000000000000110100100680069002dstr4.equals("0000000001001000000000000110100100680069002d
    }

    @Test
    public void test486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test486");
        int int1 = strman.Strman.length("HihiNULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL979710Nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull97Nnull97Unull97Lnull97Lnull979null977null97null97");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 302 + "'", int1 == 302);
    }

    @Test
    public void test487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test487");
        java.lang.String str1 = strman.Strman.decEncodee0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c00390037004e006e0075006c006c003900370055006e0075006c006c00390037004c006e0075006c006c00390037004c006e0075006c006c003900370039006e0075006c006c003900370037006e0075006c006ce0075006c006c00390037");
    }

    @Test
    public void test488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test488");
        java.lang.String[] strArray3 = strman.Strman.split("hi!hi!", "hi!");
        java.util.Optional<java.lang.String> strOptional4 = strman.Strman.trimEnd("", strArray3);
        java.lang.Class<?> wildcardClass5 = strOptional4.getClass();
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(strOptional4);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test489");
        try {
            java.lang.String str3 = strman.Strman.decodeint) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException; message: radix 100 greater than Character.MAX_RADIX");
        } catch (java.lang.NumberFormatException e) {
        }
    }

    @Test
    public void test490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test490");
        java.lang.String[] strArray1 = strman.Strman.chars("000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100NULL97NULL97NNULL97UNULL97LNULL97LNULL979NULL977NULL97HIHIHIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhInULL97HInULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULL");
        org.junit.Assert.assertNotNull(strArray1);
    }

    @Test
    public void test491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test491");
        boolean boolean4 = strman.Strman.endsWith("null97n uLLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULL", "n000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97 Nnull97 Unull97 Lnull97 Lnull979null977null97u000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97 Nnull97 Unull97 Lnull97 Lnull979null977null97l000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97 Nnull97 Unull97 Lnull97 Lnull979null977null97lfalse);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test492");
        boolean boolean2 = strman.Strman.isEnclosedBetween("00mda2-ztaw-nz-uw-mdzj-mda2-yz-aw-mzkw-mdm3nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull000000005500000000570000000076000000007600000000850000000078000000005500000000550000000057000000007600000000760000000085000000007800000000570000000055000000005700000000760000000076000000008500000000780000000108000000005500000000570000000076000000007600000000850000000078000000010800000000550000000057000000007600000000760000000085000000007800000001170000000055000000005700000000760000000076000000008500000000780000000110000000005500000000570000000076000000007600000000850000000078hihi0000000110100100000000011010000000000001101001000000000101111100000000011010000000000001101000000000000110100100000000001011010000000001101000000000000110100100000000001101000000000000111000000000000011010000000000001110000000000000110101000000000011000100000000001101010000000000110101000000000011010000000000001110000000000000110100000000000011100000000000001101010000000000110001000000000011010100000000001101110000000000110100000000000011100000000000001101000000000000111000000000000011010100000000001101000000000000111001000000000011100100000000001101000000000000111000000000000011010000000000001110000000000000110101000000000011010000000000001110010000000000111001000000000011010000000000001110000000000000110100000000000011100000000000001101010000000000110101000000000011010100000000001100110000000000110100000000000011100000000000001101000000000000111000000000000011010100000000001101000000000000110001000000000011000000000000001100010000000000110100000000000011100000000000001101000000000000111000000000000011010100000000001100010000000000110101000000000011010100000000001101000000000000111000000000000011010000000000001110000000000000110101000000000011000100000000001101010000000000110101000000000011010000000000001110000000000000110100000000000011100000000000001101010000000000110001000000000011010100000000001101110000000000110100000000000011100000000000001101000000000000111000000000000011010100000000001101000000000000111001000000000011100100000000001101000000000000111000000000000011010000000000001110000000000000110101000000000011010000000000001110010000000000111001000000000011010000000000001110000000000000110100000000000011100000000000001101010000000000110101000000000011010100000000001100110000000000110100000000000011100000000000001101000000000000111000000000000011010100000000001101000000000000110001000000000011000000000000001100010000000000110100000000000011100000000000001101000000000000111000000000000011010100000000001100010000000000110101000000000011011100000000001101000000000000111000000000000011010000000000001110000000000000110101000000000011000100000000001101010000000000110101000000000011010000000000001110000000000000110100000000000011100000000000001101010000000000110001000000000011010100000000001101110000000000110100000000000011100000000000001101000000000000111000000000000011010100000000001101000000000000111001000000000011100100000000001101000000000000111000000000000011010000000000001110000000000000110101000000000011010000000000001110010000000000111001000000000011010000000000001110000000000000110100000000000011100000000000001101010000000000110101000000000011010100000000001100110000000000110100000000000011100000000000001101000000000000111000000000000011010100000000001101000000000000110001000000000011000000000000001100010000000000110100000000000011100000000000001101000000000000111000000000000011010100000000001100100000000000111001000000000011100100000000001101000000000000111000000000000011010000000000001110000000000000110101000000000011000100000000001101010000000000110101000000000011010000000000001110000000000000110100000000000011100000000000001101010000000000110001000000000011010100000000001101110000000000110100000000000011100000000000001101000000000000111000000000000011010100000000001101000000000000111001000000000011100100000000001101000000000000111000000000000011010000000000001110000000000000110101000000000011010000000000001110010000000000111001000000000011010000000000001110000000000000110100000000000011100000000000001101010000000000110101000000000011010100000000001100110000000000110100000000000011100000000000001101000000000000111000000000000011010100000000001101000000000000110001000000000011000000000000001100010000000000110100000000000011100000000000001101000000000000111000000000000011010100000000001100100000000000111001000000000011100100000000001101000000000000111000000000000011010000000000001110000000000000110101000000000011000100000000001101010000000000110101000000000011010000000000001110000000000000110100000000000011100000000000001101010000000000110001000000000011010100000000001101110000000000110100000000000011100000000000001101000000000000111000000000000011010100000000001101000000000000111001000000000011100100000000001101000000000000111000000000000011010000000000001110000000000000110101000000000011010000000000001110010000000000111001000000000011010000000000001110000000000000110100000000000011100000000000001101010000000000110101000000000011010100000000001100110000000000110100000000000011100000000000001101000000000000111000000000000011010100000000001101000000000000110001000000000011000000000000001100010000000000110100000000000011100000000000001101000000000000111000000000000011010100000000001100110000000000110101000000000011001100000000001101000000000000111000000000000011010000000000001110000000000000110101000000000011000100000000001101010000000000110101000000000011010000000000001110000000000000110100000000000011100000000000001101010000000000110001000000000011010100000000001101110000000000110100000000000011100000000000001101000000000000111000000000000011010100000000001101000000000000111001000000000011100100000000001101000000000000111000000000000011010000000000001110000000000000110101000000000011010000000000001110010000000000111001000000000011010000000000001110000000000000110100000000000011100000000000001101010000000000110101000000000011010100000000001100110000000000110100000000000011100000000000001101000000000000111000000000000011010100000000001101000000000000110001000000000011000000000000001100010000000000110100000000000011100000000000001101000000000000111000000000000011010100000000001100100000000000110001000000000011000000000000001100010000000000110100000000000011100000000000001101000000000000111000000000000011010100000000001100010000000000110101000000000011010100000000001101000000000000111000000000000011010000000000001110000000000000110101000000000011000100000000001101010000000000110111000000000011010000000000001110000000000000110100000000000011100000000000001101010000000000110100000000000011100100000000001110010000000000110100000000000011100000000000001101000000000000111000000000000011010100000000001101000000000000111001000000000011100100000000001101000000000000111000000000000011010000000000001110000000000000110101000000000011010100000000001101010000000000110011000000000011010000000000001110000000000000110100000000000011100000000000001101010000000000110100000000000011000100000000001100000000000000110001", "i006e0075006c006c00390037004e006e0075006c006c003900370055006e0075006c006c00390037004c006e0075006c006c00390037004c006e0075006c006c003900370039006e0075006c006c003900370037006e0075006c006c00390037h006e0075006c006c00390037004e006e0075006c006c003900370055006e0075006c006c00390037004c006e0075006c006c00390037004c006e0075006c006c003900370039006e0075006c006c003900370037006e0075006c006c00390037i006e0075006c006c00390037004e006e0075006c006c003900370055006e0075006c006c00390037004c006e0075006c006c00390037004c006e0075006c006c003900370039006e0075006c006c003900370037006e0075006c006c00390037h006e0075006c006c00390037004e006e0075006c006c003900370055006e0075006c006c00390037004c006e0075006c006c00390037004c006e0075006c006c003900370039006e0075006c006c003900370037006e0075006c006c00390037h006e0075006c006c00390037004e006e0075006c006c003900370055006e0075006c006c00390037004c006e0075006c006c00390037004c006e0075006c006c003900370039006e0075006c006c003900370037006e0075006c006c00390037i006e0075006c006c00390037004e006e0075006c006c003900370055006e0075006c006c00390037004c006e0075006c006c00390037004c006e0075006c006c003900370039006e0075006c006c003900370037006e0075006c006c00390037h006e0075006c006c00390037004e006e0075006c006c003900370055006e0075006c006c00390037004c006e0075006c006c00390037004c006e0075006c006c003900370039006e0075006c006c003900370037006e0075006c006c00390037i48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test493");
        java.lang.String str1 = strman.Strman.reverseuNDERbAR;NULLmdaXmtaXmtaWmdaWmdaWmdeWmtaXmteWmdaWmdaWmdaWmteXmdeXmdaWmdaWmdaWmdeXmtaXmtaWmdaWmdaWmdeXmtaXmtaWmdaWmdaWmdaXmdaXmteWmdaWmdaWmdaWmdaXmtaXmtaWmdaWmdaWmdaWmteWmteWmdaWmdaWmdaXmdeWmteXmdaWmdaWmdaWmdeXmtaXmtaWmdaWmdaWmdeWmdeWmteWmdaWmdaWmdaWmdaXmdeXmdaWmdaWmdaWmtaXmtaXmdaWmdaWmdaWmdeWmdeWmteWmdaWmdaWmdaWmdaXmdeXmdaWmdaWmdaWAwHPAgLOAwHPAgLOAwHPAgLOAwHPAgLOAwHPAgLOAwHPAgLOAwHPAgLOAwHPAgLOAwHPAgLOAwHPAgLOAwHPAgLOAwHPAgLOAwHPAgLOAwHPAgLOAwHPAgLOAwHPAgLOAwHPAgLOAwHPAgLOAwHPAgLOAwHPAgLOAwHPAgLOAwHPAgLOAwHPAgLOAwHPAgLOAwHPAgLOAwHPAgLOAwHPAgLOAwHPAgLOAwHPAgLOAwHPAgLOAwHPAgLOAwHPAgLOAwHPAgLOAs
        org.junit.Assert.assertTrue("'" + strsAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAWadmWadmWadmXedmXadmWadmWadmWadmWetmWedmWedmWadmWadmWadmXatmXatmWadmWadmWadmXedmXadmWadmWadmWadmWetmWedmWedmWadmWadmWatmXatmXedmWadmWadmWadmXetmWedmXadmWadmWadmWetmWetmWadmWadmWadmWatmXatmXadmWadmWadmWadmWetmXadmXadmWadmWadmWatmXatmXedmWadmWadmWatmXatmXedmWadmWadmWadmXedmXetmWadmWadmWadmWetmXatmWedmWadmWadmWatmXatmXadmLLUN;RAbREDNustr1.equalssAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAWadmWadmWadmXedmXadmWadmWadmWadmWetmWedmWedmWadmWadmWadmXatmXatmWadmWadmWadmXedmXadmWadmWadmWadmWetmWedmWedmWadmWadmWatmXatmXedmWadmWadmWadmXetmWedmXadmWadmWadmWetmWetmWadmWadmWadmWatmXatmXadmWadmWadmWadmWetmXadmXadmWadmWadmWatmXatmXedmWadmWadmWatmXatmXedmWadmWadmWadmXedmXetmWadmWadmWadmWetmXatmWedmWadmWadmWatmXatmXadmLLUN;RAbREDNu
    }

    @Test
    public void test494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test494");
        try {
            java.lang.String str3 = strman.Strman.slicellun779llun979llunl79llunl79llunu79llunn79llun79llun779llun979llunl79llunl79llunu79llunn79llunMda2 ztaw nz uw mdzj mda2 yz aw mzkw mdm3nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullint) (byte) 100, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -90");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        }
    }

    @Test
    public void test495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test495");
        java.lang.String[] strArray4 = strman.Strman.words("", "hi!");
        java.lang.String str5 = strman.Strman.format("79llun779llun979llunL79llunL79llunU79llunN79llun", strArray4);
        boolean boolean7 = strman.Strman.containsAny("79llun!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ihH ihI", strArray4, false);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "79llun779llun979llunL79llunL79llunU79llunN79llun" + "'", str5.equals("79llun779llun979llunL79llunL79llunU79llunN79llun"));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test496");
        java.lang.String str2 = strman.Strman.repeat("100", (int) 'a');
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100" + "'", str2.equals("100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100"));
    }

    @Test
    public void test497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test497");
        java.lang.String str3 = strman.Strman.rightPad("006E0075006C006C00390037006E0075006C006C00390037006E0075006C006C00390037006E0075006C006C00390037006E0075006C006C00390037006E0075006C006C00390037006E0075006C006C00390037006E0075006C006C00390037006E0075006C006C00390037006E0075006C006C00390037nULL", "!HI!HI!HI!", 2851);
    }

    @Test
    public void test498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test498");
        java.lang.String[] strArray1 = strman.Strman.lines("00110001170010800108000570005500078001100011700108001080005700055000850011000117001080010800057000550007600110001170010800108000570005500076001100011700108001080005700055000570011000117001080010800057000550005500110001170010800108000570005500057000550004900048");
        org.junit.Assert.assertNotNull(strArray1);
    }

    @Test
    public void test499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test499");
        java.util.Optional<java.lang.String> strOptional1 = strman.Strman.tail
        org.junit.Assert.assertNotNull(strOptional1);
    }

    @Test
    public void test500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test500");
        long long2 = strman.Strman.countSubstr("bXctaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktbnVsbDk3aGktbnVsbDk3bm51bA==", "nhihiHiHiuhihiHiHilhihiHiHil");
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
    }
}

