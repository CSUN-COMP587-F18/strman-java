import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest11 {

    public static boolean debug = false;

    @Test
    public void test001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test001");
        java.lang.String str1 = strman.Strman.capitalizef006800690030003000300030003000300030003000300031003000300031003000300030003000300030003000300030003000300030003100310030003100300030003100390037005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f006e0075006c006c
        org.junit.Assert.assertTrue("'" + strf006800690030003000300030003000300030003000300031003000300031003000300030003000300030003000300030003000300030003100310030003100300030003100390037005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f006e0075006c006c0039003700680069003000300033003700300030003300390030003000360063003000300036006300300030003700350030003000360065003000300033003700300030003300370030003000330039003000300036006300300030003600630030003000370035003000300036006500300030003300390030003000330037003000300033003900300030003600630030003000360063003000300037003500300030003600650030003000340063003000300033003700300030003300390030003000360063003000300036006300300030003700350030003000360065003000300034006300300030003300370030003000330039003000300036006300300030003600630030003000370035003000300036006500300030003500350030003000330037003000300033003900300030003600630030003000360063003000300037003500300030003600650030003000340065003000300033003700300030003300390030003000360063003000300036006300300030003700350030003000360065" + "'", str1.equalsf006800690030003000300030003000300030003000300031003000300031003000300030003000300030003000300030003000300030003100310030003100300030003100390037005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f00680069005f006e0075006c006c0039003700680069003000300033003700300030003300390030003000360063003000300036006300300030003700350030003000360065003000300033003700300030003300370030003000330039003000300036006300300030003600630030003000370035003000300036006500300030003300390030003000330037003000300033003900300030003600630030003000360063003000300037003500300030003600650030003000340063003000300033003700300030003300390030003000360063003000300036006300300030003700350030003000360065003000300034006300300030003300370030003000330039003000300036006300300030003600630030003000370035003000300036006500300030003500350030003000330037003000300033003900300030003600630030003000360063003000300037003500300030003600650030003000340065003000300033003700300030003300390030003000360063003000300036006300300030003700350030003000360065"));
    }

    @Test
    public void test002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test002");
        int int3 = strman.Strman.lastIndexOf("100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100", "Hi\\ hihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100", true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
    }

    @Test
    public void test003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test003");
        java.lang.String str1 = strman.Strman.toSnakeCase("Null97n uLLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULL");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "null97n_u_l_l_n_u_l_l_n_u_l_l_n_u_l_l_n_u_l_l_n_u_l_l_n_u_l_l_n_u_l_l_n_u_l_l_n_u_l_l_n_u_l_l_n_u_l_l_n_u_l_l_n_u_l_l_n_u_l_l_n_u_l_l_n_u_l_l_n_u_l_l_n_u_l_l_n_u_l_l_n_u_l_l_n_u_l_l_n_u_l_l_n_u_l_l_n_u_l_l_n_u_l_l_n_u_l_l_n_u_l_l_n_u_l_l_n_u_l_l_n_u_l_l_n_u_l_l_n_u_l_l_n_u_l_l_n_u_l_l_n_u_l_l_n_u_l_l_n_u_l_l_n_u_l_l_n_u_l_l_n_u_l_l_n_u_l_l_n_u_l_l_n_u_l_l_n_u_l_l_n_u_l_l_n_u_l_l_n_u_l_l" + "'", str1.equals("null97n_u_l_l_n_u_l_l_n_u_l_l_n_u_l_l_n_u_l_l_n_u_l_l_n_u_l_l_n_u_l_l_n_u_l_l_n_u_l_l_n_u_l_l_n_u_l_l_n_u_l_l_n_u_l_l_n_u_l_l_n_u_l_l_n_u_l_l_n_u_l_l_n_u_l_l_n_u_l_l_n_u_l_l_n_u_l_l_n_u_l_l_n_u_l_l_n_u_l_l_n_u_l_l_n_u_l_l_n_u_l_l_n_u_l_l_n_u_l_l_n_u_l_l_n_u_l_l_n_u_l_l_n_u_l_l_n_u_l_l_n_u_l_l_n_u_l_l_n_u_l_l_n_u_l_l_n_u_l_l_n_u_l_l_n_u_l_l_n_u_l_l_n_u_l_l_n_u_l_l_n_u_l_l_n_u_l_l_n_u_l_l"));
    }

    @Test
    public void test004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test004");
        java.lang.String str2 = strman.Strman.removeLeft("48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101Nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull", "null97hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!nnull97hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!unull97hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!lnull97hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!lnull979null977null97hihinullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull");
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101Nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull" + "'", str2.equals("48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101Nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull"));
    }

    @Test
    public void test005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test005");
        java.lang.String str1 = strman.Strman.capitalize("hinullhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hiih79llun!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ihhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "Hinullhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hiih79llun!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ihhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100" + "'", str1.equals("Hinullhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hiih79llun!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ihhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100"));
    }

    @Test
    public void test006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test006");
        java.lang.String str2 = strman.Strman.repeat("nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull&UnderBar;nullMDAxMTAxMTAwMDAwMDAwMDEwMTAxMTEwMDAwMDAwMDAwMTExMDExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDAxMDAxMTEwMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAxMDEwMTExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDEwMDEwMTEwMDAwMDAwMDAwMDAxMDExMDAwMDAwMDAwMTAxMTAxMDAwMDAwMDAwMDEwMDEwMTEwMDAwMDAwMDAwMDAxMDExMDAwMDAwMDAwaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaS1oihi-hhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!00000000001100110000000000110101Ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1ntu1nq==", 4342);
    }

    @Test
    public void test007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test007");
        java.lang.String str2 = strman.Strman.toDecamelize("hi!hinullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;nullnullnull&equals;");
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!histr2.equals("hi!hi!0004800048000490004800052000480004800049000480005300048000480004900048000520004800048000490004800053000480004800048000550005600048000480004800056000530004800048000480005500054000480004800048000550005400048000480004800053000550004800048000480005300053000480004800049000490004800048000480004800055000560004800048000480005600053000480004800048000550005400048000480004800055000540004800048000480005300055000480004800048000530005300048000480004900049000550004800048000480005500056000480004800048000560005300048000480004800055000540004800048000480005500054000480004800048000530005500048000480004800053000530004800048000490004800056000480004800048000550005600048000480004800056000530004800048000480005500054000480004800048000550005400048000480004800053000550004800048000480005300053000480004800049000480005600048000480004800055000560004800048000480005600053000480004800048000550005400048000480004800055000540004800048000480005300055000480004800048000530005300048000480004800053000550004800048000480005500056000480004800048000560005300048000480004800055000540004800048000480005500054000480004800048000530005500048000480004800053000530004800048000480005300053000480004800048000550005600048000480004800056000530004800048000480005500054000480004800048000550005400048000480004800053000550004800048000480005300053000480004800048000530005500048000480004800053000530004800048000480005200057000480004800048000520005600048000480004900049000480004800048000480005200053000480004800049000490005500048000480004800052000530004800048000490004800056000480004800048000520005300048000480004900048000560004800048000480005300055000480004800048000530005300048000480004800052000530004800048000490004900048000480004800048000520005300048000480004900049000480004800048000480005200053000480004800049000490005500048000480004800052000530004800048000490004800056"));
    }

    @Test
    public void test008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test008");
        java.lang.String str1 = strman.Strman.toKebabCase("MDAwMDAwMDc2MDAwMDAwMDA3NjAwMDAwMDAwODUwMDAwMDAwMDc4");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "m-d-aw-m-d-aw-m-dc2-m-d-aw-m-d-aw-m-d-a3-nj-aw-m-d-aw-m-d-aw-o-d-uw-m-d-aw-m-d-aw-m-dc4" + "'", str1.equals("m-d-aw-m-d-aw-m-dc2-m-d-aw-m-d-aw-m-d-a3-nj-aw-m-d-aw-m-d-aw-o-d-uw-m-d-aw-m-d-aw-m-dc4"));
    }

    @Test
    public void test009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test009");
        java.lang.String str1 = strman.Strman.toKebabCase("0");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "0" + "'", str1.equals("0"));
    }

    @Test
    public void test010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test010");
        boolean boolean1 = strman.Strman.isUpperCase("hi-hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101ihiHLl97Ll97Ll97Ll97Ll97Ll97Ll97Ll97Ll97Ll97Ll97Ll97Ll97Ll97Ll97Ll97Ll97Ll97Ll97Ll97Ll97Ll97Ll97Ll97Ll97Ll97Ll97Ll97Ll97Ll97Ll97Ll97Ll97Ll97Ll97Ll97Ll97Ll97Ll97");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
    }

    @Test
    public void test011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test011");
        long long4 = strman.Strman.countSubstrtu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 nq==", "Null97 nnull97 unull97 lnull97 lnull979null977null97 null97", true, false);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
    }

    @Test
    public void test012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test012");
        java.lang.String str1 = strman.Strman.formatNumber((long) 7842);
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "7,842" + "'", str1.equals("7,842"));
    }

    @Test
    public void test013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test013");
        try {
            java.lang.String str3 = strman.Strman.decode("HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!", (int) (short) 0, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException; message: radix 0 less than Character.MIN_RADIX");
        } catch (java.lang.NumberFormatException e) {
        }
    }

    @Test
    public void test014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test014");
        java.lang.String str1 = strman.Strman.htmlEncode
    }

    @Test
    public void test015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test015");
        java.lang.String str1 = strman.Strman.capitalize("5");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "5" + "'", str1.equals("5"));
    }

    @Test
    public void test016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test016");
        java.lang.String str1 = strman.Strman.toSnakeCase("hihiMda2 ztaw nz uw mdzj mda2 yz aw mzkw mdm3nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullMDAxMTAxMTAwMDAwMDAwMDEwMTAxMTEwMDAwMDAwMDAwMTExMDExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDAxMDAxMTEwMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAxMDEwMTExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDEwMDEwMTEwMDAwMDAwMDAwMDAxMDExMDAwMDAwMDAwMTAxMTAxMDAwMDAwMDAwMDEwMDEwMTEwMDAwMDAwMDAwMDAxMDExMDAwMDAwMDAwaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaS1o");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "hihi_mda2_ztaw_nz_uw_mdzj_mda2_yz_aw_mzkw_mdm3nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull_m_d_ax_m_t_ax_m_t_aw_m_d_aw_m_d_aw_m_d_ew_m_t_ax_m_t_ew_m_d_aw_m_d_aw_m_d_aw_m_t_ex_m_d_ex_m_d_aw_m_d_aw_m_d_aw_m_d_ex_m_t_ax_m_t_aw_m_d_aw_m_d_aw_m_d_ex_m_t_ax_m_t_aw_m_d_aw_m_d_aw_m_d_ax_m_d_ax_m_t_ew_m_d_aw_m_d_aw_m_d_aw_m_d_ax_m_t_ax_m_t_aw_m_d_aw_m_d_aw_m_d_aw_m_t_ew_m_t_ew_m_d_aw_m_d_aw_m_d_ax_m_d_ew_m_t_ex_m_d_aw_m_d_aw_m_d_aw_m_d_ex_m_t_ax_m_t_aw_m_d_aw_m_d_aw_m_d_ew_m_d_ew_m_t_ew_m_d_aw_m_d_aw_m_d_aw_m_d_ax_m_d_ex_m_d_aw_m_d_aw_m_d_aw_m_t_ax_m_t_ax_m_d_aw_m_d_aw_m_d_aw_m_d_ew_m_d_ew_m_t_ew_m_d_aw_m_d_aw_m_d_aw_m_d_ax_m_d_ex_m_d_aw_m_d_aw_m_d_awa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_s1o" + "'", str1.equals("hihi_mda2_ztaw_nz_uw_mdzj_mda2_yz_aw_mzkw_mdm3nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull_m_d_ax_m_t_ax_m_t_aw_m_d_aw_m_d_aw_m_d_ew_m_t_ax_m_t_ew_m_d_aw_m_d_aw_m_d_aw_m_t_ex_m_d_ex_m_d_aw_m_d_aw_m_d_aw_m_d_ex_m_t_ax_m_t_aw_m_d_aw_m_d_aw_m_d_ex_m_t_ax_m_t_aw_m_d_aw_m_d_aw_m_d_ax_m_d_ax_m_t_ew_m_d_aw_m_d_aw_m_d_aw_m_d_ax_m_t_ax_m_t_aw_m_d_aw_m_d_aw_m_d_aw_m_t_ew_m_t_ew_m_d_aw_m_d_aw_m_d_ax_m_d_ew_m_t_ex_m_d_aw_m_d_aw_m_d_aw_m_d_ex_m_t_ax_m_t_aw_m_d_aw_m_d_aw_m_d_ew_m_d_ew_m_t_ew_m_d_aw_m_d_aw_m_d_aw_m_d_ax_m_d_ex_m_d_aw_m_d_aw_m_d_aw_m_t_ax_m_t_ax_m_d_aw_m_d_aw_m_d_aw_m_d_ew_m_d_ew_m_t_ew_m_d_aw_m_d_aw_m_d_aw_m_d_ax_m_d_ex_m_d_aw_m_d_aw_m_d_awa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_s1o"));
    }

    @Test
    public void test017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test017");
        java.lang.String[] strArray3 = strman.Strman.lines("hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!");
        java.lang.String str4 = strman.Strman.prepend("null97", strArray3);
        boolean boolean5 = strman.Strman.containsAll("hi000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97Nnull97Unull97Lnull97Lnull979null977null97", strArray3);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97" + "'", str4.equals("hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97"));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test018");
        java.lang.String str1 = strman.Strman.removeSpaces("0000000000111001000000000011011100000000001100010000000000110000");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "0000000000111001000000000011011100000000001100010000000000110000" + "'", str1.equals("0000000000111001000000000011011100000000001100010000000000110000"));
    }

    @Test
    public void test019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test019");
        java.lang.String str1 = strman.Strman.reverse("hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!00300030003100310030003000300031003100370030003000310030003800300030003100300038003000300030003500370030003000300035003500300030003000370038003000300031003100300030003000310031003700300030003100300038");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "83000300130003000300730013001300030003000300130013000300030083007300030003000300530053000300030003007300530003000300030083000300130003000300830003001300030003007300130013000300030003001300130003000300!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih" + "'", str1.equals("83000300130003000300730013001300030003000300130013000300030083007300030003000300530053000300030003007300530003000300030083000300130003000300830003001300030003007300130013000300030003001300130003000300!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih"));
    }

    @Test
    public void test020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test020");
        boolean boolean3 = strman.Strman.contains("MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM300078001170010800108000570005500110001100011700108000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97Nnull97Unull97Lnull97Lnull979null977null97Hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!", "MDAxMTAxMTAwMDAwMDAwMDEwMTAxMTEwMDAwMDAwMDAwMTExMDExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDAxMDAxMTEwMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAxMDEwMTExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDEwMDEwMTEwMDAwMDAwMDAwMDAxMDExMDAwMDAwMDAwMTAxMTAxMDAwMDAwMDAwMDEwMDEwMTEwMDAwMDAwMDAwMDAxMDExMDAwMDAwMDAwaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaS1oihi-h", true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test021");
        java.lang.String str3 = strman.Strman.removeLeft("", "", false);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "000720010500033001040010500033nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull1097nullstr3.equals("
    }

    @Test
    public void test022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test022");
        java.lang.String str1 = strman.Strman.upperFirst("hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hiHI_HI");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "Hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hiHI_HI" + "'", str1.equals("Hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hiHI_HI"));
    }

    @Test
    public void test023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test023");
        java.lang.String str4 = strman.Strman.replace("79LLUN779LLUN979LLUNl79LLUNl79LLUNu79LLUNn79LLUN", "79LLUN779LLUN979LLUNl79LLUNl79LLUNu79LLUNn79LLUN79LLUN779LLUN979LLUNl79LLUNl79LLUNu79LLUNn79LLUN", "Mda2ztawnzuwmdzjmda2yzawmzkwmdm300078001170010800108000570005500110001100011700108", true);
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "79LLUN779LLUN979LLUNl79LLUNl79LLUNu79LLUNn79LLUN" + "'", str4.equals("79LLUN779LLUN979LLUNl79LLUNl79LLUNu79LLUNn79LLUN"));
    }

    @Test
    public void test024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test024");
        boolean boolean2 = strman.Strman.isEnclosedBetween("nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull", "");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
    }

    @Test
    public void test025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test025");
        java.lang.String str1 = strman.Strman.toKebabCase("1-NULL97");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "1-n-u-l-l97" + "'", str1.equals("1-n-u-l-l97"));
    }

    @Test
    public void test026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test026");
        java.lang.String str1 = strman.Strman.htmlDecode("IHI97HHI97HI48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "null" + "'", str1.equals("null"));
    }

    @Test
    public void test027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test027");
        java.lang.String[] strArray1 = null;
        java.lang.String str2 = strman.Strman.format("SekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhTlVmtdk3000780011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080005700055000780011000117001080010800057000550008500110001170010800108000570005500076001100011700108001080005700055000760011000117001080010800057000550005700110001170010800108000570005500055001100011700108001080005700055001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001100011700108001080005700055100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100", strArray1);
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "SekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhTlVmtdkstr2.equals("SekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhTlVmtdk3000780011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080005700055000780011000117001080010800057000550008500110001170010800108000570005500076001100011700108001080005700055000760011000117001080010800057000550005700110001170010800108000570005500055001100011700108001080005700055001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001100011700108001080005700055100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100"));
    }

    @Test
    public void test028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test028");
        java.lang.String str1 = strman.Strman.removeSpaces
        org.junit.Assert.assertTrue("'" + strstr1.equals
    }

    @Test
    public void test029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test029");
        java.lang.String str1 = strman.Strman.transliterate("000000000110111000000000011101010000000001101100000000000110110000000000001110010000000000110111000000000100111000000000011011100000000001110101000000000110110000000000011011000000000000111001000000000011011100000000010101010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001001100000000000110111000000000011101010000000001101100000000000110110000000000001110010000000000110111000000000100110000000000011011100000000001110101000000000110110000000000011011000000000000111001000000000011011100000000001110010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000000110111000000000110111000000000011101010000000001101100000000000110110000000000001110010000000000110111");
        org.junit.Assert.assertTrue("'" + strstr1.equals("000000000110111000000000011101010000000001101100000000000110110000000000001110010000000000110111000000000100111000000000011011100000000001110101000000000110110000000000011011000000000000111001000000000011011100000000010101010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001001100000000000110111000000000011101010000000001101100000000000110110000000000001110010000000000110111000000000100110000000000011011100000000001110101000000000110110000000000011011000000000000111001000000000011011100000000001110010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000000110111000000000110111000000000011101010000000001101100000000000110110000000000001110010000000000110111"));
    }

    @Test
    public void test030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test030");
        int int3 = strman.Strman.lastIndexOf("Nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull97Nnull97Unull97Lnull97Lnull979null977null97hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97", "", false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 546 + "'", int3 == 546);
    }

    @Test
    public void test031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test031");
        java.lang.String str1 = strman.Strman.htmlDecode("001040010500110001170010800108000570005500078001100011700108771228561");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "null" + "'", str1.equals("null"));
    }

    @Test
    public void test032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test032");
        java.lang.String[] strArray5 = strman.Strman.chop("MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3", 294);
        java.lang.String str6 = strman.Strman.prepend("00078001170010800108000570005500110001100011700108", strArray5);
        java.lang.String str8 = strman.Strman.join(strArray5, "Hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!");
        java.lang.String str9 = strman.Strman.prepend("00110001170010800108000570005500078001100011700108hi-hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101", strArray5);
        boolean boolean11 = strman.Strman.containsAll("=g2xphwA000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97Nnull97Unull97Lnull97Lnull979null977null97Hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97histrArray5, false);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM300078001170010800108000570005500110001100011700108" + "'", str6.equals("MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM300078001170010800108000570005500110001100011700108"));
        org.junit.Assert.assertTrue("'" + str8 + "' != '" + "MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3" + "'", str8.equals("MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3"));
        org.junit.Assert.assertTrue("'" + str9 + "' != '" + "MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM300110001170010800108000570005500078001100011700108hi-hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101" + "'", str9.equals("MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM300110001170010800108000570005500078001100011700108hi-hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101"));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test033");
        java.lang.String str2 = strman.Strman.removeRight("0004800048000480005200053000480004800049000490005500048000480004800052000530004800048000490004800056NULL97NNUL!ih0004800048000480005200053000480004800049000490005500048000480004800052000530004800048000490004800056NULL97NNUL!ih0004800048000480005200053000480004800049000490005500048000480004800052000530004800048000490004800056NULL97NNUL!ih0004800048000480005200053000480004800049000490005500048000480004800052000530004800048000490004800056NULL97NNUL!ih0004800048000480005200053000480004800049000490005500048000480004800052000530004800048000490004800056NULL97NNUL!ih
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "0004800048000480005200053000480004800049000490005500048000480004800052000530004800048000490004800056NULL97NNUL!ih0004800048000480005200053000480004800049000490005500048000480004800052000530004800048000490004800056NULL97NNUL!ih0004800048000480005200053000480004800049000490005500048000480004800052000530004800048000490004800056NULL97NNUL!ih0004800048000480005200053000480004800049000490005500048000480004800052000530004800048000490004800056NULL97NNUL!ih0004800048000480005200053000480004800049000490005500048000480004800052000530004800048000490004800056NULL97NNUL!ih" + "'", str2.equals("0004800048000480005200053000480004800049000490005500048000480004800052000530004800048000490004800056NULL97NNUL!ih0004800048000480005200053000480004800049000490005500048000480004800052000530004800048000490004800056NULL97NNUL!ih0004800048000480005200053000480004800049000490005500048000480004800052000530004800048000490004800056NULL97NNUL!ih0004800048000480005200053000480004800049000490005500048000480004800052000530004800048000490004800056NULL97NNUL!ih0004800048000480005200053000480004800049000490005500048000480004800052000530004800048000490004800056NULL97NNUL!ih"));
    }

    @Test
    public void test034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test034");
        java.lang.String str2 = strman.Strman.last("000720010500033001040010500033nullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULL1null97null97NnulNULL97NNUL!ih", 607);
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "LNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULL1null97null97NnulNULL97NNUL!ih" + "'", str2.equals("LNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULL1null97null97NnulNULL97NNUL!ih"));
    }

    @Test
    public void test035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test035");
        java.lang.String str2 = strman.Strman.last("00072001050010400105", 546);
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "00072001050010400105" + "'", str2.equals("00072001050010400105"));
    }

    @Test
    public void test036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test036");
        java.util.Map<java.lang.Character, java.lang.Long> charMap1 = strman.Strman.charsCount("nullnullnullnullnullnullnullnullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnullnullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;");
        org.junit.Assert.assertNotNull(charMap1);
    }

    @Test
    public void test037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test037");
        java.lang.String str1 = strman.Strman.swapCasen-u-l-l97-n-n-u-l");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "00072001050010400105001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001100011700108001080005700055001040010500033N-U-L-L97-N-N-U-L" + "'", str1.equals
    }

    @Test
    public void test038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test038");
        java.lang.String str1 = strman.Strman.removeNonWords
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "MDA2006E0075006C006C00390037ZTAW006E0075006C006C00390037NZ006E0075006C006C00390037UW006E0075006C006C00390037MDZJ006E0075006C006C00390037MDA2006E0075006C006C00390037YZ006E0075006C006C00390037AW006E0075006C006C00390037MZKW006E0075006C006C00390037MDM30004800048000490004900048000480004800049000490005500048000480004900048000560004800048000490004800056000480004800048000530005500048000480004800053000530004800048000480005500056000480004800049000490004800048000480004900049000550004800048000490004800056000000005500000000570000000076000000007600000000850000000078000000005500000000550000000057000000007600000000760000000085000000007800000000570000000055000000005700000000760000000076000000008500000000780000000108000000005500000000570000000076000000007600000000850000000078000000010800000000550000000057000000007600000000760000000085000000007800000001170000000055000000005700000000760000000076000000008500000000780000000110000000005500000000570000000076000000007600000000850000000078HIHI" + "'", str1.equals
    }

    @Test
    public void test039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test039");
        boolean boolean2 = strman.Strman.endsWith("1-n-u-l-l97", "MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM300110001170010800108000570005500078001100011700108hi-hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test040");
        java.lang.String[] strArray3 = strman.Strman.chop("hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e", 30);
        boolean boolean5 = strman.Strman.containsAny("!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ihllun", strArray3, false);
        java.lang.String str7 = strman.Strman.join(strArray3, "lunn-79llun!ih79llun!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih-lunn79llun-ih79llun-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ihl-u-n-n-79l-l-u-n");
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test041");
        boolean boolean2 = strman.Strman.unequal("", "nullnullnullnullnullnullnullnullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnullnullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
    }

    @Test
    public void test042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test042");
        java.lang.String[] strArray4 = new java.lang.String[] { "hihi" };
        java.util.List<java.lang.String> strList5 = strman.Strman.zip(strArray4);
        java.lang.String str7 = strman.Strman.join(strArray4, "null97Nnull97Unull97Lnull97Lnull979null977null97");
        java.util.Optional<java.lang.String> strOptional8 = strman.Strman.trimEnd("1101171081085755", strArray4);
        boolean boolean10 = strman.Strman.containsAll("hihi", strArray4, false);
        boolean boolean11 = strman.Strman.isString((java.lang.Object) strArray4);
        boolean boolean12 = strman.Strman.containsAllnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull97nnulnull97null97nnulnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullhi-hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101", strArray4);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertTrue("'" + str7 + "' != '" + "hihi" + "'", str7.equals("hihi"));
        org.junit.Assert.assertNotNull(strOptional8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test043");
        java.lang.String str1 = strman.Strman.swapCase("0031006c0075006e006e00370039006c006c0075006e");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "0031006C0075006E006E00370039006C006C0075006E" + "'", str1.equals("0031006C0075006E006E00370039006C006C0075006E"));
    }

    @Test
    public void test044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test044");
        boolean boolean2 = strman.Strman.inequalnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
    }

    @Test
    public void test045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test045");
        java.lang.String str3 = strman.Strman.surround("00000000001100110000000000110101", "nnullhi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006eunullhi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006elnullhi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006el", "000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97 nnull97 unull97 lnull97 lnull979null977null97 hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!");
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "nnullhi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006eunullhi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006elnullhi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006el00000000001100110000000000110101000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97 nnull97 unull97 lnull97 lnull979null977null97 hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!" + "'", str3.equals("nnullhi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006eunullhi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006elnullhi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006el00000000001100110000000000110101000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97 nnull97 unull97 lnull97 lnull979null977null97 hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!"));
    }

    @Test
    public void test046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test046");
        java.lang.String str1 = strman.Strman.humanize("HiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiNull97hiNull97nnul");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "Hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi null97hi null97nnul" + "'", str1.equals("Hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi null97hi null97nnul"));
    }

    @Test
    public void test047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test047");
        java.lang.String[] strArray4 = strman.Strman.chop("Hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!", 0);
        java.lang.String str5 = strman.Strman.append("000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97Nnull97Unull97Lnull97Lnull979null977null97", strArray4);
        boolean boolean7 = strman.Strman.containsAll("", strArray4, true);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97Nnull97Unull97Lnull97Lnull979null977null97Hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!" + "'", str5.equals("000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97Nnull97Unull97Lnull97Lnull979null977null97Hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!"));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test048");
        int int4 = strman.Strman.indexOf("hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!", "MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=MzU=", 1243, true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
    }

    @Test
    public void test049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test049");
        java.lang.String str2 = strman.Strman.repeat("nULL97NNULhiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiNull97hiNull97nnulhiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiNull97hiNull97nnul", 8704);
    }

    @Test
    public void test050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test050");
        java.lang.String str1 = strman.Strman.lowerFirst("ihi_hhi_hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "ihi_hhi_hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101" + "'", str1.equals("ihi_hhi_hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101"));
    }

    @Test
    public void test051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test051");
        java.util.Optional<java.lang.String> strOptional1 = strman.Strman.tail("null97hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!nnull97hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!unull97hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!lnull97hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!lnull979null977null97n-u-l-l97-n-ullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull");
        org.junit.Assert.assertNotNull(strOptional1);
    }

    @Test
    public void test052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test052");
        boolean boolean1 = strman.Strman.isBlank
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
    }

    @Test
    public void test053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test053");
        java.lang.String str1 = strman.Strman.removeNonWordsihihh_ihInullhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!nullnull97nnulnull971lunn79llun");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "00048000480004800048000480004800048000480004800048000490004900048000480004900049000480004800048000480004800048000480004800048000480004900049000480004900048000490011000117001080010800057000550011000110001170010810145848435558484994584849945848475158484551584841012584841014584843555848499458484994584847515848455158484353584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484751584841014584843555848499458484994584847515848455158484551584841014584843555848499458484994584847515848455158484ihihh_ihInullhihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihinullnull97nnulnull971lunn79llun" + "'", str1.equalsihihh_ihInullhihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihinullnull97nnulnull971lunn79llun"));
    }

    @Test
    public void test054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test054");
        java.lang.String[] strArray1 = null;
        java.lang.String str2 = strman.Strman.appendArray("hihi", strArray1);
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hihi" + "'", str2.equals("hihi"));
    }

    @Test
    public void test055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test055");
        java.lang.String[] strArray2 = strman.Strman.words("hi!hi!nullNULL971null97null97Nnull97Unull97Lnull97Lnull979null977null97", "ihi Hhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97");
        org.junit.Assert.assertNotNull(strArray2);
    }

    @Test
    public void test056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test056");
        java.lang.String str1 = strman.Strman.transliterate("HiHihiHihiHihiHihiHihiHihiHihiHihiHihiHi");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "HiHihiHihiHihiHihiHihiHihiHihiHihiHihiHi" + "'", str1.equals("HiHihiHihiHihiHihiHihiHihiHihiHihiHihiHi"));
    }

    @Test
    public void test057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test057");
        int int4 = strman.Strman.lastIndexOf("bnVsbG5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTA==", "hiih79llun-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ihhi4848515548485157484854994848549948485553484854101484851554848515548485157484854994848549948485553484854101484851574848515548485157484854994848549948485553484854101484852994848515548485157484854994848549948485553484854101484852994848515548485157484854994848549948485553484854101484853534848515548485157484854994848549948485553484854101484852101484851554848515748485499484854994848555348485410100000000010010000000000001101001", 740, true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
    }

    @Test
    public void test058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test058");
        java.lang.String[] strArray2 = strman.Strman.split("000780011700108001080005700055000780011000117001080010800057000550008500110001170010800108000570005500076001100011700108001080005700055000760011000117001080010800057000550005700110001170010800108000570005500055001100011700108001080005700055000000000110100000000000011010010000000000100001", "0");
        org.junit.Assert.assertNotNull(strArray2);
    }

    @Test
    public void test059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test059");
        boolean boolean1 = strman.Strman.isBlank("hiHinull97nnulnull97null97nnull97unull97lnull97lnull979null977null97hihihiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiNull97hiNullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
    }

    @Test
    public void test060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test060");
        java.util.Optional<java.lang.String> strOptional1 = strman.Strman.tail("Null97nnul1097null9710971lunn79llun");
        org.junit.Assert.assertNotNull(strOptional1);
    }

    @Test
    public void test061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test061");
        java.lang.String str3 = strman.Strman.ensureLeft("0004800048000480005200053000480004800049000490005500048000480004800052000530004800048000490004800056", "000000000011000100000000001100000000000000110001000000000011000100000000001101110000000000110001000000000011000000000000001110000000000000110001000000000011000000000000001110000000000000110101000000000011011100000000001101010000000000110101000000000100111000000000011101010000000001101100000000000110110000000000001110010000000000110111000000000100111000000000011011100000000001110101000000000110110000000000011011000000000000111001000000000011011100000000010101010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001001100000000000110111000000000011101010000000001101100000000000110110000000000001110010000000000110111000000000100110000000000011011100000000001110101000000000110110000000000011011000000000000111001000000000011011100000000001110010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000000110111000000000110111000000000011101010000000001101100000000000110110000000000001110010000000000110111000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97nnull97unull97lnull97lnull979null977null97hihihi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull", true);
        org.junit.Assert.assertTrue("'" + strnull97null97nnull97unull97lnull97lnull979null977null97hihihi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull0004800048000480005200053000480004800049000490005500048000480004800052000530004800048000490004800056" + "'", str3.equals("000000000011000100000000001100000000000000110001000000000011000100000000001101110000000000110001000000000011000000000000001110000000000000110001000000000011000000000000001110000000000000110101000000000011011100000000001101010000000000110101000000000100111000000000011101010000000001101100000000000110110000000000001110010000000000110111000000000100111000000000011011100000000001110101000000000110110000000000011011000000000000111001000000000011011100000000010101010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001001100000000000110111000000000011101010000000001101100000000000110110000000000001110010000000000110111000000000100110000000000011011100000000001110101000000000110110000000000011011000000000000111001000000000011011100000000001110010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000000110111000000000110111000000000011101010000000001101100000000000110110000000000001110010000000000110111000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97nnull97unull97lnull97lnull979null977null97hihihi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull0004800048000480005200053000480004800049000490005500048000480004800052000530004800048000490004800056"));
    }

    @Test
    public void test062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test062");
        java.lang.String str1 = strman.Strman.humanize("n-u-l-l97-n-n-u-lN u l l97 n n u lhi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi null97hi null97nnul hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!null97 nnul hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi null97 hi 00370039006 c006 c0075006 e003700370039006 c006 c0075006 e003900370039006 c006 c0075006 e004 c00370039006 c006 c0075006 e004 c00370039006 c006 c0075006 e005500370039006 c006 c0075006 e004 e00370039006 c006 c0075006 e7210533hi!hi!hi!hi!hi!hi!hi!hi!hi!hn ullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnulli!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hihi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi null97hi00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006ehi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "N u l l97 n n u l n u l l97 n n u lhi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi null97hi null97nnul hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!null97 nnul hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi null97 hi 00370039006 c006 c0075006 e003700370039006 c006 c0075006 e003900370039006 c006 c0075006 e004 c00370039006 c006 c0075006 e004 c00370039006 c006 c0075006 e005500370039006 c006 c0075006 e004 e00370039006 c006 c0075006 e7210533hi!hi!hi!hi!hi!hi!hi!hi!hi!hn ullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnulli!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hihi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi null97hi00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006ehi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!" + "'", str1.equals("N u l l97 n n u l n u l l97 n n u lhi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi null97hi null97nnul hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!null97 nnul hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi null97 hi 00370039006 c006 c0075006 e003700370039006 c006 c0075006 e003900370039006 c006 c0075006 e004 c00370039006 c006 c0075006 e004 c00370039006 c006 c0075006 e005500370039006 c006 c0075006 e004 e00370039006 c006 c0075006 e7210533hi!hi!hi!hi!hi!hi!hi!hi!hi!hn ullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnulli!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hihi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi null97hi00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006ehi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!"));
    }

    @Test
    public void test063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test063");
        java.lang.String[] strArray2 = strman.Strman.lines("NULL97NNUL");
        java.util.List<java.lang.String> strList3 = strman.Strman.zip(strArray2);
        java.lang.String str4 = strman.Strman.format("4911011710810857551101171081085755951101101171081085755951171101171081085755951081101171081085755951081101171081085755571101171081085755551101171081085755hi_hi0000000001001000000000000110100197_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_null97hi00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e", strArray2);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(strList3);
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "4911011710810857551101171081085755951101101171081085755951171101171081085755951081101171081085755951081101171081085755571101171081085755551101171081085755hi_hi0000000001001000000000000110100197_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_null97hi00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e" + "'", str4.equals("4911011710810857551101171081085755951101101171081085755951171101171081085755951081101171081085755951081101171081085755571101171081085755551101171081085755hi_hi0000000001001000000000000110100197_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_null97hi00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e"));
    }

    @Test
    public void test064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test064");
        java.lang.String str2 = strman.Strman.last("HiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiNull97hi00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e", 100);
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e" + "'", str2.equals("006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e"));
    }

    @Test
    public void test065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test065");
        int int4 = strman.Strman.indexOfih79llun!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih000000000100100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110100000000000011010010000000000100001000000000110111000000000011101010000000001101100000000000110110000000000001110010000000000110111000000000110100000000000011010010000000000100001", "Nullhi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Hi\\ Null97hi\\ 00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e", 8, true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
    }

    @Test
    public void test066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test066");
        int int4 = strman.Strman.indexOfnIHI97HHI97HI48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101uIHI97HHI97HI48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101lIHI97HHI97HI48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101l10145848435558484994584849945848475158484551584841012584841014584843555848499458484994584847515848455158484353584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484751584841014584843555848499458484994584847515848455158484551584841014584843555848499458484994584847515848455158484ih-ihh-ih-i", (int) '4', true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
    }

    @Test
    public void test067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test067");
        java.lang.String[] strArray1 = strman.Strman.chars("10145848435558484994584849945848475158484551584841012584841014584843555848499458484994584847515848455158484353584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484751584841014584843555848499458484994584847515848455158484551584841014584843555848499458484994584847515848455158484ih-ihllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunlunn79llun790179llun7901lunn79llun001");
        org.junit.Assert.assertNotNull(strArray1);
    }

    @Test
    public void test068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test068");
        java.lang.String[] strArray2 = strman.Strman.words("hi!hi!null", "17210533hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97Nnull97Unull97Lnull97Lnull979null977null97Hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!");
        org.junit.Assert.assertNotNull(strArray2);
    }

    @Test
    public void test069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test069");
        java.lang.String str2 = strman.Strman.ensureLeft("n_u_l_l97_n_n_u_lhi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_null97hi_null97nnulhi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_null97hi_null97nnul", "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000510000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000053");
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000510000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000053n_u_l_l97_n_n_u_lhi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_null97hi_null97nnulhi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_null97hi_null97nnul" + "'", str2.equals("00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000510000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000053n_u_l_l97_n_n_u_lhi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_null97hi_null97nnulhi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_null97hi_null97nnul"));
    }

    @Test
    public void test070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test070");
        java.lang.String str3 = strman.Strman.truncatehihi", 4342, "48541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101nul1097null971097nULL97NNULNullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullhiHi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101!ih");
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "000480004800048000480004900112000480004800048000480004900114000480004800048000480005100105000480004800048000480005100105000480004800048000480005100114000480004800048000480005100107000480004800048000480004900112000480004800048000480004900112000480004800048000480004900114000480004800048000480005100105000480004800048000480005100105000480004800048000480005100114000480004800048000480005100107000480004800048000480004900114000480004800048000480004900112000480004800048000480004900114000480004800048000480005100105000480004800048000480005100105000480004800048000480005100114000480004800048000480005100107000480004800048000480005100105000480004800048000480004900112000480004800048000480004900114000480004800048000480005100105000480004800048000480005100105000480004800048000480005100114000480004800048000480005100107000480004800048000480005100105000480004800048000480004900112000480004800048000480004900114000480004800048000480005100105000480004800048000480005100105000480004800048000480005100114000480004800048000480005100107000480004800048000480005100114000480004800048000480004900112000480004800048000480004900114000480004800048000480005100105000480004800048000480005100105000480004800048000480005100114000480004800048000480005100107000480004800048000480005100107000480004800048000480004900112000480004800048000480004900114000480004800048000480005100105000480004800048000480005100105000480004800048000480005100114000480004800048000480005100107000480004800048000480004900112000480004800048000480004900114000480004800048000480005100105000480004800048000480005100105000480004800048000480005100114000480004800048000480005100107000480004800048000480004900112000480004800048000480004900112000480004800048000480004900114000480004800048000480005100105000480004800048000480005100105000480004800048000480005100114000480004800048000480005100107000480004800048000480004900114000480004800048000480004900112000480004800048000480004900114000480004800048000480005100105000480004800048000480005100105000480004800048000480005100114000480004800048000480005100107000480004800048000480005100105000480004800048000480004900112000480004800048000480004900114000480004800048000480005100105000480004800048000480005100105000480004800048000480005100114000480004800048000480005100107000480004800048000480005100105000480004800048000480004900112000480004800048000480004900114000480004800048000480005100105000480004800048000480005100105000480004800048000480005100114000480004800048000480005100107000480004800048000480005100114000480004800048000480004900112000480004800048000480004900114000480004800048000480005100105000480004800048000480005100105000480004800048000480005100114000480004800048000480005100107000480004800048000480005100107000480004800048000480004900112000480004800048000480004900114000480004800048000480005100105000480004800048000480005100105000480004800048000480005100114000480004800048000480005100107hihi" + "'", str3.equalshihi"));
    }

    @Test
    public void test071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test071");
        boolean boolean1 = strman.Strman.isLowerCase
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
    }

    @Test
    public void test072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test072");
        boolean boolean4 = strman.Strman.endsWith("000000005500000000570000000076000000007600000000850000000078000000005500000000550000000057000000007600000000760000000085000000007800000000570000000055000000005700000000760000000076000000008500000000780000000108000000005500000000570000000076000000007600000000850000000078000000010800000000550000000057000000007600000000760000000085000000007800000001170000000055000000005700000000760000000076000000008500000000780000000110000000005500000000570000000076000000007600000000850000000078", "HI_HI", 240, false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test073");
        java.lang.String[] strArray5 = strman.Strman.lines("hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!");
        java.lang.String str6 = strman.Strman.prepend("null97", strArray5);
        java.util.List<java.lang.String> strList7 = strman.Strman.zip(strArray5);
        java.lang.String str8 = strman.Strman.prepend("000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100", strArray5);
        java.util.Optional<java.lang.String> strOptional9 = strman.Strman.trimEndnull97null97Nnull97Unull97Lnull97Lnull979null977null97Hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!Nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull", strArray5);
        java.lang.Class<?> wildcardClass10 = strArray5.getClass();
        java.util.Optional<java.lang.String> strOptional11 = strman.Strman.trimEnd("0004800048000540010100048000480005500053000480004800054000990004800048000540009900048000480005400101000480004800055000530004800048000540009900048000480005400099000480004800051000570004800048000510005500048000480005400101000480004800054001010004800048000550005300048000480005400099", strArray5);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97" + "'", str6.equals("hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97"));
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertTrue("'" + str8 + "' != '" + "hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100" + "'", str8.equals("hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100"));
        org.junit.Assert.assertNotNull(strOptional9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(strOptional11);
    }

    @Test
    public void test074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test074");
        boolean boolean2 = strman.Strman.isEnclosedBetween("", "MzU=");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test075");
        int int1 = strman.Strman.length("nIHI97HHI97HI48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101uIHI97HHI97HI48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101lIHI97HHI97HI48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101l");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1216 + "'", int1 == 1216);
    }

    @Test
    public void test076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test076");
        java.lang.String str1 = strman.Strman.collapseWhitespace("hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97histr1.equals("hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi
    }

    @Test
    public void test077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test077");
        java.lang.String str1 = strman.Strman.hexEncode
    }

    @Test
    public void test078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test078");
        int int2 = strman.Strman.lastIndexOf("1nullhi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e0000000001001000000000000110100100680069002dull97 nnull97 unull97 lnull97 lnull979null977null97");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
    }

    @Test
    public void test079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test079");
        java.lang.String str1 = strman.Strman.base64Encode("79llunhihi779llun979llun-l79llun-l79llun-u79llun-n79llun-hihi");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "NzlsbHVuaGloaTc3OWxsdW45NzlsbHVuLWw3OWxsdW4tbDc5bGx1bi11NzlsbHVuLW43OWxsdW4taGloaQ==" + "'", str1.equals("NzlsbHVuaGloaTc3OWxsdW45NzlsbHVuLWw3OWxsdW4tbDc5bGx1bi11NzlsbHVuLW43OWxsdW4taGloaQ=="));
    }

    @Test
    public void test080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test080");
        java.lang.String[] strArray3 = strman.Strman.split("0004800048000490004900048000480004800049000490005500048000480004900048000560004800048000490004800056000480004800048000530005500048000480004800053000530004800048000480005500056000480004800049000490004800048000480004900049000550004800048000490004800056", "aWhpX2g
        java.lang.String str4 = strman.Strman.prepend("006e0075006c006c00390037006e002d0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c", strArray3);
        java.util.List<java.lang.String> strList5 = strman.Strman.zip(strArray3);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "0004800048000490004900048000480004800049000490005500048000480004900048000560004800048000490004800056000480004800048000530005500048000480004800053000530004800048000480005500056000480004800049000490004800048000480004900049000550004800048000490004800056006e0075006c006c00390037006e002d0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c" + "'", str4.equals("0004800048000490004900048000480004800049000490005500048000480004900048000560004800048000490004800056000480004800048000530005500048000480004800053000530004800048000480005500056000480004800049000490004800048000480004900049000550004800048000490004800056006e0075006c006c00390037006e002d0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c"));
        org.junit.Assert.assertNotNull(strList5);
    }

    @Test
    public void test081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test081");
        java.lang.String str2 = strman.Strman.removeLeft("591089912010138108108117110108108117110591089912010138108108117110108108117110", "000480004800049000490004800048000480004900049000550004800048001null97null97-nnul-n-u-l-l97-n-n-u-lih");
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "591089912010138108108117110108108117110591089912010138108108117110108108117110" + "'", str2.equals("591089912010138108108117110108108117110591089912010138108108117110108108117110"));
    }

    @Test
    public void test082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test082");
        java.lang.String str1 = strman.Strman.binEncode("MDAxMTAxMTAwMDAwMDAwMDEwMTAxMTEwMDAwMDAwMDAwMTExMDExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDAxMDAxMTEwMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAxMDEwMTExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDEwMDEwMTEwMDAwMDAwMDAwMDAxMDExMDAwMDAwMDAwMTAxMTAxMDAwMDAwMDAwMDEwMDEwMTEwMDAwMDAwMDAwMDAxMDExMDAwMDAwMDAwaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaS1oihiH");
        org.junit.Assert.assertTrue("'" + strstr1.equals
    }

    @Test
    public void test083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test083");
        java.lang.String[] strArray2 = strman.Strman.lines("null97");
        java.lang.String str3 = strman.Strman.prependArraystrArray2);
        java.lang.String str5 = strman.Strman.join(strArray2, "nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull");
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "nullstr3.equals("null97000000000100111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100"));
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "null97" + "'", str5.equals("null97"));
    }

    @Test
    public void test084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test084");
        java.lang.String str3 = strman.Strman.leftPadbnVsbG5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTA==", "hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!", 203);
        org.junit.Assert.assertTrue("'" + strbnVsbG5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTA==" + "'", str3.equalsbnVsbG5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTA=="));
    }

    @Test
    public void test085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test085");
        java.lang.String str3 = strman.Strman.rightPad("00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e006c00370039006c006c0075006e006c00370039006c006c0075006e007500370039006c006c0075006e006e00370039006c006c0075006e00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e006c00370039006c006c0075006e006c00370039006c006c0075006e007500370039006c006c0075006e006e00370039006c006c0075006e", "n_ullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull", (int) (byte) 10);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e006c00370039006c006c0075006e006c00370039006c006c0075006e007500370039006c006c0075006e006e00370039006c006c0075006e00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e006c00370039006c006c0075006e006c00370039006c006c0075006e007500370039006c006c0075006e006e00370039006c006c0075006e" + "'", str3.equals("00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e006c00370039006c006c0075006e006c00370039006c006c0075006e007500370039006c006c0075006e006e00370039006c006c0075006e00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e006c00370039006c006c0075006e006c00370039006c006c0075006e007500370039006c006c0075006e006e00370039006c006c0075006e"));
    }

    @Test
    public void test086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test086");
        java.lang.String[] strArray3 = strman.Strman.between("hi-hinull97nnul", "000780008500076000760005700055001100007800085000760007600057000550011700078000850007600076000570005500108000780008500076000760005700055001080007800085000760007600057000550005700078000850007600076000570005500055000780008500076000760005700055", "MzU=");
        java.lang.String str5 = strman.Strman.join(strArray3, "30");
        java.lang.Class<?> wildcardClass6 = strArray3.getClass();
        java.lang.String[] strArray7 = strman.Strman.removeEmptyStrings(strArray3);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "" + "'", str5.equals(""));
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(strArray7);
    }

    @Test
    public void test087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test087");
        java.lang.String str1 = strman.Strman.capitalize("");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "" + "'", str1.equals(""));
    }

    @Test
    public void test088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test088");
        java.lang.String[] strArray4 = new java.lang.String[] { "hihi" };
        java.util.List<java.lang.String> strList5 = strman.Strman.zip(strArray4);
        java.util.Optional<java.lang.String> strOptional6 = strman.Strman.trimEnd("hi!", strArray4);
        java.lang.String[] strArray7 = strman.Strman.removeEmptyStrings(strArray4);
        java.lang.String str8 = strman.Strman.appendArray("NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97", strArray7);
        java.util.Optional<java.lang.String> strOptional9 = strman.Strman.trimEnd("null97hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!nnull97hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!unull97hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!lnull97hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!lnull979null977null97n_u_l_l97_n_ullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull", strArray7);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNotNull(strOptional6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + str8 + "' != '" + "NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97hihi" + "'", str8.equals("NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97hihi"));
        org.junit.Assert.assertNotNull(strOptional9);
    }

    @Test
    public void test089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test089");
        java.lang.String str4 = strman.Strman.replace("", "nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull", "nULL97", true);
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "" + "'", str4.equals(""));
    }

    @Test
    public void test090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test090");
        try {
            java.lang.String str3 = strman.Strman.slice("NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97", 7842, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -7841");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        }
    }

    @Test
    public void test091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test091");
        java.lang.String str3 = strman.Strman.removeRight("null97hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!nnull97hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!unull97hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!lnull97hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!lnull979null977null97", "000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100NULL97NULL97NNULL97UNULL97LNULL97LNULL979NULL977NULL97HIHIHIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhInULL97HInULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULL", true);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "null97hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!nnull97hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!unull97hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!lnull97hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!lnull979null977null97" + "'", str3.equals("null97hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!nnull97hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!unull97hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!lnull97hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!lnull979null977null97"));
    }

    @Test
    public void test092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test092");
        java.util.Optional<java.lang.String> strOptional1 = strman.Strman.trimStart("2,176");
        org.junit.Assert.assertNotNull(strOptional1);
    }

    @Test
    public void test093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test093");
        java.lang.String str1 = strman.Strman.upperFirst("nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull97nnul1097null971097null97nnulnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullhi-hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "Nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull97nnul1097null971097null97nnulnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullhi-hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101" + "'", str1.equals("Nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull97nnul1097null971097null97nnulnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullhi-hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101"));
    }

    @Test
    public void test094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test094");
        java.lang.String[] strArray4 = strman.Strman.words("Nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull97Nnull97Unull97Lnull97Lnull979null977null97hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97", "hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!");
        java.util.Optional<java.lang.String> strOptional5 = strman.Strman.trimEnd("MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA0ZTAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwNTUwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDRjMDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA0YzAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwMzkwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111001000000000-ih79llun-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih", strArray4);
        java.util.Optional<java.lang.String> strOptional6 = strman.Strman.trimStart("!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH", strArray4);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(strOptional5);
        org.junit.Assert.assertNotNull(strOptional6);
    }

    @Test
    public void test095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test095");
        java.lang.String str1 = strman.Strman.toCamelCase("nullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLihi97hhi97hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "nullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLihi97hhi97hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101" + "'", str1.equals("nullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLihi97hhi97hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101"));
    }

    @Test
    public void test096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test096");
        java.lang.String[] strArray4 = strman.Strman.lines("hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!");
        java.lang.String str5 = strman.Strman.prepend("null97", strArray4);
        java.lang.String str7 = strman.Strman.join(strArray4, "100");
        java.lang.String str8 = strman.Strman.format("006e0075006c006c00390037", strArray4);
        boolean boolean9 = strman.Strman.containsAll("00001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000ihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi-hstrArray4);
        java.lang.String str11 = strman.Strman.join(strArray4, "000000000110100000000000011010010000000000100001");
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97" + "'", str5.equals("hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97"));
        org.junit.Assert.assertTrue("'" + str7 + "' != '" + "hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!" + "'", str7.equals("hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!"));
        org.junit.Assert.assertTrue("'" + str8 + "' != '" + "006e0075006c006c00390037" + "'", str8.equals("006e0075006c006c00390037"));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + str11 + "' != '" + "hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!" + "'", str11.equals("hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!"));
    }

    @Test
    public void test097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test097");
        java.lang.String str3 = strman.Strman.ensureRight("000000000011011100000000001110010000000001101100000000000110110000000000011101010000000001101110000000000011011100000000001101110000000000111001000000000110110000000000011011000000000001110101000000000110111000000000001110010000000000110111000000000011100100000000011011000000000001101100000000000111010100000000011011100000000001101100000000000011011100000000001110010000000001101100000000000110110000000000011101010000000001101110000000000110110000000000001101110000000000111001000000000110110000000000011011000000000001110101000000000110111000000000011101010000000000110111000000000011100100000000011011000000000001101100000000000111010100000000011011100000000001101110000000000011011100000000001110010000000001101100000000000110110000000000011101010000000001101110000000000011011100000000001110010000000001101100000000000110110000000000011101010000000001101110000000000011011100000000001101110000000000111001000000000110110000000000011011000000000001110101000000000110111000000000001110010000000000110111000000000011100100000000011011000000000001101100000000000111010100000000011011100000000001101100000000000011011100000000001110010000000001101100000000000110110000000000011101010000000001101110000000000110110000000000001101110000000000111001000000000110110000000000011011000000000001110101000000000110111000000000011101010000000000110111000000000011100100000000011011000000000001101100000000000111010100000000011011100000000001101110000000000011011100000000001110010000000001101100000000000110110000000000011101010000000001101110", "001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001100011700108001080005700055", false);
        org.junit.Assert.assertTrue("'" + strstr3.equals
    }

    @Test
    public void test098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test098");
        int int4 = strman.Strman.lastIndexOf", "ullnullnullnullnullnullnull-null97nnul1097null971097", 0, true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
    }

    @Test
    public void test099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test099");
        java.lang.String str3 = strman.Strman.truncate("9ihiH7", (int) (short) 100, "n000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97Nnull97Unull97Lnull97Lnull979null977null97u000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97Nnull97Unull97Lnull97Lnull979null977null97l000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97Nnull97Unull97Lnull97Lnull979null977null97l
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "9ihiH7" + "'", str3.equals("9ihiH7"));
    }

    @Test
    public void test100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test100");
        java.lang.String str3 = strman.Strman.rightPad("001040010500110001170010800108000570005500078001100011700108771228561", "656", 0);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "001040010500110001170010800108000570005500078001100011700108771228561" + "'", str3.equals("001040010500110001170010800108000570005500078001100011700108771228561"));
    }

    @Test
    public void test101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test101");
        boolean boolean3 = strman.Strman.isEnclosedBetween("MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM300110001170010800108000570005500078001100011700108hi-hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101", "", "nullhi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_null97hi00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006ehi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!==AbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnb");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test102");
        java.lang.String str4 = strman.Strman.replace("Null97Nnull97Unull97Lnull97Lnull979null977null97NULL97", "hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!", "nullnullnullnullnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexcl", false);
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Null97Nnull97Unull97Lnull97Lnull979null977null97NULL97" + "'", str4.equals("Null97Nnull97Unull97Lnull97Lnull979null977null97NULL97"));
    }

    @Test
    public void test103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test103");
        boolean boolean2 = strman.Strman.contains("196", "ihi Hhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test104");
        java.lang.String str1 = strman.Strman.slugify("nULL97hihi");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "null97hihi" + "'", str1.equals("null97hihi"));
    }

    @Test
    public void test105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test105");
        java.lang.String str3 = strman.Strman.removeRightnull97null97Nnull97Unull97Lnull97Lnull979null977null97Hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!Nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull", "hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_null97hi00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006ehi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!==_abs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnb", true);
        org.junit.Assert.assertTrue("'" + strnull97null97Nnull97Unull97Lnull97Lnull979null977null97Hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!Nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull" + "'", str3.equalsnull97null97Nnull97Unull97Lnull97Lnull979null977null97Hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!Nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull"));
    }

    @Test
    public void test106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test106");
        int int4 = strman.Strman.indexOf("YmnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TTAwMDAwMDAwNTUwMDAwMDAwMDU3MDAwMDAwMDA3NjAwMDAwMDAwNzYwMDAwMDAwMDg1MDAwMDAwMDA3ODAwMDAwMDAwNTUwMDAwMDAwMDU1MDAwMDAwMDA1NzAwMDAwMDAwNzYwMDAwMDAwMDc2MDAwMDAwMDA4NTAwMDAwMDAwNzgwMDAwMDAwMDU3MDAwMDAwMDA1NTAwMDAwMDAwNTcwMDAwMDAwMDc2MDAwMDAwMDA3NjAwMDAwMDAwODUwMDAwMDAwMDc4MDAwMDAwMDEwODAwMDAwMDAwNTUwMDAwMDAwMDU3MDAwMDAwMDA3NjAwMDAwMDAwNzYwMDAwMDAwMDg1MDAwMDAwMDA3ODAwMDAwMDAxMDgwMDAwMDAwMDU1MDAwMDAwMDA1NzAwMDAwMDAwNzYwMDAwMDAwMDc2MDAwMDAwMDA4NTAwMDAwMDAwNzgwMDAwMDAwMTE3MDAwMDAwMDA1NTAwMDAwMDAwNTcwMDAwMDAwMDc2MDAwMDAwMDA3NjAwMDAwMDAwODUwMDAwMDAwMDc4MDAwMDAwMDExMDAwMDAwMDAwNTUwMDAwMDAwMDU3MDAwMDAwMDA3NjAwMDAwMDAwNzYwMDAwMDAwMDg1MDAwMDAwMDA3OGhpaGknULL97", "", 61, true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 61 + "'", int4 == 61);
    }

    @Test
    public void test107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test107");
        java.lang.String[] strArray1 = null;
        java.lang.String str2 = strman.Strman.append("Hi!hi!NULL97", strArray1);
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "Hi!hi!NULL97" + "'", str2.equals("Hi!hi!NULL97"));
    }

    @Test
    public void test108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test108");
        java.lang.String[] strArray3 = strman.Strman.between("10145848435558484994584849945848475158484551584841012584841014584843555848499458484994584847515848455158484353584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484751584841014584843555848499458484994584847515848455158484551584841014584843555848499458484994584847515848455158484ih_ihllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunlunn79llun790179llun7901lunn79llunl79LLUNl79LLUNu79LLUNn79LLUN79LLUN779LLUN979LLUNl79LLUNl79LLUNu79LLUNn79LLUN1101171081085755Null97Nnull97Unull97Lnull97Lnull979null977null97");
        org.junit.Assert.assertNotNull(strArray3);
    }

    @Test
    public void test109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test109");
        java.lang.String str1 = strman.Strman.capitalize("79ll040100");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "79ll040100" + "'", str1.equals("79ll040100"));
    }

    @Test
    public void test110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test110");
        java.lang.String str1 = strman.Strman.toCamelCase("Hihi");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "hihi" + "'", str1.equals("hihi"));
    }

    @Test
    public void test111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test111");
        boolean boolean2 = strman.Strman.inequal("hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e!", "9ihinullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullh7");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
    }

    @Test
    public void test112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test112");
        boolean boolean2 = strman.Strman.unequal("hihiMda2 ztaw nz uw mdzj mda2 yz aw mzkw mdm3nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullMDAxMTAxMTAwMDAwMDAwMDEwMTAxMTEwMDAwMDAwMDAwMTExMDExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDAxMDAxMTEwMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAxMDEwMTExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDEwMDEwMTEwMDAwMDAwMDAwMDAxMDExMDAwMDAwMDAwMTAxMTAxMDAwMDAwMDAwMDEwMDEwMTEwMDAwMDAwMDAwMDAxMDExMDAwMDAwMDAwaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaS1o", "000000000110100000000000011010010000000000100001");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
    }

    @Test
    public void test113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test113");
        int int4 = strman.Strman.lastIndexOf("HiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiNull97hiNull97nnul", "", 8, false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 8 + "'", int4 == 8);
    }

    @Test
    public void test114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test114");
        java.lang.String[] strArray1 = strman.Strman.words("00110001170010800108000570005500078001100011700108");
        org.junit.Assert.assertNotNull(strArray1);
    }

    @Test
    public void test115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test115");
        java.lang.String str1 = strman.Strman.transliterate("000480004800048000480004800048000480004800048000480004900049000480004800049000490004800048000480004800048000480004800048000480004800049000490004800049000480004900110001170010800108000570005500110001100011700108");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "000480004800048000480004800048000480004800048000480004900049000480004800049000490004800048000480004800048000480004800048000480004800049000490004800049000480004900110001170010800108000570005500110001100011700108" + "'", str1.equals("000480004800048000480004800048000480004800048000480004900049000480004800049000490004800048000480004800048000480004800048000480004800049000490004800049000480004900110001170010800108000570005500110001100011700108"));
    }

    @Test
    public void test116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test116");
        java.lang.String[] strArray5 = strman.Strman.between("null97", "00078001170010800108000570005500110001100011700108", "0004800048000490004900048000480004800049000490005500048000480004900048000560004800048000490004800056000480004800048000530005500048000480004800053000530004800048000480005500056000480004800049000490004800048000480004900049000550004800048000490004800056");
        boolean boolean7 = strman.Strman.containsAny("nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull", strArray5, false);
        try {
            java.util.Optional<java.lang.String> strOptional8 = strman.Strman.trimEnd("10145848435558484994584849945848475158484551584841012584841014584843555848499458484994584847515848455158484353584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484751584841014584843555848499458484994584847515848455158484551584841014584843555848499458484994584847515848455158484ihIhhIhI", strArray5);
            org.junit.Assert.fail("Expected exception of type java.util.regex.PatternSyntaxException; message: Unclosed character class near index 3\r\n[]+$\r\n   ^");
        } catch (java.util.regex.PatternSyntaxException e) {
        }
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test117");
        long long4 = strman.Strman.countSubstr("000490004800057000550004800048000480005500056000480004800049000490005500048000480004900048000560004800048000490004800056000480004800048000530005500048000480004800053000530004800048000490004900048000480004800049000490004800048000480004900049000550004800048000490004800056", "!ihnull006900680069005f006800680069002dhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!006900680069005f006800680069002dhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!006900680069005f006800680069002dhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!", true, true);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
    }

    @Test
    public void test118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test118");
        java.lang.String str3 = strman.Strman.ensureLeft("1101171081085755Null97Nnull97Unull97Lnull97Lnull979null977null97", "00078000850007600076000780008500076000760007800085000760007600078000850007600076000780008500076000760007800085000760007600078000850007600076000780008500076000760007800085000760007600078000850007600076000780008500076000760007800085000760007600078000850007600076000780008500076000760007800085000760007600078000850007600076000780008500076000760007800085000760007600078000850007600076000780008500076000760007800085000760007600078000850007600076000780008500076000760007800085000760007600078000850007600076", false);
        org.junit.Assert.assertTrue("'" + strull97Nnull97Unull97Lnull97Lnull979null977null97" + "'", str3.equalsull97Nnull97Unull97Lnull97Lnull979null977null97"));
    }

    @Test
    public void test119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test119");
        java.util.Optional<java.lang.String> strOptional1 = strman.Strman.trimEnd("hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_null97hi00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006ehi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!==AbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbhi-hinull97nnul");
        org.junit.Assert.assertNotNull(strOptional1);
    }

    @Test
    public void test120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test120");
        java.lang.String[] strArray3 = strman.Strman.words("nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull97nnul1097null971097null97nnulnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullhi-hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101", "1097");
        boolean boolean5 = strman.Strman.containsAny("", strArray3, false);
        java.lang.String[] strArray6 = strman.Strman.removeEmptyStrings(strArray3);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strArray6);
    }

    @Test
    public void test121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test121");
        java.lang.String str1 = strman.Strman.toStudlyCase("001040010500110001170010800108000570005500078001100011700108771228561");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "001040010500110001170010800108000570005500078001100011700108771228561" + "'", str1.equals("001040010500110001170010800108000570005500078001100011700108771228561"));
    }

    @Test
    public void test122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test122");
        java.lang.String[] strArray1 = strman.Strman.lines("4,34279llun!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ihH ihI");
        org.junit.Assert.assertNotNull(strArray1);
    }

    @Test
    public void test123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test123");
        java.lang.String str1 = strman.Strman.toCamelCase("000720010500033001040010500033nullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULL");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "000720010500033001040010500033nullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULL" + "'", str1.equals("000720010500033001040010500033nullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULL"));
    }

    @Test
    public void test124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test124");
        java.lang.String[] strArray1 = strman.Strman.chars("00000000001100110000000000110101000000000011001100000000001101010000000000110011000000000011010100000000001100110000000000110101000000000011001100000000001101010000000000110011000000000011010100000000001100110000000000110101");
        org.junit.Assert.assertNotNull(strArray1);
    }

    @Test
    public void test125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test125");
        java.lang.String str1 = strman.Strman.reverse("lunn79llun006900680069005f006800680069002d
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "1300030013004300530083004300830043003300530053005300830043008300430093009300430053008300430083004300930093004300530083004300830043007300530013005300830043008300430053005300130053008300430083004300130003001300230053008300430083004300130003001300430053008300430083004300330053005300530083004300830043009300930043005300830043008300430093009300430053008300430083004300730053001300530083004300830043005300530013005300830043008300430033005300330053008300430083004300130003001300430053008300430083004300330053005300530083004300830043009300930043005300830043008300430093009300430053008300430083004300730053001300530083004300830043005300530013005300830043008300430093009300230053008300430083004300130003001300430053008300430083004300330053005300530083004300830043009300930043005300830043008300430093009300430053008300430083004300730053001300530083004300830043005300530013005300830043008300430093009300230053008300430083004300130003001300430053008300430083004300330053005300530083004300830043009300930043005300830043008300430093009300430053008300430083004300730053001300530083004300830043005300530013005300830043008300430073005300130053008300430083004300130003001300430053008300430083004300330053005300530083004300830043009300930043005300830043008300430093009300430053008300430083004300730053001300530083004300830043005300530013005300830043008300430053005300130053008300430083004300130003001300430053008300430083004300330053005300530083004300830043009300930043005300830043008300430093009300430053008300430083004300730053001300530083004300830043005300530013005300830043008300430096008600d200960086008600f500960086009600null97nnul" + "'", str1.equalsd200960086008600f500960086009600null97nnul"));
    }

    @Test
    public void test126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test126");
        java.lang.String str1 = strman.Strman.decEncode("Hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!");
    }

    @Test
    public void test127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test127");
        long long4 = strman.Strman.countSubstr("00300030003100310030003000300031003100370030003000310030003800300030003100300038003000300030003500370030003000300035003500300030003000370038003000300031003100300030003000310031003700300030003100300038", "nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull", false, true);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
    }

    @Test
    public void test128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test128");
        java.lang.String str1 = strman.Strman.humanize("0000000000110000000000000011000000000000001100000000000000110000000000000011000000000000001100000000000000110000000000000011000000000000001100000000000000110001000000000011000100000000001100000000000000110001000000000011000000000000001100000000000000110000000000000011000000000000001100000000000000110000000000000011000000000000001100000000000000110000000000000011000000000000001100000000000000110000000000000011000100000000001100010000000000110000000000000011000100000000001100000000000000110000000000000011000100000000001100000000000000110000000000000011000000000000001100000000000000110000000000000011000000000000001100000000000000110000000000000Null97");
        org.junit.Assert.assertTrue("'" + strnull97" + "'", str1.equalsnull97"));
    }

    @Test
    public void test129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test129");
        boolean boolean2 = strman.Strman.endsWith("35blVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxM000000005500000000570000000076000000007600000000850000000078000000005500000000550000000057000000007600000000760000000085000000007800000000570000000055000000005700000000760000000076000000008500000000780000000108000000005500000000570000000076000000007600000000850000000078000000010800000000550000000057000000007600000000760000000085000000007800000001170000000055000000005700000000760000000076000000008500000000780000000110000000005500000000570000000076000000007600000000850000000078hihi", "mda2006e0075006c006c00390037ztaw006e0075006c006c00390037nz006e0075006c006c00390037uw006e0075006c006c00390037mdzj006e0075006c006c00390037mda2006e0075006c006c00390037yz006e0075006c006c00390037aw006e0075006c006c00390037mzkw006e0075006c006c00390037mdmhihi");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test130");
        java.lang.String[] strArray3 = strman.Strman.lines("hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!");
        java.lang.String str4 = strman.Strman.prepend("null97", strArray3);
        java.lang.String str6 = strman.Strman.join(strArray3, "006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037Null");
        java.lang.String[] strArray7 = strman.Strman.removeEmptyStrings(strArray3);
        java.lang.String[] strArray8 = strman.Strman.removeEmptyStrings(strArray7);
        boolean boolean10 = strman.Strman.containsAny("!ihnullnull97Nnull97Unull97Lnull97Lnull979null977nuln_u_l_l97_n_ullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnulll97NULL9748485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101", strArray8, false);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97" + "'", str4.equals("hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97"));
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!" + "'", str6.equals("hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!"));
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test131");
        int int4 = strman.Strman.indexOf("", "000490011000117001080010800057000550011000117001080010800057000550009500110001100011700108000950011000095001170009500108000950010800057000550009500110000950011000095001170009500108000330010500104001040007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033000720007300033", (int) ' ', true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
    }

    @Test
    public void test132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test132");
        java.lang.String[] strArray1 = strman.Strman.chars("NULL97N UllnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullHihihihiNULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL979710");
        org.junit.Assert.assertNotNull(strArray1);
    }

    @Test
    public void test133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test133");
        java.lang.String str3 = strman.Strman.removeRight("TlVMTDk31null97null97_nnul_n_u_l_l97_n_n_u_l!ih000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97_nnull97_unull97_lnull97_lnull979null977null97", "LunN79llunnull97null97Nnull97Unull97Lnull97Lnull979null977null97", false);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "TlVMTDk31null97null97_nnul_n_u_l_l97_n_n_u_l!ih000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97_nnull97_unull97_lnull97_lnull979null977null97" + "'", str3.equals("TlVMTDk31null97null97_nnul_n_u_l_l97_n_n_u_l!ih000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97_nnull97_unull97_lnull97_lnull979null977null97"));
    }

    @Test
    public void test134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test134");
        java.lang.String str3 = strman.Strman.truncate("32", 656, "33727333727333727333null
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "32" + "'", str3.equals("32"));
    }

    @Test
    public void test135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test135");
        java.lang.String str1 = strman.Strman.capitalize("9710");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "9710" + "'", str1.equals("9710"));
    }

    @Test
    public void test136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test136");
        long long2 = strman.Strman.countSubstr("n_u_l_l97n_n_u_l_l97u_n_u_l_l97l_n_u_l_l97l_n_u_l_l979_n_u_l_l977_n_u_l_l97", "0004800048000490004900048000480004800049000490005500048000480004900048000560004800048000490004800056000480004800048000530005500048000480004800053000530004800048000480005500056000480004800049000490004800048000480004900049000550004800048000490004800056");
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
    }

    @Test
    public void test137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test137");
        boolean boolean3 = strman.Strman.contains("ihi-h", "Null97Nnull97Unull97Lnull97Lnull979null977null97NULL97", false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test138");
        java.lang.String str1 = strman.Strman.leftTrim("00000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000300000000000000000000000000000000000000000000000000000030100000000000000000000000000000000000000000000000000003010000000000000000000000000000000000000000000000000000300000000000000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000300000000000000000000000000000000000000000000000000000032000000000000000000000000000000000000000000000000000003110000000000000000000000000000000000000000000000000000300000000000000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000313000000000000000000000000000000000000000000000000000031200000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000300000000000000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000003130000000000000000000000000000000000000000000000000000312000000000000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000300000000000000000000000000000000000000000000000000000031100000000000000000000000000000000000000000000000000003130000000000000000000000000000000000000000000000000000300000000000000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000311000000000000000000000000000000000000000000000000000031100000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000300000000000000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000003130000000000000000000000000000000000000000000000000000320000000000000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000300000000000000000000000000000000000000000000000000000031300000000000000000000000000000000000000000000000000003200000000000000000000000000000000000000000000000000000300000000000000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000320000000000000000000000000000000000000000000000000000031100000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000300000000000000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000003130000000000000000000000000000000000000000000000000000312");
        org.junit.Assert.assertTrue("'" + strstr1.equals
    }

    @Test
    public void test139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test139");
        java.lang.String str1 = strman.Strman.startCase
        org.junit.Assert.assertTrue("'" + strstr1.equals
    }

    @Test
    public void test140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test140");
        boolean boolean1 = strman.Strman.isBlank("MDAxMTAxMTAwMDAwMDAwMDEwMTAxMTEwMDAwMDAwMDAwMTExMDExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDAxMDAxMTEwMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAxMDEwMTExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDEwMDEwMTEwMDAwMDAwMDAwMDAxMDExMDAwMDAwMDAwMTAxMTAxMDAwMDAwMDAwMDEwMDEwMTEwMDAwMDAwMDAwMDAxMDExMDAwMDAwMDAwaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaS1oihi-h");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
    }

    @Test
    public void test141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test141");
        boolean boolean2 = strman.Strman.unequal("10145848435558484994584849945848475158484551584841012584841014584843555848499458484994584847515848455158484353584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484751584841014584843555848499458484994584847515848455158484551584841014584843555848499458484994584847515848455158484ih-ihh-ih-i", "nIHI97HHI97HI48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101uIHI97HHI97HI48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101lIHI97HHI97HI48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101l10145848435558484994584849945848475158484551584841012584841014584843555848499458484994584847515848455158484353584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484751584841014584843555848499458484994584847515848455158484551584841014584843555848499458484994584847515848455158484ih-ihh-ih-i");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
    }

    @Test
    public void test142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test142");
        java.lang.String[] strArray1 = strman.Strman.lines("00048000480004800048000480004800048000480004800048000490004900048000480004901097nullnull97nnulhi");
        org.junit.Assert.assertNotNull(strArray1);
    }

    @Test
    public void test143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test143");
        try {
            java.util.Optional<java.lang.String> strOptional2 = strman.Strman.first("N000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97Nnull97Unull97Lnull97Lnull979null977null97u000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97Nnull97Unull97Lnull97Lnull979null977null97l000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97Nnull97Unull97Lnull97Lnull979null977null97l
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 4944");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        }
    }

    @Test
    public void test144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test144");
        java.lang.String str1 = strman.Strman.base64Encode("hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-null97nnulNULL97N UllnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullHihihihiNULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL979710otk0odq4ntq5otq4ndg1ntuz Ndg0odu0mtax Ndg0odux Ntu0odq4nte1ntq4ndg1mtu3ndg0odu0otk0odq4ntq5otq4ndg1ntuz Ndg0odu0mtax Ndg0odux Ntc0odq4nte1ntq4ndg1mtu3");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "aGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktbnVsbDk3aGktbnVsbDk3bm51bE5VTEw5N04gVWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxIaWhpaGloaU5VTEw5N25OVUxMOTd1TlVMTDk3bE5VTEw5N2xOVUxMOTc5TlVMTDk3N05VTEw5Nzk3MTBvdGswb2RxNG50cTVvdHE0bmRnMW50dXogTmRnMG9kdTBtdGF4IE5kZzBvZHV4IE50dTBvZHE0bnRlMW50cTRuZGcxbXR1M25kZzBvZHUwb3RrMG9kcTRudHE1b3RxNG5kZzFudHV6IE5kZzBvZHUwbXRheCBOZGcwb2R1eCBOdGMwb2RxNG50ZTFudHE0bmRnMW10dTM=" + "'", str1.equals("aGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktbnVsbDk3aGktbnVsbDk3bm51bE5VTEw5N04gVWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxIaWhpaGloaU5VTEw5N25OVUxMOTd1TlVMTDk3bE5VTEw5N2xOVUxMOTc5TlVMTDk3N05VTEw5Nzk3MTBvdGswb2RxNG50cTVvdHE0bmRnMW50dXogTmRnMG9kdTBtdGF4IE5kZzBvZHV4IE50dTBvZHE0bnRlMW50cTRuZGcxbXR1M25kZzBvZHUwb3RrMG9kcTRudHE1b3RxNG5kZzFudHV6IE5kZzBvZHUwbXRheCBOZGcwb2R1eCBOdGMwb2RxNG50ZTFudHE0bmRnMW10dTM="));
    }

    @Test
    public void test145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test145");
        java.lang.String str1 = strman.Strman.binEncode("nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull");
    }

    @Test
    public void test146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test146");
        java.lang.String[] strArray1 = strman.Strman.lines("null");
        java.util.List<java.lang.String> strList2 = strman.Strman.zip(strArray1);
        java.lang.Class<?> wildcardClass3 = strArray1.getClass();
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test147");
        java.lang.String[] strArray1 = strman.Strman.lines("Null97nnulnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullbXctaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktbnVsbDk3aGktbnVsbDk3bm51bA==");
        org.junit.Assert.assertNotNull(strArray1);
    }

    @Test
    public void test148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test148");
        boolean boolean3 = strman.Strman.isEnclosedBetween("nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull", "NzlsbHVuNzc5bGx1bjk3OWxsdW5MNzlsbHVuTDc5bGx1blU3OWxsdW5ONzlsbHVu", "sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_tl_vmtdk3");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test149");
        boolean boolean3 = strman.Strman.contains("Hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!00300030003100310030003000300031003100370030003000310030003800300030003100300038003000300030003500370030003000300035003500300030003000370038003000300031003100300030003000310031003700300030003100300038", "006e0075006c006c00390037hihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100", true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test150");
        java.lang.String str3 = strman.Strman.ensureLeft("0", "003300001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000ihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi-hfalse);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "003300001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000ihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi-hstr3.equals("003300001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000ihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi-h
    }

    @Test
    public void test151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test151");
        java.lang.String[] strArray3 = strman.Strman.words("SGloaWloaV9oaGlfaGk0ODQ4NTE1NTQ4NDg1MTU3NDg0ODU0OTk0ODQ4NTQ5OTQ4NDg1NTUzNDg0ODU0MTAxNDg0ODUxNTU0ODQ4NTE1NTQ4NDg1MTU3NDg0ODU0OTk0ODQ4NTQ5OTQ4NDg1NTUzNDg0ODU0MTAxNDg0ODUxNTc0ODQ4NTE1NTQ4NDg1MTU3NDg0ODU0OTk0ODQ4NTQ5OTQ4NDg1NTUzNDg0ODU0MTAxNDg0ODUyOTk0ODQ4NTE1NTQ4NDg1MTU3NDg0ODU0OTk0ODQ4NTQ5OTQ4NDg1NTUzNDg0ODU0MTAxNDg0ODUyOTk0ODQ4NTE1NTQ4NDg1MTU3NDg0ODU0OTk0ODQ4NTQ5OTQ4NDg1NTUzNDg0ODU0MTAxNDg0ODUzNTM0ODQ4NTE1NTQ4NDg1MTU3NDg0ODU0OTk0ODQ4NTQ5OTQ4NDg1NTUzNDg0ODU0MTAxNDg0ODUyMTAxNDg0ODUxNTU0ODQ4NTE1NzQ4NDg1NDk5NDg0ODU0OTk0ODQ4NTU1MzQ4NDg1NDEwMQ==", "ihi97hhi97hi484851554848515748485499484854994848555348485410148485155484851554848515748485499484854994848555348485410148485157484851554848515748485499484854994848555348485410148485299484851554848515748485499484854994848555348485410148485299484851554848515748485499484854994848555348485410148485353484851554848515748485499484854994848555348485410148485210148485155484851574848549948485499484855534848541010NULL971null97null97Nnull97Unull97Lnull97Lnull979null977null
        boolean boolean5 = strman.Strman.containsAll("MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA0ZTAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwNTUwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDRjMDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA0YzAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwMzkwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3Nnullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037hihiullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullNullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull97Nnull97Unull97Lnull97Lnull979null977null97null97", strArray3, true);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test152");
        java.lang.String str1 = strman.Strman.swapCase("1null97null97Nnull97Unull97Lnull97Lnull979null977null97");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "1NULL97NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97" + "'", str1.equals("1NULL97NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97"));
    }

    @Test
    public void test153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test153");
        java.util.Optional<java.lang.String> strOptional1 = strman.Strman.trimEnd("MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA0ZTAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwNTUwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDRjMDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA0YzAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwMzkwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3Nnullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037hihiullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull");
        java.lang.Class<?> wildcardClass2 = strOptional1.getClass();
        org.junit.Assert.assertNotNull(strOptional1);
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test154");
        java.lang.String str1 = strman.Strman.humanize("Hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "Hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!" + "'", str1.equals("Hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!"));
    }

    @Test
    public void test155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test155");
        java.lang.String str1 = strman.Strman.dasherize("null97nULL97");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "null97n-u-l-l97" + "'", str1.equals("null97n-u-l-l97"));
    }

    @Test
    public void test156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test156");
        int int2 = strman.Strman.lastIndexOf("hi!hi!ihnull006900680069005f006800680069002dhihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi006900680069005f006800680069002dhihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi006900680069005f006800680069002dhihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi", "00048000480004800048000480004800048000480004800048000490004900048000480004901097nullnull97nnulhi");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
    }

    @Test
    public void test157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test157");
        try {
            java.lang.String str3 = strman.Strman.decode("null97n-ullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull", 560, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException; message: For input string: \"null97n-ullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull\"");
        } catch (java.lang.NumberFormatException e) {
        }
    }

    @Test
    public void test158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test158");
        java.lang.String str3 = strman.Strman.leftPadc0075006e006e00370039006c006c0075006e", 68);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "MDA2006E0075006C006C00390037ZTAW006E0075006C006C00390037NZ006E0075006C006C00390037UW006E0075006C006C00390037MDZJ006E0075006C006C00390037MDA2006E0075006C006C00390037YZ006E0075006C006C00390037AW006E0075006C006C00390037MZKW006E0075006C006C00390037MDM30004800048000490004900048000480004800049000490005500048000480004900048000560004800048000490004800056000480004800048000530005500048000480004800053000530004800048000480005500056000480004800049000490004800048000480004900049000550004800048000490004800056000000005500000000570000000076000000007600000000850000000078000000005500000000550000000057000000007600000000760000000085000000007800000000570000000055000000005700000000760000000076000000008500000000780000000108000000005500000000570000000076000000007600000000850000000078000000010800000000550000000057000000007600000000760000000085000000007800000001170000000055000000005700000000760000000076000000008500000000780000000110000000005500000000570000000076000000007600000000850000000078HIHI" + "'", str3.equals
    }

    @Test
    public void test159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test159");
        java.util.Map<java.lang.Character, java.lang.Long> charMap1 = strman.Strman.charsCounte0075006c006c00390037");
        org.junit.Assert.assertNotNull(charMap1);
    }

    @Test
    public void test160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test160");
        boolean boolean2 = strman.Strman.unequal("n_u_l_l97_n_ullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull", "35blvmte5vtexovuxmtlvmte5vtexovuxmtlvmte5vtexovuxmtlvmte5vtexovuxmtlvmte5vtexovuxmtlvmte5vtexovuxmtlvmte5vtexovuxmtlvmte5vtexovuxmtlvmte5vtexovuxmtlvmte5vtexovuxmtlvmte5vtexovuxmtlvmte5vtexovuxmtlvmte5vtexovuxmtlvmte5vtexovuxmtlvmte5vtexovuxmtlvmte5vtexovuxm000000005500000000570000000076000000007600000000850000000078000000005500000000550000000057000000007600000000760000000085000000007800000000570000000055000000005700000000760000000076000000008500000000780000000108000000005500000000570000000076000000007600000000850000000078000000010800000000550000000057000000007600000000760000000085000000007800000001170000000055000000005700000000760000000076000000008500000000780000000110000000005500000000570000000076000000007600000000850000000078hihi");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
    }

    @Test
    public void test161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test161");
        java.lang.String[] strArray4 = strman.Strman.words("Nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull97Nnull97Unull97Lnull97Lnull979null977null97hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97", "hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!");
        java.util.Optional<java.lang.String> strOptional5 = strman.Strman.trimEnd("MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA0ZTAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwNTUwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDRjMDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA0YzAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwMzkwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111001000000000-ih79llun-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih", strArray4);
        java.lang.String[] strArray6 = strman.Strman.removeEmptyStrings(strArray4);
        boolean boolean7 = strman.Strman.containsAny("hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hiHI_HI", strArray4);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(strOptional5);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test162");
        int int1 = strman.Strman.length("006E0075006C006C00390037006E0075006C006C00390037006E0075006C006C00390037006E0075006C006C00390037006E0075006C006C00390037006E0075006C006C00390037006E0075006C006C00390037006E0075006C006C00390037006E0075006C006C00390037006E0075006C006C00390037nULLhihi");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 248 + "'", int1 == 248);
    }

    @Test
    public void test163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test163");
        boolean boolean2 = strman.Strman.unequal("000720010500033001040010500033nullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLhiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiNull97hi00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e", "HiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiNull97hiNull97nnul");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
    }

    @Test
    public void test164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test164");
        java.lang.String str2 = strman.Strman.removeLeft("", "1101171081085755000000000179LLUN779LLUN979LLUNl79LLUNl79LLUNu79LLUNn79LLUN10100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100");
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "" + "'", str2.equals(""));
    }

    @Test
    public void test165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test165");
        int int3 = strman.Strman.lastIndexOf("MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM300078001170010800108000570005500110001100011700108000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97Nnull97Unull97Lnull97Lnull979null977null97Hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!", "11HiHinull97nnul", false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
    }

    @Test
    public void test166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test166");
        boolean boolean3 = strman.Strman.contains("48485457484854564848545748485310248485456484854564848545748485010048485456484854574848515248485156484851524848515648485153484851494848515348485153484851524848515648485152484851564848515348485149484851534848515548485152484851564848515248485156484851534848515248485157484851574848515248485156484851524848515648485153484851524848515748485157484851524848515648485152484851564848515348485153484851534848515148485152484851564848515248485156484851534848515248485149484851484848514948485152484851564848515248485156484851534848514948485153484851534848515248485156484851524848515648485153484851494848515348485153484851524848515648485152484851564848515348485149484851534848515548485152484851564848515248485156484851534848515248485157484851574848515248485156484851524848515648485153484851524848515748485157484851524848515648485152484851564848515348485153484851534848515148485152484851564848515248485156484851534848515248485149484851484848514948485152484851564848515248485156484851534848514948485153484851554848515248485156484851524848515648485153484851494848515348485153484851524848515648485152484851564848515348485149484851534848515548485152484851564848515248485156484851534848515248485157484851574848515248485156484851524848515648485153484851524848515748485157484851524848515648485152484851564848515348485153484851534848515148485152484851564848515248485156484851534848515248485149484851484848514948485152484851564848515248485156484851534848515048485157484851574848515248485156484851524848515648485153484851494848515348485153484851524848515648485152484851564848515348485149484851534848515548485152484851564848515248485156484851534848515248485157484851574848515248485156484851524848515648485153484851524848515748485157484851524848515648485152484851564848515348485153484851534848515148485152484851564848515248485156484851534848515248485149484851484848514948485152484851564848515248485156484851534848515048485157484851574848515248485156484851524848515648485153484851494848515348485153484851524848515648485152484851564848515348485149484851534848515548485152484851564848515248485156484851534848515248485157484851574848515248485156484851524848515648485153484851524848515748485157484851524848515648485152484851564848515348485153484851534848515148485152484851564848515248485156484851534848515248485149484851484848514948485152484851564848515248485156484851534848515148485153484851514848515248485156484851524848515648485153484851494848515348485153484851524848515648485152484851564848515348485149484851534848515548485152484851564848515248485156484851534848515248485157484851574848515248485156484851524848515648485153484851524848515748485157484851524848515648485152484851564848515348485153484851534848515148485152484851564848515248485156484851534848515248485149484851484848514948485152484851564848515248485156484851534848515048485149484851484848514948485152484851564848515248485156484851534848514948485153484851534848515248485156484851524848515648485153484851494848515348485155484851524848515648485152484851564848515348485152484851574848515748485152484851564848515248485156484851534848515248485157484851574848515248485156484851524848515648485153484851534848515348485151484851524848515648485152484851564848515348485152484851494848514848485149104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533104105331041053310410533null97nnul1097null971097", "hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!", true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test167");
        long long4 = strman.Strman.countSubstr("HIHIHI6", "1null97null97 Nnul N U L L97 N N U L!ih", false, true);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
    }

    @Test
    public void test168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test168");
        boolean boolean3 = strman.Strman.endsWith("000480004800048000480004900112000480004800048000480004900114000480004800048000480005100105000480004800048000480005100105000480004800048000480005100114000480004800048000480005100107000480004800048000480004900112000480004800048000480004900112000480004800048000480004900114000480004800048000480005100105000480004800048000480005100105000480004800048000480005100114000480004800048000480005100107000480004800048000480004900114000480004800048000480004900112000480004800048000480004900114000480004800048000480005100105000480004800048000480005100105000480004800048000480005100114000480004800048000480005100107000480004800048000480005100105000480004800048000480004900112000480004800048000480004900114000480004800048000480005100105000480004800048000480005100105000480004800048000480005100114000480004800048000480005100107000480004800048000480005100105000480004800048000480004900112000480004800048000480004900114000480004800048000480005100105000480004800048000480005100105000480004800048000480005100114000480004800048000480005100107000480004800048000480005100114000480004800048000480004900112000480004800048000480004900114000480004800048000480005100105000480004800048000480005100105000480004800048000480005100114000480004800048000480005100107000480004800048000480005100107000480004800048000480004900112000480004800048000480004900114000480004800048000480005100105000480004800048000480005100105000480004800048000480005100114000480004800048000480005100107000480004800048000480004900112000480004800048000480004900114000480004800048000480005100105000480004800048000480005100105000480004800048000480005100114000480004800048000480005100107000480004800048000480004900112000480004800048000480004900112000480004800048000480004900114000480004800048000480005100105000480004800048000480005100105000480004800048000480005100114000480004800048000480005100107000480004800048000480004900114000480004800048000480004900112000480004800048000480004900114000480004800048000480005100105000480004800048000480005100105000480004800048000480005100114000480004800048000480005100107000480004800048000480005100105000480004800048000480004900112000480004800048000480004900114000480004800048000480005100105000480004800048000480005100105000480004800048000480005100114000480004800048000480005100107000480004800048000480005100105000480004800048000480004900112000480004800048000480004900114000480004800048000480005100105000480004800048000480005100105000480004800048000480005100114000480004800048000480005100107000480004800048000480005100114000480004800048000480004900112000480004800048000480004900114000480004800048000480005100105000480004800048000480005100105000480004800048000480005100114000480004800048000480005100107000480004800048000480005100107000480004800048000480004900112000480004800048000480004900114000480004800048000480005100105000480004800048000480005100105000480004800048000480005100114000480004800048000480005100107", "Mda2 ztaw nz uw mdzj mda2 yz aw mzkw mdm3nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull000000005500000000570000000076000000007600000000850000000078000000005500000000550000000057000000007600000000760000000085000000007800000000570000000055000000005700000000760000000076000000008500000000780000000108000000005500000000570000000076000000007600000000850000000078000000010800000000550000000057000000007600000000760000000085000000007800000001170000000055000000005700000000760000000076000000008500000000780000000110000000005500000000570000000076000000007600000000850000000078hihi", false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test169");
        java.lang.String str1 = strman.Strman.reverse("n-u-l-l97-n-n-u-lhi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-null97nnulHi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!null97Nnul");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "lunN79llun!ih79llun!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!iHlunn79llun-ih79llun-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ihl-u-n-n-79l-l-u-n" + "'", str1.equals("lunN79llun!ih79llun!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!iHlunn79llun-ih79llun-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ihl-u-n-n-79l-l-u-n"));
    }

    @Test
    public void test170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test170");
        java.util.Optional<java.lang.String> strOptional1 = strman.Strman.trimEnd("10145848435558484994584849945848475158484551584841012584841014584843555848499458484994584847515848455158484353584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484751584841014584843555848499458484994584847515848455158484551584841014584843555848499458484994584847515848455158484ih-ihh_ihI");
        org.junit.Assert.assertNotNull(strOptional1);
    }

    @Test
    public void test171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test171");
        java.lang.String[] strArray5 = strman.Strman.chop("hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!", 100);
        java.lang.String str6 = strman.Strman.format("001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000ihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihiH", strArray5);
        boolean boolean7 = strman.Strman.containsAll("mda2_ztaw_nz_uw_mdzj_mda2_yz_aw_mzkw_mdm3_mda0_ztaw_nm_uw_mdc1_mda2_yz_aw_nm_mw_mdm5_mdaz_nz_aw_ntuw_mdzl_mda3_ntaw_nm_mw_mdzj_mdaz_otaw_mzcw_mdrj_mda2_ztaw_nz_uw_mdzj_mda2_yz_aw_mzkw_mdm3_mda0_yz_aw_nm_uw_mdc1_mda2_yz_aw_nm_mw_mdm5_mdaz_nz_aw_mzkw_mdzl_mda3_ntaw_nm_mw_mdzj_mdaz_otaw_mzcw_mdm3_mda2_ztaw_nz_uw_mdzj_mda2_yz_aw_mzkw_mdmih79llun_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_mw==hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!null97_nnulnull000780008500076000760005700055001100007800085000760007600057000550011700078000850007600076000570005500108000780008500076000760005700055001080007800085000760007600057000550005700078000850007600076000570005500055000780008500076000760005700055_null97n_null97u_null97l_null97l_null979_null977_null979710", strArray5);
        try {
            java.util.Optional<java.lang.String> strOptional8 = strman.Strman.trimStart("1", strArray5);
            org.junit.Assert.fail("Expected exception of type java.util.regex.PatternSyntaxException; message: Illegal/unsupported escape sequence near index 103\r\n^[hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!h\\i!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi\\!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!\\hi!hi!]+\r\n                                                                                                       ^");
        } catch (java.util.regex.PatternSyntaxException e) {
        }
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000ihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihiH" + "'", str6.equals("001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000ihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihiH"));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test172");
        boolean boolean1 = strman.Strman.isBlank
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
    }

    @Test
    public void test173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test173");
        java.lang.String str1 = strman.Strman.decEncode("hi-hi0000000001001000000000000110100197-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "00104001050004500104001050004800048000480004800048000480004800048000480004900048000480004900048000480004800048000480004800048000480004800048000480004800049000490004800049000480004800049000570005500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001100011700108001080005700055001040010500045000480004800051000550004800048000510005700048000480005400099000480004800054000990004800048000550005300048000480005400101000480004800051000550004800048000510005500048000480005100057000480004800054000990004800048000540009900048000480005500053000480004800054001010004800048000510005700048000480005100055000480004800051000570004800048000540009900048000480005400099000480004800055000530004800048000540010100048000480005200099000480004800051000550004800048000510005700048000480005400099000480004800054000990004800048000550005300048000480005400101000480004800052000990004800048000510005500048000480005100057000480004800054000990004800048000540009900048000480005500053000480004800054001010004800048000530005300048000480005100055000480004800051000570004800048000540009900048000480005400099000480004800055000530004800048000540010100048000480005200101000480004800051000550004800048000510005700048000480005400099000480004800054000990004800048000550005300048000480005400101" + "'", str1.equals
    }

    @Test
    public void test174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test174");
        java.lang.String str3 = strman.Strman.insert("Hibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mnull9700370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e", "nullnull97nnul", 1216);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "Hibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtenullnull97nnulx Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mnull9700370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e" + "'", str3.equals("Hibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtenullnull97nnulx Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mhibl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mtl Vmte5vtex Ovux Mnull9700370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e"));
    }

    @Test
    public void test175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test175");
        int int3 = strman.Strman.lastIndexOftrue);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 6560 + "'", int3 == 6560);
    }

    @Test
    public void test176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test176");
        long long4 = strman.Strman.countSubstrllun779llun979llunl79llunl79llunu79llunn79llun79llun779llun979llunl79llunl79llunu79llunn79llunMda2 ztaw nz uw mdzj mda2 yz aw mzkw mdm3nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullih", false, false);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
    }

    @Test
    public void test177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test177");
        java.lang.String str1 = strman.Strman.formatNumber((long) 310);
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "310" + "'", str1.equals("310"));
    }

    @Test
    public void test178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test178");
        boolean boolean3 = strman.Strman.contains("001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih00390037", "ullnullnullnullnullnullnull_null97nnul1097null971097", true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test179");
        boolean boolean2 = strman.Strman.isEnclosedBetween("Mw==Hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!null97Nnul", "45132133451321334513213345");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test180");
        java.lang.String str1 = strman.Strman.lowerFirst("006e0075006c006c00390037hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "006e0075006c006c00390037hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!" + "'", str1.equals("006e0075006c006c00390037hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!"));
    }

    @Test
    public void test181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test181");
        java.lang.String str1 = strman.Strman.rightTrimnull97");
        org.junit.Assert.assertTrue("'" + strnull97" + "'", str1.equalsnull97"));
    }

    @Test
    public void test182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test182");
        boolean boolean1 = strman.Strman.isLowerCase("null97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnulnull97Nnul");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
    }

    @Test
    public void test183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test183");
        java.lang.String[] strArray3 = strman.Strman.split("1-NULL97", "hihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi");
        java.lang.String str4 = strman.Strman.appendArraystrArray3);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + strstr4.equals
    }

    @Test
    public void test184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test184");
        java.lang.String str1 = strman.Strman.removeNonWords("Ih");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "Ih" + "'", str1.equals("Ih"));
    }

    @Test
    public void test185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test185");
        java.lang.String str1 = strman.Strman.base64Encodehihi");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTEyMDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA3MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTEyMDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTEyMDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA3MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTEyMDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA3MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTEyMDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA3MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTEyMDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA3MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTEyMDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA3MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA3MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTEyMDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA3MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTEyMDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA3MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTEyMDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTEyMDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA3MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTEyMDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA3MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTEyMDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA3MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTEyMDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA3MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTEyMDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA3MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA3MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTEyMDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA3aGloaQ==" + "'", str1.equals("MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTEyMDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA3MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTEyMDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTEyMDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA3MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTEyMDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA3MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTEyMDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA3MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTEyMDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA3MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTEyMDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA3MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA3MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTEyMDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA3MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTEyMDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA3MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTEyMDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTEyMDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA3MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTEyMDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA3MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTEyMDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA3MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTEyMDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA3MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTEyMDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA3MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA3MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTEyMDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA3aGloaQ=="));
    }

    @Test
    public void test186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test186");
        java.lang.String str1 = strman.Strman.toSnakeCase("null97nnul1097null971097null97nnulnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullhi-hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "null97nnul1097null971097null97nnulnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullhi_hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101" + "'", str1.equals("null97nnul1097null971097null97nnulnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullhi_hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101"));
    }

    @Test
    public void test187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test187");
        java.lang.String str1 = strman.Strman.swapCase
        org.junit.Assert.assertTrue("'" + strstr1.equals("000000000110111000000000010111110000000001110101000000000101111100000000011011000000000001011111000000000110110000000000001110010000000000110111000000000110111000000000010111110000000001101110000000000101111100000000011101010000000001011111000000000110110000000000010111110000000001101100000000000011100100000000001101110000000001110101000000000101111100000000011011100000000001011111000000000111010100000000010111110000000001101100000000000101111100000000011011000000000000111001000000000011011100000000011011000000000001011111000000000110111000000000010111110000000001110101000000000101111100000000011011000000000001011111000000000110110000000000001110010000000000110111000000000110110000000000010111110000000001101110000000000101111100000000011101010000000001011111000000000110110000000000010111110000000001101100000000000011100100000000001101110000000000111001000000000101111100000000011011100000000001011111000000000111010100000000010111110000000001101100000000000101111100000000011011000000000000111001000000000011011100000000001101110000000001011111000000000110111000000000010111110000000001110101000000000101111100000000011011000000000001011111000000000110110000000000001110010000000000110111"));
    }

    @Test
    public void test188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test188");
        java.lang.String str1 = strman.Strman.leftTrim("6500084000940008400084000550009400094000840008400084000940009400084000840006500055000840008400084000350003500084000840008400055000350008400084000840006500084000940008400084000650008400094000840008400055000940009400084000840008400094000940008400084000");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "6500084000940008400084000550009400094000840008400084000940009400084000840006500055000840008400084000350003500084000840008400055000350008400084000840006500084000940008400084000650008400094000840008400055000940009400084000840008400094000940008400084000" + "'", str1.equals("6500084000940008400084000550009400094000840008400084000940009400084000840006500055000840008400084000350003500084000840008400055000350008400084000840006500084000940008400084000650008400094000840008400055000940009400084000840008400094000940008400084000"));
    }

    @Test
    public void test189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test189");
        java.lang.String str1 = strman.Strman.dasherize("null97nnul1097null971097null97nnulnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullhi00370039006c006c0075006e0068006900680069003700370039006c006c0075006e003900370039006c006c0075006e002d006c00370039006c006c0075006e002d006c00370039006c006c0075006e002d007500370039006c006c0075006e002d006e00370039006c006c0075006e002d0068006900680069hi4848515548485157484854994848549948485553484854101484851554848515548485157484854994848549948485553484854101484851574848515548485157484854994848549948485553484854101484852994848515548485157484854994848549948485553484854101484852994848515548485157484854994848549948485553484854101484853534848515548485157484854994848549948485553484854101484852101484851554848515748485499484854994848555348485410100370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e00000000011010010000000001101000");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "null97nnul1097null971097null97nnulnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullhi00370039006c006c0075006e0068006900680069003700370039006c006c0075006e003900370039006c006c0075006e002d006c00370039006c006c0075006e002d006c00370039006c006c0075006e002d007500370039006c006c0075006e002d006e00370039006c006c0075006e002d0068006900680069hi4848515548485157484854994848549948485553484854101484851554848515548485157484854994848549948485553484854101484851574848515548485157484854994848549948485553484854101484852994848515548485157484854994848549948485553484854101484852994848515548485157484854994848549948485553484854101484853534848515548485157484854994848549948485553484854101484852101484851554848515748485499484854994848555348485410100370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e00000000011010010000000001101000" + "'", str1.equals("null97nnul1097null971097null97nnulnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullhi00370039006c006c0075006e0068006900680069003700370039006c006c0075006e003900370039006c006c0075006e002d006c00370039006c006c0075006e002d006c00370039006c006c0075006e002d007500370039006c006c0075006e002d006e00370039006c006c0075006e002d0068006900680069hi4848515548485157484854994848549948485553484854101484851554848515548485157484854994848549948485553484854101484851574848515548485157484854994848549948485553484854101484852994848515548485157484854994848549948485553484854101484852994848515548485157484854994848549948485553484854101484853534848515548485157484854994848549948485553484854101484852101484851554848515748485499484854994848555348485410100370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e00000000011010010000000001101000"));
    }

    @Test
    public void test190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test190");
        java.lang.String str4 = strman.Strman.replace("nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull", "004e0055004c004c00390037004e004e0055004c002100690068", "000720010500033001040010500033nullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULL1null97null97NnulNULL97NNUL!ih", false);
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull" + "'", str4.equals("nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull"));
    }

    @Test
    public void test191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test191");
        boolean boolean2 = strman.Strman.isEnclosedBetween("00300030003100310030003000300031003100370030003000310030003800300030003100300038003000300030003500370030003000300035003500300030003000370038003000300031003100300030003000310031003700300030003100300038", "nnullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037hihiullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test192");
        java.lang.String str1 = strman.Strman.rightTrim("Null97nnulnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullbXctaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktbnVsbDk3aGktbnVsbDk3bm51bA==");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "Null97nnulnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullbXctaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktbnVsbDk3aGktbnVsbDk3bm51bA==" + "'", str1.equals("Null97nnulnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullbXctaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktaGktbnVsbDk3aGktbnVsbDk3bm51bA=="));
    }

    @Test
    public void test193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test193");
        java.lang.String str2 = strman.Strman.last("null97Nnull97Unull97Lnull97Lnull979null977null97NULL97", 540);
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "null97Nnull97Unull97Lnull97Lnull979null977null97NULL97" + "'", str2.equals("null97Nnull97Unull97Lnull97Lnull979null977null97NULL97"));
    }

    @Test
    public void test194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test194");
        java.lang.String[] strArray3 = strman.Strman.between("hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-null97nnulNULL97N UllnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullHihihihiNULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL979710otk0odq4ntq5otq4ndg1ntuz Ndg0odu0mtax Ndg0odux Ntu0odq4nte1ntq4ndg1mtu3ndg0odu0otk0odq4ntq5otq4ndg1ntuz Ndg0odu0mtax Ndg0odux Ntc0odq4nte1ntq4ndg1mtu3", "72734572735256525653495353525652565349535552565256535257575256525653525757525652565353535152565256535249484952565256534953535256525653495353525652565349535552565256535257575256525653525757525652565353535152565256535249484952565256534953555256525653495353525652565349535552565256535257575256525653525757525652565353535152565256535249484952565256535057575256525653495353525652565349535552565256535257575256525653525757525652565353535152565256535249484952565256535057575256525653495353525652565349535552565256535257575256525653525757525652565353535152565256535249484952565256535153515256525653495353525652565349535552565256535257575256525653525757525652565353535152565256535249484952565256535049484952565256534953535256525653495355525652565352575752565256535257575256525653535351525652565352494849", "110117108108575500000000017900000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97l00000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97l00000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97u00000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97n77900000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97l00000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97l00000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97u00000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97n97900000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97l00000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97l00000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97u00000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97nl7900000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97l00000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97l00000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97u00000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97nl7900000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97l00000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97l00000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97u00000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97nu7900000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97l00000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97l00000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97u00000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97nn7900000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97l00000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97l00000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97u00000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97n10100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100");
        org.junit.Assert.assertNotNull(strArray3);
    }

    @Test
    public void test195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test195");
        boolean boolean1 = strman.Strman.isUpperCase("000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97-nnull97-unull97-lnull97-lnull979null977null97");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
    }

    @Test
    public void test196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test196");
        java.lang.String[] strArray1 = strman.Strman.lines("mw-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-null97nnul");
        org.junit.Assert.assertNotNull(strArray1);
    }

    @Test
    public void test197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test197");
        java.util.Optional<java.lang.String> strOptional2 = strman.Strman.at("HihiNULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97", (-1));
        org.junit.Assert.assertNotNull(strOptional2);
    }

    @Test
    public void test198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test198");
        java.util.Optional<java.lang.String> strOptional1 = strman.Strman.trimStart("hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hihi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi");
        org.junit.Assert.assertNotNull(strOptional1);
    }

    @Test
    public void test199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test199");
        boolean boolean3 = strman.Strman.isEnclosedBetween("000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97 nnull97 unull97 lnull97 lnull979null977null97", "N u l l97 n n u lhi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi null97hi null97nnul hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!null97 nnulihi Hhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97", "0004800048000480005200053000480004800049000490005500048000480004800052000530004800048000490004800056");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test200");
        java.lang.String[] strArray1 = strman.Strman.words("hinullhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101");
        org.junit.Assert.assertNotNull(strArray1);
    }

    @Test
    public void test201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test201");
        try {
            java.lang.String str3 = strman.Strman.decode("Null97nhinullhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101nul1097null971097nULL97NNULNullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullhiHi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101000720010500033001040010500033nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull", 3, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException; message: radix 0 less than Character.MIN_RADIX");
        } catch (java.lang.NumberFormatException e) {
        }
    }

    @Test
    public void test202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test202");
        java.lang.String str1 = strman.Strman.base64Encode("00072001050010400105");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "MDAwNzIwMDEwNTAwMTA0MDAxMDU=" + "'", str1.equals("MDAwNzIwMDEwNTAwMTA0MDAxMDU="));
    }

    @Test
    public void test203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test203");
        java.lang.String str1 = strman.Strman.upperFirst("nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "Nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull" + "'", str1.equals("Nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull"));
    }

    @Test
    public void test204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test204");
        java.lang.String str3 = strman.Strman.insert("TlVMTDk31null97null97_nnul_n_u_l_l97_n_n_u_l!ih000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97_nnull97_unull97_lnull97_lnull979null977null97", "4911011710810857551101171081085755951101101171081085755951171101171081085755951081101171081085755951081101171081085755571101171081085755551101171081085755hi_hi0000000001001000000000000110100197_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_null97hi00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e", 0);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "4911011710810857551101171081085755951101101171081085755951171101171081085755951081101171081085755951081101171081085755571101171081085755551101171081085755hi_hi0000000001001000000000000110100197_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_null97hi00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006eTlVMTDk31null97null97_nnul_n_u_l_l97_n_n_u_l!ih000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97_nnull97_unull97_lnull97_lnull979null977null97" + "'", str3.equals("4911011710810857551101171081085755951101101171081085755951171101171081085755951081101171081085755951081101171081085755571101171081085755551101171081085755hi_hi0000000001001000000000000110100197_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_null97hi00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006eTlVMTDk31null97null97_nnul_n_u_l_l97_n_n_u_l!ih000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97_nnull97_unull97_lnull97_lnull979null977null97"));
    }

    @Test
    public void test205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test205");
        java.lang.String str1 = strman.Strman.upperFirst("4549");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "4549" + "'", str1.equals("4549"));
    }

    @Test
    public void test206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test206");
        java.lang.String str3 = strman.Strman.encode("0010500104001050003200072", 612, 0);
    }

    @Test
    public void test207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test207");
        boolean boolean2 = strman.Strman.inequal("LunN79llunnull97null97Nnull97Unull97Lnull97Lnull979null977null97uVHbslzNO5WdsxWO3Ulb1xGb5cDTuVHbslzNM5WdsxWO3kjb1xGb5czNuVHbslzN", "hihiihi_hhi_hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
    }

    @Test
    public void test208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test208");
        java.lang.String str1 = strman.Strman.removeNonWords("0031006e0075006c006c00390037006e0075006c006c003900370020006e006e0075006c0020006e002000750020006c0020006c003900370020006e0020006e002000750020006c002100690068");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "0031006e0075006c006c00390037006e0075006c006c003900370020006e006e0075006c0020006e002000750020006c0020006c003900370020006e0020006e002000750020006c002100690068" + "'", str1.equals("0031006e0075006c006c00390037006e0075006c006c003900370020006e006e0075006c0020006e002000750020006c0020006c003900370020006e0020006e002000750020006c002100690068"));
    }

    @Test
    public void test209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test209");
        java.lang.String str1 = strman.Strman.base64Encodenull97");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "MDAwMDAwMDAwMDExMDAwMDAwMDAwMDAwMDAxMTAwMDAwMDAwMDAwMDAwMTEwMDAwMDAwMDAwMDAwMDExMDAwMDAwMDAwMDAwMDAxMTAwMDAwMDAwMDAwMDAwMTEwMDAwMDAwMDAwMDAwMDExMDAwMDAwMDAwMDAwMDAxMTAwMDAwMDAwMDAwMDAwMTEwMDAwMDAwMDAwMDAwMDExMDAwMTAwMDAwMDAwMDAxMTAwMDEwMDAwMDAwMDAwMTEwMDAwMDAwMDAwMDAwMDExMDAwMTAwMDAwMDAwMDAxMTAwMDAwMDAwMDAwMDAwMTEwMDAwMDAwMDAwMDAwMDExMDAwMDAwMDAwMDAwMDAxMTAwMDAwMDAwMDAwMDAwMTEwMDAwMDAwMDAwMDAwMDExMDAwMDAwMDAwMDAwMDAxMTAwMDAwMDAwMDAwMDAwMTEwMDAwMDAwMDAwMDAwMDExMDAwMDAwMDAwMDAwMDAxMTAwMDAwMDAwMDAwMDAwMTEwMDAwMDAwMDAwMDAwMDExMDAwMDAwMDAwMDAwMDAxMTAwMDEwMDAwMDAwMDAwMTEwMDAxMDAwMDAwMDAwMDExMDAwMDAwMDAwMDAwMDAxMTAwMDEwMDAwMDAwMDAwMTEwMDAwMDAwMDAwMDAwMDExMDAwMDAwMDAwMDAwMDAxMTAwMDEwMDAwMDAwMDAwMTEwMDAwMDAwMDAwMDAwMDExMDAwMDAwMDAwMDAwMDAxMTAwMDAwMDAwMDAwMDAwMTEwMDAwMDAwMDAwMDAwMDExMDAwMDAwMDAwMDAwMDAxMTAwMDAwMDAwMDAwMDAwMTEwMDAwMDAwMDAwMDAwMDExMDAwMDAwMDAwMDAwMCBudWxsOTc=" + "'", str1.equals("MDAwMDAwMDAwMDExMDAwMDAwMDAwMDAwMDAxMTAwMDAwMDAwMDAwMDAwMTEwMDAwMDAwMDAwMDAwMDExMDAwMDAwMDAwMDAwMDAxMTAwMDAwMDAwMDAwMDAwMTEwMDAwMDAwMDAwMDAwMDExMDAwMDAwMDAwMDAwMDAxMTAwMDAwMDAwMDAwMDAwMTEwMDAwMDAwMDAwMDAwMDExMDAwMTAwMDAwMDAwMDAxMTAwMDEwMDAwMDAwMDAwMTEwMDAwMDAwMDAwMDAwMDExMDAwMTAwMDAwMDAwMDAxMTAwMDAwMDAwMDAwMDAwMTEwMDAwMDAwMDAwMDAwMDExMDAwMDAwMDAwMDAwMDAxMTAwMDAwMDAwMDAwMDAwMTEwMDAwMDAwMDAwMDAwMDExMDAwMDAwMDAwMDAwMDAxMTAwMDAwMDAwMDAwMDAwMTEwMDAwMDAwMDAwMDAwMDExMDAwMDAwMDAwMDAwMDAxMTAwMDAwMDAwMDAwMDAwMTEwMDAwMDAwMDAwMDAwMDExMDAwMDAwMDAwMDAwMDAxMTAwMDEwMDAwMDAwMDAwMTEwMDAxMDAwMDAwMDAwMDExMDAwMDAwMDAwMDAwMDAxMTAwMDEwMDAwMDAwMDAwMTEwMDAwMDAwMDAwMDAwMDExMDAwMDAwMDAwMDAwMDAxMTAwMDEwMDAwMDAwMDAwMTEwMDAwMDAwMDAwMDAwMDExMDAwMDAwMDAwMDAwMDAxMTAwMDAwMDAwMDAwMDAwMTEwMDAwMDAwMDAwMDAwMDExMDAwMDAwMDAwMDAwMDAxMTAwMDAwMDAwMDAwMDAwMTEwMDAwMDAwMDAwMDAwMDExMDAwMDAwMDAwMDAwMCBudWxsOTc="));
    }

    @Test
    public void test210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test210");
        java.util.Optional<java.lang.String> strOptional2 = strman.Strman.at("null97_nnull97_unull97_lnull97_lnull979null977null97_nullsAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAOLgAPHwAWadmWadmWadmXedmXadmWadmWadmWadmWetmWedmWedmWadmWadmWadmXatmXatmWadmWadmWadmXedmXadmWadmWadmWadmWetmWedmWedmWadmWadmWatmXatmXedmWadmWadmWadmXetmWedmXadmWadmWadmWetmWetmWadmWadmWadmWatmXatmXadmWadmWadmWadmWetmXadmXadmWadmWadmWatmXatmXedmWadmWadmWatmXatmXedmWadmWadmWadmXedmXetmWadmWadmWadmWetmXatmWedmWadmWadmWatmXatmXadmLLUN;RAbREDNu
        org.junit.Assert.assertNotNull(strOptional2);
    }

    @Test
    public void test211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test211");
        long long2 = strman.Strman.countSubstr("n000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97Nnull97Unull97Lnull97Lnull979null977null97u000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97Nnull97Unull97Lnull97Lnull979null977null97l000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97Nnull97Unull97Lnull97Lnull979null977null97l97000780011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080011000117001080010800110001170010800108001100011700108001080005700055000780011000117001080010800057000550008500110001170010800108000570005500076001100011700108001080005700055000760011000117001080010800057000550005700110001170010800108000570005500055001100011700108001080005700055001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001100011700108001080005700055100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100", "000550005700076000760008500078000550005500057000760007600085000780005700055000570007600076000850007800108000550005700076000760008500078001080005500057000760007600085000780011700055000570007600076000850007800110000550005700076000760008500078000550005700076000760008500078000550005500057000760007600085000780005700055000570007600076000850007800108000550005700076000760008500078001080005500057000760007600085000780011700055000570007600076000850007800110000550005700076000760008500078");
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
    }

    @Test
    public void test212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test212");
        java.util.Optional<java.lang.String> strOptional1 = strman.Strman.trimStart("0030003000310030003400300030003100300035006e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c004e0055004c004c0031003100300031003100370031003000380031003000380035003700350035003000300030003000300030003000300030003100370039004c004c0055004e003700370039004c004c0055004e003900370039004c004c0055004e006c00370039004c004c0055004e006c00370039004c004c0055004e007500370039004c004c0055004e006e00370039004c004c0055004e
        org.junit.Assert.assertNotNull(strOptional1);
    }

    @Test
    public void test213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test213");
        java.util.Optional<java.lang.String> strOptional2 = strman.Strman.first("Mda2 ztaw nz uw mdzj mda2 yz aw mzkw mdm3nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullMDAxMTAxMTAwMDAwMDAwMDEwMTAxMTEwMDAwMDAwMDAwMTExMDExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDAxMDAxMTEwMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAxMDEwMTExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDEwMDEwMTEwMDAwMDAwMDAwMDAxMDExMDAwMDAwMDAwMTAxMTAxMDAwMDAwMDAwMDEwMDEwMTEwMDAwMDAwMDAwMDAxMDExMDAwMDAwMDAwaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaS1oHi!hi!null97=g2xphwa000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97nnull97unull97lnull97lnull979null977null97hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!00000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100", 2176);
        org.junit.Assert.assertNotNull(strOptional2);
    }

    @Test
    public void test214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test214");
        java.lang.String str3 = strman.Strman.leftPad("n-u-l-l97-n-n-u-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l", "10010110000000000001001000000000", 309);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "n-u-l-l97-n-n-u-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l" + "'", str3.equals("n-u-l-l97-n-n-u-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l"));
    }

    @Test
    public void test215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test215");
        long long4 = strman.Strman.countSubstr("", "null97n-ullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull", false, false);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
    }

    @Test
    public void test216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test216");
        java.lang.String str1 = strman.Strman.rightTrim("Hi!hi!Hi!hi!Hi!hi!Hi!hi!Hi!hi!Hi!hi!Hi!hi!Hi!hi!Hi!hi!Hi!hi!");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "Hi!hi!Hi!hi!Hi!hi!Hi!hi!Hi!hi!Hi!hi!Hi!hi!Hi!hi!Hi!hi!Hi!hi!" + "'", str1.equals("Hi!hi!Hi!hi!Hi!hi!Hi!hi!Hi!hi!Hi!hi!Hi!hi!Hi!hi!Hi!hi!Hi!hi!"));
    }

    @Test
    public void test217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test217");
        java.lang.String[] strArray1 = null;
        try {
            boolean boolean2 = strman.Strman.containsAll("null00300030003000300030003000300030003000310030003000310030003000300030003000300030003000300030003000300031003100300031003000300031", strArray1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test218");
        java.lang.String str1 = strman.Strman.leftTrim("hi!him_d_a2_z_t_aw_nz_uw_m_d_zj_m_d_a2_yz_aw_mzkw_m_d_m3_m_d_a0_z_t_aw_nm_uw_m_dc1_m_d_a2_yz_aw_nm_mw_m_d_m5_m_d_az_nz_aw_n_t_uw_m_d_zl_m_d_a3_n_t_aw_nm_mw_m_d_zj_m_d_az_o_t_aw_mzcw_m_d_rj_m_d_a2_z_t_aw_nz_uw_m_d_zj_m_d_a2_yz_aw_mzkw_m_d_m3_m_d_a0_yz_aw_nm_uw_m_dc1_m_d_a2_yz_aw_nm_mw_m_d_m5_m_d_az_nz_aw_mzkw_m_d_zl_m_d_a3_n_t_aw_nm_mw_m_d_zj_m_d_az_o_t_aw_mzcw_m_d_m3_m_d_a2_z_t_aw_nz_uw_m_d_zj_m_d_a2_yz_aw_mzkw_m_d_m3");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "hi!him_d_a2_z_t_aw_nz_uw_m_d_zj_m_d_a2_yz_aw_mzkw_m_d_m3_m_d_a0_z_t_aw_nm_uw_m_dc1_m_d_a2_yz_aw_nm_mw_m_d_m5_m_d_az_nz_aw_n_t_uw_m_d_zl_m_d_a3_n_t_aw_nm_mw_m_d_zj_m_d_az_o_t_aw_mzcw_m_d_rj_m_d_a2_z_t_aw_nz_uw_m_d_zj_m_d_a2_yz_aw_mzkw_m_d_m3_m_d_a0_yz_aw_nm_uw_m_dc1_m_d_a2_yz_aw_nm_mw_m_d_m5_m_d_az_nz_aw_mzkw_m_d_zl_m_d_a3_n_t_aw_nm_mw_m_d_zj_m_d_az_o_t_aw_mzcw_m_d_m3_m_d_a2_z_t_aw_nz_uw_m_d_zj_m_d_a2_yz_aw_mzkw_m_d_m3" + "'", str1.equals("hi!him_d_a2_z_t_aw_nz_uw_m_d_zj_m_d_a2_yz_aw_mzkw_m_d_m3_m_d_a0_z_t_aw_nm_uw_m_dc1_m_d_a2_yz_aw_nm_mw_m_d_m5_m_d_az_nz_aw_n_t_uw_m_d_zl_m_d_a3_n_t_aw_nm_mw_m_d_zj_m_d_az_o_t_aw_mzcw_m_d_rj_m_d_a2_z_t_aw_nz_uw_m_d_zj_m_d_a2_yz_aw_mzkw_m_d_m3_m_d_a0_yz_aw_nm_uw_m_dc1_m_d_a2_yz_aw_nm_mw_m_d_m5_m_d_az_nz_aw_mzkw_m_d_zl_m_d_a3_n_t_aw_nm_mw_m_d_zj_m_d_az_o_t_aw_mzcw_m_d_m3_m_d_a2_z_t_aw_nz_uw_m_d_zj_m_d_a2_yz_aw_mzkw_m_d_m3"));
    }

    @Test
    public void test219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test219");
        boolean boolean1 = strman.Strman.isUpperCase("1null97null97 Nnul N U L L97 N N U L!ih");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
    }

    @Test
    public void test220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test220");
        java.lang.String[] strArray7 = strman.Strman.split("97", "");
        boolean boolean8 = strman.Strman.containsAll("Hihi", strArray7);
        java.lang.String str9 = strman.Strman.appendArray("", strArray7);
        java.lang.String str11 = strman.Strman.join(strArray7, "ihiH");
        java.lang.String str12 = strman.Strman.appendArray("00000000010010000000000001101001", strArray7);
        boolean boolean14 = strman.Strman.containsAny("Hi!hi!", strArray7, true);
        java.util.List<java.lang.String> strList15 = strman.Strman.zip(strArray7);
        boolean boolean17 = strman.Strman.containsAll("==abs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnbsx_wdux_gb15_gbs_vnb!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!!-h-i!-h-i!-h-i!", strArray7, true);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + str9 + "' != '" + "97" + "'", str9.equals("97"));
        org.junit.Assert.assertTrue("'" + str11 + "' != '" + "9ihiH7" + "'", str11.equals("9ihiH7"));
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "0000000001001000000000000110100197" + "'", str12.equals("0000000001001000000000000110100197"));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(strList15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test221");
        java.lang.String str1 = strman.Strman.leftTrim("null97Nnul");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "null97Nnul" + "'", str1.equals("null97Nnul"));
    }

    @Test
    public void test222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test222");
        java.lang.String str3 = strman.Strman.truncate("ll97", 480, "hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!35blvmte5vtexovuxmtlvmte5vtexovuxmtlvmte5vtexovuxmtlvmte5vtexovuxmtlvmte5vtexovuxmtlvmte5vtexovuxmtlvmte5vtexovuxmtlvmte5vtexovuxmtlvmte5vtexovuxmtlvmte5vtexovuxmtlvmte5vtexovuxmtlvmte5vtexovuxmtlvmte5vtexovuxmtlvmte5vtexovuxmtlvmte5vtexovuxmtlvmte5vtexovuxm000000005500000000570000000076000000007600000000850000000078000000005500000000550000000057000000007600000000760000000085000000007800000000570000000055000000005700000000760000000076000000008500000000780000000108000000005500000000570000000076000000007600000000850000000078000000010800000000550000000057000000007600000000760000000085000000007800000001170000000055000000005700000000760000000076000000008500000000780000000110000000005500000000570000000076000000007600000000850000000078hihi");
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "ll97" + "'", str3.equals("ll97"));
    }

    @Test
    public void test223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test223");
        java.lang.String str2 = strman.Strman.last
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "800108" + "'", str2.equals("800108"));
    }

    @Test
    public void test224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test224");
        java.lang.String[] strArray2 = strman.Strman.chop("hiHi", 310);
        org.junit.Assert.assertNotNull(strArray2);
    }

    @Test
    public void test225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test225");
        java.lang.String str2 = strman.Strman.repeat("", 540);
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "" + "'", str2.equals(""));
    }

    @Test
    public void test226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test226");
        java.lang.String[] strArray2 = new java.lang.String[] { "hihi" };
        java.util.List<java.lang.String> strList3 = strman.Strman.zip(strArray2);
        java.lang.String str5 = strman.Strman.join(strArray2, "null");
        java.lang.String str7 = strman.Strman.join(strArray2, "ihi_h");
        boolean boolean9 = strman.Strman.containsAll("1101171081085755", strArray2, true);
        java.lang.String str11 = strman.Strman.join(strArray2, "8484855544848484848484848565348484848484848485556104105104105");
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(strList3);
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "hihi" + "'", str5.equals("hihi"));
        org.junit.Assert.assertTrue("'" + str7 + "' != '" + "hihi" + "'", str7.equals("hihi"));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + str11 + "' != '" + "hihi" + "'", str11.equals("hihi"));
    }

    @Test
    public void test227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test227");
        java.lang.String str1 = strman.Strman.decEncode("nullhihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihiMDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA0ZTAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwNTUwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDRjMDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA0YzAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwMzkwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111001000000000-ih79llun-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ihMw==Hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!null97Nnulnull000780008500076000760005700055001100007800085000760007600057000550011700078000850007600076000570005500108000780008500076000760005700055001080007800085000760007600057000550005700078000850007600076000570005500055000780008500076000760005700055");
    }

    @Test
    public void test228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test228");
        boolean boolean2 = strman.Strman.inequal("0048006900480069", "nullnull97nnulnull97null97null97Nnull97Unull97Lnull97Lnull979null977null97");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
    }

    @Test
    public void test229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test229");
        java.lang.String str2 = strman.Strman.removeRight("null97nnulnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull", "100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100");
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "null97nnulnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull" + "'", str2.equals("null97nnulnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull"));
    }

    @Test
    public void test230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test230");
        boolean boolean3 = strman.Strman.isEnclosedBetween("", "NULL97HIHIHI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!NULL97HI!NNULL97HIHIHI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!NULL97HI!UNULL97HIHIHI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!NULL97HI!LNULL97HIHIHI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!NULL97HI!LNULL979NULL977NULL97HIHINULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULL", "nullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLihi97hhi97hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test231");
        java.lang.String str1 = strman.Strman.underscored("nullnull");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "nullnull" + "'", str1.equals("nullnull"));
    }

    @Test
    public void test232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test232");
        java.lang.String[] strArray2 = strman.Strman.chop("NULL971null97null97Nnull97Unull97Lnull97Lnull979null977null97", 2176);
        org.junit.Assert.assertNotNull(strArray2);
    }

    @Test
    public void test233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test233");
        java.lang.String str1 = strman.Strman.underscored("mda2006e0075006c006c00390037ztaw006e0075006c006c00390037nz006e0075006c006c00390037uw006e0075006c006c00390037mdzj006e0075006c006c00390037mda2006e0075006c006c00390037yz006e0075006c006c00390037aw006e0075006c006c00390037mzkw006e0075006c006c00390037mdmhihi79llune779llun979llunl_79llunl_79llunu_79llunn_79llun79llun001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000hi!l_u_n_n_79l_l_u_n_lunn_79llun79llun1");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "mda2006e0075006c006c00390037ztaw006e0075006c006c00390037nz006e0075006c006c00390037uw006e0075006c006c00390037mdzj006e0075006c006c00390037mda2006e0075006c006c00390037yz006e0075006c006c00390037aw006e0075006c006c00390037mzkw006e0075006c006c00390037mdmhihi79llune779llun979llunl_79llunl_79llunu_79llunn_79llun79llun001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000hi!l_u_n_n_79l_l_u_n_lunn_79llun79llun1" + "'", str1.equals("mda2006e0075006c006c00390037ztaw006e0075006c006c00390037nz006e0075006c006c00390037uw006e0075006c006c00390037mdzj006e0075006c006c00390037mda2006e0075006c006c00390037yz006e0075006c006c00390037aw006e0075006c006c00390037mzkw006e0075006c006c00390037mdm30004800048000490004900048000480004800049000490005500048000480004900048000560004800048000490004800056000480004800048000530005500048000480004800053000530004800048000480005500056000480004800049000490004800048000480004900049000550004800048000490004800056000000005500000000570000000076000000007600000000850000000078000000005500000000550000000057000000007600000000760000000085000000007800000000570000000055000000005700000000760000000076000000008500000000780000000108000000005500000000570000000076000000007600000000850000000078000000010800000000550000000057000000007600000000760000000085000000007800000001170000000055000000005700000000760000000076000000008500000000780000000110000000005500000000570000000076000000007600000000850000000078hihi79llune779llun979llunl_79llunl_79llunu_79llunn_79llun79llun001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000hi!l_u_n_n_79l_l_u_n_lunn_79llun79llun1"));
    }

    @Test
    public void test234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test234");
        java.lang.String str2 = strman.Strman.repeat("nnullhi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006eunullhi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006elnullhi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006el", 294);
    }

    @Test
    public void test235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test235");
        java.lang.String str2 = strman.Strman.removeRight("840008400094000940008400094000940008400084000840008400084000840008400084000840009400084000940008400094000940009400084000840008400084000840008400084000840008400084000940009400094000840009400094000840008400084000840008400084000840008400084000840009400094000940008400094000940008400084000840008400084000840008400084000840009400094000940008400094000940008400084000840008400084000840008400084000840008400094000840008400094000940009400084000840008400084000840008400084000840008400084000840008400094000940008400094000940008400084000840008400084000840008400084000840008400084000940009400084000940009400084000840008400084000840008400084000840008400094000840009400084000940009400094000840008400084000840008400084000840008400084000840009400094000940008400094000940008400084000840008400084000840008400084000840009400084000840009400084000940009400084000840008400084000840008400084000840008400084000840008400094000840009400094000840008400084000840008400084000840008400084000940008400094000940008400094000840008400084000840008400084000840008400084000840009400084000840009400084000940009400084000840008400084000840008400084000840008400084000840008400094000840009400087000580006700067000750005500001100870005800067000670007500055000711008700058000670006700075000550008010087000580006700067000750005500080100870005800067000670007500055000750008700058000670006700075000550005500087000580006700067000750005500094000840008400084000840008400084000840008400084000", "MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM300078001170010800108000570005500110001100011700108000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97Nnull97Unull97Lnull97Lnull979null977null97Hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!");
        org.junit.Assert.assertTrue("'" + strstr2.equals
    }

    @Test
    public void test236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test236");
        java.util.Optional<java.lang.String> strOptional2 = strman.Strman.at("TnVsbDk3bm51bG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbA==", 540);
        java.lang.Class<?> wildcardClass3 = strOptional2.getClass();
        org.junit.Assert.assertNotNull(strOptional2);
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test237");
        java.lang.String str2 = strman.Strman.ensureRight("mw-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-null97nnul", "
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "str2.equals("
    }

    @Test
    public void test238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test238");
        java.lang.String str2 = strman.Strman.toDecamelize("hihiHI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-NULL97HI-00370039006C006C0075006E003700370039006C006C0075006E003900370039006C006C0075006E004C00370039006C006C0075006E004C00370039006C006C0075006E005500370039006C006C0075006E004E00370039006C006C0075006EHiHi0000000001001000000000000110100197HiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiNull97hi00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e1097", "SekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhSekhTlVmtdk3");
    }

    @Test
    public void test239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test239");
        java.lang.String[] strArray2 = strman.Strman.words("006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037Null97", "TlVMTDk3hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!");
        org.junit.Assert.assertNotNull(strArray2);
    }

    @Test
    public void test240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test240");
        java.util.Optional<java.lang.String> strOptional2 = strman.Strman.at("294", 199);
        org.junit.Assert.assertNotNull(strOptional2);
    }

    @Test
    public void test241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test241");
        java.lang.String str2 = strman.Strman.ensureLeftullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull97Nnull97Unull97Lnull97Lnull979null977null97null97Mda2 ztaw nz uw mdzj mda2 yz aw mzkw mdm3nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull000000005500000000570000000076000000007600000000850000000078000000005500000000550000000057000000007600000000760000000085000000007800000000570000000055000000005700000000760000000076000000008500000000780000000108000000005500000000570000000076000000007600000000850000000078000000010800000000550000000057000000007600000000760000000085000000007800000001170000000055000000005700000000760000000076000000008500000000780000000110000000005500000000570000000076000000007600000000850000000078hihi");
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "Nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull97Nnull97Unull97Lnull97Lnull979null977null97null97Mda2 ztaw nz uw mdzj mda2 yz aw mzkw mdm3nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull000000005500000000570000000076000000007600000000850000000078000000005500000000550000000057000000007600000000760000000085000000007800000000570000000055000000005700000000760000000076000000008500000000780000000108000000005500000000570000000076000000007600000000850000000078000000010800000000550000000057000000007600000000760000000085000000007800000001170000000055000000005700000000760000000076000000008500000000780000000110000000005500000000570000000076000000007600000000850000000078hihistr2.equals("Nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull97Nnull97Unull97Lnull97Lnull979null977null97null97Mda2 ztaw nz uw mdzj mda2 yz aw mzkw mdm3nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull000000005500000000570000000076000000007600000000850000000078000000005500000000550000000057000000007600000000760000000085000000007800000000570000000055000000005700000000760000000076000000008500000000780000000108000000005500000000570000000076000000007600000000850000000078000000010800000000550000000057000000007600000000760000000085000000007800000001170000000055000000005700000000760000000076000000008500000000780000000110000000005500000000570000000076000000007600000000850000000078hihi
    }

    @Test
    public void test242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test242");
        java.lang.String str2 = strman.Strman.repeat
    }

    @Test
    public void test243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test243");
        java.lang.String[] strArray3 = strman.Strman.chop("001", 4342);
        boolean boolean4 = strman.Strman.containsAll("800108", strArray3);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
    }

    @Test
    public void test244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test244");
        java.lang.String[] strArray7 = new java.lang.String[] {};
        java.util.List<java.lang.String> strList8 = strman.Strman.zip(strArray7);
        boolean boolean10 = strman.Strman.containsAny("", strArray7, true);
        boolean boolean12 = strman.Strman.containsAny("hi!hi!", strArray7, true);
        boolean boolean14 = strman.Strman.containsAll("10", strArray7, false);
        java.lang.String str16 = strman.Strman.join(strArray7, "hi!");
        java.lang.String str17 = strman.Strman.format("000000000110100000000000011010010000000000100001", strArray7);
        boolean boolean19 = strman.Strman.containsAny("lunN79llunnull97null97Nnull97Unull97Lnull97Lnull979null977null97", strArray7, false);
        boolean boolean20 = strman.Strman.containsAny("0004900108001170011000110000550005700108001080011700110", strArray7);
        java.lang.String[] strArray21 = strman.Strman.removeEmptyStrings(strArray7);
        java.lang.String str22 = strman.Strman.append("006e0075006c006c00390037006e002d0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c", strArray21);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strList8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + str16 + "' != '" + "" + "'", str16.equals(""));
        org.junit.Assert.assertTrue("'" + str17 + "' != '" + "000000000110100000000000011010010000000000100001" + "'", str17.equals("000000000110100000000000011010010000000000100001"));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + str22 + "' != '" + "006e0075006c006c00390037006e002d0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c" + "'", str22.equals("006e0075006c006c00390037006e002d0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c"));
    }

    @Test
    public void test245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test245");
        int int2 = strman.Strman.lastIndexOf("ihi00110001170010800108001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001040010500045001100011700108001080005700055001040010500045000480004800051000550004800048000510005700048000480005400099000480004800054000990004800048000550005300048000480005400101000480004800051000550004800048000510005500048000480005100057000480004800054000990004800048000540009900048000480005500053000480004800054001010004800048000510005700048000480005100055000480004800051000570004800048000540009900048000480005400099000480004800055000530004800048000540010100048000480005200099000480004800051000550004800048000510005700048000480005400099000480004800054000990004800048000550005300048000480005400101000480004800052000990004800048000510005500048000480005100057000480004800054000990004800048000540009900048000480005500053000480004800054001010004800048000530005300048000480005100055000480004800051000570004800048000540009900048000480005400099000480004800055000530004800048000540010100048000480005200101000480004800051000550004800048000510005700048000480005400099000480004800054000990004800048000550005300048000480005400101");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
    }

    @Test
    public void test246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test246");
        java.lang.String str3 = strman.Strman.surround("hinullhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hil-l-u-n779-l-l-u-n979-l-l-u-nl79-l-l-u-nl79-l-l-u-nu79-l-l-u-nn79-l-l-u-n10100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100");
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "109700078001170010800108000570005500110001100011700108109700078001170010800108000570005500110001100011700108109700078001170010800108000570005500110001100011700108109700078001170010800108000570005500110001100011700108109700078001170010800108000570005500110001100011700108109700078001170010800108000570005500110001100011700108109700078001170010800108000570005500110001100011700108109700078001170010800108000570005500110001100011700108109700078001170010800108000570005500110001100011700108109700078001170010800108000570005500110001100011700108109700078001170010800108000570005500110001100011700108109700078001170010800108000570005500110001100011700108109700078001170010800108000570005500110001100011700108109700078001170010800108000570005500110001100011700108109700078001170010800108000570005500110001100011700108109700078001170010800108000570005500110001100011700108109700078001170010800108000570005500110001100011700108109700078001170010800108000570005500110001100011700108109700078001170010800108000570005500110001100011700108109700078001170010800108000570005500110001100011700108109700078001170010800108000570005500110001100011700108109700078001170010800108000570005500110001100011700108109700078001170010800108000570005500110001100011700108109700078001170010800108000570005500110001100011700108109700078001170010800108000570005500110001100011700108109700078001170010800108000570005500110001100011700108109700078001170010800108000570005500110001100011700108109700078001170010800108000570005500110001100011700108109700078001170010800108000570005500110001100011700108109700078001170010800108000570005500110001100011700108109700078001170010800108000570005500110001100011700108109700078001170010800108000570005500110001100011700108109700078001170010800108000570005500110001100011700108109700078001170010800108000570005500110001100011700108109700078001170010800108000570005500110001100011700108109700078001170010800108000570005500110001100011700108109700078001170010800108000570005500110001100011700108109700078001170010800108000570005500110001100011700108109700078001170010800108000570005500110001100011700108109700078001170010800108000570005500110001100011700108109700078001170010800108000570005500110001100011700108109700078001170010800108000570005500110001100011700108109700078001170010800108000570005500110001100011700108109700078001170010800108000570005500110001100011700108109700078001170010800108000570005500110001100011700108109700078001170010800108000570005500110001100011700108109700078001170010800108000570005500110001100011700108109700078001170010800108000570005500110001100011700108109700078001170010800108000570005500110001100011700108109700078001170010800108000570005500110001100011700108109700078001170010800108000570005500110001100011700108109700078001170010800108000570005500110001100011700108109700078001170010800108000570005500110001100011700108109700078001170010800108000570005500110001100011700108109700078001170010800108000570005500110001100011700108109700078001170010800108000570005500110001100011700108109700078001170010800108000570005500110001100011700108109700078001170010800108000570005500110001100011700108109700078001170010800108000570005500110001100011700108109700078001170010800108000570005500110001100011700108109700078001170010800108000570005500110001100011700108109700078001170010800108000570005500110001100011700108109700078001170010800108000570005500110001100011700108109700078001170010800108000570005500110001100011700108109700078001170010800108000570005500110001100011700108109700078001170010800108000570005500110001100011700108109700078001170010800108000570005500110001100011700108109700078001170010800108000570005500110001100011700108109700078001170010800108000570005500110001100011700108109700078001170010800108000570005500110001100011700108109700078001170010800108000570005500110001100011700108109700078001170010800108000570005500110001100011700108109700078001170010800108000570005500110001100011700108109700078001170010800108000570005500110001100011700108109700078001170010800108000570005500110001100011700108109700078001170010800108000570005500110001100011700108109700078001170010800108000570005500110001100011700108109700078001170010800108000570005500110001100011700108109700078001170010800108000570005500110001100011700108109700078001170010800108000570005500110001100011700108109700078001170010800108000570005500110001100011700108109700078001170010800108000570005500110001100011700108109700078001170010800108000570005500110001100011700108109700078001170010800108000570005500110001100011700108109700078001170010800108000570005500110001100011700108109700078001170010800108000570005500110001100011700108109700078001170010800108000570005500110001100011700108109700078001170010800108000570005500110001100011700108109700078001170010800108000570005500110001100011700108109700078001170010800108000570005500110001100011700108109700078001170010800108000570005500110001100011700108109700078001170010800108000570005500110001100011700108109700078001170010800108000570005500110001100011700108109700078001170010800108000570005500110001100011700108109700078001170010800108000570005500110001100011700108109700078001170010800108000570005500110001100011700108hinullhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101000000000179-l-l-u-n779-l-l-u-n979-l-l-u-nl79-l-l-u-nl79-l-l-u-nu79-l-l-u-nn79-l-l-u-n10100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100" + "'", str3.equalshinullhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101000000000179-l-l-u-n779-l-l-u-n979-l-l-u-nl79-l-l-u-nl79-l-l-u-nu79-l-l-u-nn79-l-l-u-n10100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100"));
    }

    @Test
    public void test247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test247");
        java.lang.String str1 = strman.Strman.reverse("nullnullnullnullnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexcl");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "lcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunllunllunllunllun" + "'", str1.equals("lcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunlcxellunllunllunllunllunllun"));
    }

    @Test
    public void test248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test248");
        java.lang.String str1 = strman.Strman.hexEncode("33727333727333727333");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "00330033003700320037003300330033003700320037003300330033003700320037003300330033" + "'", str1.equals("00330033003700320037003300330033003700320037003300330033003700320037003300330033"));
    }

    @Test
    public void test249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test249");
        int int1 = strman.Strman.length("Nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 4160 + "'", int1 == 4160);
    }

    @Test
    public void test250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test250");
        java.lang.String str1 = strman.Strman.leftTrim("
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "" + "'", str1.equals("
    }

    @Test
    public void test251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test251");
        int int4 = strman.Strman.lastIndexOf("00001p00001r00003i00003i00003r00003k00001p00001p00001r00003i00003i00003r00003k00001r00001p00001r00003i00003i00003r00003k00003i00001p00001r00003i00003i00003r00003k00003i00001p00001r00003i00003i00003r00003k00003r00001p00001r00003i00003i00003r00003k00003k00001p00001r00003i00003i00003r00003k00001p00001r00003i00003i00003r00003k00001p00001p00001r00003i00003i00003r00003k00001r00001p00001r00003i00003i00003r00003k00003i00001p00001r00003i00003i00003r00003k00003i00001p00001r00003i00003i00003r00003k00003r00001p00001r00003i00003i00003r00003k00003k00001p00001r00003i00003i00003r00003k", "nullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULL", (int) (short) -1, true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
    }

    @Test
    public void test252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test252");
        java.lang.String[] strArray2 = strman.Strman.chop("000000005500000000570000000076000000007600000000850000000078000000005500000000550000000057000000007600000000760000000085000000007800000000570000000055000000005700000000760000000076000000008500000000780000000108000000005500000000570000000076000000007600000000850000000078000000010800000000550000000057000000007600000000760000000085000000007800000001170000000055000000005700000000760000000076000000008500000000780000000110000000005500000000570000000076000000007600000000850000000078hihie0075006c006c00390037006800690021003000300033003700300030003300390030003000360063003000300036006300300030003700350030003000360065003000300033003700300030003300370030003000330039003000300036006300300030003600630030003000370035003000300036006500300030003300390030003000330037003000300033003900300030003600630030003000360063003000300037003500300030003600650030003000340063003000300033003700300030003300390030003000360063003000300036006300300030003700350030003000360065003000300034006300300030003300370030003000330039003000300036006300300030003600630030003000370035003000300036006500300030003500350030003000330037003000300033003900300030003600630030003000360063003000300037003500300030003600650030003000340065003000300033003700300030003300390030003000360063003000300036006300300030003700350030003000360065", 6432);
        org.junit.Assert.assertNotNull(strArray2);
    }

    @Test
    public void test253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test253");
        java.lang.String str1 = strman.Strman.leftTrim("0031006C0075006E006E00370039006C006C0075006E");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "0031006C0075006E006E00370039006C006C0075006E" + "'", str1.equals("0031006C0075006E006E00370039006C006C0075006E"));
    }

    @Test
    public void test254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test254");
        java.lang.String str3 = strman.Strman.ensureLeft("a-whp-x2g=", "mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=", false);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=a-whp-x2g=" + "'", str3.equals("mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=a-whp-x2g="));
    }

    @Test
    public void test255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test255");
        java.lang.String str3 = strman.Strman.ensureRight("HiHi0000000001001000000000000110100197HiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiNull97hi00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e", "lunN79llun001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000ihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihiHMxUVOxETV5ETMVlTMxUVOxETV5ETMVlTMxUVOxETV5ETMVlTMxUVOxETV5ETMVlTMxUVOxETV5ETMVlTMxUVOxETV5ETMVlTMxUVOxETV5ETMVlTMxUVOxETV5ETMVlTMxUVOxETV5ETMVlTMxUVOxETV5ETMVlTMxUVOxETV5ETMVlTMxUVOxETV5ETMVlTMxUVOxETV5ETMVlTMxUVOxETV5ETMVlTMxUVOxETV5ETMVlTMxUVOxETV5ETMVlb!ih79llun!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ihihiH", true);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "HiHi0000000001001000000000000110100197HiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiNull97hi00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006elunN79llun001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000ihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihiHMxUVOxETV5ETMVlTMxUVOxETV5ETMVlTMxUVOxETV5ETMVlTMxUVOxETV5ETMVlTMxUVOxETV5ETMVlTMxUVOxETV5ETMVlTMxUVOxETV5ETMVlTMxUVOxETV5ETMVlTMxUVOxETV5ETMVlTMxUVOxETV5ETMVlTMxUVOxETV5ETMVlTMxUVOxETV5ETMVlTMxUVOxETV5ETMVlTMxUVOxETV5ETMVlTMxUVOxETV5ETMVlTMxUVOxETV5ETMVlb!ih79llun!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ihihiH" + "'", str3.equals("HiHi0000000001001000000000000110100197HiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiNull97hi00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006elunN79llun001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000ihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihiHMxUVOxETV5ETMVlTMxUVOxETV5ETMVlTMxUVOxETV5ETMVlTMxUVOxETV5ETMVlTMxUVOxETV5ETMVlTMxUVOxETV5ETMVlTMxUVOxETV5ETMVlTMxUVOxETV5ETMVlTMxUVOxETV5ETMVlTMxUVOxETV5ETMVlTMxUVOxETV5ETMVlTMxUVOxETV5ETMVlTMxUVOxETV5ETMVlTMxUVOxETV5ETMVlTMxUVOxETV5ETMVlTMxUVOxETV5ETMVlb!ih79llun!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ihihiH"));
    }

    @Test
    public void test256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test256");
        java.lang.String str3 = strman.Strman.ensureLeft("1097000780011700108001080005700055001100011000117001080000000001001000000000000110100100680069002d006800690034003800340038003500310035003500340038003400380035003100350037003400380034003800350034003900390034003800340038003500340039003900340038003400380035003500350033003400380034003800350034003100300031003400380034003800350031003500350034003800340038003500310035003500340038003400380035003100350037003400380034003800350034003900390034003800340038003500340039003900340038003400380035003500350033003400380034003800350034003100300031003400380034003800350031003500370034003800340038003500310035003500340038003400380035003100350037003400380034003800350034003900390034003800340038003500340039003900340038003400380035003500350033003400380034003800350034003100300031003400380034003800350032003900390034003800340038003500310035003500340038003400380035003100350037003400380034003800350034003900390034003800340038003500340039003900340038003400380035003500350033003400380034003800350034003100300031003400380034003800350032003900390034003800340038003500310035003500340038003400380035003100350037003400380034003800350034003900390034003800340038003500340039003900340038003400380035003500350033003400380034003800350034003100300031003400380034003800350033003500330034003800340038003500310035003500340038003400380035003100350037003400380034003800350034003900390034003800340038003500340039003900340038003400380035003500350033003400380034003800350034003100300031003400380034003800350032003100300031003400380034003800350031003500350034003800340038003500310035003700340038003400380035003400390039003400380034003800350034003900390034003800340038003500350035003300340038003400380035003400310030003100300030003000300030003000300030003000310030003000310030003000300030003000300030003000300030003000300031003100300031003000300031", "00000000010011010000000001110111000000000011110100000000001111010000000001001000000000000110100100000000001000010000000001101000000000000110100100000000001000010000000001101000000000000110100100000000001000010000000001101000000000000110100100000000001000010000000001101000000000000110100100000000001000010000000001101000000000000110100100000000001000010000000001101000000000000110100100000000001000010000000001101000000000000110100100000000001000010000000001101000000000000110100100000000001000010000000001101000000000000110100100000000001000010000000001101000000000000110100100000000001000010000000001101000000000000110100100000000001000010000000001101000000000000110100100000000001000010000000001101000000000000110100100000000001000010000000001101000000000000110100100000000001000010000000001101000000000000110100100000000001000010000000001101000000000000110100100000000001000010000000001101000000000000110100100000000001000010000000001101000000000000110100100000000001000010000000001101000000000000110100100000000001000010000000001101000000000000110100100000000001000010000000001101000000000000110100100000000001000010000000001101000000000000110100100000000001000010000000001101000000000000110100100000000001000010000000001101000000000000110100100000000001000010000000001101000000000000110100100000000001000010000000001101000000000000110100100000000001000010000000001101000000000000110100100000000001000010000000001101000000000000110100100000000001000010000000001101000000000000110100100000000001000010000000001101000000000000110100100000000001000010000000001101000000000000110100100000000001000010000000001101000000000000110100100000000001000010000000001101000000000000110100100000000001000010000000001101000000000000110100100000000001000010000000001101000000000000110100100000000001000010000000001101000000000000110100100000000001000010000000001101000000000000110100100000000001000010000000001101000000000000110100100000000001000010000000001101000000000000110100100000000001000010000000001101000000000000110100100000000001000010000000001101000000000000110100100000000001000010000000001101000000000000110100100000000001000010000000001101000000000000110100100000000001000010000000001101000000000000110100100000000001000010000000001101000000000000110100100000000001000010000000001101000000000000110100100000000001000010000000001101000000000000110100100000000001000010000000001101000000000000110100100000000001000010000000001101000000000000110100100000000001000010000000001101000000000000110100100000000001000010000000001101000000000000110100100000000001000010000000001101000000000000110100100000000001000010000000001101000000000000110100100000000001000010000000001101000000000000110100100000000001000010000000001101000000000000110100100000000001000010000000001101000000000000110100100000000001000010000000001101000000000000110100100000000001000010000000001101000000000000110100100000000001000010000000001101000000000000110100100000000001000010000000001101000000000000110100100000000001000010000000001101000000000000110100100000000001000010000000001101000000000000110100100000000001000010000000001101000000000000110100100000000001000010000000001101000000000000110100100000000001000010000000001101000000000000110100100000000001000010000000001101000000000000110100100000000001000010000000001101000000000000110100100000000001000010000000001101000000000000110100100000000001000010000000001101000000000000110100100000000001000010000000001101000000000000110100100000000001000010000000001101000000000000110100100000000001000010000000001101000000000000110100100000000001000010000000001101000000000000110100100000000001000010000000001101000000000000110100100000000001000010000000001101000000000000110100100000000001000010000000001101000000000000110100100000000001000010000000001101000000000000110100100000000001000010000000001101000000000000110100100000000001000010000000001101000000000000110100100000000001000010000000001101000000000000110100100000000001000010000000001101000000000000110100100000000001000010000000001101000000000000110100100000000001000010000000001101000000000000110100100000000001000010000000001101000000000000110100100000000001000010000000001101000000000000110100100000000001000010000000001101000000000000110100100000000001000010000000001101000000000000110100100000000001000010000000001101000000000000110100100000000001000010000000001101000000000000110100100000000001000010000000001101000000000000110100100000000001000010000000001101000000000000110100100000000001000010000000001101000000000000110100100000000001000010000000001101000000000000110100100000000001000010000000001101000000000000110100100000000001000010000000001101000000000000110100100000000001000010000000001101000000000000110100100000000001000010000000001101000000000000110100100000000001000010000000001101000000000000110100100000000001000010000000001101000000000000110100100000000001000010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101000000000000110100100000000001000010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001001110000000000110111000000000011101010000000001101100", false);
        org.junit.Assert.assertTrue("'" + strdstr3.equalsd
    }

    @Test
    public void test257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test257");
        java.lang.String[] strArray6 = new java.lang.String[] { "", "", "null" };
        java.util.Optional<java.lang.String> strOptional7 = strman.Strman.trimEnd("null", strArray6);
        java.util.Optional<java.lang.String> strOptional8 = strman.Strman.trimStart("", strArray6);
        boolean boolean9 = strman.Strman.containsAnyn-u-l-l97-n-n-u-l", strArray6);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strOptional7);
        org.junit.Assert.assertNotNull(strOptional8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test258");
        boolean boolean2 = strman.Strman.contains("", "n-u-l-l97n-n-u-l-l97u-n-u-l-l97l-n-u-l-l97l-n-u-l-l979-n-u-l-l977-n-u-l-l979710");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test259");
        boolean boolean2 = strman.Strman.unequal("00330033003700320037003300330033003700320037003300330033003700320037003300330033", "n-u-l-l97-n-n-u-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
    }

    @Test
    public void test260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test260");
        java.lang.String[] strArray4 = strman.Strman.chop("006e0075006c006c0039003700390037", (int) (short) 1);
        java.util.List<java.lang.String> strList5 = strman.Strman.zip(strArray4);
        java.lang.String[] strArray6 = strman.Strman.removeEmptyStrings(strArray4);
        boolean boolean8 = strman.Strman.containsAll("Hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-null97hi\\-00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e", strArray4, false);
        boolean boolean10 = strman.Strman.containsAll("004d004400410032005a005400410077004e007a00550077004d0044005a006a004d0044004100320059007a00410077004d007a006b0077004d0044004d0033004d004400410030005a005400410077004e006d00550077004d004400630031004d0044004100320059007a00410077004e006d004d0077004d0044004d0035004d00440041007a004e007a00410077004e005400550077004d0044005a006c004d004400410033004e005400410077004e006d004d0077004d0044005a006a004d00440041007a004f005400410077004d007a00630077004d00440052006a004d004400410032005a005400410077004e007a00550077004d0044005a006a004d0044004100320059007a00410077004d007a006b0077004d0044004d0033004d0044004100300059007a00410077004e006d00550077004d004400630031004d0044004100320059007a00410077004e006d004d0077004d0044004d0035004d00440041007a004e007a00410077004d007a006b0077004d0044005a006c004d004400410033004e005400410077004e006d004d0077004d0044005a006a004d00440041007a004f005400410077004d007a00630077004d0044004d0033004d004400410032005a005400410077004e007a00550077004d0044005a006a004d0044004100320059007a00410077004d007a006b0077004d0044004d0033", strArray4, true);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test261");
        java.lang.String[] strArray1 = strman.Strman.lines("nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnullnullnullnullnullNzlsbHVuNzc5bGx1bjk3OWxsdW5MNzlsbHVuTDc5bGx1blU3OWxsdW5ONzlsbHVu");
        org.junit.Assert.assertNotNull(strArray1);
    }

    @Test
    public void test262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test262");
        int int2 = strman.Strman.lastIndexOf("79llun779llun979llunL79llunL79llunU79llunN79llun", "Mda2ztaWnZuWmdzJmda2yZaWmZKWmdm3mda0ztaWnMuWmdC1mda2yZaWnMmWmdm5mdaZnZaWntuWmdzLmda3ntaWnMmWmdzJmdaZotaWmZCWmdrJmda2ztaWnZuWmdzJmda2yZaWmZKWmdm3mda0yZaWnMuWmdC1mda2yZaWnMmWmdm5mdaZnZaWmZKWmdzLmda3ntaWnMmWmdzJmdaZotaWmZCWmdm3mda2ztaWnZuWmdzJmda2yZaWmZKWmdmiH79LLUNiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHmW==hI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!NULL97HI!NULL97nNULNULL000780008500076000760005700055001100007800085000760007600057000550011700078000850007600076000570005500108000780008500076000760005700055001080007800085000760007600057000550005700078000850007600076000570005500055000780008500076000760005700055");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
    }

    @Test
    public void test263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test263");
        int int4 = strman.Strman.indexOf("n_u_l_l97_n_ullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull", "hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!8484855544848484848484848565348484848484848485556104105104105000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97-nnull97-unull97-lnull97-lnull979null977nullfalse);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
    }

    @Test
    public void test264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test264");
        java.lang.String str3 = strman.Strman.removeLeftnul1097null971097nULL97NNULNullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullhiHi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101!ih", false);
        org.junit.Assert.assertTrue("'" + strstr3.equals
    }

    @Test
    public void test265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test265");
        java.lang.String str3 = strman.Strman.ensureLeft("m-d-a2-z-t-aw-nz-uw-m-d-zj-m-d-a2-yz-aw-mzkw-m-d-m3-m-d-a0-z-t-aw-nm-uw-m-dc1-m-d-a2-yz-aw-nm-mw-m-d-m5-m-d-az-nz-aw-n-t-uw-m-d-zl-m-d-a3-n-t-aw-nm-mw-m-d-zj-m-d-az-o-t-aw-mzcw-m-d-rj-m-d-a2-z-t-aw-nz-uw-m-d-zj-m-d-a2-yz-aw-mzkw-m-d-m3-m-d-a0-yz-aw-nm-uw-m-dc1-m-d-a2-yz-aw-nm-mw-m-d-m5-m-d-az-nz-aw-mzkw-m-d-zl-m-d-a3-n-t-aw-nm-mw-m-d-zj-m-d-az-o-t-aw-mzcw-m-d-m3-m-d-a2-z-t-aw-nz-uw-m-d-zj-m-d-a2-yz-aw-mzkw-m-d-mih79llun-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih", "hi-hi0000000001001000000000000110100197-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e", false);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "hi-hi0000000001001000000000000110100197-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006em-d-a2-z-t-aw-nz-uw-m-d-zj-m-d-a2-yz-aw-mzkw-m-d-m3-m-d-a0-z-t-aw-nm-uw-m-dc1-m-d-a2-yz-aw-nm-mw-m-d-m5-m-d-az-nz-aw-n-t-uw-m-d-zl-m-d-a3-n-t-aw-nm-mw-m-d-zj-m-d-az-o-t-aw-mzcw-m-d-rj-m-d-a2-z-t-aw-nz-uw-m-d-zj-m-d-a2-yz-aw-mzkw-m-d-m3-m-d-a0-yz-aw-nm-uw-m-dc1-m-d-a2-yz-aw-nm-mw-m-d-m5-m-d-az-nz-aw-mzkw-m-d-zl-m-d-a3-n-t-aw-nm-mw-m-d-zj-m-d-az-o-t-aw-mzcw-m-d-m3-m-d-a2-z-t-aw-nz-uw-m-d-zj-m-d-a2-yz-aw-mzkw-m-d-mih79llun-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih" + "'", str3.equals("hi-hi0000000001001000000000000110100197-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006em-d-a2-z-t-aw-nz-uw-m-d-zj-m-d-a2-yz-aw-mzkw-m-d-m3-m-d-a0-z-t-aw-nm-uw-m-dc1-m-d-a2-yz-aw-nm-mw-m-d-m5-m-d-az-nz-aw-n-t-uw-m-d-zl-m-d-a3-n-t-aw-nm-mw-m-d-zj-m-d-az-o-t-aw-mzcw-m-d-rj-m-d-a2-z-t-aw-nz-uw-m-d-zj-m-d-a2-yz-aw-mzkw-m-d-m3-m-d-a0-yz-aw-nm-uw-m-dc1-m-d-a2-yz-aw-nm-mw-m-d-m5-m-d-az-nz-aw-mzkw-m-d-zl-m-d-a3-n-t-aw-nm-mw-m-d-zj-m-d-az-o-t-aw-mzcw-m-d-m3-m-d-a2-z-t-aw-nz-uw-m-d-zj-m-d-a2-yz-aw-mzkw-m-d-mih79llun-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih"));
    }

    @Test
    public void test266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test266");
        long long4 = strman.Strman.countSubstrn u l l97 n n u l", "MDAxMTAxMTAwMDAwMDAwMDEwMTAxMTEwMDAwMDAwMDAwMTExMDExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDAxMDAxMTEwMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAxMDEwMTExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDEwMDEwMTEwMDAwMDAwMDAwMDAxMDExMDAwMDAwMDAwMTAxMTAxMDAwMDAwMDAwMDEwMDEwMTEwMDAwMDAwMDAwMDAxMDExMDAwMDAwMDAwLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloLWloMDAzOTAwMzc=", false, true);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
    }

    @Test
    public void test267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test267");
        java.lang.String str1 = strman.Strman.toKebabCase("0021004800490021004800490021004800490021 null97null97nnull97unull97lnull97lnull979null977null97");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "0021004800490021004800490021004800490021-null97null97nnull97unull97lnull97lnull979null977null97" + "'", str1.equals("0021004800490021004800490021004800490021-null97null97nnull97unull97lnull97lnull979null977null97"));
    }

    @Test
    public void test268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test268");
        java.lang.String[] strArray5 = strman.Strman.between("hi-hinull97nnul", "000780008500076000760005700055001100007800085000760007600057000550011700078000850007600076000570005500108000780008500076000760005700055001080007800085000760007600057000550005700078000850007600076000570005500055000780008500076000760005700055", "MzU=");
        java.lang.String str7 = strman.Strman.join(strArray5, "30");
        java.lang.String str8 = strman.Strman.prependArray("hi-hinull97nnul", strArray5);
        java.lang.String str9 = strman.Strman.append("nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull", strArray5);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + str7 + "' != '" + "" + "'", str7.equals(""));
        org.junit.Assert.assertTrue("'" + str8 + "' != '" + "hi-hinull97nnul" + "'", str8.equals("hi-hinull97nnul"));
        org.junit.Assert.assertTrue("'" + str9 + "' != '" + "nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull" + "'", str9.equals("nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull"));
    }

    @Test
    public void test269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test269");
        java.lang.String[] strArray1 = strman.Strman.chars("000000005500000000570000000076000000007600000000850000000078000000005500000000550000000057000000007600000000760000000085000000007800000000570000000055000000005700000000760000000076000000008500000000780000000108000000005500000000570000000076000000007600000000850000000078000000010800000000550000000057000000007600000000760000000085000000007800000001170000000055000000005700000000760000000076000000008500000000780000000110000000005500000000570000000076000000007600000000850000000078");
        java.lang.Class<?> wildcardClass2 = strArray1.getClass();
        java.lang.Class<?> wildcardClass3 = strArray1.getClass();
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test270");
        java.lang.String str3 = strman.Strman.surround("N000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97nnull97unull97lnull97lnull979null977null97u000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97nnull97unull97lnull97lnull979null977null97l000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97nnull97unull97lnull97lnull979null977null97l", "ihi-hhi-hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101");
    }

    @Test
    public void test271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test271");
        java.lang.String[] strArray2 = strman.Strman.split
        org.junit.Assert.assertNotNull(strArray2);
    }

    @Test
    public void test272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test272");
        java.lang.String str1 = strman.Strman.startCase("1097null97");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "1097null97" + "'", str1.equals("1097null97"));
    }

    @Test
    public void test273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test273");
        long long4 = strman.Strman.countSubstr("HIHI", "nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull&-under-bar;null", true, true);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
    }

    @Test
    public void test274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test274");
        java.lang.String[] strArray0 = null;
        try {
            java.lang.String str2 = strman.Strman.join(strArray0, "006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Input array 'strings' can't be null");
        } catch (java.lang.IllegalArgumentException e) {
        }
    }

    @Test
    public void test275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test275");
        java.lang.String str1 = strman.Strman.humanize("hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "Hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi" + "'", str1.equals("Hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi"));
    }

    @Test
    public void test276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test276");
        boolean boolean2 = strman.Strman.isEnclosedBetween("00000000001100000000000000110000000000000011001100000000001110010000000000110000000000000011000000000000001100110000000000110111000000000110111000000000011101010000000001101100000000000110110000000000001110010000000000110111000000000110111000000000011011100000000001110101000000000110110000000000001100010000000000110000000000000011100100000000001101110000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000000110001000000000011000000000000001110010000000000110111", "hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test277");
        java.lang.String[] strArray3 = strman.Strman.betweenc006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e006c00370039006c006c0075006e006c00370039006c006c0075006e007500370039006c006c0075006e006e00370039006c006c0075006e00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e006c00370039006c006c0075006e006c00370039006c006c0075006e007500370039006c006c0075006e006e00370039006c006c0075006e0031003100300031003100370031003000380031003000380035003700350035006e0075006c006c00390037006e006e0075006c006c003900370075006e0075006c006c00390037006c006e0075006c006c00390037006c006e0075006c006c003900370039006e0075006c006c003900370037006e0075006c006c00390037");
        org.junit.Assert.assertNotNull(strArray3);
    }

    @Test
    public void test278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test278");
        boolean boolean2 = strman.Strman.isEnclosedBetween("003900370010400105", "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000117000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001080000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000057000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000950000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001170000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000108000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000055000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000009500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001170000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001080000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000108000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000550000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000095000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000117000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001080000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000057000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000950000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000108000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001170000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000108000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000055000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000117000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001080000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000057000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000550000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001080000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000108000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000550000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000095000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001170000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000108000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000055");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test279");
        boolean boolean3 = strman.Strman.endsWith("=czMwATOzADMolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLwADMwADMwADMxEDMxADMwADMwADMwADMwETMwEDMwEDMwADMwADMwADMxATMxATMwADMwADMwADMxEDMxADMwADMwADMwADMwETMwEDMwEDMwADMwADMwATMxATMxEDMwADMwADMwADMxETMwEDMxADMwADMwADMwETMwETMwADMwADMwADMwATMxATMxADMwADMwADMwADMwETMxADMxADMwADMwADMwATMxATMxEDMwADMwADMwATMxATMxEDMwADMwADMwADMxEDMxETMwADMwADMwADMwETMxATMwEDMwADMwADMwATMxATMxADM", "003900370010400105", false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test280");
        java.lang.String str1 = strman.Strman.removeSpaces("000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97Nnull97Unull97Lnull97Lnull979null977null97");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97Nnull97Unull97Lnull97Lnull979null977null97" + "'", str1.equals("000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97Nnull97Unull97Lnull97Lnull979null977null97"));
    }

    @Test
    public void test281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test281");
        java.lang.String str1 = strman.Strman.lowerFirst
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "0000000000000000000000000000000000000000000000000055000000000000000000000000000000000000000000000000005700000000000000000000000000000000000000000000000001080000000000000000000000000000000000000000000000000108000000000000000000000000000000000000000000000000011700000000000000000000000000000000000000000000000001100000000000000000000000000000000000000000000000000104000000000000000000000000000000000000000000000000010500000000000000000000000000000000000000000000000001040000000000000000000000000000000000000000000000000105000000000000000000000000000000000000000000000000005500000000000000000000000000000000000000000000000000550000000000000000000000000000000000000000000000000057000000000000000000000000000000000000000000000000010800000000000000000000000000000000000000000000000001080000000000000000000000000000000000000000000000000117000000000000000000000000000000000000000000000000011000000000000000000000000000000000000000000000000000570000000000000000000000000000000000000000000000000055000000000000000000000000000000000000000000000000005700000000000000000000000000000000000000000000000001080000000000000000000000000000000000000000000000000108000000000000000000000000000000000000000000000000011700000000000000000000000000000000000000000000000001100000000000000000000000000000000000000000000000000032000000000000000000000000000000000000000000000000007600000000000000000000000000000000000000000000000000550000000000000000000000000000000000000000000000000057000000000000000000000000000000000000000000000000010800000000000000000000000000000000000000000000000001080000000000000000000000000000000000000000000000000117000000000000000000000000000000000000000000000000011000000000000000000000000000000000000000000000000000320000000000000000000000000000000000000000000000000076000000000000000000000000000000000000000000000000005500000000000000000000000000000000000000000000000000570000000000000000000000000000000000000000000000000108000000000000000000000000000000000000000000000000010800000000000000000000000000000000000000000000000001170000000000000000000000000000000000000000000000000110000000000000000000000000000000000000000000000000003200000000000000000000000000000000000000000000000000850000000000000000000000000000000000000000000000000055000000000000000000000000000000000000000000000000005700000000000000000000000000000000000000000000000001080000000000000000000000000000000000000000000000000108000000000000000000000000000000000000000000000000011700000000000000000000000000000000000000000000000001100000000000000000000000000000000000000000000000000032000000000000000000000000000000000000000000000000007800000000000000000000000000000000000000000000000000550000000000000000000000000000000000000000000000000057000000000000000000000000000000000000000000000000010800000000000000000000000000000000000000000000000001080000000000000000000000000000000000000000000000000117000000000000000000000000000000000000000000000000011000000000000000000000000000000000000000000000000000320000000000000000000000000000000000000000000000000072000000000000000000000000000000000000000000000000010500000000000000000000000000000000000000000000000001040000000000000000000000000000000000000000000000000105" + "'", str1.equals
    }

    @Test
    public void test282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test282");
        java.lang.String str3 = strman.Strman.safeTruncate("006e0075006c006c00390037hihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100", 302, "001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih");
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih" + "'", str3.equals("001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih"));
    }

    @Test
    public void test283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test283");
        java.lang.String[] strArray2 = new java.lang.String[] {};
        java.util.List<java.lang.String> strList3 = strman.Strman.zip(strArray2);
        boolean boolean5 = strman.Strman.containsAny("", strArray2, true);
        java.lang.String[] strArray6 = strman.Strman.removeEmptyStrings(strArray2);
        try {
            java.util.Optional<java.lang.String> strOptional7 = strman.Strman.trimEnd("001040010500110001170010800108000570005500078001100011700108771228561", strArray2);
            org.junit.Assert.fail("Expected exception of type java.util.regex.PatternSyntaxException; message: Unclosed character class near index 3\r\n[]+$\r\n   ^");
        } catch (java.util.regex.PatternSyntaxException e) {
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(strList3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strArray6);
    }

    @Test
    public void test284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test284");
        java.lang.String str3 = strman.Strman.rightPad("hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e", "001", 256);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e" + "'", str3.equals("hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e"));
    }

    @Test
    public void test285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test285");
        java.util.Optional<java.lang.String> strOptional1 = strman.Strman.head("08000570005500110001100011700108");
        org.junit.Assert.assertNotNull(strOptional1);
    }

    @Test
    public void test286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test286");
        java.lang.String str1 = strman.Strman.decEncode("0010400105nULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULL1101171081085755000000000179LLUN779LLUN979LLUNl79LLUNl79LLUNu79LLUNn79LLUN10100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "0004800048000490004800052000480004800049000480005300110000850007600076000780008500076000760007800085000760007600078000850007600076000780008500076000760007800085000760007600078000850007600076000780008500076000760007800085000760007600078000850007600076000780008500076000760007800085000760007600078000850007600076000780008500076000760007800085000760007600078000850007600076000780008500076000760007800085000760007600078000850007600076000780008500076000760007800085000760007600078000850007600076000780008500076000760007800085000760007600078000850007600076000780008500076000760007800085000760007600078000850007600076000780008500076000760007800085000760007600078000850007600076000780008500076000760007800085000760007600078000850007600076000780008500076000760007800085000760007600078000850007600076000780008500076000760007800085000760007600078000850007600076000780008500076000760007800085000760007600078000850007600076000780008500076000760007800085000760007600078000850007600076000780008500076000760007800085000760007600049000490004800049000490005500049000480005600049000480005600053000550005300053000480004800048000480004800048000480004800048000490005500057000760007600085000780005500055000570007600076000850007800057000550005700076000760008500078001080005500057000760007600085000780010800055000570007600076000850007800117000550005700076000760008500078001100005500057000760007600085000780004900048000490004800048000480004800048000480004800048000480004800048000480004900049000480004900048000480004900048000480004800048000480004800048000480004800048000490004800049000490004800049000480004800048000480004800048000480004800048000490004900048000490004800048000480004800048000480004800048000480004800048000480004900049000480004900048000480004900048000480004800048000480004800048000480004800049000490004800049000490004900048000480004800048000480004800048000480004800048000490004900049000480004900048000490004800048000480004800048000480004800048000480004900049000480004900049000480004800048000480004800048000480004800048000480004800049000490004800049000490004800048000480004800048000480004800048000480004800048000480004900049000490004800048000490004800048000480004800048000480004800048000480004800049000490004800049000490004900048000480004800048000480004800048000480004800049000490004800049000490004900048000480004800048000480004800048000480004800048000490004900048000490004900049000480004800048000480004800048000480004800048000480004900049000490004800049000480004900048000480004800048000480004800048000480004800049000490004800049000490004800048" + "'", str1.equals("0004800048000490004800052000480004800049000480005300110000850007600076000780008500076000760007800085000760007600078000850007600076000780008500076000760007800085000760007600078000850007600076000780008500076000760007800085000760007600078000850007600076000780008500076000760007800085000760007600078000850007600076000780008500076000760007800085000760007600078000850007600076000780008500076000760007800085000760007600078000850007600076000780008500076000760007800085000760007600078000850007600076000780008500076000760007800085000760007600078000850007600076000780008500076000760007800085000760007600078000850007600076000780008500076000760007800085000760007600078000850007600076000780008500076000760007800085000760007600078000850007600076000780008500076000760007800085000760007600078000850007600076000780008500076000760007800085000760007600078000850007600076000780008500076000760007800085000760007600078000850007600076000780008500076000760007800085000760007600078000850007600076000780008500076000760007800085000760007600049000490004800049000490005500049000480005600049000480005600053000550005300053000480004800048000480004800048000480004800048000490005500057000760007600085000780005500055000570007600076000850007800057000550005700076000760008500078001080005500057000760007600085000780010800055000570007600076000850007800117000550005700076000760008500078001100005500057000760007600085000780004900048000490004800048000480004800048000480004800048000480004800048000480004900049000480004900048000480004900048000480004800048000480004800048000480004800048000490004800049000490004800049000480004800048000480004800048000480004800048000490004900048000490004800048000480004800048000480004800048000480004800048000480004900049000480004900048000480004900048000480004800048000480004800048000480004800049000490004800049000490004900048000480004800048000480004800048000480004800048000490004900049000480004900048000490004800048000480004800048000480004800048000480004900049000480004900049000480004800048000480004800048000480004800048000480004800049000490004800049000490004800048000480004800048000480004800048000480004800048000480004900049000490004800048000490004800048000480004800048000480004800048000480004800049000490004800049000490004900048000480004800048000480004800048000480004800049000490004800049000490004900048000480004800048000480004800048000480004800048000490004900048000490004900049000480004800048000480004800048000480004800048000480004900049000490004800049000480004900048000480004800048000480004800048000480004800049000490004800049000490004800048"));
    }

    @Test
    public void test287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test287");
        java.util.Optional<java.lang.String> strOptional1 = strman.Strman.trimStart("NULL97");
        boolean boolean2 = strman.Strman.isString((java.lang.Object) strOptional1);
        org.junit.Assert.assertNotNull(strOptional1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test288");
        java.lang.String str1 = strman.Strman.underscored
        org.junit.Assert.assertTrue("'" + strstr1.equals
    }

    @Test
    public void test289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test289");
        java.lang.String[] strArray7 = strman.Strman.words("", "null");
        boolean boolean9 = strman.Strman.containsAny("1", strArray7, true);
        boolean boolean11 = strman.Strman.containsAny("97", strArray7, true);
        java.lang.String str12 = strman.Strman.format("79llunhihi779llun979llun-l79llun-l79llun-u79llun-n79llun-hihi", strArray7);
        boolean boolean14 = strman.Strman.containsAll("Hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!blVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97Nnul", strArray7, true);
        java.lang.String str15 = strman.Strman.prependArray("00055000570010800108001170011000104001050010400105000550005500057001080010800117001100005700055000570010800108001170011000076000550005700108001080011700110000760005500057001080010800117001100008500055000570010800108001170011000078000550005700108001080011700110", strArray7);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "79llunhihi779llun979llun-l79llun-l79llun-u79llun-n79llun-hihi" + "'", str12.equals("79llunhihi779llun979llun-l79llun-l79llun-u79llun-n79llun-hihi"));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + str15 + "' != '" + "00055000570010800108001170011000104001050010400105000550005500057001080010800117001100005700055000570010800108001170011000076000550005700108001080011700110000760005500057001080010800117001100008500055000570010800108001170011000078000550005700108001080011700110" + "'", str15.equals("00055000570010800108001170011000104001050010400105000550005500057001080010800117001100005700055000570010800108001170011000076000550005700108001080011700110000760005500057001080010800117001100008500055000570010800108001170011000078000550005700108001080011700110"));
    }

    @Test
    public void test290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test290");
        java.lang.String str1 = strman.Strman.removeSpaces("006e0075006c006c006e0075006c006c00390037006e006e0075006c");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "006e0075006c006c006e0075006c006c00390037006e006e0075006c" + "'", str1.equals("006e0075006c006c006e0075006c006c00390037006e006e0075006c"));
    }

    @Test
    public void test291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test291");
        java.lang.String str1 = strman.Strman.collapseWhitespace("MDA2ODAwNjkwMDJkMDA2ODAwNjkwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzEwMDM1MDAzNTAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzMTAwMzUwMDM3MDAzNDAwMzgwMDM0MDAzODAwMzUwMDM0MDAzOTAwMzkwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzQwMDM5MDAzOTAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzNTAwMzUwMDMzMDAzNDAwMzgwMDM0MDAzODAwMzUwMDM0MDAzMTAwMzAwMDMxMDAzNDAwMzgwMDM0MDAzODAwMzUwMDMxMDAzNTAwMzUwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzEwMDM1MDAzNTAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzMTAwMzUwMDM3MDAzNDAwMzgwMDM0MDAzODAwMzUwMDM0MDAzOTAwMzkwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzQwMDM5MDAzOTAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzNTAwMzUwMDMzMDAzNDAwMzgwMDM0MDAzODAwMzUwMDM0MDAzMTAwMzAwMDMxMDAzNDAwMzgwMDM0MDAzODAwMzUwMDMxMDAzNTAwMzcwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzEwMDM1MDAzNTAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzMTAwMzUwMDM3MDAzNDAwMzgwMDM0MDAzODAwMzUwMDM0MDAzOTAwMzkwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzQwMDM5MDAzOTAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzNTAwMzUwMDMzMDAzNDAwMzgwMDM0MDAzODAwMzUwMDM0MDAzMTAwMzAwMDMxMDAzNDAwMzgwMDM0MDAzODAwMzUwMDMyMDAzOTAwMzkwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzEwMDM1MDAzNTAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzMTAwMzUwMDM3MDAzNDAwMzgwMDM0MDAzODAwMzUwMDM0MDAzOTAwMzkwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzQwMDM5MDAzOTAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzNTAwMzUwMDMzMDAzNDAwMzgwMDM0MDAzODAwMzUwMDM0MDAzMTAwMzAwMDMxMDAzNDAwMzgwMDM0MDAzODAwMzUwMDMyMDAzOTAwMzkwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzEwMDM1MDAzNTAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzMTAwMzUwMDM3MDAzNDAwMzgwMDM0MDAzODAwMzUwMDM0MDAzOTAwMzkwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzQwMDM5MDAzOTAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzNTAwMzUwMDMzMDAzNDAwMzgwMDM0MDAzODAwMzUwMDM0MDAzMTAwMzAwMDMxMDAzNDAwMzgwMDM0MDAzODAwMzUwMDMzMDAzNTAwMzMwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzEwMDM1MDAzNTAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzMTAwMzUwMDM3MDAzNDAwMzgwMDM0MDAzODAwMzUwMDM0MDAzOTAwMzkwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzQwMDM5MDAzOTAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzNTAwMzUwMDMzMDAzNDAwMzgwMDM0MDAzODAwMzUwMDM0MDAzMTAwMzAwMDMxMDAzNDAwMzgwMDM0MDAzODAwMzUwMDMyMDAzMTAwMzAwMDMxMDAzNDAwMzgwMDM0MDAzODAwMzUwMDMxMDAzNTAwMzUwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzEwMDM1MDAzNzAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzNDAwMzkwMDM5MDAzNDAwMzgwMDM0MDAzODAwMzUwMDM0MDAzOTAwMzkwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzUwMDM1MDAzMzAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzNDAwMzEwMDMwMDAzMTAwMzAwMDMwMDAzMDAwMzAwMDMwMDAzMDAwMzAwMDMwMDAzMDAwMzEwMDMwMDAzMDAwMzEwMDMwMDAzMDAwMzAwMDMwMDAzMDAwMzAwMDMwMDAzMDAwMzAwMDMwMDAzMDAwMzAwMDMxMDAzMTAwMzAwMDMxMDAzMDAwMzAwMDMx");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "MDA2ODAwNjkwMDJkMDA2ODAwNjkwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzEwMDM1MDAzNTAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzMTAwMzUwMDM3MDAzNDAwMzgwMDM0MDAzODAwMzUwMDM0MDAzOTAwMzkwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzQwMDM5MDAzOTAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzNTAwMzUwMDMzMDAzNDAwMzgwMDM0MDAzODAwMzUwMDM0MDAzMTAwMzAwMDMxMDAzNDAwMzgwMDM0MDAzODAwMzUwMDMxMDAzNTAwMzUwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzEwMDM1MDAzNTAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzMTAwMzUwMDM3MDAzNDAwMzgwMDM0MDAzODAwMzUwMDM0MDAzOTAwMzkwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzQwMDM5MDAzOTAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzNTAwMzUwMDMzMDAzNDAwMzgwMDM0MDAzODAwMzUwMDM0MDAzMTAwMzAwMDMxMDAzNDAwMzgwMDM0MDAzODAwMzUwMDMxMDAzNTAwMzcwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzEwMDM1MDAzNTAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzMTAwMzUwMDM3MDAzNDAwMzgwMDM0MDAzODAwMzUwMDM0MDAzOTAwMzkwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzQwMDM5MDAzOTAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzNTAwMzUwMDMzMDAzNDAwMzgwMDM0MDAzODAwMzUwMDM0MDAzMTAwMzAwMDMxMDAzNDAwMzgwMDM0MDAzODAwMzUwMDMyMDAzOTAwMzkwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzEwMDM1MDAzNTAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzMTAwMzUwMDM3MDAzNDAwMzgwMDM0MDAzODAwMzUwMDM0MDAzOTAwMzkwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzQwMDM5MDAzOTAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzNTAwMzUwMDMzMDAzNDAwMzgwMDM0MDAzODAwMzUwMDM0MDAzMTAwMzAwMDMxMDAzNDAwMzgwMDM0MDAzODAwMzUwMDMyMDAzOTAwMzkwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzEwMDM1MDAzNTAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzMTAwMzUwMDM3MDAzNDAwMzgwMDM0MDAzODAwMzUwMDM0MDAzOTAwMzkwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzQwMDM5MDAzOTAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzNTAwMzUwMDMzMDAzNDAwMzgwMDM0MDAzODAwMzUwMDM0MDAzMTAwMzAwMDMxMDAzNDAwMzgwMDM0MDAzODAwMzUwMDMzMDAzNTAwMzMwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzEwMDM1MDAzNTAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzMTAwMzUwMDM3MDAzNDAwMzgwMDM0MDAzODAwMzUwMDM0MDAzOTAwMzkwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzQwMDM5MDAzOTAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzNTAwMzUwMDMzMDAzNDAwMzgwMDM0MDAzODAwMzUwMDM0MDAzMTAwMzAwMDMxMDAzNDAwMzgwMDM0MDAzODAwMzUwMDMyMDAzMTAwMzAwMDMxMDAzNDAwMzgwMDM0MDAzODAwMzUwMDMxMDAzNTAwMzUwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzEwMDM1MDAzNzAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzNDAwMzkwMDM5MDAzNDAwMzgwMDM0MDAzODAwMzUwMDM0MDAzOTAwMzkwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzUwMDM1MDAzMzAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzNDAwMzEwMDMwMDAzMTAwMzAwMDMwMDAzMDAwMzAwMDMwMDAzMDAwMzAwMDMwMDAzMDAwMzEwMDMwMDAzMDAwMzEwMDMwMDAzMDAwMzAwMDMwMDAzMDAwMzAwMDMwMDAzMDAwMzAwMDMwMDAzMDAwMzAwMDMxMDAzMTAwMzAwMDMxMDAzMDAwMzAwMDMx" + "'", str1.equals("MDA2ODAwNjkwMDJkMDA2ODAwNjkwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzEwMDM1MDAzNTAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzMTAwMzUwMDM3MDAzNDAwMzgwMDM0MDAzODAwMzUwMDM0MDAzOTAwMzkwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzQwMDM5MDAzOTAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzNTAwMzUwMDMzMDAzNDAwMzgwMDM0MDAzODAwMzUwMDM0MDAzMTAwMzAwMDMxMDAzNDAwMzgwMDM0MDAzODAwMzUwMDMxMDAzNTAwMzUwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzEwMDM1MDAzNTAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzMTAwMzUwMDM3MDAzNDAwMzgwMDM0MDAzODAwMzUwMDM0MDAzOTAwMzkwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzQwMDM5MDAzOTAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzNTAwMzUwMDMzMDAzNDAwMzgwMDM0MDAzODAwMzUwMDM0MDAzMTAwMzAwMDMxMDAzNDAwMzgwMDM0MDAzODAwMzUwMDMxMDAzNTAwMzcwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzEwMDM1MDAzNTAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzMTAwMzUwMDM3MDAzNDAwMzgwMDM0MDAzODAwMzUwMDM0MDAzOTAwMzkwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzQwMDM5MDAzOTAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzNTAwMzUwMDMzMDAzNDAwMzgwMDM0MDAzODAwMzUwMDM0MDAzMTAwMzAwMDMxMDAzNDAwMzgwMDM0MDAzODAwMzUwMDMyMDAzOTAwMzkwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzEwMDM1MDAzNTAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzMTAwMzUwMDM3MDAzNDAwMzgwMDM0MDAzODAwMzUwMDM0MDAzOTAwMzkwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzQwMDM5MDAzOTAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzNTAwMzUwMDMzMDAzNDAwMzgwMDM0MDAzODAwMzUwMDM0MDAzMTAwMzAwMDMxMDAzNDAwMzgwMDM0MDAzODAwMzUwMDMyMDAzOTAwMzkwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzEwMDM1MDAzNTAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzMTAwMzUwMDM3MDAzNDAwMzgwMDM0MDAzODAwMzUwMDM0MDAzOTAwMzkwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzQwMDM5MDAzOTAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzNTAwMzUwMDMzMDAzNDAwMzgwMDM0MDAzODAwMzUwMDM0MDAzMTAwMzAwMDMxMDAzNDAwMzgwMDM0MDAzODAwMzUwMDMzMDAzNTAwMzMwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzEwMDM1MDAzNTAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzMTAwMzUwMDM3MDAzNDAwMzgwMDM0MDAzODAwMzUwMDM0MDAzOTAwMzkwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzQwMDM5MDAzOTAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzNTAwMzUwMDMzMDAzNDAwMzgwMDM0MDAzODAwMzUwMDM0MDAzMTAwMzAwMDMxMDAzNDAwMzgwMDM0MDAzODAwMzUwMDMyMDAzMTAwMzAwMDMxMDAzNDAwMzgwMDM0MDAzODAwMzUwMDMxMDAzNTAwMzUwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzEwMDM1MDAzNzAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzNDAwMzkwMDM5MDAzNDAwMzgwMDM0MDAzODAwMzUwMDM0MDAzOTAwMzkwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzUwMDM1MDAzMzAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzNDAwMzEwMDMwMDAzMTAwMzAwMDMwMDAzMDAwMzAwMDMwMDAzMDAwMzAwMDMwMDAzMDAwMzEwMDMwMDAzMDAwMzEwMDMwMDAzMDAwMzAwMDMwMDAzMDAwMzAwMDMwMDAzMDAwMzAwMDMwMDAzMDAwMzAwMDMxMDAzMTAwMzAwMDMxMDAzMDAwMzAwMDMx"));
    }

    @Test
    public void test292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test292");
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.util.List<java.lang.String> strList6 = strman.Strman.zip(strArray5);
        boolean boolean8 = strman.Strman.containsAny("", strArray5, true);
        boolean boolean10 = strman.Strman.containsAny("hi!hi!", strArray5, true);
        boolean boolean12 = strman.Strman.containsAll("10", strArray5, false);
        boolean boolean13 = strman.Strman.containsAll("Null97Nnull97Unull97Lnull97Lnull979null977null97", strArray5);
        java.lang.Class<?> wildcardClass14 = strArray5.getClass();
        java.lang.String str15 = strman.Strman.prepend("", strArray5);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + str15 + "' != '" + "" + "'", str15.equals(""));
    }

    @Test
    public void test293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test293");
        java.lang.String str3 = strman.Strman.removeRight("hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!8484855544848484848484848565348484848484848485556104105104105000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97-nnull97-unull97-lnull97-lnull979null977nullfalse);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!8484855544848484848484848565348484848484848485556104105104105000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97-nnull97-unull97-lnull97-lnull979null977null9700000000010011010000000001000100000000000100000100000000001100100000000001011010000000000101010000000000010000010000000001110111000000000100111000000000011110100000000001010101000000000111011100000000010011010000000001000100000000000101101000000000011010100000000001001101000000000100010000000000010000010000000000110010000000000101100100000000011110100000000001000001000000000111011100000000010011010000000001111010000000000110101100000000011101110000000001001101000000000100010000000000010011010000000000110011" + "'", str3.equals("hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!8484855544848484848484848565348484848484848485556104105104105000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97-nnull97-unull97-lnull97-lnull979null977null9700000000010011010000000001000100000000000100000100000000001100100000000001011010000000000101010000000000010000010000000001110111000000000100111000000000011110100000000001010101000000000111011100000000010011010000000001000100000000000101101000000000011010100000000001001101000000000100010000000000010000010000000000110010000000000101100100000000011110100000000001000001000000000111011100000000010011010000000001111010000000000110101100000000011101110000000001001101000000000100010000000000010011010000000000110011"));
    }

    @Test
    public void test294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test294");
        java.lang.String str2 = strman.Strman.ensureRight("hihiHI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-NULL97HI-00370039006C006C0075006E003700370039006C006C0075006E003900370039006C006C0075006E004C00370039006C006C0075006E004C00370039006C006C0075006E005500370039006C006C0075006E004E00370039006C006C0075006E", "9ihih7");
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hihiHI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-NULL97HI-00370039006C006C0075006E003700370039006C006C0075006E003900370039006C006C0075006E004C00370039006C006C0075006E004C00370039006C006C0075006E005500370039006C006C0075006E004E00370039006C006C0075006E9ihih7" + "'", str2.equals("hihiHI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-NULL97HI-00370039006C006C0075006E003700370039006C006C0075006E003900370039006C006C0075006E004C00370039006C006C0075006E004C00370039006C006C0075006E005500370039006C006C0075006E004E00370039006C006C0075006E9ihih7"));
    }

    @Test
    public void test295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test295");
        java.lang.String str1 = strman.Strman.toStudlyCase("Ullnullnullnullnullnullnull null97nnul1097null971097");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "UllnullnullnullnullnullnullNull97nnul1097null971097" + "'", str1.equals("UllnullnullnullnullnullnullNull97nnul1097null971097"));
    }

    @Test
    public void test296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test296");
        java.lang.String str2 = strman.Strman.last("Hi!", 296);
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "Hi!" + "'", str2.equals("Hi!"));
    }

    @Test
    public void test297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test297");
        java.lang.String str3 = strman.Strman.removeLeft("00110000850007600076000570005500078000780008500076006e0075006c006c00390037004e006e0075006c006c003900370055006e0075006c006c00390037004c006e0075006c006c00390037004c006e0075006c006c003900370039006e0075006c006c003900370037006e0075006c006c00390037hi-hi0000000001001000000000000110100197-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e", "10145848435558484994584849945848475158484551584841012584841014584843555848499458484994584847515848455158484353584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484751584841014584843555848499458484994584847515848455158484551584841014584843555848499458484994584847515848455158484ih_ihllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunlunn79llun790179llun7901lunn79llun", true);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "00110000850007600076000570005500078000780008500076006e0075006c006c00390037004e006e0075006c006c003900370055006e0075006c006c00390037004c006e0075006c006c00390037004c006e0075006c006c003900370039006e0075006c006c003900370037006e0075006c006c00390037hi-hi0000000001001000000000000110100197-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e" + "'", str3.equals("00110000850007600076000570005500078000780008500076006e0075006c006c00390037004e006e0075006c006c003900370055006e0075006c006c00390037004c006e0075006c006c00390037004c006e0075006c006c003900370039006e0075006c006c003900370037006e0075006c006c00390037hi-hi0000000001001000000000000110100197-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e"));
    }

    @Test
    public void test298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test298");
        int int4 = strman.Strman.lastIndexOfnullnull97nnulhi", (int) (byte) 10, true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
    }

    @Test
    public void test299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test299");
        java.lang.String str2 = strman.Strman.last("00110000850007600076000570005500078000780008500076006e0075006c006c00390037004e006e0075006c006c003900370055006e0075006c006c00390037004c006e0075006c006c00390037004c006e0075006c006c003900370039006e0075006c006c003900370037006e0075006c006c00390037", 8);
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "00390037" + "'", str2.equals("00390037"));
    }

    @Test
    public void test300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test300");
        java.lang.String str1 = strman.Strman.removeNonWords
        org.junit.Assert.assertTrue("'" + strstr1.equals
    }

    @Test
    public void test301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test301");
        java.lang.String[] strArray2 = strman.Strman.words("000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100NULL97NULL97NNULL97UNULL97LNULL97LNULL979NULL977NULL97HIHIHIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhIhInULL97HInULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULL", "Hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!blVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxM");
        org.junit.Assert.assertNotNull(strArray2);
    }

    @Test
    public void test302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test302");
        java.lang.String str2 = strman.Strman.removeRightull97Nnull97Unull97Lnull97Lnull979Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Tl Vmtdk3null977null97NULL97Nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull", "=czMwATOzADMolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLolWLwADMwADMwADMxEDMxADMwADMwADMwADMwETMwEDMwEDMwADMwADMwADMxATMxATMwADMwADMwADMxEDMxADMwADMwADMwADMwETMwEDMwEDMwADMwADMwATMxATMxEDMwADMwADMwADMxETMwEDMxADMwADMwADMwETMwETMwADMwADMwADMwATMxATMxADMwADMwADMwADMwETMxADMxADMwADMwADMwATMxATMxEDMwADMwADMwATMxATMxEDMwADMwADMwADMxEDMxETMwADMwADMwADMwETMxATMwEDMwADMwADMwATMxATMxADM");
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "7710097503212211697119321101223211711932109100122106321091009750321211223297119321091221071193210910010951110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108110117108108484848484848484853534848484848484848535548484848484848485554484848484848484855544848484848484848565348484848484848485556484848484848484853534848484848484848535348484848484848485355484848484848484855544848484848484848555448484848484848485653484848484848484855564848484848484848535548484848484848485353484848484848484853554848484848484848555448484848484848485554484848484848484856534848484848484848555648484848484848494856484848484848484853534848484848484848535548484848484848485554484848484848484855544848484848484848565348484848484848485556484848484848484948564848484848484848535348484848484848485355484848484848484855544848484848484848555448484848484848485653484848484848484855564848484848484849495548484848484848485353484848484848484853554848484848484848555448484848484848485554484848484848484856534848484848484848555648484848484848494948484848484848484853534848484848484848535548484848484848485554484848484848484855544848484848484848565348484848484848485556104105104105Null97Nnull97Unull97Lnull97Lnull979Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Tl Vmtdk3null977null97NULL97Nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull" + "'", str2.equalsull97Nnull97Unull97Lnull97Lnull979Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Tl Vmtdk3null977null97NULL97Nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull"));
    }

    @Test
    public void test303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test303");
        java.util.Optional<java.lang.String> strOptional1 = strman.Strman.trimEnd
        org.junit.Assert.assertNotNull(strOptional1);
    }

    @Test
    public void test304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test304");
        try {
            java.lang.String str3 = strman.Strman.slice("ymx_w_t_v_r_f_n_v_z_u_r_xh_p_vl_v4_t_v_rs_vk1_u_r_t_v_w_v_e_v4_t1_z_ve_e1_ub_f_z_n_v_e_u1_vl_r_fe_e9_w_v_xh_n_v_gx_w_t_v_r_f_n_v_z_u_r_xh_p_vl_v4_t_v_rs_vk1_u_r_t_v_w_v_e_v4_t1_z_ve_e1_ub_f_z_n_v_e_u1_vl_r_fe_e9_w_v_xh_n_v_gx_w_t_v_r_f_n_v_z_u_r_xh_p_vl_v4_t_v_rs_vk1_u_r_t_v_w_v_e_v4_t1_z_ve_e1_ub_f_z_n_v_e_u1_vl_r_fe_e9_w_v_xh_n_v_gx_w_t_v_r_f_n_v_z_u_r_xh_p_vl_v4_t_v_rs_vk1_u_r_t_v_w_v_e_v4_t1_z_ve_e1_ub_f_z_n_v_e_u1_vl_r_fe_e9_w_v_xh_n_v_gx_w_t_v_r_f_n_v_z_u_r_xh_p_vl_v4_t_v_rs_vk1_u_r_t_v_w_v_e_v4_t1_z_ve_e1_ub_f_z_n_v_e_u1_vl_r_fe_e9_w_v_xh_n_v_gx_w_t_v_r_f_n_v_z_u_r_xh_p_vl_v4_t_t_aw_m_d_aw_m_d_aw_n_t_uw_m_d_aw_m_d_aw_m_d_u3_m_d_aw_m_d_aw_m_d_a3_nj_aw_m_d_aw_m_d_aw_nz_yw_m_d_aw_m_d_aw_m_dg1_m_d_aw_m_d_aw_m_d_a3_o_d_aw_m_d_aw_m_d_aw_n_t_uw_m_d_aw_m_d_aw_m_d_u1_m_d_aw_m_d_aw_m_d_a1_nz_aw_m_d_aw_m_d_aw_nz_yw_m_d_aw_m_d_aw_m_dc2_m_d_aw_m_d_aw_m_d_a4_n_t_aw_m_d_aw_m_d_aw_nzgw_m_d_aw_m_d_aw_m_d_u3_m_d_aw_m_d_aw_m_d_a1_n_t_aw_m_d_aw_m_d_aw_n_tcw_m_d_aw_m_d_aw_m_dc2_m_d_aw_m_d_aw_m_d_a3_nj_aw_m_d_aw_m_d_aw_o_d_uw_m_d_aw_m_d_aw_m_dc4_m_d_aw_m_d_aw_m_d_ew_o_d_aw_m_d_aw_m_d_aw_n_t_uw_m_d_aw_m_d_aw_m_d_u3_m_d_aw_m_d_aw_m_d_a3_nj_aw_m_d_aw_m_d_aw_nz_yw_m_d_aw_m_d_aw_m_dg1_m_d_aw_m_d_aw_m_d_a3_o_d_aw_m_d_aw_m_d_ax_m_dgw_m_d_aw_m_d_aw_m_d_u1_m_d_aw_m_d_aw_m_d_a1_nz_aw_m_d_aw_m_d_aw_nz_yw_m_d_aw_m_d_aw_m_dc2_m_d_aw_m_d_aw_m_d_a4_n_t_aw_m_d_aw_m_d_aw_nzgw_m_d_aw_m_d_aw_m_t_e3_m_d_aw_m_d_aw_m_d_a1_n_t_aw_m_d_aw_m_d_aw_n_tcw_m_d_aw_m_d_aw_m_dc2_m_d_aw_m_d_aw_m_d_a3_nj_aw_m_d_aw_m_d_aw_o_d_uw_m_d_aw_m_d_aw_m_dc4_m_d_aw_m_d_aw_m_d_ex_m_d_aw_m_d_aw_m_d_aw_n_t_uw_m_d_aw_m_d_aw_m_d_u3_m_d_aw_m_d_aw_m_d_a3_nj_aw_m_d_aw_m_d_aw_nz_yw_m_d_aw_m_d_aw_m_dg1_m_d_aw_m_d_aw_m_d_a3_o_ghpa_gk=", (int) (short) 1, 6416);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 6416");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        }
    }

    @Test
    public void test305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test305");
        boolean boolean1 = strman.Strman.isBlank("lunN79llun001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000ihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihiHMxUVOxETV5ETMVlTMxUVOxETV5ETMVlTMxUVOxETV5ETMVlTMxUVOxETV5ETMVlTMxUVOxETV5ETMVlTMxUVOxETV5ETMVlTMxUVOxETV5ETMVlTMxUVOxETV5ETMVlTMxUVOxETV5ETMVlTMxUVOxETV5ETMVlTMxUVOxETV5ETMVlTMxUVOxETV5ETMVlTMxUVOxETV5ETMVlTMxUVOxETV5ETMVlTMxUVOxETV5ETMVlTMxUVOxETV5ETMVlb!ih79llun!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ihihiH");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
    }

    @Test
    public void test306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test306");
        java.lang.String str3 = strman.Strman.encode("79llunhihi779llun979llunL79llunL79llunU79llunN79llunHihi", 3, 294);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "055057108108117110104105104105055055057108108117110057055057108108117110076055057108108117110076055057108108117110085055057108108117110078055057108108117110072105104105" + "'", str3.equals("055057108108117110104105104105055055057108108117110057055057108108117110076055057108108117110076055057108108117110085055057108108117110078055057108108117110072105104105"));
    }

    @Test
    public void test307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test307");
        java.lang.String str3 = strman.Strman.leftPad("", "001", 0);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "" + "'", str3.equals(""));
    }

    @Test
    public void test308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test308");
        int int3 = strman.Strman.lastIndexOf("iHIHHIHI484851554848515748485499484854994848555348485410148485155484851554848515748485499484854994848555348485410148485157484851554848515748485499484854994848555348485410148485299484851554848515748485499484854994848555348485410148485299484851554848515748485499484854994848555348485410148485353484851554848515748485499484854994848555348485410148485210148485155484851574848549948485499484855534848541019ihi h7null0000000001101001000000000110100000000000011010010000000001001000", "00048000480004800048000480004800048000480004800048000490004900048000480004900049000480004800048000480004800048000480004800048000480004900049000480004900048000490011000117001080010800057000550011000110001170010810145848435558484994584849945848475158484551584841012584841014584843555848499458484994584847515848455158484353584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484751584841014584843555848499458484994584847515848455158484551584841014584843555848499458484994584847515848455158484ihihh_ihInullhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!nullnull97nnulnull971lunn79llun", false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
    }

    @Test
    public void test309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test309");
        boolean boolean3 = strman.Strman.endsWith("nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnullnullnullnullnull006e0075006c006c00390037hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!", "Hihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihinull97hihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihiNULL97NUllnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullHihihihiNULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL979710g2xphwA000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97Nnull97Unull97Lnull97Lnull979null977null97Hihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihinull97hi00000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100", true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test310");
        boolean boolean1 = strman.Strman.isLowerCase("10145848435558484994584849945848475158484551584841012584841014584843555848499458484994584847515848455158484353584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484751584841014584843555848499458484994584847515848455158484551584841014584843555848499458484994584847515848455158484ih-ihllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunlunn79llun790179llun7901lunn79llunnull");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
    }

    @Test
    public void test311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test311");
        java.lang.String str1 = strman.Strman.removeNonWords("hi!hi!97");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "hihi97" + "'", str1.equals("hihi97"));
    }

    @Test
    public void test312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test312");
        java.lang.String str1 = strman.Strman.collapseWhitespace("tNvSBdK3BM51Ba==");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "tNvSBdK3BM51Ba==" + "'", str1.equals("tNvSBdK3BM51Ba=="));
    }

    @Test
    public void test313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test313");
        java.lang.String str1 = strman.Strman.underscored("aGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGkwMDAwMDAwMDAxMTAxMDAwMDAwMDAwMDAwMTEwMTAwMTAwMDAwMDAwMDAxMDExMDEwMDAwMDAwMDAxMTAxMDAwMDAwMDAwMDAwMTEwMTAwMTAwMDAwMDAwMDExMDExMTAwMDAwMDAwMDAxMTEwMTAxMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAwMTExMDAxMDAwMDAwMDAwMDExMDExMTAwMDAwMDAwMDExMDExMTAwMDAwMDAwMDAxMTAxMTEwMDAwMDAwMDAwMTExMDEwMTAwMDAwMDAwMDExMDExMDA=");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "a_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gkw_mdaw_mdaw_mdax_mtax_mdaw_mdaw_mdaw_mdaw_mtew_mtaw_mtaw_mdaw_mdaw_mdax_mdex_mdew_mdaw_mdaw_mdax_mtax_mdaw_mdaw_mdaw_mdaw_mtew_mtaw_mtaw_mdaw_mdaw_mdex_mdex_mtaw_mdaw_mdaw_mdax_mtew_mtax_mdaw_mdaw_mdaw_mtew_mtew_mdaw_mdaw_mdaw_mdex_mdex_mdaw_mdaw_mdaw_mdaw_mtex_mdax_mdaw_mdaw_mdaw_mdex_mdex_mtaw_mdaw_mdaw_mdex_mdex_mtaw_mdaw_mdaw_mdax_mtax_mtew_mdaw_mdaw_mdaw_mtex_mdew_mtaw_mdaw_mdaw_mdex_mdex_mda=" + "'", str1.equals("a_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gkw_mdaw_mdaw_mdax_mtax_mdaw_mdaw_mdaw_mdaw_mtew_mtaw_mtaw_mdaw_mdaw_mdax_mdex_mdew_mdaw_mdaw_mdax_mtax_mdaw_mdaw_mdaw_mdaw_mtew_mtaw_mtaw_mdaw_mdaw_mdex_mdex_mtaw_mdaw_mdaw_mdax_mtew_mtax_mdaw_mdaw_mdaw_mtew_mtew_mdaw_mdaw_mdaw_mdex_mdex_mdaw_mdaw_mdaw_mdaw_mtex_mdax_mdaw_mdaw_mdaw_mdex_mdex_mtaw_mdaw_mdaw_mdex_mdex_mtaw_mdaw_mdaw_mdax_mtax_mtew_mdaw_mdaw_mdaw_mtex_mdew_mtaw_mdaw_mdaw_mdex_mdex_mda="));
    }

    @Test
    public void test314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test314");
        java.lang.String str1 = strman.Strman.leftTrim("001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih" + "'", str1.equals("001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih"));
    }

    @Test
    public void test315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test315");
        java.lang.String str1 = strman.Strman.toKebabCase("000550005700076000760008500078000550005500057000760007600085000780005700055000570007600076000850007800108000550005700076000760008500078001080005500057000760007600085000780011700055000570007600076000850007800110000550005700076000760008500078000550005700076000760008500078000550005500057000760007600085000780005700055000570007600076000850007800108000550005700076000760008500078001080005500057000760007600085000780011700055000570007600076000850007800110000550005700076000760008500078");
        org.junit.Assert.assertTrue("'" + strstr1.equals("000550005700076000760008500078000550005500057000760007600085000780005700055000570007600076000850007800108000550005700076000760008500078001080005500057000760007600085000780011700055000570007600076000850007800110000550005700076000760008500078000550005700076000760008500078000550005500057000760007600085000780005700055000570007600076000850007800108000550005700076000760008500078001080005500057000760007600085000780011700055000570007600076000850007800110000550005700076000760008500078"));
    }

    @Test
    public void test316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test316");
        java.lang.String str1 = strman.Strman.escapeRegExp("Hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hiHI_HI");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "Hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hiHI_HI" + "'", str1.equals("Hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hiHI_HI"));
    }

    @Test
    public void test317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test317");
        int int3 = strman.Strman.lastIndexOftrue);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
    }

    @Test
    public void test318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test318");
        java.lang.String str2 = strman.Strman.toDecamelize("HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-NULL97HI-00370039006C006C0075006E003700370039006C006C0075006E003900370039006C006C0075006E004C00370039006C006C0075006E004C00370039006C006C0075006E005500370039006C006C0075006E004E00370039006C006C0075006En-u-l-l97-n-ullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull", "00048000480004800048000480004800048000480004800048000490004900048000480004901097nullnull97nnulhi");
    }

    @Test
    public void test319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test319");
        java.lang.String str1 = strman.Strman.underscored("nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull" + "'", str1.equals("nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull"));
    }

    @Test
    public void test320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test320");
        java.lang.String str1 = strman.Strman.dasherize("006e0075006c006c00390037hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "006e0075006c006c00390037hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!" + "'", str1.equals("006e0075006c006c00390037hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!"));
    }

    @Test
    public void test321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test321");
        int int4 = strman.Strman.indexOf("null97Nnull97Unull97Lnull97Lnull979null977null97006E0075006C006C00390037HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!", "hihiHI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-NULL97HI-00370039006C006C0075006E003700370039006C006C0075006E003900370039006C006C0075006E004C00370039006C006C0075006E004C00370039006C006C0075006E005500370039006C006C0075006E004E00370039006C006C0075006E9ihih7", 540, true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
    }

    @Test
    public void test322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test322");
        int int1 = strman.Strman.length("591089912010138108108117110108108117110591089912010138108108117110108108117110nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnulln_u_l_l97hihi");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 603 + "'", int1 == 603);
    }

    @Test
    public void test323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test323");
        boolean boolean1 = strman.Strman.isUpperCase("MDA200");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
    }

    @Test
    public void test324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test324");
        java.lang.String[] strArray2 = strman.Strman.split("0004800048000490004900048000480004800049000490005500048000480004900048000560004800048000490004800056000480004800048000530005500048000480004800053000530004800048000480005500056000480004800049000490004800048000480004900049000550004800048000490004800056006e0075006c006c00390037006e002d0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c", "");
        org.junit.Assert.assertNotNull(strArray2);
    }

    @Test
    public void test325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test325");
        java.lang.String str1 = strman.Strman.reverse("001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100" + "'", str1.equals("HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100"));
    }

    @Test
    public void test326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test326");
        int int2 = strman.Strman.lastIndexOf("5500075000Hihillun10145848435558484994584849945848475158484551584841012584841014584843555848499458484994584847515848455158484353584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484751584841014584843555848499458484994584847515848455158484551584841014584843555848499458484994584847515848455158484ih-ihllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunlunn79llun790179llun7901lunn79llun", "006e00680069006800690048006900480069007500680069006800690048006900480069006c00680069006800690048006900480069006c");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
    }

    @Test
    public void test327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test327");
        boolean boolean2 = strman.Strman.endsWith("bnVsbDk3bm51bDEwOTdudWxsOTcxMDk3006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037", "Mda2 ztaw nz uw mdzj mda2 yz aw mzkw mdm3nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullMDAxMTAxMTAwMDAwMDAwMDEwMTAxMTEwMDAwMDAwMDAwMTExMDExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDAxMDAxMTEwMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAxMDEwMTExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDEwMDEwMTEwMDAwMDAwMDAwMDAxMDExMDAwMDAwMDAwMTAxMTAxMDAwMDAwMDAwMDEwMDEwMTEwMDAwMDAwMDAwMDAxMDExMDAwMDAwMDAwaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaS1o");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test328");
        java.lang.String[] strArray1 = null;
        java.lang.String str2 = strman.Strman.append("000550005700076000760008500078000550005500057000760007600085000780005700055000570007600076000850007800108000550005700076000760008500078001080005500057000760007600085000780011700055000570007600076000850007800110000550005700076000760008500078000550005700076000760008500078000550005500057000760007600085000780005700055000570007600076000850007800108000550005700076000760008500078001080005500057000760007600085000780011700055000570007600076000850007800110000550005700076000760008500078", strArray1);
        org.junit.Assert.assertTrue("'" + strstr2.equals("000550005700076000760008500078000550005500057000760007600085000780005700055000570007600076000850007800108000550005700076000760008500078001080005500057000760007600085000780011700055000570007600076000850007800110000550005700076000760008500078000550005700076000760008500078000550005500057000760007600085000780005700055000570007600076000850007800108000550005700076000760008500078001080005500057000760007600085000780011700055000570007600076000850007800110000550005700076000760008500078"));
    }

    @Test
    public void test329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test329");
        java.lang.String[] strArray3 = strman.Strman.between("lunn79llun006900680069005f006800680069002dhi Hhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97", "");
        org.junit.Assert.assertNotNull(strArray3);
    }

    @Test
    public void test330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test330");
        java.lang.String str3 = strman.Strman.rightPad("9ihi h7null", "79lluN73009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60079lluN73009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60079lluN73009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60079lluN73009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60079lluN73009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60079lluN73009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60079lluN73009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60079lluN73009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60079lluN73009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60079lluN73009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e60073009300c600c6005700e600HihiIHI_HHI_HI48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101", 296);
    }

    @Test
    public void test331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test331");
        java.lang.String[] strArray3 = strman.Strman.split("Hi-hinull97nnul", "");
        java.lang.String str4 = strman.Strman.prepend("5555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555", strArray3);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Hi-hinull97nnul5555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555" + "'", str4.equals("Hi-hinull97nnul5555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555"));
    }

    @Test
    public void test332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test332");
        java.lang.String str2 = strman.Strman.last("006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c", 6);
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "6c006c" + "'", str2.equals("6c006c"));
    }

    @Test
    public void test333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test333");
        java.lang.String str1 = strman.Strman.toCamelCase("Ihi97hhi97hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "ihi97hhi97hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101" + "'", str1.equals("ihi97hhi97hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101"));
    }

    @Test
    public void test334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test334");
        java.lang.String str2 = strman.Strman.ensureLeft("mDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3TnVsbA==", "");
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "mDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3TnVsbA==" + "'", str2.equals("mDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3TnVsbA=="));
    }

    @Test
    public void test335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test335");
        java.lang.String str1 = strman.Strman.htmlEncode("nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull" + "'", str1.equals("nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull"));
    }

    @Test
    public void test336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test336");
        int int1 = strman.Strman.length("1null97null97_nnul_n_u_l_l97_n_n_u_l!ih000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97_nnull97_unull97_lnull97_lnull979null977null97");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 337 + "'", int1 == 337);
    }

    @Test
    public void test337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test337");
        java.util.Optional<java.lang.String> strOptional2 = strman.Strman.at("Ihihhihi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101", 7842);
        org.junit.Assert.assertNotNull(strOptional2);
    }

    @Test
    public void test338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test338");
        java.lang.String[] strArray3 = strman.Strman.chars("null");
        java.lang.String str4 = strman.Strman.prepend("hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!", strArray3);
        java.lang.String str6 = strman.Strman.join(strArray3, "hihiHiHi");
        boolean boolean7 = strman.Strman.containsAllstrArray3);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "nullhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!" + "'", str4.equals("nullhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!"));
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "nhihiHiHiuhihiHiHilhihiHiHil" + "'", str6.equals("nhihiHiHiuhihiHiHilhihiHiHil"));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test339");
        java.lang.String str3 = strman.Strman.safeTruncate("000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97 Nnull97 Unull97 Lnull97 Lnull979null977null97 Hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!", 0, "null97hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!nnull97hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!unull97hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!lnull97hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!lnull979null977null97");
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "" + "'", str3.equals(""));
    }

    @Test
    public void test340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test340");
        int int3 = strman.Strman.lastIndexOffalse);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
    }

    @Test
    public void test341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test341");
        long long2 = strman.Strman.countSubstr("Null97nnulnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
    }

    @Test
    public void test342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test342");
        java.lang.String[] strArray3 = strman.Strman.chars("null");
        java.lang.String str4 = strman.Strman.format("null97nnul", strArray3);
        java.lang.String[] strArray5 = strman.Strman.removeEmptyStrings(strArray3);
        java.lang.String str6 = strman.Strman.format("nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull", strArray5);
        java.util.List<java.lang.String> strList7 = strman.Strman.zip(strArray5);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "null97nnul" + "'", str4.equals("null97nnul"));
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull" + "'", str6.equals("nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull"));
        org.junit.Assert.assertNotNull(strList7);
    }

    @Test
    public void test343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test343");
        boolean boolean2 = strman.Strman.inequal("hihi-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-n-u-l-l97-n-n-u-l-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-h-i-n-u-l-l97-h-i00370039006-c006-c0075006-e003700370039006-c006-c0075006-e003900370039006-c006-c0075006-e004-c00370039006-c006-c0075006-e004-c00370039006-c006-c0075006-e005500370039006-c006-c0075006-e004-e00370039006-c006-c0075006-e", "10145848435558484994584849945848475158484551584841012584841014584843555848499458484994584847515848455158484353584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484751584841014584843555848499458484994584847515848455158484551584841014584843555848499458484994584847515848455158484ih-ihh_ihI");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
    }

    @Test
    public void test344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test344");
        java.lang.String str3 = strman.Strman.safeTruncate("tnvsbdk3bm51ba", 7842, "550007500067000670005800087000550005500075000670006700058000870007500055000750006700067000580008700080100550007500067000670005800087000801005500075000670006700058000870007110055000750006700067000580008700001100550007500067000670005800087000llun");
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "tnvsbdk3bm51ba" + "'", str3.equals("tnvsbdk3bm51ba"));
    }

    @Test
    public void test345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test345");
        java.lang.String[] strArray2 = strman.Strman.split("001040ll97", "IHI97HHI97HI48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101");
        java.lang.String[] strArray3 = strman.Strman.removeEmptyStrings(strArray2);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(strArray3);
    }

    @Test
    public void test346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test346");
        java.lang.String str1 = strman.Strman.swapCase("hihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "HIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHI" + "'", str1.equals("HIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHI"));
    }

    @Test
    public void test347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test347");
        java.lang.String[] strArray2 = strman.Strman.chop("mw==Hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!null97Nnul", 440);
        org.junit.Assert.assertNotNull(strArray2);
    }

    @Test
    public void test348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test348");
        java.lang.String[] strArray4 = new java.lang.String[] { "hihi" };
        java.util.List<java.lang.String> strList5 = strman.Strman.zip(strArray4);
        java.lang.String[] strArray6 = strman.Strman.removeEmptyStrings(strArray4);
        java.lang.String str7 = strman.Strman.prependstrArray4);
        boolean boolean9 = strman.Strman.containsAll("HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!NULL971null97null97Nnull97Unull97Lnull97Lnull979null977null97", strArray4, false);
        java.util.Optional<java.lang.String> strOptional10 = strman.Strman.trimStartstrArray4);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + str7 + "' != '" + "hihistr7.equals("hihi
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strOptional10);
    }

    @Test
    public void test349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test349");
        java.lang.String[] strArray1 = strman.Strman.wordsnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLi3kdtmV lT hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeShi-h");
        org.junit.Assert.assertNotNull(strArray1);
    }

    @Test
    public void test350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test350");
        java.lang.String str2 = strman.Strman.removeLeft("hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97", "TlVMTDk3aGloaQ==");
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97" + "'", str2.equals("hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97"));
    }

    @Test
    public void test351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test351");
        java.lang.String str1 = strman.Strman.escapeRegExp("48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101Nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101Nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull" + "'", str1.equals("48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101Nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull"));
    }

    @Test
    public void test352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test352");
        boolean boolean2 = strman.Strman.contains("ihiHhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mhibl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mtl-vmte5vtex-ovux-mnull
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test353");
        java.lang.String[] strArray4 = strman.Strman.chop("!-h-i!-h-i!-h-i!", 160);
        boolean boolean5 = strman.Strman.containsAll("0000000000110000000000000011000000000000001100000000000000110000000000000011000000000000001100000000000000110000000000000011000000000000001100000000000000110000000000000011000100000000001100010000000000110001000000000011000000000000001100000000000000110001000000000011000000000000001100000000000000110000000000000011000000000000001100000000000000110000000000000011000000000000001100000000000000110000000000000011000000000000001100010000000000110001000000000011000000000000001100010000000000110001000000000011000100000000001100000000000000110000000000000011000000000000001100000000000000110000000000000011000000000000001100000000000000110000000000000011000000000000001100000000000000110001000000000011000100000000001100000000000000110000000000000011000000000000001100010000000000110000000000000011000000000000001100000000000000110000000000000011000000000000001100000000000000110000000000000011000000000000001100000000000000110000000000000011000100000000001100010000000000110000000000000011000000000000001100000000000000110000", strArray4);
        java.util.Optional<java.lang.String> strOptional6 = strman.Strman.trimStart("10145848435558484994584849945848475158484551584841012584841014584843555848499458484994584847515848455158484353584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484751584841014584843555848499458484994584847515848455158484551584841014584843555848499458484994584847515848455158484ih-ihh_ihI", strArray4);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strOptional6);
    }

    @Test
    public void test354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test354");
        java.lang.String str1 = strman.Strman.decEncode("Ihi H");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "0007300104001050003200072" + "'", str1.equals("0007300104001050003200072"));
    }

    @Test
    public void test355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test355");
        java.util.Map<java.lang.Character, java.lang.Long> charMap1 = strman.Strman.charsCount("6500084000940008400084000550009400094000840008400084000940009400084000840006500055000840008400084000350003500084000840008400055000350008400084000840006500084000940008400084000650008400094000840008400055000940009400084000840008400094000940008400084000");
        org.junit.Assert.assertNotNull(charMap1);
    }

    @Test
    public void test356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test356");
        java.lang.String str3 = strman.Strman.surround("Null97 nnull97 unull97 lnull97 lnull979null977null97", "hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_null97hi00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006ehi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!==AbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbhi-hinull97nnul", "");
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_null97hi00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006ehi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!==AbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbhi-hinull97nnulNull97 nnull97 unull97 lnull97 lnull979null977null97" + "'", str3.equals("hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_null97hi00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006ehi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!==AbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbhi-hinull97nnulNull97 nnull97 unull97 lnull97 lnull979null977null97"));
    }

    @Test
    public void test357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test357");
        java.lang.String str3 = strman.Strman.insert("null97hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!nnull97hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!unull97hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!lnull97hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!lnull979null977null97n-u-l-l97-n-ullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull97nnul1097null971097null97nnulnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullhi-hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101", "N u l l97 n n u lhi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi null97hi null97nnul hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!null97 nnulihi Hhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97", 0);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "N u l l97 n n u lhi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi null97hi null97nnul hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!null97 nnulihi Hhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97null97hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!nnull97hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!unull97hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!lnull97hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!lnull979null977null97n-u-l-l97-n-ullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull97nnul1097null971097null97nnulnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullhi-hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101" + "'", str3.equals("N u l l97 n n u lhi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi null97hi null97nnul hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!null97 nnulihi Hhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97null97hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!nnull97hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!unull97hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!lnull97hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!lnull979null977null97n-u-l-l97-n-ullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull97nnul1097null971097null97nnulnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullhi-hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101"));
    }

    @Test
    public void test358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test358");
        java.lang.String[] strArray4 = strman.Strman.chars("null");
        boolean boolean5 = strman.Strman.containsAny("null97Nnull97Unull97Lnull97Lnull979null977null97", strArray4);
        java.lang.String str6 = strman.Strman.format("null97null97Nnull97Unull97Lnull97Lnull979null977null97", strArray4);
        java.util.List<java.lang.String> strList7 = strman.Strman.zip(strArray4);
        java.lang.String str8 = strman.Strman.format("", strArray4);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "null97null97Nnull97Unull97Lnull97Lnull979null977null97" + "'", str6.equals("null97null97Nnull97Unull97Lnull97Lnull979null977null97"));
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));
    }

    @Test
    public void test359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test359");
        java.lang.String str1 = strman.Strman.base64Encode("hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97hi!hi!97");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "aGkhaGkhOTdoaSFoaSE5N2hpIWhpITk3aGkhaGkhOTdoaSFoaSE5N2hpIWhpITk3aGkhaGkhOTdoaSFoaSE5N2hpIWhpITk3aGkhaGkhOTdoaSFoaSE5N2hpIWhpITk3aGkhaGkhOTdoaSFoaSE5N2hpIWhpITk3aGkhaGkhOTdoaSFoaSE5N2hpIWhpITk3aGkhaGkhOTdoaSFoaSE5N2hpIWhpITk3aGkhaGkhOTdoaSFoaSE5N2hpIWhpITk3aGkhaGkhOTdoaSFoaSE5N2hpIWhpITk3aGkhaGkhOTdoaSFoaSE5N2hpIWhpITk3" + "'", str1.equals("aGkhaGkhOTdoaSFoaSE5N2hpIWhpITk3aGkhaGkhOTdoaSFoaSE5N2hpIWhpITk3aGkhaGkhOTdoaSFoaSE5N2hpIWhpITk3aGkhaGkhOTdoaSFoaSE5N2hpIWhpITk3aGkhaGkhOTdoaSFoaSE5N2hpIWhpITk3aGkhaGkhOTdoaSFoaSE5N2hpIWhpITk3aGkhaGkhOTdoaSFoaSE5N2hpIWhpITk3aGkhaGkhOTdoaSFoaSE5N2hpIWhpITk3aGkhaGkhOTdoaSFoaSE5N2hpIWhpITk3aGkhaGkhOTdoaSFoaSE5N2hpIWhpITk3"));
    }

    @Test
    public void test360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test360");
        java.lang.String str2 = strman.Strman.removeLeft("72734572735256525653495353525652565349535552565256535257575256525653525757525652565353535152565256535249484952565256534953535256525653495353525652565349535552565256535257575256525653525757525652565353535152565256535249484952565256534953555256525653495353525652565349535552565256535257575256525653525757525652565353535152565256535249484952565256535057575256525653495353525652565349535552565256535257575256525653525757525652565353535152565256535249484952565256535057575256525653495353525652565349535552565256535257575256525653525757525652565353535152565256535249484952565256535153515256525653495353525652565349535552565256535257575256525653525757525652565353535152565256535249484952565256535049484952565256534953535256525653495355525652565352575752565256535257575256525653535351525652565352494849", "HI_HI");
        org.junit.Assert.assertTrue("'" + strstr2.equals("72734572735256525653495353525652565349535552565256535257575256525653525757525652565353535152565256535249484952565256534953535256525653495353525652565349535552565256535257575256525653525757525652565353535152565256535249484952565256534953555256525653495353525652565349535552565256535257575256525653525757525652565353535152565256535249484952565256535057575256525653495353525652565349535552565256535257575256525653525757525652565353535152565256535249484952565256535057575256525653495353525652565349535552565256535257575256525653525757525652565353535152565256535249484952565256535153515256525653495353525652565349535552565256535257575256525653525757525652565353535152565256535249484952565256535049484952565256534953535256525653495355525652565352575752565256535257575256525653535351525652565352494849"));
    }

    @Test
    public void test361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test361");
        java.util.Optional<java.lang.String> strOptional1 = strman.Strman.headihihh_ihInullhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!nullnull97nnulnull971lunn79llun");
        org.junit.Assert.assertNotNull(strOptional1);
    }

    @Test
    public void test362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test362");
        java.lang.String[] strArray4 = strman.Strman.words("nullhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!nullnull97nnulnull971lunn79llun", "Null97nnulnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull");
        java.util.Optional<java.lang.String> strOptional5 = strman.Strman.trimEnd("000720010500033001040010500033nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull", strArray4);
        java.lang.String str6 = strman.Strman.prependArray("null97nnul1097null971097null97nnulnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullhi00370039006c006c0075006e0068006900680069003700370039006c006c0075006e003900370039006c006c0075006e002d006c00370039006c006c0075006e002d006c00370039006c006c0075006e002d007500370039006c006c0075006e002d006e00370039006c006c0075006e002d0068006900680069hi4848515548485157484854994848549948485553484854101484851554848515548485157484854994848549948485553484854101484851574848515548485157484854994848549948485553484854101484852994848515548485157484854994848549948485553484854101484852994848515548485157484854994848549948485553484854101484853534848515548485157484854994848549948485553484854101484852101484851554848515748485499484854994848555348485410100370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e00000000011010010000000001101000", strArray4);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(strOptional5);
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "nullhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!nullnull97nnulnull971lunn79llunnull97nnul1097null971097null97nnulnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullhi00370039006c006c0075006e0068006900680069003700370039006c006c0075006e003900370039006c006c0075006e002d006c00370039006c006c0075006e002d006c00370039006c006c0075006e002d007500370039006c006c0075006e002d006e00370039006c006c0075006e002d0068006900680069hi4848515548485157484854994848549948485553484854101484851554848515548485157484854994848549948485553484854101484851574848515548485157484854994848549948485553484854101484852994848515548485157484854994848549948485553484854101484852994848515548485157484854994848549948485553484854101484853534848515548485157484854994848549948485553484854101484852101484851554848515748485499484854994848555348485410100370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e00000000011010010000000001101000" + "'", str6.equals("nullhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!nullnull97nnulnull971lunn79llunnull97nnul1097null971097null97nnulnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullhi00370039006c006c0075006e0068006900680069003700370039006c006c0075006e003900370039006c006c0075006e002d006c00370039006c006c0075006e002d006c00370039006c006c0075006e002d007500370039006c006c0075006e002d006e00370039006c006c0075006e002d0068006900680069hi4848515548485157484854994848549948485553484854101484851554848515548485157484854994848549948485553484854101484851574848515548485157484854994848549948485553484854101484852994848515548485157484854994848549948485553484854101484852994848515548485157484854994848549948485553484854101484853534848515548485157484854994848549948485553484854101484852101484851554848515748485499484854994848555348485410100370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e00000000011010010000000001101000"));
    }

    @Test
    public void test363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test363");
        boolean boolean2 = strman.Strman.contains("nnull97Nnulunull97Nnullnull97Nnull", "MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA0ZTAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwNTUwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDRjMDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA0YzAwNmUwMDc1MDA2YzAwNmMwMDM5MDAzNzAwMzkwMDZlMDA3NTAwNmMwMDZjMDAzOTAwMzcwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111001000000000-ih79llun-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test364");
        boolean boolean2 = strman.Strman.endsWith("null97n-u-l-l97", "HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test365");
        java.lang.String str2 = strman.Strman.ensureLeft("nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull&UnderBar;nullMDAxMTAxMTAwMDAwMDAwMDEwMTAxMTEwMDAwMDAwMDAwMTExMDExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDAxMDAxMTEwMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAxMDEwMTExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDEwMDEwMTEwMDAwMDAwMDAwMDAxMDExMDAwMDAwMDAwMTAxMTAxMDAwMDAwMDAwMDEwMDEwMTEwMDAwMDAwMDAwMDAxMDExMDAwMDAwMDAwaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaS1oihi-hhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!00000000001100110000000000110101Ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 nq==", "hihiHI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-nULL97NNULHI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-NULL97HI-00370039006C006C0075006E003700370039006C006C0075006E003900370039006C006C0075006E004C00370039006C006C0075006E004C00370039006C006C0075006E005500370039006C006C0075006E004E00370039006C006C0075006E");
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hihiHI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-nULL97NNULHI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-NULL97HI-00370039006C006C0075006E003700370039006C006C0075006E003900370039006C006C0075006E004C00370039006C006C0075006E004C00370039006C006C0075006E005500370039006C006C0075006E004E00370039006C006C0075006Enullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull&UnderBar;nullMDAxMTAxMTAwMDAwMDAwMDEwMTAxMTEwMDAwMDAwMDAwMTExMDExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDAxMDAxMTEwMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAxMDEwMTExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDEwMDEwMTEwMDAwMDAwMDAwMDAxMDExMDAwMDAwMDAwMTAxMTAxMDAwMDAwMDAwMDEwMDEwMTEwMDAwMDAwMDAwMDAxMDExMDAwMDAwMDAwaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaS1oihi-hhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!00000000001100110000000000110101Ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 nq==" + "'", str2.equals("hihiHI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-nULL97NNULHI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-NULL97HI-00370039006C006C0075006E003700370039006C006C0075006E003900370039006C006C0075006E004C00370039006C006C0075006E004C00370039006C006C0075006E005500370039006C006C0075006E004E00370039006C006C0075006Enullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull&UnderBar;nullMDAxMTAxMTAwMDAwMDAwMDEwMTAxMTEwMDAwMDAwMDAwMTExMDExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDAxMDAxMTEwMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAxMDEwMTExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDEwMDEwMTEwMDAwMDAwMDAwMDAxMDExMDAwMDAwMDAwMTAxMTAxMDAwMDAwMDAwMDEwMDEwMTEwMDAwMDAwMDAwMDAxMDExMDAwMDAwMDAwaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaS1oihi-hhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!00000000001100110000000000110101Ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 nq=="));
    }

    @Test
    public void test366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test366");
        java.lang.String str3 = strman.Strman.ensureRight("NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97hihi", "", false);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "" + "'", str3.equals(""));
    }

    @Test
    public void test367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test367");
        java.util.Optional<java.lang.String> strOptional1 = strman.Strman.trimStart("480");
        org.junit.Assert.assertNotNull(strOptional1);
    }

    @Test
    public void test368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test368");
        java.lang.String str1 = strman.Strman.base64Encode("6500084000940008400084000550009400094000840008400084000940009400084000840006500055000840008400084000350003500084000840008400055000350008400084000840006500084000940008400084000650008400094000840008400055000940009400084000840008400094000940008400084000");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "NjUwMDA4NDAwMDk0MDAwODQwMDA4NDAwMDU1MDAwOTQwMDA5NDAwMDg0MDAwODQwMDA4NDAwMDk0MDAwOTQwMDA4NDAwMDg0MDAwNjUwMDA1NTAwMDg0MDAwODQwMDA4NDAwMDM1MDAwMzUwMDA4NDAwMDg0MDAwODQwMDA1NTAwMDM1MDAwODQwMDA4NDAwMDg0MDAwNjUwMDA4NDAwMDk0MDAwODQwMDA4NDAwMDY1MDAwODQwMDA5NDAwMDg0MDAwODQwMDA1NTAwMDk0MDAwOTQwMDA4NDAwMDg0MDAwODQwMDA5NDAwMDk0MDAwODQwMDA4NDAwMA==" + "'", str1.equals("NjUwMDA4NDAwMDk0MDAwODQwMDA4NDAwMDU1MDAwOTQwMDA5NDAwMDg0MDAwODQwMDA4NDAwMDk0MDAwOTQwMDA4NDAwMDg0MDAwNjUwMDA1NTAwMDg0MDAwODQwMDA4NDAwMDM1MDAwMzUwMDA4NDAwMDg0MDAwODQwMDA1NTAwMDM1MDAwODQwMDA4NDAwMDg0MDAwNjUwMDA4NDAwMDk0MDAwODQwMDA4NDAwMDY1MDAwODQwMDA5NDAwMDg0MDAwODQwMDA1NTAwMDk0MDAwOTQwMDA4NDAwMDg0MDAwODQwMDA5NDAwMDk0MDAwODQwMDA4NDAwMA=="));
    }

    @Test
    public void test369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test369");
        boolean boolean1 = strman.Strman.isLowerCase
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
    }

    @Test
    public void test370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test370");
        java.lang.String str1 = strman.Strman.base64Encodeihi-h");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "MDAwMDAwMDAwMTAwMTExMDAwMDAwMDAwMDExMTAxMDEwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMTAwMDAwMDAwMDAxMTEwMTAxMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTEwMDAwMDAwMDAwMTExMDEwMTAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTExMDAwMDAwMDAwMDExMTAxMDEwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMTAwMDAwMDAwMDAxMTEwMTAxMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTEwMDAwMDAwMDAwMTExMDEwMTAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTExMDAwMDAwMDAwMDExMTAxMDEwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMTAwMDAwMDAwMDAxMTEwMTAxMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTEwMDAwMDAwMDAwMTExMDEwMTAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTExMDAwMDAwMDAwMDExMTAxMDEwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMTAwMDAwMDAwMDAxMTEwMTAxMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTEwMDAwMDAwMDAwMTExMDEwMTAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTExMDAwMDAwMDAwMDExMTAxMDEwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMTAwMDAwMDAwMDAxMTEwMTAxMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTEwMDAwMDAwMDAwMTExMDEwMTAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTExMDAwMDAwMDAwMDExMTAxMDEwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMTAwMDAwMDAwMDAxMTEwMTAxMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTEwMDAwMDAwMDAwMTExMDEwMTAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTExMDAwMDAwMDAwMDExMTAxMDEwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMTAwMDAwMDAwMDAxMTEwMTAxMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTEwMDAwMDAwMDAwMTExMDEwMTAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTExMDAwMDAwMDAwMDExMTAxMDEwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMTAwMDAwMDAwMDAxMTEwMTAxMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTEwMDAwMDAwMDAwMTExMDEwMTAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTExMDAwMDAwMDAwMDExMTAxMDEwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMTAwMDAwMDAwMDAxMTEwMTAxMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTEwMDAwMDAwMDAwMTExMDEwMTAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTExMDAwMDAwMDAwMDExMTAxMDEwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMTAwMDAwMDAwMDAxMTEwMTAxMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTEwMDAwMDAwMDAwMTExMDEwMTAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTExMDAwMDAwMDAwMDExMTAxMDEwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMTAwMDAwMDAwMDAxMTEwMTAxMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTEwMDAwMDAwMDAwMTExMDEwMTAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTExMDAwMDAwMDAwMDExMTAxMDEwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMTAwMDAwMDAwMDAxMTEwMTAxMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTEwMDAwMDAwMDAwMTExMDEwMTAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTExMDAwMDAwMDAwMDExMTAxMDEwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMTAwMDAwMDAwMDAxMTEwMTAxMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTEwMDAwMDAwMDAwMTExMDEwMTAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTExMDAwMDAwMDAwMDExMTAxMDEwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMTAwMDAwMDAwMDAxMTEwMTAxMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTEwMDAwMDAwMDAwMTExMDEwMTAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTExMDAwMDAwMDAwMDExMTAxMDEwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMTAwMDAwMDAwMDAxMTEwMTAxMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTEwMDAwMDAwMDAwMTExMDEwMTAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTExMDAwMDAwMDAwMDExMTAxMDEwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMTAwMDAwMDAwMDAxMTEwMTAxMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTEwMDAwMDAwMDAwMTExMDEwMTAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTAwaWhpLWg=" + "'", str1.equals("MDAwMDAwMDAwMTAwMTExMDAwMDAwMDAwMDExMTAxMDEwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMTAwMDAwMDAwMDAxMTEwMTAxMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTEwMDAwMDAwMDAwMTExMDEwMTAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTExMDAwMDAwMDAwMDExMTAxMDEwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMTAwMDAwMDAwMDAxMTEwMTAxMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTEwMDAwMDAwMDAwMTExMDEwMTAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTExMDAwMDAwMDAwMDExMTAxMDEwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMTAwMDAwMDAwMDAxMTEwMTAxMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTEwMDAwMDAwMDAwMTExMDEwMTAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTExMDAwMDAwMDAwMDExMTAxMDEwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMTAwMDAwMDAwMDAxMTEwMTAxMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTEwMDAwMDAwMDAwMTExMDEwMTAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTExMDAwMDAwMDAwMDExMTAxMDEwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMTAwMDAwMDAwMDAxMTEwMTAxMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTEwMDAwMDAwMDAwMTExMDEwMTAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTExMDAwMDAwMDAwMDExMTAxMDEwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMTAwMDAwMDAwMDAxMTEwMTAxMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTEwMDAwMDAwMDAwMTExMDEwMTAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTExMDAwMDAwMDAwMDExMTAxMDEwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMTAwMDAwMDAwMDAxMTEwMTAxMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTEwMDAwMDAwMDAwMTExMDEwMTAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTExMDAwMDAwMDAwMDExMTAxMDEwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMTAwMDAwMDAwMDAxMTEwMTAxMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTEwMDAwMDAwMDAwMTExMDEwMTAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTExMDAwMDAwMDAwMDExMTAxMDEwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMTAwMDAwMDAwMDAxMTEwMTAxMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTEwMDAwMDAwMDAwMTExMDEwMTAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTExMDAwMDAwMDAwMDExMTAxMDEwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMTAwMDAwMDAwMDAxMTEwMTAxMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTEwMDAwMDAwMDAwMTExMDEwMTAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTExMDAwMDAwMDAwMDExMTAxMDEwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMTAwMDAwMDAwMDAxMTEwMTAxMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTEwMDAwMDAwMDAwMTExMDEwMTAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTExMDAwMDAwMDAwMDExMTAxMDEwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMTAwMDAwMDAwMDAxMTEwMTAxMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTEwMDAwMDAwMDAwMTExMDEwMTAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTExMDAwMDAwMDAwMDExMTAxMDEwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMTAwMDAwMDAwMDAxMTEwMTAxMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTEwMDAwMDAwMDAwMTExMDEwMTAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTExMDAwMDAwMDAwMDExMTAxMDEwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMTAwMDAwMDAwMDAxMTEwMTAxMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTEwMDAwMDAwMDAwMTExMDEwMTAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTExMDAwMDAwMDAwMDExMTAxMDEwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMTAwMDAwMDAwMDAxMTEwMTAxMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTEwMDAwMDAwMDAwMTExMDEwMTAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTExMDAwMDAwMDAwMDExMTAxMDEwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMTAwMDAwMDAwMDAxMTEwMTAxMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTEwMDAwMDAwMDAwMTExMDEwMTAwMDAwMDAwMDExMDExMDAwMDAwMDAwMDAxMTAxMTAwaWhpLWg="));
    }

    @Test
    public void test371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test371");
        boolean boolean2 = strman.Strman.contains("NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NQ==", "800108");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test372");
        java.lang.String str1 = strman.Strman.collapseWhitespacetu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 nq==");
        org.junit.Assert.assertTrue("'" + strtu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 nq==" + "'", str1.equalstu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 ntu1 nq=="));
    }

    @Test
    public void test373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test373");
        java.lang.String[] strArray4 = strman.Strman.split("hi!hi!", "hi!");
        java.lang.String str6 = strman.Strman.join(strArray4, "hihi");
        java.lang.String[] strArray7 = strman.Strman.removeEmptyStrings(strArray4);
        java.util.List<java.lang.String> strList8 = strman.Strman.zip(strArray7);
        java.lang.String[] strArray9 = strman.Strman.removeEmptyStrings(strArray7);
        boolean boolean10 = strman.Strman.containsAny("!HI!HI!HI!", strArray7);
        java.lang.String str11 = strman.Strman.append("Ihi Hhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97", strArray7);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "" + "'", str6.equals(""));
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strList8);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + str11 + "' != '" + "Ihi Hhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97" + "'", str11.equals("Ihi Hhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97"));
    }

    @Test
    public void test374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test374");
        java.lang.String str1 = strman.Strman.toSnakeCase("Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Sekh Tl Vmtdk
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_tl_vmtdkstr1.equals("sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_tl_vmtdk
    }

    @Test
    public void test375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test375");
        try {
            java.lang.String str3 = strman.Strman.slice("5555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555", 740, 612);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 612");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        }
    }

    @Test
    public void test376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test376");
        java.lang.String[] strArray1 = strman.Strman.lines
        org.junit.Assert.assertNotNull(strArray1);
    }

    @Test
    public void test377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test377");
        java.lang.String str1 = strman.Strman.removeSpaces
        org.junit.Assert.assertTrue("'" + strstr1.equals("000000000110111000000000010111110000000001110101000000000101111100000000011011000000000001011111000000000110110000000000001110010000000000110111000000000110111000000000010111110000000001101110000000000101111100000000011101010000000001011111000000000110110000000000010111110000000001101100000000000011100100000000001101110000000001110101000000000101111100000000011011100000000001011111000000000111010100000000010111110000000001101100000000000101111100000000011011000000000000111001000000000011011100000000011011000000000001011111000000000110111000000000010111110000000001110101000000000101111100000000011011000000000001011111000000000110110000000000001110010000000000110111000000000110110000000000010111110000000001101110000000000101111100000000011101010000000001011111000000000110110000000000010111110000000001101100000000000011100100000000001101110000000000111001000000000101111100000000011011100000000001011111000000000111010100000000010111110000000001101100000000000101111100000000011011000000000000111001000000000011011100000000001101110000000001011111000000000110111000000000010111110000000001110101000000000101111100000000011011000000000001011111000000000110110000000000001110010000000000110111"));
    }

    @Test
    public void test378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test378");
        java.lang.String str1 = strman.Strman.capitalize
        org.junit.Assert.assertTrue("'" + strstr1.equals
    }

    @Test
    public void test379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test379");
        java.util.Optional<java.lang.String> strOptional1 = strman.Strman.tail("Hihihihinull97nnull97unull97lnull97lnull979null977null979710");
        org.junit.Assert.assertNotNull(strOptional1);
    }

    @Test
    public void test380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test380");
        java.lang.String str1 = strman.Strman.slugify("nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnullnullnullnullnull");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnullnullnullnullnull" + "'", str1.equals("nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnull-and-excl-nullnullnullnullnullnull"));
    }

    @Test
    public void test381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test381");
        java.lang.String str1 = strman.Strman.slugify("hi-hihi-hihi-hihi-hihi-hihi-hihi-hihi-hihi-hihi-hi");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "hi-hihi-hihi-hihi-hihi-hihi-hihi-hihi-hihi-hihi-hi" + "'", str1.equals("hi-hihi-hihi-hihi-hihi-hihi-hihi-hihi-hihi-hihi-hi"));
    }

    @Test
    public void test382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test382");
        java.lang.String str1 = strman.Strman.htmlDecodenULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLi3kdtmV lT hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeS hkeShi-h");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "null" + "'", str1.equals("null"));
    }

    @Test
    public void test383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test383");
        try {
            java.lang.String str3 = strman.Strman.decode("hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!006e0075006c006c00390037null9779LLUN779LLUN979LLUNl79LLUNl79LLUNu79LLUNn79LLUN", 160, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException; message: radix -1 less than Character.MIN_RADIX");
        } catch (java.lang.NumberFormatException e) {
        }
    }

    @Test
    public void test384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test384");
        java.lang.String str3 = strman.Strman.ensureRight("nzlsb-hvu-nzc5b-gx1bjk3-owxsd-w5-mnzlsb-hvu-tdc5b-gx1bl-u3-owxsd-w5-onzlsb-hvu", "000720010500092000320010400105000720010500092000320010400105000720010500092000320010400105000720010500092000320010400105000720010500092000320010400105", false);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "nzlsb-hvu-nzc5b-gx1bjk3-owxsd-w5-mnzlsb-hvu-tdc5b-gx1bl-u3-owxsd-w5-onzlsb-hvu000720010500092000320010400105000720010500092000320010400105000720010500092000320010400105000720010500092000320010400105000720010500092000320010400105" + "'", str3.equals("nzlsb-hvu-nzc5b-gx1bjk3-owxsd-w5-mnzlsb-hvu-tdc5b-gx1bl-u3-owxsd-w5-onzlsb-hvu000720010500092000320010400105000720010500092000320010400105000720010500092000320010400105000720010500092000320010400105000720010500092000320010400105"));
    }

    @Test
    public void test385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test385");
        java.lang.String[] strArray3 = strman.Strman.chop("HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-NULL97HI-00370039006C006C0075006E003700370039006C006C0075006E003900370039006C006C0075006E004C00370039006C006C0075006E004C00370039006C006C0075006E005500370039006C006C0075006E004E00370039006C006C0075006E", (int) (short) 10);
        java.lang.String str4 = strman.Strman.prependstrArray3);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + strstr4.equals
    }

    @Test
    public void test386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test386");
        java.lang.String str1 = strman.Strman.removeNonWords("lunN79llunnull97null97Nnull97Unull97Lnull97Lnull979null977null97hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "lunN79llunnull97null97Nnull97Unull97Lnull97Lnull979null977null97hihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi" + "'", str1.equals("lunN79llunnull97null97Nnull97Unull97Lnull97Lnull979null977null97hihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi"));
    }

    @Test
    public void test387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test387");
        java.lang.String str3 = strman.Strman.insert("771228561null97", "", 248);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "771228561null97" + "'", str3.equals("771228561null97"));
    }

    @Test
    public void test388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test388");
        java.lang.String str3 = strman.Strman.ensureRight("", "79ll040100", false);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "79ll040100" + "'", str3.equals("79ll040100"));
    }

    @Test
    public void test389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test389");
        java.util.Optional<java.lang.String> strOptional1 = strman.Strman.head("hihi_mda2_ztaw_nz_uw_mdzj_mda2_yz_aw_mzkw_mdm3nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull_m_d_ax_m_t_ax_m_t_aw_m_d_aw_m_d_aw_m_d_ew_m_t_ax_m_t_ew_m_d_aw_m_d_aw_m_d_aw_m_t_ex_m_d_ex_m_d_aw_m_d_aw_m_d_aw_m_d_ex_m_t_ax_m_t_aw_m_d_aw_m_d_aw_m_d_ex_m_t_ax_m_t_aw_m_d_aw_m_d_aw_m_d_ax_m_d_ax_m_t_ew_m_d_aw_m_d_aw_m_d_aw_m_d_ax_m_t_ax_m_t_aw_m_d_aw_m_d_aw_m_d_aw_m_t_ew_m_t_ew_m_d_aw_m_d_aw_m_d_ax_m_d_ew_m_t_ex_m_d_aw_m_d_aw_m_d_aw_m_d_ex_m_t_ax_m_t_aw_m_d_aw_m_d_aw_m_d_ew_m_d_ew_m_t_ew_m_d_aw_m_d_aw_m_d_aw_m_d_ax_m_d_ex_m_d_aw_m_d_aw_m_d_aw_m_t_ax_m_t_ax_m_d_aw_m_d_aw_m_d_aw_m_d_ew_m_d_ew_m_t_ew_m_d_aw_m_d_aw_m_d_aw_m_d_ax_m_d_ex_m_d_aw_m_d_aw_m_d_awa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_whpa_gloa_s1o");
        org.junit.Assert.assertNotNull(strOptional1);
    }

    @Test
    public void test390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test390");
        java.lang.String str1 = strman.Strman.htmlEncode("001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IH-IHhi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_null97hi00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006ehi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!==AbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnb");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;&equals;&equals;nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull" + "'", str1.equals("nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnull&UnderBar;nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;&equals;&equals;nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull"));
    }

    @Test
    public void test391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test391");
        java.lang.String[] strArray6 = strman.Strman.between("", "00078001170010800108000570005500110001100011700108", "10");
        boolean boolean8 = strman.Strman.containsAny("0033", strArray6, true);
        java.util.List<java.lang.String> strList9 = strman.Strman.zip(strArray6);
        boolean boolean10 = strman.Strman.containsAll("484854694848555348485467484854674848515748485155727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333727333", strArray6);
        boolean boolean11 = strman.Strman.containsAny("TnVsbDk3bm51bG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbG51bGxudWxsbnVsbA==", strArray6);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test392");
        java.lang.String[] strArray2 = strman.Strman.words("nullnull97nnul=g2xphwA000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97Nnull97Unull97Lnull97Lnull979null977null97Hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hihi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hiMw==");
        java.lang.String str3 = strman.Strman.prepend("hihihihinull97nnull97unull97lnull97lnull979null977null979710", strArray2);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "nullnull97nnul=g2xphwA000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97Nnull97Unull97Lnull97Lnull979null977null97Hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hihi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hiMw==hihihihinull97nnull97unull97lnull97lnull979null977null979710" + "'", str3.equals("nullnull97nnul=g2xphwA000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97Nnull97Unull97Lnull97Lnull979null977null97Hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hihi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hiMw==hihihihinull97nnull97unull97lnull97lnull979null977null979710"));
    }

    @Test
    public void test393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test393");
        java.lang.String[] strArray1 = strman.Strman.chars("hi_hinull97nnul");
        org.junit.Assert.assertNotNull(strArray1);
    }

    @Test
    public void test394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test394");
        java.util.Optional<java.lang.String> strOptional1 = strman.Strman.trimStart("!hi-hihhi-hii!hi-hihhi-hii!hi-hihhi-hii!");
        org.junit.Assert.assertNotNull(strOptional1);
    }

    @Test
    public void test395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test395");
        boolean boolean2 = strman.Strman.unequal("Hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!", "hi-hihi-hihi-hihi-hihi-hihi-hihi-hihi-hihi-hihi-hi");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
    }

    @Test
    public void test396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test396");
        java.lang.String str3 = strman.Strman.slice("000720010500033001040010500033nullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLhiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiNull97hi00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e", 64, 296);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "LLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNU" + "'", str3.equals("LLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnullnULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNU"));
    }

    @Test
    public void test397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test397");
        java.lang.String str1 = strman.Strman.transliterate("000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97-nnull97-unull97-lnull97-lnull979null977null97");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97-nnull97-unull97-lnull97-lnull979null977null97" + "'", str1.equals("000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97-nnull97-unull97-lnull97-lnull979null977null97"));
    }

    @Test
    public void test398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test398");
        java.lang.String str4 = strman.Strman.replace("006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c00260055006e006400650072004200610072003b006e0075006c006cull97 nnulhi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi null97hi null97nnulhi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi null97hi null97nnul", false);
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c00260055006e006400650072004200610072003b006e0075006c006c" + "'", str4.equals("006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c006e0075006c006c00260055006e006400650072004200610072003b006e0075006c006c"));
    }

    @Test
    public void test399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test399");
        java.lang.String str2 = strman.Strman.toDecamelize("nULL97NNULhiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiNull97hiNull97nnulhiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiNull97hiNull97nnul", "000000000011001100000000001100110000000000110111000000000011001000000000001101110000000000110011000000000011001100000000001100110000000000110111000000000011001000000000001101110000000000110011000000000011001100000000001100110000000000110111000000000011001000000000001101110000000000110011000000000011001100000000001100110000000001101110000000000111010100000000011011000000000001101100000000000011000000000000001100000000000000110000000000000011011100000000001110000000000000110000000000000011000000000000001100000000000000111000000000000011010100000000001100000000000000110000000000000011000000000000001101110000000000110110000000000011000000000000001100000000000000110000000000000011011100000000001101100000000000110000000000000011000000000000001100000000000000110101000000000011011100000000001100000000000000110000000000000011000000000000001101010000000000110101000000000011000000000000001100000000000000110001000000000011000100000000001100000000000000110000000000000011000000000000001100000000000000110111000000000011100000000000001100000000000000110000000000000011000000000000001110000000000000110101000000000011000000000000001100000000000000110000000000000011011100000000001101100000000000110000000000000011000000000000001100000000000000110111000000000011011000000000001100000000000000110000000000000011000000000000001101010000000000110111000000000011000000000000001100000000000000110000000000000011010100000000001101010000000000110000000000000011000000000000001100010000000000110001000000000011011100000000001100000000000000110000000000000011000000000000001101110000000000111000000000000011000000000000001100000000000000110000000000000011100000000000001101010000000000110000000000000011000000000000001100000000000000110111000000000011011000000000001100000000000000110000000000000011000000000000001101110000000000110110000000000011000000000000001100000000000000110000000000000011010100000000001101110000000000110000000000000011000000000000001100000000000000110101000000000011010100000000001100000000000000110000000000000011000100000000001100000000000000111000000000000011000000000000001100000000000000110000000000000011011100000000001110000000000000110000000000000011000000000000001100000000000000111000000000000011010100000000001100000000000000110000000000000011000000000000001101110000000000110110000000000011000000000000001100000000000000110000000000000011011100000000001101100000000000110000000000000011000000000000001100000000000000110101000000000011011100000000001100000000000000110000000000000011000000000000001101010000000000110101000000000011000000000000001100000000000000110001000000000011000000000000001110000000000000110000000000000011000000000000001100000000000000110111000000000011100000000000001100000000000000110000000000000011000000000000001110000000000000110101000000000011000000000000001100000000000000110000000000000011011100000000001101100000000000110000000000000011000000000000001100000000000000110111000000000011011000000000001100000000000000110000000000000011000000000000001101010000000000110111000000000011000000000000001100000000000000110000000000000011010100000000001101010000000000110000000000000011000000000000001100000000000000110101000000000011011100000000001100000000000000110000000000000011000000000000001101110000000000111000000000000011000000000000001100000000000000110000000000000011100000000000001101010000000000110000000000000011000000000000001100000000000000110111000000000011011000000000001100000000000000110000000000000011000000000000001101110000000000110110000000000011000000000000001100000000000000110000000000000011010100000000001101110000000000110000000000000011000000000000001100000000000000110101000000000011010100000000001100000000000000110000000000000011000000000000001101010000000000110101000000000011000000000000001100000000000000110000000000000011011100000000001110000000000000110000000000000011000000000000001100000000000000111000000000000011010100000000001100000000000000110000000000000011000000000000001101110000000000110110000000000011000000000000001100000000000000110000000000000011011100000000001101100000000000110000000000000011000000000000001100000000000000110101000000000011011100000000001100000000000000110000000000000011000000000000001101010000000000110101");
    }

    @Test
    public void test400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test400");
        java.lang.String[] strArray2 = strman.Strman.chop("1097", 55);
        java.util.List<java.lang.String> strList3 = strman.Strman.zip(strArray2);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(strList3);
    }

    @Test
    public void test401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test401");
        java.lang.String[] strArray2 = strman.Strman.wordsllun779llun979llunl79llunl79llunu79llunn79llun79llun779llun979llunl79llunl79llunu79llunn79llun");
        boolean boolean3 = strman.Strman.containsAny("hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!0NULL971null97null97Nnull97Unull97Lnull97Lnull979null977nullstrArray2);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test402");
        java.lang.String str1 = strman.Strman.startCase("hinullhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hiih79llun!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ihhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "Hinullhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hiih79llun!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ihhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100" + "'", str1.equals("Hinullhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111001000000000!ih79llun!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ihhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100"));
    }

    @Test
    public void test403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test403");
        java.lang.String str3 = strman.Strman.truncate("mDA2ODAwNjkwMDJkMDA2ODAwNjkwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzEwMDM1MDAzNTAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzMTAwMzUwMDM3MDAzNDAwMzgwMDM0MDAzODAwMzUwMDM0MDAzOTAwMzkwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzQwMDM5MDAzOTAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzNTAwMzUwMDMzMDAzNDAwMzgwMDM0MDAzODAwMzUwMDM0MDAzMTAwMzAwMDMxMDAzNDAwMzgwMDM0MDAzODAwMzUwMDMxMDAzNTAwMzUwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzEwMDM1MDAzNTAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzMTAwMzUwMDM3MDAzNDAwMzgwMDM0MDAzODAwMzUwMDM0MDAzOTAwMzkwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzQwMDM5MDAzOTAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzNTAwMzUwMDMzMDAzNDAwMzgwMDM0MDAzODAwMzUwMDM0MDAzMTAwMzAwMDMxMDAzNDAwMzgwMDM0MDAzODAwMzUwMDMxMDAzNTAwMzcwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzEwMDM1MDAzNTAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzMTAwMzUwMDM3MDAzNDAwMzgwMDM0MDAzODAwMzUwMDM0MDAzOTAwMzkwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzQwMDM5MDAzOTAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzNTAwMzUwMDMzMDAzNDAwMzgwMDM0MDAzODAwMzUwMDM0MDAzMTAwMzAwMDMxMDAzNDAwMzgwMDM0MDAzODAwMzUwMDMyMDAzOTAwMzkwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzEwMDM1MDAzNTAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzMTAwMzUwMDM3MDAzNDAwMzgwMDM0MDAzODAwMzUwMDM0MDAzOTAwMzkwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzQwMDM5MDAzOTAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzNTAwMzUwMDMzMDAzNDAwMzgwMDM0MDAzODAwMzUwMDM0MDAzMTAwMzAwMDMxMDAzNDAwMzgwMDM0MDAzODAwMzUwMDMyMDAzOTAwMzkwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzEwMDM1MDAzNTAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzMTAwMzUwMDM3MDAzNDAwMzgwMDM0MDAzODAwMzUwMDM0MDAzOTAwMzkwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzQwMDM5MDAzOTAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzNTAwMzUwMDMzMDAzNDAwMzgwMDM0MDAzODAwMzUwMDM0MDAzMTAwMzAwMDMxMDAzNDAwMzgwMDM0MDAzODAwMzUwMDMzMDAzNTAwMzMwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzEwMDM1MDAzNTAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzMTAwMzUwMDM3MDAzNDAwMzgwMDM0MDAzODAwMzUwMDM0MDAzOTAwMzkwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzQwMDM5MDAzOTAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzNTAwMzUwMDMzMDAzNDAwMzgwMDM0MDAzODAwMzUwMDM0MDAzMTAwMzAwMDMxMDAzNDAwMzgwMDM0MDAzODAwMzUwMDMyMDAzMTAwMzAwMDMxMDAzNDAwMzgwMDM0MDAzODAwMzUwMDMxMDAzNTAwMzUwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzEwMDM1MDAzNzAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzNDAwMzkwMDM5MDAzNDAwMzgwMDM0MDAzODAwMzUwMDM0MDAzOTAwMzkwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzUwMDM1MDAzMzAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzNDAwMzEwMDMwMDAzMTAwMzAwMDMwMDAzMDAwMzAwMDMwMDAzMDAwMzAwMDMwMDAzMDAwMzEwMDMwMDAzMDAwMzEwMDMwMDAzMDAwMzAwMDMwMDAzMDAwMzAwMDMwMDAzMDAwMzAwMDMwMDAzMDAwMzAwMDMxMDAzMTAwMzAwMDMxMDAzMDAwMzAwMDMx", 612, "1lunn79llun");
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "mDA2ODAwNjkwMDJkMDA2ODAwNjkwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzEwMDM1MDAzNTAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzMTAwMzUwMDM3MDAzNDAwMzgwMDM0MDAzODAwMzUwMDM0MDAzOTAwMzkwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzQwMDM5MDAzOTAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzNTAwMzUwMDMzMDAzNDAwMzgwMDM0MDAzODAwMzUwMDM0MDAzMTAwMzAwMDMxMDAzNDAwMzgwMDM0MDAzODAwMzUwMDMxMDAzNTAwMzUwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzEwMDM1MDAzNTAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzMTAwMzUwMDM3MDAzNDAwMzgwMDM0MDAzODAwMzUwMDM0MDAzOTAwMzkwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzQwMDM5MDAzOTAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzNTAwMzUwMDMzMDAzNDAwMzgwMDM0MDAzODAwMzUwMDM0MDAzMTAwMzAwMDMxMDAzNDAwM1lunn79llun" + "'", str3.equals("mDA2ODAwNjkwMDJkMDA2ODAwNjkwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzEwMDM1MDAzNTAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzMTAwMzUwMDM3MDAzNDAwMzgwMDM0MDAzODAwMzUwMDM0MDAzOTAwMzkwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzQwMDM5MDAzOTAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzNTAwMzUwMDMzMDAzNDAwMzgwMDM0MDAzODAwMzUwMDM0MDAzMTAwMzAwMDMxMDAzNDAwMzgwMDM0MDAzODAwMzUwMDMxMDAzNTAwMzUwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzEwMDM1MDAzNTAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzMTAwMzUwMDM3MDAzNDAwMzgwMDM0MDAzODAwMzUwMDM0MDAzOTAwMzkwMDM0MDAzODAwMzQwMDM4MDAzNTAwMzQwMDM5MDAzOTAwMzQwMDM4MDAzNDAwMzgwMDM1MDAzNTAwMzUwMDMzMDAzNDAwMzgwMDM0MDAzODAwMzUwMDM0MDAzMTAwMzAwMDMxMDAzNDAwM1lunn79llun"));
    }

    @Test
    public void test404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test404");
        java.lang.String[] strArray2 = strman.Strman.lines("10145848435558484994584849945848475158484551584841012584841014584843555848499458484994584847515848455158484353584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484751584841014584843555848499458484994584847515848455158484551584841014584843555848499458484994584847515848455158484ih-ihh-ih-i");
        boolean boolean3 = strman.Strman.containsAll("Hi-hinull97nnul5555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555", strArray2);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test405");
        java.lang.String[] strArray6 = new java.lang.String[] { "", "", "null" };
        java.util.Optional<java.lang.String> strOptional7 = strman.Strman.trimEnd("null", strArray6);
        boolean boolean9 = strman.Strman.containsAny("hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97", strArray6, true);
        java.lang.String[] strArray10 = strman.Strman.removeEmptyStrings(strArray6);
        java.util.Optional<java.lang.String> strOptional11 = strman.Strman.trimEnd("nnullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037Hihiullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull", strArray6);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strOptional7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(strOptional11);
    }

    @Test
    public void test406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test406");
        java.lang.String[] strArray2 = strman.Strman.chars("");
        java.lang.String str3 = strman.Strman.append("UllnullnullnullnullnullnullNull97nnul1097null971097", strArray2);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "UllnullnullnullnullnullnullNull97nnul1097null971097" + "'", str3.equals("UllnullnullnullnullnullnullNull97nnul1097null971097"));
    }

    @Test
    public void test407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test407");
        java.lang.String[] strArray3 = strman.Strman.lines("hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!");
        java.lang.String str4 = strman.Strman.prepend("null97", strArray3);
        java.lang.String str6 = strman.Strman.join(strArray3, "006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037Null");
        java.lang.String[] strArray7 = strman.Strman.removeEmptyStrings(strArray3);
        java.lang.String[] strArray8 = strman.Strman.removeEmptyStrings(strArray7);
        boolean boolean10 = strman.Strman.containsAny("!HI!HI!HI!6", strArray8, true);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97" + "'", str4.equals("hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97"));
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!" + "'", str6.equals("hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!"));
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test408");
        java.util.Optional<java.lang.String> strOptional1 = strman.Strman.trimEnd("N u l l97 n n u lhi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi null97hi null97nnul hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!null97 nnulHI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-HI-NULL97HI-00370039006C006C0075006E003700370039006C006C0075006E003900370039006C006C0075006E004C00370039006C006C0075006E004C00370039006C006C0075006E005500370039006C006C0075006E004E00370039006C006C0075006E7210533hi!hi!hi!hi!hi!hi!hi!hi!hi!hn-ullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnulli!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!Hihi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_null97hi00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006ehi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!");
        org.junit.Assert.assertNotNull(strOptional1);
    }

    @Test
    public void test409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test409");
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.util.List<java.lang.String> strList6 = strman.Strman.zip(strArray5);
        boolean boolean8 = strman.Strman.containsAny("", strArray5, true);
        boolean boolean10 = strman.Strman.containsAny("hi!hi!", strArray5, true);
        boolean boolean12 = strman.Strman.containsAll("10", strArray5, false);
        java.lang.String str14 = strman.Strman.join(strArray5, "hi!");
        java.lang.String str15 = strman.Strman.format("1101171081085755", strArray5);
        boolean boolean17 = strman.Strman.containsAny("n00108001170011000078000550005700108001080011700110u00108001170011000078000550005700108001080011700110l00108001170011000078000550005700108001080011700110l", strArray5, true);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "" + "'", str14.equals(""));
        org.junit.Assert.assertTrue("'" + str15 + "' != '" + "1101171081085755" + "'", str15.equals("1101171081085755"));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test410");
        java.lang.String[] strArray4 = strman.Strman.chop("006e0075006c006c0039003700390037", (int) (short) 1);
        java.util.List<java.lang.String> strList5 = strman.Strman.zip(strArray4);
        java.lang.String[] strArray6 = strman.Strman.removeEmptyStrings(strArray4);
        boolean boolean8 = strman.Strman.containsAll("Hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-hi\\-null97hi\\-00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e", strArray4, false);
        try {
            java.util.Optional<java.lang.String> strOptional9 = strman.Strman.trimStart("7", strArray4);
            org.junit.Assert.fail("Expected exception of type java.util.regex.PatternSyntaxException; message: Illegal octal escape sequence near index 5\r\n^[0\\0\\6\\e\\0\\0\\7\\5\\0\\0\\6\\c\\0\\0\\6\\c\\0\\0\\3\\9\\0\\0\\3\\7\\0\\0\\3\\9\\0\\0\\3\\7]+\r\n     ^");
        } catch (java.util.regex.PatternSyntaxException e) {
        }
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test411");
        java.lang.String[] strArray2 = strman.Strman.chars
        java.lang.String str3 = strman.Strman.format("nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull97nnul1097null971097null97nnulnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullhi-hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101", strArray2);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull97nnul1097null971097null97nnulnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullhi-hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101" + "'", str3.equals("nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull97nnul1097null971097null97nnulnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullhi-hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101"));
    }

    @Test
    public void test412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test412");
        java.lang.String str1 = strman.Strman.capitalize("Hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "Hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100" + "'", str1.equals("Hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100"));
    }

    @Test
    public void test413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test413");
        boolean boolean3 = strman.Strman.contains("Sgloa Wloa V9oa Glfa Gk0odq4nte1ntq4ndg1mtu3ndg0odu0otk0odq4ntq5otq4ndg1ntuz Ndg0odu0mtax Ndg0odux Ntu0odq4nte1ntq4ndg1mtu3ndg0odu0otk0odq4ntq5otq4ndg1ntuz Ndg0odu0mtax Ndg0odux Ntc0odq4nte1ntq4ndg1mtu3ndg0odu0otk0odq4ntq5otq4ndg1ntuz Ndg0odu0mtax Ndg0oduy Otk0odq4nte1ntq4ndg1mtu3ndg0odu0otk0odq4ntq5otq4ndg1ntuz Ndg0odu0mtax Ndg0oduy Otk0odq4nte1ntq4ndg1mtu3ndg0odu0otk0odq4ntq5otq4ndg1ntuz Ndg0odu0mtax Ndg0oduz Ntm0odq4nte1ntq4ndg1mtu3ndg0odu0otk0odq4ntq5otq4ndg1ntuz Ndg0odu0mtax Ndg0oduy Mtax Ndg0odux Ntu0odq4nte1nz Q4ndg1ndk5ndg0odu0otk0odq4ntu1mz Q4ndg1ndew Mq==hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hihihi", "hIHIHIHInull97Nnull97Unull97Lnull97Lnull979null977null979710", false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test414");
        java.lang.String str1 = strman.Strman.removeNonWords("Null97Nnull97Unull97Lnull97Lnull979null977null97NULL97null");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "Null97Nnull97Unull97Lnull97Lnull979null977null97NULL97null" + "'", str1.equals("Null97Nnull97Unull97Lnull97Lnull979null977null97NULL97null"));
    }

    @Test
    public void test415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test415");
        int int3 = strman.Strman.lastIndexOf("MDA2RTAwNzUwMDZDMDA2QzAwMzkwMDM3SEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkh", "006e0075006c006c006e0075006c006c00390037006e006e0075006c", false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
    }

    @Test
    public void test416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test416");
        java.util.Optional<java.lang.String> strOptional1 = strman.Strman.trimStart("006e0075006c006c0039003700390037");
        org.junit.Assert.assertNotNull(strOptional1);
    }

    @Test
    public void test417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test417");
        java.lang.String[] strArray7 = strman.Strman.lines("NULL97");
        java.lang.String str8 = strman.Strman.format("0000000001101001000000000110100000000000011010010000000001001000", strArray7);
        java.lang.String str9 = strman.Strman.appendArray("Null97Nnull97Unull97Lnull97Lnull979null977null97", strArray7);
        java.lang.String str10 = strman.Strman.format("", strArray7);
        boolean boolean12 = strman.Strman.containsAny("0004800048000480005200053000480004800049000490005500048000480004800052000530004800048000490004800056", strArray7, true);
        boolean boolean14 = strman.Strman.containsAny("1097nullnull97nnulhi006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037", strArray7, true);
        java.lang.String str15 = strman.Strman.appendArray("HIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMNULL97", strArray7);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + str8 + "' != '" + "0000000001101001000000000110100000000000011010010000000001001000" + "'", str8.equals("0000000001101001000000000110100000000000011010010000000001001000"));
        org.junit.Assert.assertTrue("'" + str9 + "' != '" + "Null97Nnull97Unull97Lnull97Lnull979null977null97NULL97" + "'", str9.equals("Null97Nnull97Unull97Lnull97Lnull979null977null97NULL97"));
        org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + str15 + "' != '" + "HIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMNULL97NULL97" + "'", str15.equals("HIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMNULL97NULL97"));
    }

    @Test
    public void test418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test418");
        java.lang.String str3 = strman.Strman.removeLeft("0031006e0075006c006c00390037006e0075006c006c003900370020006e006e0075006c0020006e002000750020006c0020006c003900370020006e0020006e002000750020006c002100690068", "1-7210533hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97_nnull97_unull97_lnull97_lnull979null977null97_hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!", true);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "0031006e0075006c006c00390037006e0075006c006c003900370020006e006e0075006c0020006e002000750020006c0020006c003900370020006e0020006e002000750020006c002100690068" + "'", str3.equals("0031006e0075006c006c00390037006e0075006c006c003900370020006e006e0075006c0020006e002000750020006c0020006c003900370020006e0020006e002000750020006c002100690068"));
    }

    @Test
    public void test419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test419");
        java.lang.String[] strArray2 = strman.Strman.words("006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037-null97006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037-null97006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037-null97006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037-null97006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037-null97006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037-null97006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037-null97006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037-null97006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037-null97006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037-null97", "006e0075006c006c00390037");
        org.junit.Assert.assertNotNull(strArray2);
    }

    @Test
    public void test420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test420");
        try {
            java.lang.String[] strArray2 = strman.Strman.chop("Nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull", (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: -224");
        } catch (java.lang.IllegalArgumentException e) {
        }
    }

    @Test
    public void test421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test421");
        java.lang.String str1 = strman.Strman.startCase("0000000001101001000000000110100000000000011010010000000001001000");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "0000000001101001000000000110100000000000011010010000000001001000" + "'", str1.equals("0000000001101001000000000110100000000000011010010000000001001000"));
    }

    @Test
    public void test422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test422");
        java.lang.String str1 = strman.Strman.formatNumber((long) 612);
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "612" + "'", str1.equals("612"));
    }

    @Test
    public void test423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test423");
        java.lang.String str2 = strman.Strman.repeat("null97", 0);
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "" + "'", str2.equals(""));
    }

    @Test
    public void test424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test424");
        int int2 = strman.Strman.lastIndexOf("lunn79llu-nih79llu-ni-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-h", "00000000011101010000000001101100");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
    }

    @Test
    public void test425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test425");
        java.lang.String[] strArray2 = strman.Strman.split("hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hiHI_HI", "nhihiHiHiuhihiHiHilhihiHiHil");
        org.junit.Assert.assertNotNull(strArray2);
    }

    @Test
    public void test426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test426");
        java.lang.String[] strArray2 = strman.Strman.chopint) '#');
        org.junit.Assert.assertNotNull(strArray2);
    }

    @Test
    public void test427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test427");
        java.util.Optional<java.lang.String> strOptional2 = strman.Strman.at("nnullnullnullnullnullnullnullnullnullnull006e0075006c006c0039003700390037hihiullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih_ih", (int) (short) 100);
        org.junit.Assert.assertNotNull(strOptional2);
    }

    @Test
    public void test428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test428");
        java.lang.String str1 = strman.Strman.toSnakeCase("11HiHinull97nnul");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "11_hi_hinull97nnul" + "'", str1.equals("11_hi_hinull97nnul"));
    }

    @Test
    public void test429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test429");
        java.lang.String str1 = strman.Strman.capitalize("nullhi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "Nullhi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e" + "'", str1.equals("Nullhi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e"));
    }

    @Test
    public void test430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test430");
        java.lang.String[] strArray3 = strman.Strman.lines("n-u-l-l97-n-n-u-l");
        java.lang.String str4 = strman.Strman.prependArray("N u l l97 n n u lhi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi null97hi null97nnul hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!null97 nnul hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi null97 hi 00370039006 c006 c0075006 e003700370039006 c006 c0075006 e003900370039006 c006 c0075006 e004 c00370039006 c006 c0075006 e004 c00370039006 c006 c0075006 e005500370039006 c006 c0075006 e004 e00370039006 c006 c0075006 e7210533hi!hi!hi!hi!hi!hi!hi!hi!hi!hn ullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnulli!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hihi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi null97hi00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006ehi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!", strArray3);
        java.lang.String str5 = strman.Strman.prepend("10145848435558484994584849945848475158484551584841012584841014584843555848499458484994584847515848455158484353584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484751584841014584843555848499458484994584847515848455158484551584841014584843555848499458484994584847515848455158484ihihh_ihI", strArray3);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "n-u-l-l97-n-n-u-lN u l l97 n n u lhi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi null97hi null97nnul hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!null97 nnul hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi null97 hi 00370039006 c006 c0075006 e003700370039006 c006 c0075006 e003900370039006 c006 c0075006 e004 c00370039006 c006 c0075006 e004 c00370039006 c006 c0075006 e005500370039006 c006 c0075006 e004 e00370039006 c006 c0075006 e7210533hi!hi!hi!hi!hi!hi!hi!hi!hi!hn ullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnulli!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hihi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi null97hi00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006ehi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!" + "'", str4.equals("n-u-l-l97-n-n-u-lN u l l97 n n u lhi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi null97hi null97nnul hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!null97 nnul hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi null97 hi 00370039006 c006 c0075006 e003700370039006 c006 c0075006 e003900370039006 c006 c0075006 e004 c00370039006 c006 c0075006 e004 c00370039006 c006 c0075006 e005500370039006 c006 c0075006 e004 e00370039006 c006 c0075006 e7210533hi!hi!hi!hi!hi!hi!hi!hi!hi!hn ullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnulli!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hihi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi null97hi00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006ehi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!"));
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "n-u-l-l97-n-n-u-l10145848435558484994584849945848475158484551584841012584841014584843555848499458484994584847515848455158484353584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484751584841014584843555848499458484994584847515848455158484551584841014584843555848499458484994584847515848455158484ihihh_ihI" + "'", str5.equals("n-u-l-l97-n-n-u-l10145848435558484994584849945848475158484551584841012584841014584843555848499458484994584847515848455158484353584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484751584841014584843555848499458484994584847515848455158484551584841014584843555848499458484994584847515848455158484ihihh_ihI"));
    }

    @Test
    public void test431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test431");
        boolean boolean2 = strman.Strman.unequal("00077000680006500050000900008400065001190007800122000850011900077000680009000106000770006800065000500008900122000650011900077001220010700119000770006800077000510004800048000480005500056000480004800049000490005500048000480004900048000560004800048000490004800056000480004800048000530005500048000480004800053000530004800048000490004900048000480004800049000490004800048000480004900049000550004800048000490004800056", "006e00680069006800690048006900480069007500680069006800690048006900480069006c00680069006800690048006900480069006c");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
    }

    @Test
    public void test432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test432");
        try {
            java.lang.String str3 = strman.Strman.slice("10145848435558484994584849945848475158484551584841012584841014584843555848499458484994584847515848455158484353584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484751584841014584843555848499458484994584847515848455158484551584841014584843555848499458484994584847515848455158484ihihh_ihI", 330, 1040);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 1040");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        }
    }

    @Test
    public void test433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test433");
        java.lang.String str1 = strman.Strman.toStudlyCase("&excl;nullnullnullnull&excl;nullnullnullnull&excl;nullnullnullnull&excl;");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "&excl;nullnullnullnull&excl;nullnullnullnull&excl;nullnullnullnull&excl;" + "'", str1.equals("&excl;nullnullnullnull&excl;nullnullnullnull&excl;nullnullnullnull&excl;"));
    }

    @Test
    public void test434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test434");
        java.lang.String str1 = strman.Strman.toSnakeCase("10010110000000000001001000000000");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "10010110000000000001001000000000" + "'", str1.equals("10010110000000000001001000000000"));
    }

    @Test
    public void test435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test435");
        java.util.Optional<java.lang.String> strOptional1 = strman.Strman.head
        org.junit.Assert.assertNotNull(strOptional1);
    }

    @Test
    public void test436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test436");
        java.lang.String str2 = strman.Strman.toDecamelizeihi_hhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97null97nULL97", "0nULL97NNULhiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiNull97hiNull97nnulhiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiNull97hiNull97nnul
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "000480004800048000550005600048000480004800056000530004800048000480005500054000480004800048000550005400048000480004800053000550004800048000480005300053000480004800049000490004800048000480004800055000560004800048000480005600053000480004800048000550005400048000480004800055000540004800048000480005300055000480004800048000530005300048000480004900049000550004800048000480005500056000480004800048000560005300048000480004800055000540004800048000480005500054000480004800048000530005500048000480004800053000530004800048000490004800056000480004800048000550005600048000480004800056000530004800048000480005500054000480004800048000550005400048000480004800053000550004800048000480005300053000480004800049000480005600048000480004800055000560004800048000480005600053000480004800048000550005400048000480004800055000540004800048000480005300055000480004800048000530005300048000480004800053000550004800048000480005500056000480004800048000560005300048000480004800055000540004800048000480005500054000480004800048000530005500048000480004800053000530004800048000480005300053000480004800048000550005600048000480004800056000530004800048000480005500054000480004800048000550005400048000480004800053000550004800048000480005300053ihi0nULL97NNULhiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiNull97hiNull97nnulhiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiNull97hiNull97nnulhhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97null97n0nULL97NNULhiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiNull97hiNull97nnulhiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiNull97hiNull97nnulu0nULL97NNULhiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiNull97hiNull97nnulhiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiNull97hiNull97nnul00000000011011100000000001110010000000001101100000000000110110000000000011101010000000001101110000000000011011100000000001101110000000000111001000000000110110000000000011011000000000001110101000000000110111000000000001110010000000000110111000000000011100100000000011011000000000001101100000000000111010100000000011011100000000001001100000000000011011100000000001110010000000001101100000000000110110000000000011101010000000001101110000000000100110000000000001101110000000000111001000000000110110000000000011011000000000001110101000000000110111000000000010101010000000000110111000000000011100100000000011011000000000001101100000000000111010100000000011011100000000001001110000000000011011100000000001110010000000001101100000000000110110000000000011101010000000001001110l0nULL97NNULhiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiNull97hiNull97nnulhiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiNull97hiNull97nnull97" + "'", str2.equalsihi0nULL97NNULhiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiNull97hiNull97nnulhiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiNull97hiNull97nnulhhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97null97n0nULL97NNULhiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiNull97hiNull97nnulhiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiNull97hiNull97nnulu0nULL97NNULhiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiNull97hiNull97nnulhiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiNull97hiNull97nnull0nULL97NNULhiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiNull97hiNull97nnulhiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiHiNull97hiNull97nnull97"));
    }

    @Test
    public void test437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test437");
        java.lang.String str1 = strman.Strman.collapseWhitespace
        org.junit.Assert.assertTrue("'" + strstr1.equals
    }

    @Test
    public void test438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test438");
        java.lang.String str3 = strman.Strman.safeTruncate("MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTEyMDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA3MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTEyMDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTEyMDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA3MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTEyMDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA3MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTEyMDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA3MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTEyMDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA3MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTEyMDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA3MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA3MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTEyMDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA3MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTEyMDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA3MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTEyMDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTEyMDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA3MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTEyMDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA3MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTEyMDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA3MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTEyMDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA3MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTEyMDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA3MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA3MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTEyMDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA0OTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA1MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTE0MDAwNDgwMDA0ODAwMDQ4MDAwNDgwMDA1MTAwMTA3aGloaQ==", (int) (byte) 10, "");
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "" + "'", str3.equals(""));
    }

    @Test
    public void test439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test439");
        java.lang.String str3 = strman.Strman.ensureLeft("61", "5500075000-hihillun10145848435558484994584849945848475158484551584841012584841014584843555848499458484994584847515848455158484353584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484751584841014584843555848499458484994584847515848455158484551584841014584843555848499458484994584847515848455158484ih-ihllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunlunn79llun790179llun7901lunn79llun", true);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "5500075000-hihillun10145848435558484994584849945848475158484551584841012584841014584843555848499458484994584847515848455158484353584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484751584841014584843555848499458484994584847515848455158484551584841014584843555848499458484994584847515848455158484ih-ihllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunlunn79llun790179llun7901lunn79llun61" + "'", str3.equals("5500075000-hihillun10145848435558484994584849945848475158484551584841012584841014584843555848499458484994584847515848455158484353584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484751584841014584843555848499458484994584847515848455158484551584841014584843555848499458484994584847515848455158484ih-ihllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunlunn79llun790179llun7901lunn79llun61"));
    }

    @Test
    public void test440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test440");
        java.lang.String str2 = strman.Strman.removeLeftn u l l97 n n u l", "006e0075006c006c00390037hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!4800048000480005500056000480004800049000490004800048000480004900049000550004800048000490004800056Nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull");
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "00072001050010400105001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001100011700108001080005700055001040010500033n u l l97 n n u l" + "'", str2.equals("00072001050010400105001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001100011700108001080005700055001040010500033n u l l97 n n u l"));
    }

    @Test
    public void test441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test441");
        java.lang.String str2 = strman.Strman.ensureRight("null97nhinullhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101nul1097null971097nULL97NNULNullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullhi\\-hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101", "0000000000110000000000000011000000000000001100000000000000110101000000000011000100000000001100000000000000110000000000000011000000000000001101010000000000110001000000000011000000000000001100000000000000110000000000000011010100000000001101010000000000110000000000000011000000000000001100000000000000110101000000000011000000000000001100000000000000110000000000000011000000000000001101010000000000110101000000000011000000000000001100000000000000110000000000000011010100000000001100010000000000110000000000000011000000000000001100000000000000110101000000000011000100000000001100000000000000110000000000000011000000000000001101010000000000110001000000000011000000000000001100000000000000110000000000000011010100000000001101010000000000110000000000000011000000000000001100000000000000110101000000000011000000000000001100000000000000110000000000000011000000000000001101010000000000110101000000000011000000000000001100000000000000110000000000000011010100000000001100010000000000110000000000000011000000000000001100000000000000110101000000000011000100000000001100000000000000110000000000000011000000000000001101010000000000110001000000000011000000000000001100000000000000110000000000000011010100000000001101010000000000110000000000000011000000000000001100000000000000110101000000000011000000000000001100000000000000110000000000000011000000000000001101010000000000110101000000000011000000000000001100000000000000110000000000000011010100000000001100010000000000110000000000000011000000000000001100000000000000110101000000000011000100000000001100000000000000110000000000000011000000000000001101010000000000110001");
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "null97nhinullhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101nul1097null971097nULL97NNULNullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullhi\\-histr2.equals("null97nhinullhi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101nul1097null971097nULL97NNULNullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullhi\\-hi
    }

    @Test
    public void test442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test442");
        java.lang.String[] strArray3 = strman.Strman.split("hi!hi!", "hi!");
        java.lang.String str5 = strman.Strman.join(strArray3, "NULL97nNULL97uNULL97lNULL97lNULL979NULL977NULL97");
        boolean boolean7 = strman.Strman.containsAll("N u l l97 n n u lhi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi hi null97hi null97nnul hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!null97 nnul0000000000110000000000000011000000000000001100110000000000110000000000000011000000000000001100000000000000110011000000000011000000000000001100000000000000110000000000000011001100000000001100110000000000110000000000000011000000000000001100110000000000110011hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97_hi!00370039006_c006_c0075006_e003700370039006_c006_c0075006_e003900370039006_c006_c0075006_e004_c00370039006_c006_c0075006_e004_c00370039006_c006_c0075006_e005500370039006_c006_c0075006_e004_e00370039006_c006_c0075006_e", strArray3, true);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "" + "'", str5.equals(""));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test443");
        try {
            java.util.Optional<java.lang.String> strOptional2 = strman.Strman.first("1", 50);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 50");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        }
    }

    @Test
    public void test444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test444");
        int int3 = strman.Strman.lastIndexOf("nULL000780008500076000760005700055001100007800085000760007600057000550011700078000850007600076000570005500108000780008500076000760005700055001080007800085000760007600057000550005700078000850007600076000570005500055000780008500076000760005700055HINULLHI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111011000000000001101100000000000110110000000001010111000000000011101100000000000110110000000000011011000000000101011100000000001110110000000000011011000000000001101100000000010101110000000000111001000000000!IH79LLUN!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IH!IHHI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI!HI48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101", "00072001050010400105110117108108575500000000017900000000011010010000000001101000000000000110100100000000001011010000000001101000 NULL97N NULL97U NULL97L NULL97L NULL979 NULL977 NULL97L00000000011010010000000001101000000000000110100100000000001011010000000001101000 NULL97N NULL97U NULL97L NULL97L NULL979 NULL977 NULL97L00000000011010010000000001101000000000000110100100000000001011010000000001101000 NULL97N NULL97U NULL97L NULL97L NULL979 NULL977 NULL97U00000000011010010000000001101000000000000110100100000000001011010000000001101000 NULL97N NULL97U NULL97L NULL97L NULL979 NULL977 NULL97N77900000000011010010000000001101000000000000110100100000000001011010000000001101000 NULL97N NULL97U NULL97L NULL97L NULL979 NULL977 NULL97L00000000011010010000000001101000000000000110100100000000001011010000000001101000 NULL97N NULL97U NULL97L NULL97L NULL979 NULL977 NULL97L00000000011010010000000001101000000000000110100100000000001011010000000001101000 NULL97N NULL97U NULL97L NULL97L NULL979 NULL977 NULL97U00000000011010010000000001101000000000000110100100000000001011010000000001101000 NULL97N NULL97U NULL97L NULL97L NULL979 NULL977 NULL97N97900000000011010010000000001101000000000000110100100000000001011010000000001101000 NULL97N NULL97U NULL97L NULL97L NULL979 NULL977 NULL97L00000000011010010000000001101000000000000110100100000000001011010000000001101000 NULL97N NULL97U NULL97L NULL97L NULL979 NULL977 NULL97L00000000011010010000000001101000000000000110100100000000001011010000000001101000 NULL97N NULL97U NULL97L NULL97L NULL979 NULL977 NULL97U00000000011010010000000001101000000000000110100100000000001011010000000001101000 NULL97N NULL97U NULL97L NULL97L NULL979 NULL977 NULL97NL7900000000011010010000000001101000000000000110100100000000001011010000000001101000 NULL97N NULL97U NULL97L NULL97L NULL979 NULL977 NULL97L00000000011010010000000001101000000000000110100100000000001011010000000001101000 NULL97N NULL97U NULL97L NULL97L NULL979 NULL977 NULL97L00000000011010010000000001101000000000000110100100000000001011010000000001101000 NULL97N NULL97U NULL97L NULL97L NULL979 NULL977 NULL97U00000000011010010000000001101000000000000110100100000000001011010000000001101000 NULL97N NULL97U NULL97L NULL97L NULL979 NULL977 NULL97NL7900000000011010010000000001101000000000000110100100000000001011010000000001101000 NULL97N NULL97U NULL97L NULL97L NULL979 NULL977 NULL97L00000000011010010000000001101000000000000110100100000000001011010000000001101000 NULL97N NULL97U NULL97L NULL97L NULL979 NULL977 NULL97L00000000011010010000000001101000000000000110100100000000001011010000000001101000 NULL97N NULL97U NULL97L NULL97L NULL979 NULL977 NULL97U00000000011010010000000001101000000000000110100100000000001011010000000001101000 NULL97N NULL97U NULL97L NULL97L NULL979 NULL977 NULL97NU7900000000011010010000000001101000000000000110100100000000001011010000000001101000 NULL97N NULL97U NULL97L NULL97L NULL979 NULL977 NULL97L00000000011010010000000001101000000000000110100100000000001011010000000001101000 NULL97N NULL97U NULL97L NULL97L NULL979 NULL977 NULL97L00000000011010010000000001101000000000000110100100000000001011010000000001101000 NULL97N NULL97U NULL97L NULL97L NULL979 NULL977 NULL97U00000000011010010000000001101000000000000110100100000000001011010000000001101000 NULL97N NULL97U NULL97L NULL97L NULL979 NULL977 NULL97NN7900000000011010010000000001101000000000000110100100000000001011010000000001101000 NULL97N NULL97U NULL97L NULL97L NULL979 NULL977 NULL97L00000000011010010000000001101000000000000110100100000000001011010000000001101000 NULL97N NULL97U NULL97L NULL97L NULL979 NULL977 NULL97L00000000011010010000000001101000000000000110100100000000001011010000000001101000 NULL97N NULL97U NULL97L NULL97L NULL979 NULL977 NULL97U00000000011010010000000001101000000000000110100100000000001011010000000001101000 NULL97N NULL97U NULL97L NULL97L NULL979 NULL977 NULL97N10100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100", true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
    }

    @Test
    public void test445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test445");
        try {
            java.lang.String str3 = strman.Strman.decode("00110001170010800108000570005500078001100011700108hi-hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101", 309, 1040);
            org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException; message: radix 1040 greater than Character.MAX_RADIX");
        } catch (java.lang.NumberFormatException e) {
        }
    }

    @Test
    public void test446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test446");
        java.lang.String str1 = strman.Strman.swapCase("TnVsbDk3aGloaWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIW51bGw5N2hpIW5udWxsOTdoaWhpaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhaGkhbnVsbDk3aGkhdW51bGw5N2hpaGloaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFoaSFudWxsOTdoaSFsbnVsbDk3aGloaWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIWhpIW51bGw5N2hpIWxudWxsOTc5bnVsbDk3N251bGw5Nw==MDAxMTAxMTAwMDAwMDAwMDEwMTAxMTEwMDAwMDAwMDAwMTExMDExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDAxMDAxMTEwMDAwMDAwMDAwMDAxMTAxMTAwMDAwMDAwMDAwMTEwMTEwMDAwMDAwMDAxMDEwMTExMDAwMDAwMDAwMDExMTAxMTAwMDAwMDAwMDEwMDEwMTEwMDAwMDAwMDAwMDAxMDExMDAwMDAwMDAwMTAxMTAxMDAwMDAwMDAwMDEwMDEwMTEwMDAwMDAwMDAwMDAxMDExMDAwMDAwMDAwaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaWhpaGloaS1o");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "tNvSBdK3AgLOAwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiw51BgW5n2HPiw5UDwXSotDOAwHPAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHBNvSBdK3AgKHDw51BgW5n2HPAgLOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfUDwXSotDOAsfSBNvSBdK3AgLOAwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiw51BgW5n2HPiwXUDwXSotC5BNvSBdK3n251BgW5nW==mdaXmtaXmtaWmdaWmdaWmdeWmtaXmteWmdaWmdaWmdaWmteXmdeXmdaWmdaWmdaWmdeXmtaXmtaWmdaWmdaWmdeXmtaXmtaWmdaWmdaWmdaXmdaXmteWmdaWmdaWmdaWmdaXmtaXmtaWmdaWmdaWmdaWmteWmteWmdaWmdaWmdaXmdeWmteXmdaWmdaWmdaWmdeXmtaXmtaWmdaWmdaWmdeWmdeWmteWmdaWmdaWmdaWmdaXmdeXmdaWmdaWmdaWmtaXmtaXmdaWmdaWmdaWmdeWmdeWmteWmdaWmdaWmdaWmdaXmdeXmdaWmdaWmdaWAwHPAgLOAwHPAgLOAwHPAgLOAwHPAgLOAwHPAgLOAwHPAgLOAwHPAgLOAwHPAgLOAwHPAgLOAwHPAgLOAwHPAgLOAwHPAgLOAwHPAgLOAwHPAgLOAwHPAgLOAwHPAgLOAwHPAgLOAwHPAgLOAwHPAgLOAwHPAgLOAwHPAgLOAwHPAgLOAwHPAgLOAwHPAgLOAwHPAgLOAwHPAgLOAwHPAgLOAwHPAgLOAwHPAgLOAwHPAgLOAwHPAgLOAwHPAgLOAwHPAgLOAs1O" + "'", str1.equals("tNvSBdK3AgLOAwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiw51BgW5n2HPiw5UDwXSotDOAwHPAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHAgKHBNvSBdK3AgKHDw51BgW5n2HPAgLOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfOAsfUDwXSotDOAsfSBNvSBdK3AgLOAwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiwHPiw51BgW5n2HPiwXUDwXSotC5BNvSBdK3n251BgW5nW==mdaXmtaXmtaWmdaWmdaWmdeWmtaXmteWmdaWmdaWmdaWmteXmdeXmdaWmdaWmdaWmdeXmtaXmtaWmdaWmdaWmdeXmtaXmtaWmdaWmdaWmdaXmdaXmteWmdaWmdaWmdaWmdaXmtaXmtaWmdaWmdaWmdaWmteWmteWmdaWmdaWmdaXmdeWmteXmdaWmdaWmdaWmdeXmtaXmtaWmdaWmdaWmdeWmdeWmteWmdaWmdaWmdaWmdaXmdeXmdaWmdaWmdaWmtaXmtaXmdaWmdaWmdaWmdeWmdeWmteWmdaWmdaWmdaWmdaXmdeXmdaWmdaWmdaWAwHPAgLOAwHPAgLOAwHPAgLOAwHPAgLOAwHPAgLOAwHPAgLOAwHPAgLOAwHPAgLOAwHPAgLOAwHPAgLOAwHPAgLOAwHPAgLOAwHPAgLOAwHPAgLOAwHPAgLOAwHPAgLOAwHPAgLOAwHPAgLOAwHPAgLOAwHPAgLOAwHPAgLOAwHPAgLOAwHPAgLOAwHPAgLOAwHPAgLOAwHPAgLOAwHPAgLOAwHPAgLOAwHPAgLOAwHPAgLOAwHPAgLOAwHPAgLOAwHPAgLOAs1O"));
    }

    @Test
    public void test447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test447");
        java.lang.String[] strArray2 = strman.Strman.split("", "79llun779llun979llunL79llunL79llunU79llunN79lluN");
        org.junit.Assert.assertNotNull(strArray2);
    }

    @Test
    public void test448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test448");
        java.lang.String str1 = strman.Strman.upperFirst("hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hihihi");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "Hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hihihi" + "'", str1.equals("Hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hihihi"));
    }

    @Test
    public void test449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test449");
        java.lang.String str1 = strman.Strman.leftTrim("bnVsbG5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTA==");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "bnVsbG5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTA==" + "'", str1.equals("bnVsbG5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTA=="));
    }

    @Test
    public void test450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test450");
        int int4 = strman.Strman.lastIndexOfnull97null97nnulnull97nnulih", 505, false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
    }

    @Test
    public void test451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test451");
        java.util.Optional<java.lang.String> strOptional1 = strman.Strman.trimStart("8484855544848484848484848565348484848484848485556104105104105");
        org.junit.Assert.assertNotNull(strOptional1);
    }

    @Test
    public void test452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test452");
        java.lang.String[] strArray5 = strman.Strman.lines("hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!");
        java.lang.String str6 = strman.Strman.prepend("null97", strArray5);
        java.lang.String str8 = strman.Strman.join(strArray5, "100");
        java.lang.String str9 = strman.Strman.format("006e0075006c006c00390037", strArray5);
        boolean boolean10 = strman.Strman.containsAll("00001101100000000010101110000000000111011000000000011101100000000011101100000000001001110000000000001101100000000000110110000000001010111000000000011101100000000010010110000000000001011000000000101101000000000010010110000000000001011000000000ihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi-h0000000100111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100000000000110111000000000011101010000000001101100000000000110110000000000011011100000000001110101000000000110110000000000011011000000000001101110000000000111010100000000011011000000000001101100", strArray5);
        boolean boolean12 = strman.Strman.containsAll("hi!hi!", strArray5, true);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97" + "'", str6.equals("hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97"));
        org.junit.Assert.assertTrue("'" + str8 + "' != '" + "hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!" + "'", str8.equals("hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!"));
        org.junit.Assert.assertTrue("'" + str9 + "' != '" + "006e0075006c006c00390037" + "'", str9.equals("006e0075006c006c00390037"));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test453");
        boolean boolean2 = strman.Strman.inequal("Ihi97hhi97hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101", "Hi!hi!null97=g2xphwa000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97nnull97unull97lnull97lnull979null977null97hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
    }

    @Test
    public void test454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test454");
        java.lang.String str1 = strman.Strman.htmlEncode("1null97null97-nnul-n-u-l-l97-n-n-u-lih");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull" + "'", str1.equals("nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull"));
    }

    @Test
    public void test455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test455");
        java.lang.String str3 = strman.Strman.leftPad("hihihi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-hihihi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-bl-vmte5-vtex-ovux-mtl-vmte5-vtex-ovux-mtl-vmte5-vtex-ovux-mtl-vmte5-vtex-ovux-mtl-vmte5-vtex-ovux-mtl-vmte5-vtex-ovux-mtl-vmte5-vtex-ovux-mtl-vmte5-vtex-ovux-mtl-vmte5-vtex-ovux-mtl-vmte5-vtex-ovux-mtl-vmte5-vtex-ovux-mtl-vmte5-vtex-ovux-mtl-vmte5-vtex-ovux-mtl-vmte5-vtex-ovux-mtl-vmte5-vtex-ovux-mtl-vmte5-vtex-ovux-mhihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100", "hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hi!", (int) 'a');
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "hihihi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-hihihi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-bl-vmte5-vtex-ovux-mtl-vmte5-vtex-ovux-mtl-vmte5-vtex-ovux-mtl-vmte5-vtex-ovux-mtl-vmte5-vtex-ovux-mtl-vmte5-vtex-ovux-mtl-vmte5-vtex-ovux-mtl-vmte5-vtex-ovux-mtl-vmte5-vtex-ovux-mtl-vmte5-vtex-ovux-mtl-vmte5-vtex-ovux-mtl-vmte5-vtex-ovux-mtl-vmte5-vtex-ovux-mtl-vmte5-vtex-ovux-mtl-vmte5-vtex-ovux-mtl-vmte5-vtex-ovux-mhihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100" + "'", str3.equals("hihihi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-hihihi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-bl-vmte5-vtex-ovux-mtl-vmte5-vtex-ovux-mtl-vmte5-vtex-ovux-mtl-vmte5-vtex-ovux-mtl-vmte5-vtex-ovux-mtl-vmte5-vtex-ovux-mtl-vmte5-vtex-ovux-mtl-vmte5-vtex-ovux-mtl-vmte5-vtex-ovux-mtl-vmte5-vtex-ovux-mtl-vmte5-vtex-ovux-mtl-vmte5-vtex-ovux-mtl-vmte5-vtex-ovux-mtl-vmte5-vtex-ovux-mtl-vmte5-vtex-ovux-mtl-vmte5-vtex-ovux-mhihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100"));
    }

    @Test
    public void test456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test456");
        try {
            java.lang.String str3 = strman.Strman.slice("hi\\-hi", (int) (short) -1, 330);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        }
    }

    @Test
    public void test457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test457");
        java.lang.String str1 = strman.Strman.htmlEncode("0000000001101001000000000110100000000000011010010000000001001000");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull" + "'", str1.equals("nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull"));
    }

    @Test
    public void test458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test458");
        java.lang.String str4 = strman.Strman.replace("null97n uLLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULL", "Ihnull006900680069005f006800680069002dhihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi006900680069005f006800680069002dhihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi006900680069005f006800680069002dhihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihi", "ullnullnullnullnullnullnull", true);
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "null97n uLLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULL" + "'", str4.equals("null97n uLLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULL"));
    }

    @Test
    public void test459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test459");
        int int2 = strman.Strman.lastIndexOf("", "4911011710810857551101171081085755951101101171081085755951171101171081085755951081101171081085755951081101171081085755571101171081085755551101171081085755hi_hi0000000001001000000000000110100197_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_null97hi00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
    }

    @Test
    public void test460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test460");
        java.lang.String str1 = strman.Strman.removeNonWordsih79llun!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih");
        org.junit.Assert.assertTrue("'" + strih79llunihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihih" + "'", str1.equalsih79llunihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihih"));
    }

    @Test
    public void test461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test461");
        boolean boolean2 = strman.Strman.inequal("hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_null97hi00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006ehi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!==AbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnb
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
    }

    @Test
    public void test462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test462");
        java.lang.String str1 = strman.Strman.htmlEncode("Lunn79llun");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "nullnullnullnullnullnullnullnullnullnull" + "'", str1.equals("nullnullnullnullnullnullnullnullnullnull"));
    }

    @Test
    public void test463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test463");
        java.lang.String[] strArray1 = null;
        java.lang.String str2 = strman.Strman.format("000000000179-l-l-u-n779-l-l-u-n979-l-l-u-nl79-l-l-u-nl79-l-l-u-nu79-l-l-u-nn79-l-l-u-n10100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100", strArray1);
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "000000000179-l-l-u-n779-l-l-u-n979-l-l-u-nl79-l-l-u-nl79-l-l-u-nu79-l-l-u-nn79-l-l-u-n10100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100" + "'", str2.equals("000000000179-l-l-u-n779-l-l-u-n979-l-l-u-nl79-l-l-u-nl79-l-l-u-nu79-l-l-u-nn79-l-l-u-n10100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100"));
    }

    @Test
    public void test464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test464");
        boolean boolean3 = strman.Strman.isEnclosedBetween("00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000510000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000053", "bnpsc2JfaHZ1X256YzViX2d4MWJqazNfb3d4c2RfdzVfbW56bHNiX2h2dV90ZGM1Yl9neDFibF91M19vd3hzZF93NV9vbnpsc2JfaHZ1550007500067000670005800087000550005500075000670006700058000870007500055000750006700067000580008700080100550007500067000670005800087000801005500075000670006700058000870007110055000750006700067000580008700001100550007500067000670005800087000llun10145848435558484994584849945848475158484551584841012584841014584843555848499458484994584847515848455158484353584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484992584841014584843555848499458484994584847515848455158484751584841014584843555848499458484994584847515848455158484551584841014584843555848499458484994584847515848455158484ih-ihllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunllunlunn79llun790179llun7901lunn79llunihi_hhi-hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101", "000000000011000100000000001100000000000000110001000000000011000100000000001101110000000000110001000000000011000000000000001110000000000000110001000000000011000000000000001110000000000000110101000000000011011100000000001101010000000000110101000000000100111000000000011101010000000001101100000000000110110000000000001110010000000000110111000000000100111000000000011011100000000001110101000000000110110000000000011011000000000000111001000000000011011100000000010101010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001001100000000000110111000000000011101010000000001101100000000000110110000000000001110010000000000110111000000000100110000000000011011100000000001110101000000000110110000000000011011000000000000111001000000000011011100000000001110010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000000110111000000000110111000000000011101010000000001101100000000000110110000000000001110010000000000110111000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97nnull97unull97lnull97lnull979null977null97hihihi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test465");
        java.lang.String str1 = strman.Strman.capitalize("0010500104001050005700055001040010400105000570005500104001050005200056000520005600053000490005300053000520005600052000560005300049000530005500052000560005200056000530005200057000570005200056000520005600053000520005700057000520005600052000560005300053000530005100052000560005200056000530005200049000480004900052000560005200056000530004900053000530005200056000520005600053000490005300053000520005600052000560005300049000530005500052000560005200056000530005200057000570005200056000520005600053000520005700057000520005600052000560005300053000530005100052000560005200056000530005200049000480004900052000560005200056000530004900053000550005200056000520005600053000490005300053000520005600052000560005300049000530005500052000560005200056000530005200057000570005200056000520005600053000520005700057000520005600052000560005300053000530005100052000560005200056000530005200049000480004900052000560005200056000530005000057000570005200056000520005600053000490005300053000520005600052000560005300049000530005500052000560005200056000530005200057000570005200056000520005600053000520005700057000520005600052000560005300053000530005100052000560005200056000530005200049000480004900052000560005200056000530005000057000570005200056000520005600053000490005300053000520005600052000560005300049000530005500052000560005200056000530005200057000570005200056000520005600053000520005700057000520005600052000560005300053000530005100052000560005200056000530005200049000480004900052000560005200056000530005100053000510005200056000520005600053000490005300053000520005600052000560005300049000530005500052000560005200056000530005200057000570005200056000520005600053000520005700057000520005600052000560005300053000530005100052000560005200056000530005200049000480004900052000560005200056000530005000049000480004900052000560005200056000530004900053000530005200056000520005600053000490005300055000520005600052000560005300052000570005700052000560005200056000530005200057000570005200056000520005600053000530005300051000520005600052000560005300052000490004800049");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "0010500104001050005700055001040010400105000570005500104001050005200056000520005600053000490005300053000520005600052000560005300049000530005500052000560005200056000530005200057000570005200056000520005600053000520005700057000520005600052000560005300053000530005100052000560005200056000530005200049000480004900052000560005200056000530004900053000530005200056000520005600053000490005300053000520005600052000560005300049000530005500052000560005200056000530005200057000570005200056000520005600053000520005700057000520005600052000560005300053000530005100052000560005200056000530005200049000480004900052000560005200056000530004900053000550005200056000520005600053000490005300053000520005600052000560005300049000530005500052000560005200056000530005200057000570005200056000520005600053000520005700057000520005600052000560005300053000530005100052000560005200056000530005200049000480004900052000560005200056000530005000057000570005200056000520005600053000490005300053000520005600052000560005300049000530005500052000560005200056000530005200057000570005200056000520005600053000520005700057000520005600052000560005300053000530005100052000560005200056000530005200049000480004900052000560005200056000530005000057000570005200056000520005600053000490005300053000520005600052000560005300049000530005500052000560005200056000530005200057000570005200056000520005600053000520005700057000520005600052000560005300053000530005100052000560005200056000530005200049000480004900052000560005200056000530005100053000510005200056000520005600053000490005300053000520005600052000560005300049000530005500052000560005200056000530005200057000570005200056000520005600053000520005700057000520005600052000560005300053000530005100052000560005200056000530005200049000480004900052000560005200056000530005000049000480004900052000560005200056000530004900053000530005200056000520005600053000490005300055000520005600052000560005300052000570005700052000560005200056000530005200057000570005200056000520005600053000530005300051000520005600052000560005300052000490004800049" + "'", str1.equals("0010500104001050005700055001040010400105000570005500104001050005200056000520005600053000490005300053000520005600052000560005300049000530005500052000560005200056000530005200057000570005200056000520005600053000520005700057000520005600052000560005300053000530005100052000560005200056000530005200049000480004900052000560005200056000530004900053000530005200056000520005600053000490005300053000520005600052000560005300049000530005500052000560005200056000530005200057000570005200056000520005600053000520005700057000520005600052000560005300053000530005100052000560005200056000530005200049000480004900052000560005200056000530004900053000550005200056000520005600053000490005300053000520005600052000560005300049000530005500052000560005200056000530005200057000570005200056000520005600053000520005700057000520005600052000560005300053000530005100052000560005200056000530005200049000480004900052000560005200056000530005000057000570005200056000520005600053000490005300053000520005600052000560005300049000530005500052000560005200056000530005200057000570005200056000520005600053000520005700057000520005600052000560005300053000530005100052000560005200056000530005200049000480004900052000560005200056000530005000057000570005200056000520005600053000490005300053000520005600052000560005300049000530005500052000560005200056000530005200057000570005200056000520005600053000520005700057000520005600052000560005300053000530005100052000560005200056000530005200049000480004900052000560005200056000530005100053000510005200056000520005600053000490005300053000520005600052000560005300049000530005500052000560005200056000530005200057000570005200056000520005600053000520005700057000520005600052000560005300053000530005100052000560005200056000530005200049000480004900052000560005200056000530005000049000480004900052000560005200056000530004900053000530005200056000520005600053000490005300055000520005600052000560005300052000570005700052000560005200056000530005200057000570005200056000520005600053000530005300051000520005600052000560005300052000490004800049"));
    }

    @Test
    public void test466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test466");
        java.lang.String str1 = strman.Strman.toSnakeCase("sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_tl_vmtdk
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_tl_vmtdkstr1.equals("sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_sekh_tl_vmtdk
    }

    @Test
    public void test467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test467");
        java.lang.String str3 = strman.Strman.safeTruncate("4911011710810857551101171081085755951101101171081085755951171101171081085755951081101171081085755951081101171081085755571101171081085755551101171081085755hi_hi0000000001001000000000000110100197_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_null97hi00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e", 337, "nullnullnullnullnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexcl");
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "nullnullnullnullnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexcl" + "'", str3.equals("nullnullnullnullnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexclnullnullexcl"));
    }

    @Test
    public void test468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test468");
        java.lang.String str2 = strman.Strman.removeRight("33727333727333727333null000780008500076000760005700055001100007800085000760007600057000550011700078000850007600076000570005500108000780008500076000760005700055001080007800085000760007600057000550005700078000850007600076000570005500055000780008500076000760005700055", "1null97null97_nnul_n_u_l_l97_n_n_u_l!ih");
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "33727333727333727333null000780008500076000760005700055001100007800085000760007600057000550011700078000850007600076000570005500108000780008500076000760005700055001080007800085000760007600057000550005700078000850007600076000570005500055000780008500076000760005700055" + "'", str2.equals("33727333727333727333null000780008500076000760005700055001100007800085000760007600057000550011700078000850007600076000570005500108000780008500076000760005700055001080007800085000760007600057000550005700078000850007600076000570005500055000780008500076000760005700055"));
    }

    @Test
    public void test469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test469");
        int int1 = strman.Strman.length("110117108108575500000000017900000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97l00000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97l00000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97u00000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97n77900000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97l00000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97l00000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97u00000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97n97900000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97l00000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97l00000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97u00000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97nl7900000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97l00000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97l00000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97u00000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97nl7900000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97l00000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97l00000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97u00000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97nu7900000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97l00000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97l00000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97u00000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97nn7900000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97l00000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97l00000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97u00000000011010010000000001101000000000000110100100000000001011010000000001101000 null97n null97u null97l null97l null979 null977 null97n10100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 4084 + "'", int1 == 4084);
    }

    @Test
    public void test470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test470");
        java.lang.String str1 = strman.Strman.toCamelCase("Nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull97Nnull97Unull97Lnull97Lnull979null977null97null97nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnullnullnullnullnull");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull97Nnull97Unull97Lnull97Lnull979null977null97null97nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnullnullnullnullnull" + "'", str1.equals("nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull97Nnull97Unull97Lnull97Lnull979null977null97null97nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnull&excl;nullnullnullnullnullnull"));
    }

    @Test
    public void test471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test471");
        int int2 = strman.Strman.lastIndexOf("=g2xphwA000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97Nnull97Unull97Lnull97Lnull979null977null97Hihihi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!null97hinullnull97nnul", "");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 4213 + "'", int2 == 4213);
    }

    @Test
    public void test472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test472");
        java.lang.String[] strArray1 = strman.Strman.chars("n00001p00001r00003i00003i00003r00003k00001p00001p00001r00003i00003i00003r00003k00001r00001p00001r00003i00003i00003r00003k00003i00001p00001r00003i00003i00003r00003k00003i00001p00001r00003i00003i00003r00003k00003r00001p00001r00003i00003i00003r00003k00003k00001p00001r00003i00003i00003r00003k00001p00001r00003i00003i00003r00003k00001p00001p00001r00003i00003i00003r00003k00001r00001p00001r00003i00003i00003r00003k00003i00001p00001r00003i00003i00003r00003k00003i00001p00001r00003i00003i00003r00003k00003r00001p00001r00003i00003i00003r00003k00003k00001p00001r00003i00003i00003r00003ku00001p00001r00003i00003i00003r00003k00001p00001p00001r00003i00003i00003r00003k00001r00001p00001r00003i00003i00003r00003k00003i00001p00001r00003i00003i00003r00003k00003i00001p00001r00003i00003i00003r00003k00003r00001p00001r00003i00003i00003r00003k00003k00001p00001r00003i00003i00003r00003k00001p00001r00003i00003i00003r00003k00001p00001p00001r00003i00003i00003r00003k00001r00001p00001r00003i00003i00003r00003k00003i00001p00001r00003i00003i00003r00003k00003i00001p00001r00003i00003i00003r00003k00003r00001p00001r00003i00003i00003r00003k00003k00001p00001r00003i00003i00003r00003kl00001p00001r00003i00003i00003r00003k00001p00001p00001r00003i00003i00003r00003k00001r00001p00001r00003i00003i00003r00003k00003i00001p00001r00003i00003i00003r00003k00003i00001p00001r00003i00003i00003r00003k00003r00001p00001r00003i00003i00003r00003k00003k00001p00001r00003i00003i00003r00003k00001p00001r00003i00003i00003r00003k00001p00001p00001r00003i00003i00003r00003k00001r00001p00001r00003i00003i00003r00003k00003i00001p00001r00003i00003i00003r00003k00003i00001p00001r00003i00003i00003r00003k00003r00001p00001r00003i00003i00003r00003k00003k00001p00001r00003i00003i00003r00003kl");
        org.junit.Assert.assertNotNull(strArray1);
    }

    @Test
    public void test473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test473");
        java.lang.String str1 = strman.Strman.underscored("0");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "0" + "'", str1.equals("0"));
    }

    @Test
    public void test474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test474");
        java.lang.String str3 = strman.Strman.truncate("001", 203, "TlVMTDk3SElISUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIU5VTEw5N0hJIU5OVUxMOTdISUhJSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhSEkhTlVMTDk3SEkhVU5VTEw5N0hJSElISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFISSFOVUxMOTdISSFMTlVMTDk3SElISUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIUhJIU5VTEw5N0hJIUxOVUxMOTc5TlVMTDk3N05VTEw5N0hJSElOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTA==");
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "001" + "'", str3.equals("001"));
    }

    @Test
    public void test475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test475");
        java.lang.String str1 = strman.Strman.htmlEncode("lunN79llunnull97null97Nnull97Unull97Lnull97Lnull979null977null97nULL97NNULNullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull1097nullnull97nnulhi006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037006e0075006c006c00390037");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull" + "'", str1.equals("nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull"));
    }

    @Test
    public void test476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test476");
        java.lang.String[] strArray1 = null;
        try {
            java.util.Optional<java.lang.String> strOptional2 = strman.Strman.trimStart("0021004800490021004800490021004800490021", strArray1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Input array 'strings' can't be null");
        } catch (java.lang.IllegalArgumentException e) {
        }
    }

    @Test
    public void test477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test477");
        try {
            java.lang.String str3 = strman.Strman.decode("Mda2 ztaw nz uw mdzj mda2 yz aw mzkw mdm3nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullHihihihinull97nnull97unull97lnull97lnull979null977null979710", 1040, 7656);
            org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException; message: radix 7656 greater than Character.MAX_RADIX");
        } catch (java.lang.NumberFormatException e) {
        }
    }

    @Test
    public void test478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test478");
        boolean boolean2 = strman.Strman.isEnclosedBetween("n-u-l-l97-n-n-u-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l-n-u-l-l", "hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_hi_null97hi00370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006ehi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!==AbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbsxWduxGb15GbsVnbhi-hinull97nnulNull97 nnull97 unull97 lnull97 lnull979null977null97");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test479");
        boolean boolean4 = strman.Strman.endsWith("hihiihi_hhi_hi484851554848515748485499484854994848555348485410148485155484851554848515748485499484854994848555348485410148485157484851554848515748485499484854994848555348485410148485299484851554848515748485499484854994848555348485410148485299484851554848515748485499484854994848555348485410148485353484851554848515748485499484854994848555348485410148485210148485155484851574848549948485499484855534848541010000000001101001000000000110100000000000011010010000000001001000Null000780008500076000760005700055001100007800085000760007600057000550011700078000850007600076000570005500108000780008500076000760005700055001080007800085000760007600057000550005700078000850007600076000570005500055000780008500076000760005700055", "mdaWnZiWmdeWntaWmta0mdaXmduWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWm00000000001100110000000000110101000000000011001100000000001101010000000000110011000000000011010100000000001100110000000000110101000000000011001100000000001101010000000000110011000000000011010100000000001100110000000000110101ta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeWndaWmta1mdaWmZmWmdeXmdaWmte3mdaXmdGWmdeWodaWmdu3mdaWntuWmdeWndaWmta1mdaWmZm=", 655, true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test480");
        java.lang.String[] strArray1 = strman.Strman.chars("mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=a-whp-x2g=");
        org.junit.Assert.assertNotNull(strArray1);
    }

    @Test
    public void test481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test481");
        java.lang.String str1 = strman.Strman.formatNumber((long) 1040);
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "1,040" + "'", str1.equals("1,040"));
    }

    @Test
    public void test482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test482");
        java.util.Optional<java.lang.String> strOptional2 = strman.Strman.at("NzlsbHVuNzc5bGx1bjk3OWxsdW5MNzlsbHVuTDc5bGx1blU3OWxsdW5ONzlsbHVu", 280);
        org.junit.Assert.assertNotNull(strOptional2);
    }

    @Test
    public void test483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test483");
        int int1 = strman.Strman.length("lunn-79llun!ih79llun!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih!ih-lunn79llun-ih79llun-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ih-ihl-u-n-n-79l-l-u-n");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 657 + "'", int1 == 657);
    }

    @Test
    public void test484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test484");
        java.lang.String str3 = strman.Strman.ensureLeft("n_u_l_l97hihi", "null97nnul1097null971097null97nnulnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullhi00370039006c006c0075006e0068006900680069003700370039006c006c0075006e003900370039006c006c0075006e002d006c00370039006c006c0075006e002d006c00370039006c006c0075006e002d007500370039006c006c0075006e002d006e00370039006c006c0075006e002d0068006900680069hi4848515548485157484854994848549948485553484854101484851554848515548485157484854994848549948485553484854101484851574848515548485157484854994848549948485553484854101484852994848515548485157484854994848549948485553484854101484852994848515548485157484854994848549948485553484854101484853534848515548485157484854994848549948485553484854101484852101484851554848515748485499484854994848555348485410100370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e00000000011010010000000001101000", false);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "null97nnul1097null971097null97nnulnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullhi00370039006c006c0075006e0068006900680069003700370039006c006c0075006e003900370039006c006c0075006e002d006c00370039006c006c0075006e002d006c00370039006c006c0075006e002d007500370039006c006c0075006e002d006e00370039006c006c0075006e002d0068006900680069hi4848515548485157484854994848549948485553484854101484851554848515548485157484854994848549948485553484854101484851574848515548485157484854994848549948485553484854101484852994848515548485157484854994848549948485553484854101484852994848515548485157484854994848549948485553484854101484853534848515548485157484854994848549948485553484854101484852101484851554848515748485499484854994848555348485410100370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e00000000011010010000000001101000n_u_l_l97hihi" + "'", str3.equals("null97nnul1097null971097null97nnulnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullhi00370039006c006c0075006e0068006900680069003700370039006c006c0075006e003900370039006c006c0075006e002d006c00370039006c006c0075006e002d006c00370039006c006c0075006e002d007500370039006c006c0075006e002d006e00370039006c006c0075006e002d0068006900680069hi4848515548485157484854994848549948485553484854101484851554848515548485157484854994848549948485553484854101484851574848515548485157484854994848549948485553484854101484852994848515548485157484854994848549948485553484854101484852994848515548485157484854994848549948485553484854101484853534848515548485157484854994848549948485553484854101484852101484851554848515748485499484854994848555348485410100370039006c006c0075006e003700370039006c006c0075006e003900370039006c006c0075006e004c00370039006c006c0075006e004c00370039006c006c0075006e005500370039006c006c0075006e004e00370039006c006c0075006e00000000011010010000000001101000n_u_l_l97hihi"));
    }

    @Test
    public void test485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test485");
        long long2 = strman.Strman.countSubstr("nullihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi Hihi HHi-hinull97nnul", "1-");
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
    }

    @Test
    public void test486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test486");
        boolean boolean3 = strman.Strman.contains("00110001170010800108000570005500078001100011700108001080005700055000850011000117001080010800057000550007600110001170010800108000570005500076001100011700108001080005700055000570011000117001080010800057000550005500110001170010800108000570005500057000550004900048Null97nnul1097nullfalse);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test487");
        java.lang.String[] strArray1 = strman.Strman.words("HI-HI48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101");
        org.junit.Assert.assertNotNull(strArray1);
    }

    @Test
    public void test488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test488");
        java.lang.String str1 = strman.Strman.toKebabCase("blVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxM000000005500000000570000000076000000007600000000850000000078000000005500000000550000000057000000007600000000760000000085000000007800000000570000000055000000005700000000760000000076000000008500000000780000000108000000005500000000570000000076000000007600000000850000000078000000010800000000550000000057000000007600000000760000000085000000007800000001170000000055000000005700000000760000000076000000008500000000780000000110000000005500000000570000000076000000007600000000850000000078hihi");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "bl-v-m-t-e5-v-t-ex-o-v-ux-m-tl-v-m-t-e5-v-t-ex-o-v-ux-m-tl-v-m-t-e5-v-t-ex-o-v-ux-m-tl-v-m-t-e5-v-t-ex-o-v-ux-m-tl-v-m-t-e5-v-t-ex-o-v-ux-m-tl-v-m-t-e5-v-t-ex-o-v-ux-m-tl-v-m-t-e5-v-t-ex-o-v-ux-m-tl-v-m-t-e5-v-t-ex-o-v-ux-m-tl-v-m-t-e5-v-t-ex-o-v-ux-m-tl-v-m-t-e5-v-t-ex-o-v-ux-m-tl-v-m-t-e5-v-t-ex-o-v-ux-m-tl-v-m-t-e5-v-t-ex-o-v-ux-m-tl-v-m-t-e5-v-t-ex-o-v-ux-m-tl-v-m-t-e5-v-t-ex-o-v-ux-m-tl-v-m-t-e5-v-t-ex-o-v-ux-m-tl-v-m-t-e5-v-t-ex-o-v-ux-m000000005500000000570000000076000000007600000000850000000078000000005500000000550000000057000000007600000000760000000085000000007800000000570000000055000000005700000000760000000076000000008500000000780000000108000000005500000000570000000076000000007600000000850000000078000000010800000000550000000057000000007600000000760000000085000000007800000001170000000055000000005700000000760000000076000000008500000000780000000110000000005500000000570000000076000000007600000000850000000078hihi" + "'", str1.equals("bl-v-m-t-e5-v-t-ex-o-v-ux-m-tl-v-m-t-e5-v-t-ex-o-v-ux-m-tl-v-m-t-e5-v-t-ex-o-v-ux-m-tl-v-m-t-e5-v-t-ex-o-v-ux-m-tl-v-m-t-e5-v-t-ex-o-v-ux-m-tl-v-m-t-e5-v-t-ex-o-v-ux-m-tl-v-m-t-e5-v-t-ex-o-v-ux-m-tl-v-m-t-e5-v-t-ex-o-v-ux-m-tl-v-m-t-e5-v-t-ex-o-v-ux-m-tl-v-m-t-e5-v-t-ex-o-v-ux-m-tl-v-m-t-e5-v-t-ex-o-v-ux-m-tl-v-m-t-e5-v-t-ex-o-v-ux-m-tl-v-m-t-e5-v-t-ex-o-v-ux-m-tl-v-m-t-e5-v-t-ex-o-v-ux-m-tl-v-m-t-e5-v-t-ex-o-v-ux-m-tl-v-m-t-e5-v-t-ex-o-v-ux-m000000005500000000570000000076000000007600000000850000000078000000005500000000550000000057000000007600000000760000000085000000007800000000570000000055000000005700000000760000000076000000008500000000780000000108000000005500000000570000000076000000007600000000850000000078000000010800000000550000000057000000007600000000760000000085000000007800000001170000000055000000005700000000760000000076000000008500000000780000000110000000005500000000570000000076000000007600000000850000000078hihi"));
    }

    @Test
    public void test489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test489");
        boolean boolean2 = strman.Strman.isEnclosedBetween("203", "llun!ih!ih");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test490");
        int int2 = strman.Strman.lastIndexOf
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
    }

    @Test
    public void test491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test491");
        int int4 = strman.Strman.lastIndexOf("MDAwNzIwMDEwNTAwMTA0MDAxMDUwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDEwNDAwMTA1MDAwMzMwMDExMDAwMTE3MDAxMDgwMDEwODAwMDU3MDAwNTUwMDEwNDAwMTA1MDAwMzM=", "MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3MDA2ZTAwNzUwMDZjMDA2YzAwMzkwMDM3TnVsbA==", 50, false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
    }

    @Test
    public void test492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test492");
        java.lang.String str1 = strman.Strman.removeNonWordsnull97null97nnull97unull97lnull97lnull979null977null97hihihi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-hi-null97hi-nullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull0004800048000480005200053000480004800049000490005500048000480004800052000530004800048000490004800056");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "000000000011000100000000001100000000000000110001000000000011000100000000001101110000000000110001000000000011000000000000001110000000000000110001000000000011000000000000001110000000000000110101000000000011011100000000001101010000000000110101000000000100111000000000011101010000000001101100000000000110110000000000001110010000000000110111000000000100111000000000011011100000000001110101000000000110110000000000011011000000000000111001000000000011011100000000010101010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001001100000000000110111000000000011101010000000001101100000000000110110000000000001110010000000000110111000000000100110000000000011011100000000001110101000000000110110000000000011011000000000000111001000000000011011100000000001110010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000000110111000000000110111000000000011101010000000001101100000000000110110000000000001110010000000000110111000000000110100000000000011010010000000000101101000000000110100000000000011010010000000001101110000000000111010100000000011011000000000001101100000000000011100100000000001101110000000001101110000000000110111000000000011101010000000001101100null97null97nnull97unull97lnull97lnull979null977null97hihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihinull97hinullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull0004800048000480005200053000480004800049000490005500048000480004800052000530004800048000490004800056" + "'", str1.equalsnull97null97nnull97unull97lnull97lnull979null977null97hihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihihinull97hinullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnull0004800048000480005200053000480004800049000490005500048000480004800052000530004800048000490004800056"));
    }

    @Test
    public void test493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test493");
        java.util.Optional<java.lang.String> strOptional1 = strman.Strman.trimStart("!ih");
        org.junit.Assert.assertNotNull(strOptional1);
    }

    @Test
    public void test494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test494");
        java.lang.String str1 = strman.Strman.base64Encode("hIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMHIblVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMTlVMTE5VTExOVUxMNULL97");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "" + "'", str1.equals("aElibFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNSElibFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNSElibFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNSElibFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNSElibFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNSElibFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNSElibFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNSElibFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNSElibFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNSElibFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNSElibFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNSElibFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNSElibFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNSElibFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNSElibFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNSElibFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNSElibFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNSElibFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNSElibFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNSElibFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNSElibFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNSElibFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNSElibFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNSElibFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNSElibFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNVGxWTVRFNVZURXhPVlV4TVRsVk1URTVWVEV4T1ZVeE1UbFZNVEU1VlRFeE9WVXhNTlVMTDk3"));
    }

    @Test
    public void test495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test495");
        java.lang.String[] strArray2 = strman.Strman.chop("null97Nnull97Unull97Lnull97Lnull979null977null97NULL97", 4213);
        org.junit.Assert.assertNotNull(strArray2);
    }

    @Test
    public void test496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test496");
        java.lang.String[] strArray4 = strman.Strman.between("003000300030003000300030003000300030003100370039004c004c0055004e003700370039004c004c0055004e003900370039004c004c0055004e006c00370039004c004c0055004e006c00370039004c004c0055004e007500370039004c004c0055004e006e00370039004c004c0055004ehi!hi!hi!hi!hi!hi!hi!hi!hi!hn-ullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnulli!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!hi!", "1null97null97_nnull97_unull97_lnull97_lnull979null977null97");
        java.lang.String str5 = strman.Strman.prepend("IhiH", strArray4);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "IhiH" + "'", str5.equals("IhiH"));
    }

    @Test
    public void test497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test497");
        java.lang.String str1 = strman.Strman.capitalize("hi-hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101ihiHLl97Ll97Ll97Ll97Ll97Ll97Ll97Ll97Ll97Ll97Ll97Ll97Ll97Ll97Ll97Ll97Ll97Ll97Ll97Ll97Ll97Ll97Ll97Ll97Ll97Ll97Ll97Ll97Ll97Ll97Ll97Ll97Ll97Ll97Ll97Ll97Ll97Ll97Ll97");
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "Hi-hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101ihihll97ll97ll97ll97ll97ll97ll97ll97ll97ll97ll97ll97ll97ll97ll97ll97ll97ll97ll97ll97ll97ll97ll97ll97ll97ll97ll97ll97ll97ll97ll97ll97ll97ll97ll97ll97ll97ll97ll97" + "'", str1.equals("Hi-hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101ihihll97ll97ll97ll97ll97ll97ll97ll97ll97ll97ll97ll97ll97ll97ll97ll97ll97ll97ll97ll97ll97ll97ll97ll97ll97ll97ll97ll97ll97ll97ll97ll97ll97ll97ll97ll97ll97ll97ll97"));
    }

    @Test
    public void test498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test498");
        java.lang.String[] strArray5 = strman.Strman.splithi H");
        java.lang.String str6 = strman.Strman.prepend("79llun779llun979llunl79llunl79llunu79llunn79llun79llun779llun979llunl79llunl79llunu79llunn79llun", strArray5);
        java.util.Optional<java.lang.String> strOptional7 = strman.Strman.trimEnd("i006e0075006c006c00390037004e006e0075006c006c003900370055006e0075006c006c00390037004c006e0075006c006c00390037004c006e0075006c006c003900370039006e0075006c006c003900370037006e0075006c006c00390037h006e0075006c006c00390037004e006e0075006c006c003900370055006e0075006c006c00390037004c006e0075006c006c00390037004c006e0075006c006c003900370039006e0075006c006c003900370037006e0075006c006c00390037i006e0075006c006c00390037004e006e0075006c006c003900370055006e0075006c006c00390037004c006e0075006c006c00390037004c006e0075006c006c003900370039006e0075006c006c003900370037006e0075006c006c00390037h006e0075006c006c00390037004e006e0075006c006c003900370055006e0075006c006c00390037004c006e0075006c006c00390037004c006e0075006c006c003900370039006e0075006c006c003900370037006e0075006c006c00390037h006e0075006c006c00390037004e006e0075006c006c003900370055006e0075006c006c00390037004c006e0075006c006c00390037004c006e0075006c006c003900370039006e0075006c006c003900370037006e0075006c006c00390037i006e0075006c006c00390037004e006e0075006c006c003900370055006e0075006c006c00390037004c006e0075006c006c00390037004c006e0075006c006c003900370039006e0075006c006c003900370037006e0075006c006c00390037h006e0075006c006c00390037004e006e0075006c006c003900370055006e0075006c006c00390037004c006e0075006c006c00390037004c006e0075006c006c003900370039006e0075006c006c003900370037006e0075006c006c00390037i48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101", strArray5);
        java.util.List<java.lang.String> strList8 = strman.Strman.zip(strArray5);
        java.lang.String str9 = strman.Strman.append("00000000001100110000000000110101", strArray5);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "00104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300110001170010800108000570005579llun779llun979llunl79llunl79llunu79llunn79llun79llun779llun979llunl79llunl79llunu79llunn79llun" + "'", str6.equals("00104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300104001050003300110001170010800108000570005579llun779llun979llunl79llunl79llunu79llunn79llun79llun779llun979llunl79llunl79llunu79llunn79llun"));
        org.junit.Assert.assertNotNull(strOptional7);
        org.junit.Assert.assertNotNull(strList8);
        org.junit.Assert.assertTrue("'" + strstr9.equals("00000000001100110000000000110101001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001040010500033001100011700108001080005700055"));
    }

    @Test
    public void test499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test499");
        boolean boolean3 = strman.Strman.contains("000780011700108001080005700055000780011000117001080010800057000550008500110001170010800108000570005500076001100011700108001080005700055000760011000117001080010800057000550005700110001170010800108000570005500055001100011700108001080005700055", "mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=_mz_u=", false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test500");
        java.util.Optional<java.lang.String> strOptional2 = strman.Strman.at("null97nnul1097null971097null97nnulnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullnullhi_hi48485155484851574848549948485499484855534848541014848515548485155484851574848549948485499484855534848541014848515748485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848529948485155484851574848549948485499484855534848541014848535348485155484851574848549948485499484855534848541014848521014848515548485157484854994848549948485553484854101", (int) (short) -1);
        org.junit.Assert.assertNotNull(strOptional2);
    }
}

